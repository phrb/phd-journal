# -*- mode: org -*-
# -*- coding: utf-8 -*-
#+STARTUP: overview indent inlineimages logdrawer
#+TITLE:  Pedro's Journal
#+AUTHOR:      Pedro H R Bruel
#+LANGUAGE:    en
#+TAGS: noexport(n) Stats(S)
#+TAGS: Teaching(T) R(R) OrgMode(O) Python(P)
#+TAGS: Book(b) DOE(D) Code(C) NODAL(N) FPGA(F) Autotuning(A) Arnaud(r)
#+TAGS: DataVis(v) PaperReview(W)
#+EXPORT_SELECT_TAGS: Blog
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+COLUMNS: %25ITEM %TODO %3PRIORITY %TAGS
#+SEQ_TODO: TODO(t!) STARTED(s!) WAITING(w@) APPT(a!) | DONE(d!) CANCELLED(c!) DEFERRED(f!)

* Setup
** Julia
#+NAME: install_julia_deps
#+HEADER: :results output :session *julia*
#+BEGIN_SRC julia
Pkg.add("Plots")
Pkg.add("Lint")
Pkg.add("Gadfly")
Pkg.add("ProfileView")
Pkg.add("CSV")
Pkg.add("StatsBase")
Pkg.add("StatsModels")
Pkg.add("GLM")
Pkg.add("RDatasets")
Pkg.add("IterTools")
Pkg.add("Missings")
Pkg.add("RCall")
Pkg.add("DataFrames")
#+END_SRC

#+RESULTS: install_julia_deps
#+begin_example
INFO: Package Plots is already installed
INFO: Package Lint is already installed
INFO: Package Gadfly is already installed
INFO: Cloning cache of Gtk from https://github.com/JuliaGraphics/Gtk.jl.git
INFO: Cloning cache of GtkReactive from https://github.com/JuliaGizmos/GtkReactive.jl.git
INFO: Cloning cache of IntervalSets from https://github.com/JuliaMath/IntervalSets.jl.git
INFO: Cloning cache of ProfileView from https://github.com/timholy/ProfileView.jl.git
INFO: Cloning cache of Reactive from https://github.com/JuliaGizmos/Reactive.jl.git
INFO: Cloning cache of RoundingIntegers from https://github.com/JuliaMath/RoundingIntegers.jl.git
INFO: Installing Gtk v0.13.1
INFO: Installing GtkReactive v0.4.0
INFO: Installing IntervalSets v0.1.1
INFO: Installing ProfileView v0.3.0
INFO: Installing Reactive v0.6.0
INFO: Installing RoundingIntegers v0.0.3
INFO: Building Cairo
INFO: Building Gtk
INFO: Package database updated
INFO: Package CSV is already installed
INFO: Package StatsBase is already installed
INFO: Package StatsModels is already installed
INFO: Package GLM is already installed
INFO: Package RDatasets is already installed
#+end_example

#+NAME: update_julia_pkg
#+HEADER:  :results output :session *julia*
#+BEGIN_SRC julia
Pkg.update()
#+END_SRC

#+RESULTS: update_julia_pkg
: INFO: Updating METADATA...
: WARNING: Package ASTInterpreter: skipping update (dirty)...
: INFO: Updating Gallium master...
: INFO: Computing changes...
: INFO: No packages to install, update or remove

*** NODAL Development                                          :Code:NODAL:
**** Installing NODAL in Julia Nightly
[[https://github.com/phrb/NODAL.jl][NODAL]] is the autotuning library I am developing in the [[https://julialang.org][Julia]]
language. The idea is to provide tools for the implementation of
parallel and distributed autotuners for various problem domains.
***** Download Julia Nightly
****** [[https://julialang.org/downloads][Download Generic Binary]] 
****** Downloading from the CLI
You can run the following to install the latest *Julia* version:
#+BEGIN_SRC bash
cd ~ && mkdir .bin && cd .bin
wget https://julialangnightlies-s3.julialang.org/bin/linux/x64/julia-latest-linux64.tar.gz
tar xvf julia-latest-linux64.tar.gz
mv julia-* julia
rm julia-latest-linux64.tar.gz
#+END_SRC
This will put the *Julia* binary at =~/.bin/julia/bin/julia=.
You can use it like that or add an =alias= to your shell.
***** Installing the unregistered version
This will not be needed after registering NODAL to METADATA.
****** [[https://docs.julialang.org/en/latest/manual/packages/#Installing-Unregistered-Packages-1][Documentation]]
****** Julia Commands
#+BEGIN_SRC julia
Pkg.clone("https://github.com/phrb/NODAL.jl")
Pkg.build("NODAL")
Pkg.test("NODAL")
#+END_SRC
***** Installing from the Julia package manager
****** Julia commands
#+BEGIN_SRC julia
Pkg.add("NODAL")
Pkg.build("NODAL")
Pkg.test("NODAL")
#+END_SRC
**** Setting up a new Release
***** Using Attobot
[[https://github.com/attobot][Attobot]] integrates with *GitHub* to automatically register a new package
or a package version to *Julia*'s =METADATA= package repository.  Attobot
only needs a new *GitHub* release to work.
***** Using *Julia*'s =PkgDev=
Check the [[https://docs.julialang.org/en/latest/manual/packages/#Tagging-and-Publishing-Your-Package-1][documentation]] to learn how to register and publish user
packages to =METADATA=.
**** Development Workflow
The process of fixing an [[https://github.com/phrb/NODAL.jl/issues][issue]] or submitting a new
feature is:
0. Fork [[https://github.com/phrb/NODAL.jl][NODAL on GitHub]]
   
   You will need a GitHub account for this.

1. Make sure you have the latest version
   #+BEGIN_SRC bash
git checkout master
git fetch
   #+END_SRC

   New branches must be made from the =dev= branch:
   #+BEGIN_SRC bash
git checkout dev
   #+END_SRC
2. Checkout a new branch
   #+BEGIN_SRC bash
git checkout -b fix-or-feature
   #+END_SRC
3. Write code and commit to your new branch
   
   Make sure you write short and descriptive commit
   messages. Something similar to [[https://udacity.github.io/git-styleguide/][Udacity's guidelines]] is preferred
   but not strictly necessary.

4. Open a [[https://github.com/phrb/NODAL.jl/pulls][pull request]] to the =dev= bran

** R
Installing *R* dependencies:

#+NAME: install_r_deps
#+HEADER: :results output :exports both :session *R*
#+BEGIN_SRC R
install.packages(c("ggplot2", "dplyr", "tidyr", "rjson", "GGally",
                 "plotly", "rPref", "pracma"),
                 repos = "https://mirror.ibcp.fr/pub/CRAN/")
#+END_SRC

#+RESULTS: install_r_deps
#+begin_example
Installing packages into ‘/home/phrb/R/x86_64-pc-linux-gnu-library/3.4’
(as ‘lib’ is unspecified)
also installing the dependencies ‘irlba’, ‘RcppParallel’, ‘igraph’

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/irlba_2.3.1.tar.gz'
Content type 'application/x-gzip' length 233712 bytes (228 KB)
==================================================
downloaded 228 KB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/RcppParallel_4.3.20.tar.gz'
Content type 'application/x-gzip' length 1560887 bytes (1.5 MB)
==================================================
downloaded 1.5 MB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/igraph_1.1.2.tar.gz'
Content type 'application/x-gzip' length 3376958 bytes (3.2 MB)
==================================================
downloaded 3.2 MB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/ggplot2_2.2.1.tar.gz'
Content type 'application/x-gzip' length 2213308 bytes (2.1 MB)
==================================================
downloaded 2.1 MB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/dplyr_0.7.4.tar.gz'
Content type 'application/x-gzip' length 808054 bytes (789 KB)
==================================================
downloaded 789 KB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/tidyr_0.7.2.tar.gz'
Content type 'application/x-gzip' length 369542 bytes (360 KB)
==================================================
downloaded 360 KB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/rjson_0.2.15.tar.gz'
Content type 'application/x-gzip' length 98905 bytes (96 KB)
==================================================
downloaded 96 KB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/GGally_1.3.2.tar.gz'
Content type 'application/x-gzip' length 1031885 bytes (1007 KB)
==================================================
downloaded 1007 KB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/plotly_4.7.1.tar.gz'
Content type 'application/x-gzip' length 1034951 bytes (1010 KB)
==================================================
downloaded 1010 KB

trying URL 'https://mirror.ibcp.fr/pub/CRAN/src/contrib/rPref_1.2.tar.gz'
Content type 'application/x-gzip' length 99297 bytes (96 KB)
==================================================
downloaded 96 KB

,* installing *source* package ‘irlba’ ...
,** package ‘irlba’ successfully unpacked and MD5 sums checked
,** libs
gcc -I/usr/include/R/ -DNDEBUG  -I"/usr/lib/R/library/Matrix/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c irlb.c -o irlb.o
gcc -I/usr/include/R/ -DNDEBUG  -I"/usr/lib/R/library/Matrix/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c utility.c -o utility.o
gcc -shared -L/usr/lib64/R/lib -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o irlba.so irlb.o utility.o -llapack -lblas -lgfortran -lm -lquadmath -L/usr/lib64/R/lib -lR
installing to /home/phrb/R/x86_64-pc-linux-gnu-library/3.4/irlba/libs
,** R
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** installing vignettes
,** testing if installed package can be loaded
,* DONE (irlba)
,* installing *source* package ‘RcppParallel’ ...
,** package ‘RcppParallel’ successfully unpacked and MD5 sums checked
,** libs
mkdir -p ../inst/lib/; \
cd tbb/src; \
if [ -n "" ]; then \
   make cpp0x=1 compiler=clang CXXFLAGS=-DTBB_NO_LEGACY=1 tbb_release tbbmalloc_release tbb_build_prefix=lib; \
elif [ -n "gcc" ]; then \
   make cpp0x=1 compiler=gcc CXXFLAGS=-DTBB_NO_LEGACY=1 tbb_release tbbmalloc_release tbb_build_prefix=lib; \
else \
   make cpp0x=1 CXXFLAGS=-DTBB_NO_LEGACY=1 tbb_release tbbmalloc_release tbb_build_prefix=lib; \
fi; \
cd ../..; \
cp tbb/build/lib_release/libtbb*.* ../inst/lib/
make[1]: Entering directory '/tmp/Rtmp4FkKbq/R.INSTALL2cda13107824/RcppParallel/src/tbb/src'
Created ../build/lib_release directory
make -C "../build/lib_release"  -r -f ../../build/Makefile.tbb cfg=release
make[2]: Entering directory '/tmp/Rtmp4FkKbq/R.INSTALL2cda13107824/RcppParallel/src/tbb/build/lib_release'
../../build/Makefile.tbb:31: CONFIG: cfg=release arch=intel64 compiler=gcc target=linux runtime=cc7.2.1_libc2.26_kernel4.14.5
g++ -o concurrent_hash_map.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/concurrent_hash_map.cpp
g++ -o concurrent_queue.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/concurrent_queue.cpp
g++ -o concurrent_vector.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/concurrent_vector.cpp
g++ -o dynamic_link.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/dynamic_link.cpp
g++ -o itt_notify.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/itt_notify.cpp
g++ -o cache_aligned_allocator.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/cache_aligned_allocator.cpp
g++ -o pipeline.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/pipeline.cpp
g++ -o queuing_mutex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/queuing_mutex.cpp
g++ -o queuing_rw_mutex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/queuing_rw_mutex.cpp
g++ -o reader_writer_lock.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/reader_writer_lock.cpp
g++ -o spin_rw_mutex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/spin_rw_mutex.cpp
g++ -o x86_rtm_rw_mutex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp
g++ -o spin_mutex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/spin_mutex.cpp
g++ -o critical_section.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/critical_section.cpp
g++ -o mutex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/mutex.cpp
g++ -o recursive_mutex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/recursive_mutex.cpp
g++ -o condition_variable.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/condition_variable.cpp
g++ -o tbb_thread.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/tbb_thread.cpp
g++ -o concurrent_monitor.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/concurrent_monitor.cpp
g++ -o semaphore.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/semaphore.cpp
g++ -o private_server.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/private_server.cpp
g++ -o rml_tbb.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/rml/client/rml_tbb.cpp
sh ../../build/version_info_linux.sh g++ -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include -I. >version_string.ver
g++ -o tbb_misc.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include -I. ../../src/tbb/tbb_misc.cpp
g++ -o tbb_misc_ex.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/tbb_misc_ex.cpp
g++ -o task.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/task.cpp
g++ -o task_group_context.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/task_group_context.cpp
g++ -o governor.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/governor.cpp
g++ -o market.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/market.cpp
g++ -o arena.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/arena.cpp
g++ -o scheduler.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/scheduler.cpp
g++ -o observer_proxy.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/observer_proxy.cpp
g++ -o tbb_statistics.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/tbb_statistics.cpp
g++ -o tbb_main.o -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -std=c++0x -D_TBB_CPP0X  -I../../src -I../../src/rml/include -I../../include ../../src/tbb/tbb_main.cpp
sh ../../build/generate_tbbvars.sh
echo "INPUT (libtbb.so.2)" > libtbb.so
g++ -E -x c++ ../../src/tbb/lin64-tbb-export.def -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64  -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -DTBB_NO_LEGACY=1 -I../../src -I../../src/rml/include -I../../include > tbb.def
g++ -fPIC -o libtbb.so.2 concurrent_hash_map.o concurrent_queue.o concurrent_vector.o dynamic_link.o itt_notify.o cache_aligned_allocator.o pipeline.o queuing_mutex.o queuing_rw_mutex.o reader_writer_lock.o spin_rw_mutex.o x86_rtm_rw_mutex.o spin_mutex.o critical_section.o mutex.o recursive_mutex.o condition_variable.o tbb_thread.o concurrent_monitor.o semaphore.o private_server.o rml_tbb.o tbb_misc.o tbb_misc_ex.o task.o task_group_context.o governor.o market.o arena.o scheduler.o observer_proxy.o tbb_statistics.o tbb_main.o    -ldl -lpthread -lrt -shared -Wl,-soname=libtbb.so.2 -m64  -Wl,--version-script,tbb.def
make[2]: Leaving directory '/tmp/Rtmp4FkKbq/R.INSTALL2cda13107824/RcppParallel/src/tbb/build/lib_release'
make -C "../build/lib_release"  -r -f ../../build/Makefile.tbbmalloc cfg=release malloc
make[2]: Entering directory '/tmp/Rtmp4FkKbq/R.INSTALL2cda13107824/RcppParallel/src/tbb/build/lib_release'
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64    -DTBB_NO_LEGACY=1 -fno-rtti -fno-exceptions -D__TBBMALLOC_BUILD=1 -Wno-parentheses -Wno-non-virtual-dtor -fPIC -I../../src -I../../src/rml/include -I../../include -I../../src/tbbmalloc -I../../src/tbbmalloc ../../src/tbbmalloc/backend.cpp
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64    -DTBB_NO_LEGACY=1 -fno-rtti -fno-exceptions -D__TBBMALLOC_BUILD=1 -Wno-parentheses -Wno-non-virtual-dtor -fPIC -I../../src -I../../src/rml/include -I../../include -I../../src/tbbmalloc -I../../src/tbbmalloc ../../src/tbbmalloc/large_objects.cpp
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64    -DTBB_NO_LEGACY=1 -fno-rtti -fno-exceptions -D__TBBMALLOC_BUILD=1 -Wno-parentheses -Wno-non-virtual-dtor -fPIC -I../../src -I../../src/rml/include -I../../include -I../../src/tbbmalloc -I../../src/tbbmalloc ../../src/tbbmalloc/backref.cpp
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64    -DTBB_NO_LEGACY=1 -fno-rtti -fno-exceptions -D__TBBMALLOC_BUILD=1 -Wno-parentheses -Wno-non-virtual-dtor -fPIC -I../../src -I../../src/rml/include -I../../include -I../../src/tbbmalloc -I../../src/tbbmalloc ../../src/tbbmalloc/tbbmalloc.cpp
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64    -DTBB_NO_LEGACY=1 -fno-rtti -fno-exceptions -D__TBBMALLOC_BUILD=1 -Wno-parentheses -Wno-non-virtual-dtor -fPIC -o itt_notify_malloc.o -I../../src -I../../src/rml/include -I../../include ../../src/tbb/itt_notify.cpp
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64    -DTBB_NO_LEGACY=1 -fno-rtti -fno-exceptions -D__TBBMALLOC_BUILD=1 -Wno-parentheses -Wno-non-virtual-dtor -fPIC -I../../src -I../../src/rml/include -I../../include -I../../src/tbbmalloc -I../../src/tbbmalloc -I. ../../src/tbbmalloc/frontend.cpp
echo "INPUT (libtbbmalloc.so.2)" > libtbbmalloc.so
g++ -E -x c++ ../../src/tbbmalloc/lin64-tbbmalloc-export.def -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64    -DTBB_NO_LEGACY=1 -fno-rtti -fno-exceptions -D__TBBMALLOC_BUILD=1 -I../../src -I../../src/rml/include -I../../include > tbbmalloc.def
gcc -fPIC -o libtbbmalloc.so.2 backend.o large_objects.o backref.o  tbbmalloc.o  itt_notify_malloc.o frontend.o  -ldl -lpthread -lrt -shared -Wl,-soname=libtbbmalloc.so.2 -m64  -Wl,--version-script,tbbmalloc.def
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64   -Wall -DTBB_NO_LEGACY=1 -fPIC -D__TBBMALLOC_BUILD=1 -I../../src -I../../src/rml/include -I../../include -I../../src/tbbmalloc -I../../src/tbbmalloc ../../src/tbbmalloc/proxy.cpp
../../src/tbbmalloc/proxy.cpp:231:32: warning: dynamic exception specifications are deprecated in C++11 [-Wdeprecated]
 void * operator new(size_t sz) throw (std::bad_alloc) {
                                ^~~~~
../../src/tbbmalloc/proxy.cpp:239:33: warning: dynamic exception specifications are deprecated in C++11 [-Wdeprecated]
 void* operator new[](size_t sz) throw (std::bad_alloc) {
                                 ^~~~~
g++ -c -MMD -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64   -Wall -DTBB_NO_LEGACY=1 -fPIC -D__TBBMALLOC_BUILD=1 -I../../src -I../../src/rml/include -I../../include -I../../src/tbbmalloc -I../../src/tbbmalloc ../../src/tbbmalloc/tbb_function_replacement.cpp
echo "INPUT (libtbbmalloc_proxy.so.2)" > libtbbmalloc_proxy.so
g++ -E -x c++ ../../src/tbbmalloc/lin64-proxy-export.def -DDO_ITT_NOTIFY -g -O2 -DUSE_PTHREAD -m64   -Wall -DTBB_NO_LEGACY=1 -I../../src -I../../src/rml/include -I../../include > tbbmallocproxy.def
g++ -fPIC -o libtbbmalloc_proxy.so.2 proxy.o tbb_function_replacement.o  -ldl -lpthread -lrt libtbbmalloc.so -shared -Wl,-soname=libtbbmalloc_proxy.so.2 -m64  -Wl,--version-script,tbbmallocproxy.def
make[2]: Leaving directory '/tmp/Rtmp4FkKbq/R.INSTALL2cda13107824/RcppParallel/src/tbb/build/lib_release'
make[1]: Leaving directory '/tmp/Rtmp4FkKbq/R.INSTALL2cda13107824/RcppParallel/src/tbb/src'
g++  -I/usr/include/R/ -DNDEBUG -std=gnu++11 -I../inst/include/ -DRCPP_PARALLEL_USE_TBB=1 -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c options.cpp -o options.o
g++ -shared -L/usr/lib64/R/lib -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o RcppParallel.so options.o -L/usr/lib64/R/lib -lR
installing to /home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/libs
,** R
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** testing if installed package can be loaded
,* DONE (RcppParallel)
,* installing *source* package ‘ggplot2’ ...
,** package ‘ggplot2’ successfully unpacked and MD5 sums checked
,** R
,** data
,*** moving datasets to lazyload DB
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** installing vignettes
,** testing if installed package can be loaded
,* DONE (ggplot2)
,* installing *source* package ‘dplyr’ ...
,** package ‘dplyr’ successfully unpacked and MD5 sums checked
,** libs
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c RcppExports.cpp -o RcppExports.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c address.cpp -o address.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c api.cpp -o api.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c arrange.cpp -o arrange.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c between.cpp -o between.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bind.cpp -o bind.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c combine_variables.cpp -o combine_variables.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c distinct.cpp -o distinct.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c encoding.cpp -o encoding.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c filter.cpp -o filter.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c group_by.cpp -o group_by.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c group_indices.cpp -o group_indices.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid.cpp -o hybrid.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_count.cpp -o hybrid_count.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_debug.cpp -o hybrid_debug.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_in.cpp -o hybrid_in.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_minmax.cpp -o hybrid_minmax.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_nth.cpp -o hybrid_nth.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_offset.cpp -o hybrid_offset.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_simple.cpp -o hybrid_simple.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hybrid_window.cpp -o hybrid_window.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c init.cpp -o init.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c join.cpp -o join.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c join_exports.cpp -o join_exports.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c mutate.cpp -o mutate.o
gcc -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c rlang-export.c -o rlang-export.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c select.cpp -o select.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c set.cpp -o set.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c slice.cpp -o slice.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c summarise.cpp -o summarise.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c test.cpp -o test.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c utils.cpp -o utils.o
g++  -I/usr/include/R/ -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/plogr/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c window.cpp -o window.o
g++ -shared -L/usr/lib64/R/lib -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o dplyr.so RcppExports.o address.o api.o arrange.o between.o bind.o combine_variables.o distinct.o encoding.o filter.o group_by.o group_indices.o hybrid.o hybrid_count.o hybrid_debug.o hybrid_in.o hybrid_minmax.o hybrid_nth.o hybrid_offset.o hybrid_simple.o hybrid_window.o init.o join.o join_exports.o mutate.o rlang-export.o select.o set.o slice.o summarise.o test.o utils.o window.o -L/usr/lib64/R/lib -lR
installing to /home/phrb/R/x86_64-pc-linux-gnu-library/3.4/dplyr/libs
,** R
,** data
,*** moving datasets to lazyload DB
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,*** copying figures
,** building package indices
,** installing vignettes
,** testing if installed package can be loaded
,* DONE (dplyr)
,* installing *source* package ‘rjson’ ...
,** package ‘rjson’ successfully unpacked and MD5 sums checked
,** libs
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c dump.cpp -o dump.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c parser.c -o parser.o
g++ -shared -L/usr/lib64/R/lib -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o rjson.so dump.o parser.o -L/usr/lib64/R/lib -lR
installing to /home/phrb/R/x86_64-pc-linux-gnu-library/3.4/rjson/libs
,** R
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** installing vignettes
,** testing if installed package can be loaded
,* DONE (rjson)
,* installing *source* package ‘igraph’ ...
,** package ‘igraph’ successfully unpacked and MD5 sums checked
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether we are using the GNU Fortran compiler... yes
checking whether gfortran accepts -g... yes
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking how to run the C++ preprocessor... g++ -E
checking for rintf... yes
checking for finite... yes
checking for expm1... yes
checking for rint... yes
checking for log2... yes
checking for logbl... yes
checking for snprintf... yes
checking for log1p... yes
checking for round... yes
checking for fmin... yes
checking for stpcpy... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking whether stpcpy is declared... yes
checking sys/times.h usability... yes
checking sys/times.h presence... yes
checking for sys/times.h... yes
checking net/if.h usability... yes
checking net/if.h presence... yes
checking for net/if.h... yes
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking net/if_dl.h usability... no
checking net/if_dl.h presence... no
checking for net/if_dl.h... no
checking sys/sockio.h usability... no
checking sys/sockio.h presence... no
checking for sys/sockio.h... no
checking sys/un.h usability... yes
checking sys/un.h presence... yes
checking for sys/un.h... yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking sys/ioctl.h usability... yes
checking sys/ioctl.h presence... yes
checking for sys/ioctl.h... yes
checking sys/time.h usability... yes
checking sys/time.h presence... yes
checking for sys/time.h... yes
checking sys/file.h usability... yes
checking sys/file.h presence... yes
checking for sys/file.h... yes
checking for struct sockaddr.sa_len... no
checking for xml2-config... /usr/bin/xml2-config
checking for xmlSAXUserParseFile in -lxml2... yes
checking libxml/parser.h usability... yes
checking libxml/parser.h presence... yes
checking for libxml/parser.h... yes
checking for __gmpz_add in -lgmp... yes
checking gmp.h usability... yes
checking gmp.h presence... yes
checking for gmp.h... yes
configure: creating ./config.status
config.status: creating src/Makevars.tmp
config.status: creating src/Makevars
config.status: creating src/config.h
,** libs
gfortran   -fpic  -g -O2  -c AMD/Source/amd.f -o AMD/Source/amd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_1.c -o AMD/Source/amd_1.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_2.c -o AMD/Source/amd_2.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_aat.c -o AMD/Source/amd_aat.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_control.c -o AMD/Source/amd_control.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_defaults.c -o AMD/Source/amd_defaults.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_dump.c -o AMD/Source/amd_dump.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_global.c -o AMD/Source/amd_global.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_info.c -o AMD/Source/amd_info.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_order.c -o AMD/Source/amd_order.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_post_tree.c -o AMD/Source/amd_post_tree.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_postorder.c -o AMD/Source/amd_postorder.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_preprocess.c -o AMD/Source/amd_preprocess.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c AMD/Source/amd_valid.c -o AMD/Source/amd_valid.o
gfortran   -fpic  -g -O2  -c AMD/Source/amdbar.f -o AMD/Source/amdbar.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Check/cholmod_check.c -o CHOLMOD/Check/cholmod_check.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Check/cholmod_read.c -o CHOLMOD/Check/cholmod_read.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Check/cholmod_write.c -o CHOLMOD/Check/cholmod_write.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_amd.c -o CHOLMOD/Cholesky/cholmod_amd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_analyze.c -o CHOLMOD/Cholesky/cholmod_analyze.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_colamd.c -o CHOLMOD/Cholesky/cholmod_colamd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_etree.c -o CHOLMOD/Cholesky/cholmod_etree.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_factorize.c -o CHOLMOD/Cholesky/cholmod_factorize.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_postorder.c -o CHOLMOD/Cholesky/cholmod_postorder.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_rcond.c -o CHOLMOD/Cholesky/cholmod_rcond.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_resymbol.c -o CHOLMOD/Cholesky/cholmod_resymbol.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_rowcolcounts.c -o CHOLMOD/Cholesky/cholmod_rowcolcounts.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_rowfac.c -o CHOLMOD/Cholesky/cholmod_rowfac.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_solve.c -o CHOLMOD/Cholesky/cholmod_solve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Cholesky/cholmod_spsolve.c -o CHOLMOD/Cholesky/cholmod_spsolve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_aat.c -o CHOLMOD/Core/cholmod_aat.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_add.c -o CHOLMOD/Core/cholmod_add.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_band.c -o CHOLMOD/Core/cholmod_band.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_change_factor.c -o CHOLMOD/Core/cholmod_change_factor.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_common.c -o CHOLMOD/Core/cholmod_common.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_complex.c -o CHOLMOD/Core/cholmod_complex.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_copy.c -o CHOLMOD/Core/cholmod_copy.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_dense.c -o CHOLMOD/Core/cholmod_dense.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_error.c -o CHOLMOD/Core/cholmod_error.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_factor.c -o CHOLMOD/Core/cholmod_factor.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_memory.c -o CHOLMOD/Core/cholmod_memory.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_sparse.c -o CHOLMOD/Core/cholmod_sparse.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_transpose.c -o CHOLMOD/Core/cholmod_transpose.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_triplet.c -o CHOLMOD/Core/cholmod_triplet.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Core/cholmod_version.c -o CHOLMOD/Core/cholmod_version.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_drop.c -o CHOLMOD/MatrixOps/cholmod_drop.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_horzcat.c -o CHOLMOD/MatrixOps/cholmod_horzcat.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_norm.c -o CHOLMOD/MatrixOps/cholmod_norm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_scale.c -o CHOLMOD/MatrixOps/cholmod_scale.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_sdmult.c -o CHOLMOD/MatrixOps/cholmod_sdmult.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_ssmult.c -o CHOLMOD/MatrixOps/cholmod_ssmult.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_submatrix.c -o CHOLMOD/MatrixOps/cholmod_submatrix.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_symmetry.c -o CHOLMOD/MatrixOps/cholmod_symmetry.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/MatrixOps/cholmod_vertcat.c -o CHOLMOD/MatrixOps/cholmod_vertcat.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Modify/cholmod_rowadd.c -o CHOLMOD/Modify/cholmod_rowadd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Modify/cholmod_rowdel.c -o CHOLMOD/Modify/cholmod_rowdel.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Modify/cholmod_updown.c -o CHOLMOD/Modify/cholmod_updown.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Partition/cholmod_camd.c -o CHOLMOD/Partition/cholmod_camd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Partition/cholmod_ccolamd.c -o CHOLMOD/Partition/cholmod_ccolamd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Partition/cholmod_csymamd.c -o CHOLMOD/Partition/cholmod_csymamd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Partition/cholmod_metis.c -o CHOLMOD/Partition/cholmod_metis.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Partition/cholmod_nesdis.c -o CHOLMOD/Partition/cholmod_nesdis.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Supernodal/cholmod_super_numeric.c -o CHOLMOD/Supernodal/cholmod_super_numeric.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Supernodal/cholmod_super_solve.c -o CHOLMOD/Supernodal/cholmod_super_solve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c CHOLMOD/Supernodal/cholmod_super_symbolic.c -o CHOLMOD/Supernodal/cholmod_super_symbolic.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c COLAMD/Source/colamd.c -o COLAMD/Source/colamd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c COLAMD/Source/colamd_global.c -o COLAMD/Source/colamd_global.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c DensityGrid.cpp -o DensityGrid.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c DensityGrid_3d.cpp -o DensityGrid_3d.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c NetDataTypes.cpp -o NetDataTypes.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c NetRoutines.cpp -o NetRoutines.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c SuiteSparse_config/SuiteSparse_config.c -o SuiteSparse_config/SuiteSparse_config.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c adjlist.c -o adjlist.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c arpack.c -o arpack.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c array.c -o array.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c atlas.c -o atlas.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c attributes.c -o attributes.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c basic_query.c -o basic_query.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bfgs.c -o bfgs.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bigint.c -o bigint.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bignum.c -o bignum.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bipartite.c -o bipartite.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c blas.c -o blas.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss.cc -o bliss.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss/bliss_heap.cc -o bliss/bliss_heap.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss/defs.cc -o bliss/defs.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss/graph.cc -o bliss/graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss/orbit.cc -o bliss/orbit.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss/partition.cc -o bliss/partition.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss/uintseqhash.cc -o bliss/uintseqhash.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c bliss/utils.cc -o bliss/utils.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cattributes.c -o cattributes.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c centrality.c -o centrality.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cliquer/cliquer.c -o cliquer/cliquer.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cliquer/cliquer_graph.c -o cliquer/cliquer_graph.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cliquer/reorder.c -o cliquer/reorder.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cliques.c -o cliques.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c clustertool.cpp -o clustertool.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cocitation.c -o cocitation.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cohesive_blocks.c -o cohesive_blocks.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c community.c -o community.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c complex.c -o complex.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c components.c -o components.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c conversion.c -o conversion.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cores.c -o cores.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_add.c -o cs/cs_add.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_amd.c -o cs/cs_amd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_chol.c -o cs/cs_chol.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_cholsol.c -o cs/cs_cholsol.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_compress.c -o cs/cs_compress.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_counts.c -o cs/cs_counts.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_cumsum.c -o cs/cs_cumsum.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_dfs.c -o cs/cs_dfs.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_dmperm.c -o cs/cs_dmperm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_droptol.c -o cs/cs_droptol.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_dropzeros.c -o cs/cs_dropzeros.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_dupl.c -o cs/cs_dupl.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_entry.c -o cs/cs_entry.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_ereach.c -o cs/cs_ereach.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_etree.c -o cs/cs_etree.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_fkeep.c -o cs/cs_fkeep.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_gaxpy.c -o cs/cs_gaxpy.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_happly.c -o cs/cs_happly.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_house.c -o cs/cs_house.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_ipvec.c -o cs/cs_ipvec.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_leaf.c -o cs/cs_leaf.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_load.c -o cs/cs_load.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_lsolve.c -o cs/cs_lsolve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_ltsolve.c -o cs/cs_ltsolve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_lu.c -o cs/cs_lu.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_lusol.c -o cs/cs_lusol.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_malloc.c -o cs/cs_malloc.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_maxtrans.c -o cs/cs_maxtrans.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_multiply.c -o cs/cs_multiply.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_norm.c -o cs/cs_norm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_permute.c -o cs/cs_permute.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_pinv.c -o cs/cs_pinv.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_post.c -o cs/cs_post.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_print.c -o cs/cs_print.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_pvec.c -o cs/cs_pvec.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_qr.c -o cs/cs_qr.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_qrsol.c -o cs/cs_qrsol.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_randperm.c -o cs/cs_randperm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_reach.c -o cs/cs_reach.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_scatter.c -o cs/cs_scatter.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_scc.c -o cs/cs_scc.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_schol.c -o cs/cs_schol.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_spsolve.c -o cs/cs_spsolve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_sqr.c -o cs/cs_sqr.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_symperm.c -o cs/cs_symperm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_tdfs.c -o cs/cs_tdfs.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_transpose.c -o cs/cs_transpose.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_updown.c -o cs/cs_updown.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_usolve.c -o cs/cs_usolve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_util.c -o cs/cs_util.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c cs/cs_utsolve.c -o cs/cs_utsolve.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c decomposition.c -o decomposition.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c distances.c -o distances.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c dotproduct.c -o dotproduct.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c dqueue.c -o dqueue.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c drl_graph.cpp -o drl_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c drl_graph_3d.cpp -o drl_graph_3d.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c drl_layout.cpp -o drl_layout.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c drl_layout_3d.cpp -o drl_layout_3d.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c drl_parse.cpp -o drl_parse.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c eigen.c -o eigen.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c embedding.c -o embedding.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c fast_community.c -o fast_community.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c feedback_arc_set.c -o feedback_arc_set.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c flow.c -o flow.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-dl-lexer.c -o foreign-dl-lexer.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-dl-parser.c -o foreign-dl-parser.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-gml-lexer.c -o foreign-gml-lexer.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-gml-parser.c -o foreign-gml-parser.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-graphml.c -o foreign-graphml.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-lgl-lexer.c -o foreign-lgl-lexer.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-lgl-parser.c -o foreign-lgl-parser.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-ncol-lexer.c -o foreign-ncol-lexer.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-ncol-parser.c -o foreign-ncol-parser.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-pajek-lexer.c -o foreign-pajek-lexer.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign-pajek-parser.c -o foreign-pajek-parser.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c foreign.c -o foreign.o
foreign.c: In function ‘igraph_i_gml_tostring’:
foreign.c:1050:10: warning: function may return address of local variable [-Wreturn-local-addr]
   return p;
          ^
foreign.c:1029:8: note: declared here
   char tmp[256];
        ^~~
foreign.c:1050:10: warning: function may return address of local variable [-Wreturn-local-addr]
   return p;
          ^
foreign.c:1029:8: note: declared here
   char tmp[256];
        ^~~
foreign.c:1050:10: warning: function may return address of local variable [-Wreturn-local-addr]
   return p;
          ^
foreign.c:1029:8: note: declared here
   char tmp[256];
        ^~~
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c forestfire.c -o forestfire.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c fortran_intrinsics.c -o fortran_intrinsics.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c games.c -o games.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gengraph_box_list.cpp -o gengraph_box_list.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gengraph_degree_sequence.cpp -o gengraph_degree_sequence.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gengraph_graph_molloy_hash.cpp -o gengraph_graph_molloy_hash.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gengraph_graph_molloy_optimized.cpp -o gengraph_graph_molloy_optimized.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gengraph_mr-connected.cpp -o gengraph_mr-connected.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gengraph_powerlaw.cpp -o gengraph_powerlaw.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gengraph_random.cpp -o gengraph_random.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glet.c -o glet.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk_support.c -o glpk_support.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c gml_tree.c -o gml_tree.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c hacks.c -o hacks.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c heap.c -o heap.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_buckets.c -o igraph_buckets.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_cliquer.c -o igraph_cliquer.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_error.c -o igraph_error.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_estack.c -o igraph_estack.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_fixed_vectorlist.c -o igraph_fixed_vectorlist.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_grid.c -o igraph_grid.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_hashtable.c -o igraph_hashtable.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_heap.c -o igraph_heap.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_hrg.cc -o igraph_hrg.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_hrg_types.cc -o igraph_hrg_types.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_marked_queue.c -o igraph_marked_queue.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_psumtree.c -o igraph_psumtree.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_set.c -o igraph_set.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_stack.c -o igraph_stack.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_strvector.c -o igraph_strvector.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c igraph_trie.c -o igraph_trie.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c infomap.cc -o infomap.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c infomap_FlowGraph.cc -o infomap_FlowGraph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c infomap_Greedy.cc -o infomap_Greedy.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c infomap_Node.cc -o infomap_Node.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c interrupt.c -o interrupt.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c iterators.c -o iterators.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c lad.c -o lad.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c lapack.c -o lapack.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c layout.c -o layout.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c layout_dh.c -o layout_dh.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c layout_fr.c -o layout_fr.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c layout_gem.c -o layout_gem.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c layout_kk.c -o layout_kk.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c lsap.c -o lsap.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c matching.c -o matching.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c math.c -o math.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c matrix.c -o matrix.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c maximal_cliques.c -o maximal_cliques.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c memory.c -o memory.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c microscopic_update.c -o microscopic_update.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c mixing.c -o mixing.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c motifs.c -o motifs.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c operators.c -o operators.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c optimal_modularity.c -o optimal_modularity.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c other.c -o other.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c paths.c -o paths.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c plfit/error.c -o plfit/error.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c plfit/gss.c -o plfit/gss.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c plfit/kolmogorov.c -o plfit/kolmogorov.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c plfit/lbfgs.c -o plfit/lbfgs.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c plfit/options.c -o plfit/options.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c plfit/plfit.c -o plfit/plfit.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c plfit/zeta.c -o plfit/zeta.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c pottsmodel_2.cpp -o pottsmodel_2.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c progress.c -o progress.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack.cpp -o prpack.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_base_graph.cpp -o prpack/prpack_base_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_igraph_graph.cpp -o prpack/prpack_igraph_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_preprocessed_ge_graph.cpp -o prpack/prpack_preprocessed_ge_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_preprocessed_gs_graph.cpp -o prpack/prpack_preprocessed_gs_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_preprocessed_scc_graph.cpp -o prpack/prpack_preprocessed_scc_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_preprocessed_schur_graph.cpp -o prpack/prpack_preprocessed_schur_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_result.cpp -o prpack/prpack_result.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_solver.cpp -o prpack/prpack_solver.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c prpack/prpack_utils.cpp -o prpack/prpack_utils.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c qsort.c -o qsort.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c qsort_r.c -o qsort_r.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c random.c -o random.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c random_walk.c -o random_walk.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c sbm.c -o sbm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c scan.c -o scan.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c scg.c -o scg.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c scg_approximate_methods.c -o scg_approximate_methods.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c scg_exact_scg.c -o scg_exact_scg.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c scg_kmeans.c -o scg_kmeans.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c scg_optimal_method.c -o scg_optimal_method.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c scg_utils.c -o scg_utils.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c separators.c -o separators.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c sir.c -o sir.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c spanning_trees.c -o spanning_trees.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c sparsemat.c -o sparsemat.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c spectral_properties.c -o spectral_properties.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c spmatrix.c -o spmatrix.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c st-cuts.c -o st-cuts.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c statusbar.c -o statusbar.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c structural_properties.c -o structural_properties.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c structure_generators.c -o structure_generators.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c sugiyama.c -o sugiyama.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c topology.c -o topology.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c triangles.c -o triangles.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c type_indexededgelist.c -o type_indexededgelist.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c types.c -o types.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c vector.c -o vector.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c vector_ptr.c -o vector_ptr.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c version.c -o version.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c visitors.c -o visitors.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c walktrap.cpp -o walktrap.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c walktrap_communities.cpp -o walktrap_communities.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c walktrap_graph.cpp -o walktrap_graph.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c walktrap_heap.cpp -o walktrap_heap.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c zeroin.c -o zeroin.o
gfortran   -fpic  -g -O2  -c dgetv0.f -o dgetv0.o
gfortran   -fpic  -g -O2  -c dlaqrb.f -o dlaqrb.o
gfortran   -fpic  -g -O2  -c dmout.f -o dmout.o
gfortran   -fpic  -g -O2  -c dnaitr.f -o dnaitr.o
gfortran   -fpic  -g -O2  -c dnapps.f -o dnapps.o
gfortran   -fpic  -g -O2  -c dnaup2.f -o dnaup2.o
gfortran   -fpic  -g -O2  -c dnaupd.f -o dnaupd.o
gfortran   -fpic  -g -O2  -c dnconv.f -o dnconv.o
gfortran   -fpic  -g -O2  -c dneigh.f -o dneigh.o
gfortran   -fpic  -g -O2  -c dneupd.f -o dneupd.o
gfortran   -fpic  -g -O2  -c dngets.f -o dngets.o
gfortran   -fpic  -g -O2  -c dsaitr.f -o dsaitr.o
gfortran   -fpic  -g -O2  -c dsapps.f -o dsapps.o
gfortran   -fpic  -g -O2  -c dsaup2.f -o dsaup2.o
gfortran   -fpic  -g -O2  -c dsaupd.f -o dsaupd.o
gfortran   -fpic  -g -O2  -c dsconv.f -o dsconv.o
gfortran   -fpic  -g -O2  -c dseigt.f -o dseigt.o
gfortran   -fpic  -g -O2  -c dsesrt.f -o dsesrt.o
gfortran   -fpic  -g -O2  -c dseupd.f -o dseupd.o
gfortran   -fpic  -g -O2  -c dsgets.f -o dsgets.o
gfortran   -fpic  -g -O2  -c dsortc.f -o dsortc.o
gfortran   -fpic  -g -O2  -c dsortr.f -o dsortr.o
gfortran   -fpic  -g -O2  -c dstatn.f -o dstatn.o
gfortran   -fpic  -g -O2  -c dstats.f -o dstats.o
gfortran   -fpic  -g -O2  -c dstqrb.f -o dstqrb.o
gfortran   -fpic  -g -O2  -c dvout.f -o dvout.o
gfortran   -fpic  -g -O2  -c ivout.f -o ivout.o
gfortran   -fpic  -g -O2  -c second.f -o second.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_1.c -o glpk/amd/amd_1.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_2.c -o glpk/amd/amd_2.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_aat.c -o glpk/amd/amd_aat.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_control.c -o glpk/amd/amd_control.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_defaults.c -o glpk/amd/amd_defaults.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_dump.c -o glpk/amd/amd_dump.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_info.c -o glpk/amd/amd_info.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_order.c -o glpk/amd/amd_order.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_post_tree.c -o glpk/amd/amd_post_tree.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_postorder.c -o glpk/amd/amd_postorder.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_preprocess.c -o glpk/amd/amd_preprocess.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/amd/amd_valid.c -o glpk/amd/amd_valid.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/colamd/colamd.c -o glpk/colamd/colamd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi01.c -o glpk/glpapi01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi02.c -o glpk/glpapi02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi03.c -o glpk/glpapi03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi04.c -o glpk/glpapi04.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi05.c -o glpk/glpapi05.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi06.c -o glpk/glpapi06.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi07.c -o glpk/glpapi07.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi08.c -o glpk/glpapi08.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi09.c -o glpk/glpapi09.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi10.c -o glpk/glpapi10.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi11.c -o glpk/glpapi11.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi12.c -o glpk/glpapi12.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi13.c -o glpk/glpapi13.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi14.c -o glpk/glpapi14.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi15.c -o glpk/glpapi15.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi16.c -o glpk/glpapi16.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi17.c -o glpk/glpapi17.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi18.c -o glpk/glpapi18.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpapi19.c -o glpk/glpapi19.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpavl.c -o glpk/glpavl.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpbfd.c -o glpk/glpbfd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpbfx.c -o glpk/glpbfx.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpcpx.c -o glpk/glpcpx.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpdmp.c -o glpk/glpdmp.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpdmx.c -o glpk/glpdmx.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv01.c -o glpk/glpenv01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv02.c -o glpk/glpenv02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv03.c -o glpk/glpenv03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv04.c -o glpk/glpenv04.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv05.c -o glpk/glpenv05.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv06.c -o glpk/glpenv06.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv07.c -o glpk/glpenv07.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpenv08.c -o glpk/glpenv08.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpfhv.c -o glpk/glpfhv.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpgmp.c -o glpk/glpgmp.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glphbm.c -o glpk/glphbm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpini01.c -o glpk/glpini01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpini02.c -o glpk/glpini02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios01.c -o glpk/glpios01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios02.c -o glpk/glpios02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios03.c -o glpk/glpios03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios04.c -o glpk/glpios04.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios05.c -o glpk/glpios05.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios06.c -o glpk/glpios06.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios07.c -o glpk/glpios07.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios08.c -o glpk/glpios08.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios09.c -o glpk/glpios09.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios10.c -o glpk/glpios10.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios11.c -o glpk/glpios11.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpios12.c -o glpk/glpios12.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpipm.c -o glpk/glpipm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplib01.c -o glpk/glplib01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplib02.c -o glpk/glplib02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplib03.c -o glpk/glplib03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplpf.c -o glpk/glplpf.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplpx01.c -o glpk/glplpx01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplpx02.c -o glpk/glplpx02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplpx03.c -o glpk/glplpx03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpluf.c -o glpk/glpluf.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glplux.c -o glpk/glplux.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmat.c -o glpk/glpmat.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmpl01.c -o glpk/glpmpl01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmpl02.c -o glpk/glpmpl02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmpl03.c -o glpk/glpmpl03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmpl04.c -o glpk/glpmpl04.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmpl05.c -o glpk/glpmpl05.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmpl06.c -o glpk/glpmpl06.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpmps.c -o glpk/glpmps.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet01.c -o glpk/glpnet01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet02.c -o glpk/glpnet02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet03.c -o glpk/glpnet03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet04.c -o glpk/glpnet04.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet05.c -o glpk/glpnet05.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet06.c -o glpk/glpnet06.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet07.c -o glpk/glpnet07.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet08.c -o glpk/glpnet08.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnet09.c -o glpk/glpnet09.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnpp01.c -o glpk/glpnpp01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnpp02.c -o glpk/glpnpp02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnpp03.c -o glpk/glpnpp03.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnpp04.c -o glpk/glpnpp04.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpnpp05.c -o glpk/glpnpp05.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpqmd.c -o glpk/glpqmd.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glprgr.c -o glpk/glprgr.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glprng01.c -o glpk/glprng01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glprng02.c -o glpk/glprng02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpscf.c -o glpk/glpscf.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpscl.c -o glpk/glpscl.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpsdf.c -o glpk/glpsdf.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpspm.c -o glpk/glpspm.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpspx01.c -o glpk/glpspx01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpspx02.c -o glpk/glpspx02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpsql.c -o glpk/glpsql.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpssx01.c -o glpk/glpssx01.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glpssx02.c -o glpk/glpssx02.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c glpk/glptsp.c -o glpk/glptsp.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/Color.cpp -o simpleraytracer/Color.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/Light.cpp -o simpleraytracer/Light.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/Point.cpp -o simpleraytracer/Point.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/RIgraphRay.cpp -o simpleraytracer/RIgraphRay.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/Ray.cpp -o simpleraytracer/Ray.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/RayTracer.cpp -o simpleraytracer/RayTracer.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/RayVector.cpp -o simpleraytracer/RayVector.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/Shape.cpp -o simpleraytracer/Shape.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/Sphere.cpp -o simpleraytracer/Sphere.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/Triangle.cpp -o simpleraytracer/Triangle.o
g++  -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -DIGRAPH_THREAD_LOCAL=/**/ -DNDEBUG -Iprpack -I. -Iinclude -DPRPACK_IGRAPH_SUPPORT -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simpleraytracer/unit_limiter.cpp -o simpleraytracer/unit_limiter.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/R.c -o uuid/R.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/clear.c -o uuid/clear.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/compare.c -o uuid/compare.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/copy.c -o uuid/copy.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/gen_uuid.c -o uuid/gen_uuid.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/isnull.c -o uuid/isnull.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/pack.c -o uuid/pack.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/parse.c -o uuid/parse.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/unpack.c -o uuid/unpack.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c uuid/unparse.c -o uuid/unparse.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c rinterface.c -o rinterface.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c rinterface_extra.c -o rinterface_extra.o
gcc -I/usr/include/R/ -DNDEBUG   -D_FORTIFY_SOURCE=2  -DUSING_R -I. -Iinclude -Ics -Iglpk -Iplfit -ICHOLMOD/Include -IAMD/Include -ICOLAMD/Include -ISuiteSparse_config -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -I/usr/include/libxml2 -DNDEBUG -DNPARTITION -DNTIMER -DNCAMD -DNPRINT -DPACKAGE_VERSION=\"1.1.1\" -DINTERNAL_ARPACK -DIGRAPH_THREAD_LOCAL=/**/ -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c lazyeval.c -o lazyeval.o
g++ -shared -L/usr/lib64/R/lib -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o igraph.so AMD/Source/amd.o AMD/Source/amd_1.o AMD/Source/amd_2.o AMD/Source/amd_aat.o AMD/Source/amd_control.o AMD/Source/amd_defaults.o AMD/Source/amd_dump.o AMD/Source/amd_global.o AMD/Source/amd_info.o AMD/Source/amd_order.o AMD/Source/amd_post_tree.o AMD/Source/amd_postorder.o AMD/Source/amd_preprocess.o AMD/Source/amd_valid.o AMD/Source/amdbar.o CHOLMOD/Check/cholmod_check.o CHOLMOD/Check/cholmod_read.o CHOLMOD/Check/cholmod_write.o CHOLMOD/Cholesky/cholmod_amd.o CHOLMOD/Cholesky/cholmod_analyze.o CHOLMOD/Cholesky/cholmod_colamd.o CHOLMOD/Cholesky/cholmod_etree.o CHOLMOD/Cholesky/cholmod_factorize.o CHOLMOD/Cholesky/cholmod_postorder.o CHOLMOD/Cholesky/cholmod_rcond.o CHOLMOD/Cholesky/cholmod_resymbol.o CHOLMOD/Cholesky/cholmod_rowcolcounts.o CHOLMOD/Cholesky/cholmod_rowfac.o CHOLMOD/Cholesky/cholmod_solve.o CHOLMOD/Cholesky/cholmod_spsolve.o CHOLMOD/Core/cholmod_aat.o CHOLMOD/Core/cholmod_add.o CHOLMOD/Core/cholmod_band.o CHOLMOD/Core/cholmod_change_factor.o CHOLMOD/Core/cholmod_common.o CHOLMOD/Core/cholmod_complex.o CHOLMOD/Core/cholmod_copy.o CHOLMOD/Core/cholmod_dense.o CHOLMOD/Core/cholmod_error.o CHOLMOD/Core/cholmod_factor.o CHOLMOD/Core/cholmod_memory.o CHOLMOD/Core/cholmod_sparse.o CHOLMOD/Core/cholmod_transpose.o CHOLMOD/Core/cholmod_triplet.o CHOLMOD/Core/cholmod_version.o CHOLMOD/MatrixOps/cholmod_drop.o CHOLMOD/MatrixOps/cholmod_horzcat.o CHOLMOD/MatrixOps/cholmod_norm.o CHOLMOD/MatrixOps/cholmod_scale.o CHOLMOD/MatrixOps/cholmod_sdmult.o CHOLMOD/MatrixOps/cholmod_ssmult.o CHOLMOD/MatrixOps/cholmod_submatrix.o CHOLMOD/MatrixOps/cholmod_symmetry.o CHOLMOD/MatrixOps/cholmod_vertcat.o CHOLMOD/Modify/cholmod_rowadd.o CHOLMOD/Modify/cholmod_rowdel.o CHOLMOD/Modify/cholmod_updown.o CHOLMOD/Partition/cholmod_camd.o CHOLMOD/Partition/cholmod_ccolamd.o CHOLMOD/Partition/cholmod_csymamd.o CHOLMOD/Partition/cholmod_metis.o CHOLMOD/Partition/cholmod_nesdis.o CHOLMOD/Supernodal/cholmod_super_numeric.o CHOLMOD/Supernodal/cholmod_super_solve.o CHOLMOD/Supernodal/cholmod_super_symbolic.o COLAMD/Source/colamd.o COLAMD/Source/colamd_global.o DensityGrid.o DensityGrid_3d.o NetDataTypes.o NetRoutines.o SuiteSparse_config/SuiteSparse_config.o adjlist.o arpack.o array.o atlas.o attributes.o basic_query.o bfgs.o bigint.o bignum.o bipartite.o blas.o bliss.o bliss/bliss_heap.o bliss/defs.o bliss/graph.o bliss/orbit.o bliss/partition.o bliss/uintseqhash.o bliss/utils.o cattributes.o centrality.o cliquer/cliquer.o cliquer/cliquer_graph.o cliquer/reorder.o cliques.o clustertool.o cocitation.o cohesive_blocks.o community.o complex.o components.o conversion.o cores.o cs/cs_add.o cs/cs_amd.o cs/cs_chol.o cs/cs_cholsol.o cs/cs_compress.o cs/cs_counts.o cs/cs_cumsum.o cs/cs_dfs.o cs/cs_dmperm.o cs/cs_droptol.o cs/cs_dropzeros.o cs/cs_dupl.o cs/cs_entry.o cs/cs_ereach.o cs/cs_etree.o cs/cs_fkeep.o cs/cs_gaxpy.o cs/cs_happly.o cs/cs_house.o cs/cs_ipvec.o cs/cs_leaf.o cs/cs_load.o cs/cs_lsolve.o cs/cs_ltsolve.o cs/cs_lu.o cs/cs_lusol.o cs/cs_malloc.o cs/cs_maxtrans.o cs/cs_multiply.o cs/cs_norm.o cs/cs_permute.o cs/cs_pinv.o cs/cs_post.o cs/cs_print.o cs/cs_pvec.o cs/cs_qr.o cs/cs_qrsol.o cs/cs_randperm.o cs/cs_reach.o cs/cs_scatter.o cs/cs_scc.o cs/cs_schol.o cs/cs_spsolve.o cs/cs_sqr.o cs/cs_symperm.o cs/cs_tdfs.o cs/cs_transpose.o cs/cs_updown.o cs/cs_usolve.o cs/cs_util.o cs/cs_utsolve.o decomposition.o distances.o dotproduct.o dqueue.o drl_graph.o drl_graph_3d.o drl_layout.o drl_layout_3d.o drl_parse.o eigen.o embedding.o fast_community.o feedback_arc_set.o flow.o foreign-dl-lexer.o foreign-dl-parser.o foreign-gml-lexer.o foreign-gml-parser.o foreign-graphml.o foreign-lgl-lexer.o foreign-lgl-parser.o foreign-ncol-lexer.o foreign-ncol-parser.o foreign-pajek-lexer.o foreign-pajek-parser.o foreign.o forestfire.o fortran_intrinsics.o games.o gengraph_box_list.o gengraph_degree_sequence.o gengraph_graph_molloy_hash.o gengraph_graph_molloy_optimized.o gengraph_mr-connected.o gengraph_powerlaw.o gengraph_random.o glet.o glpk_support.o gml_tree.o hacks.o heap.o igraph_buckets.o igraph_cliquer.o igraph_error.o igraph_estack.o igraph_fixed_vectorlist.o igraph_grid.o igraph_hashtable.o igraph_heap.o igraph_hrg.o igraph_hrg_types.o igraph_marked_queue.o igraph_psumtree.o igraph_set.o igraph_stack.o igraph_strvector.o igraph_trie.o infomap.o infomap_FlowGraph.o infomap_Greedy.o infomap_Node.o interrupt.o iterators.o lad.o lapack.o layout.o layout_dh.o layout_fr.o layout_gem.o layout_kk.o lsap.o matching.o math.o matrix.o maximal_cliques.o memory.o microscopic_update.o mixing.o motifs.o operators.o optimal_modularity.o other.o paths.o plfit/error.o plfit/gss.o plfit/kolmogorov.o plfit/lbfgs.o plfit/options.o plfit/plfit.o plfit/zeta.o pottsmodel_2.o progress.o prpack.o prpack/prpack_base_graph.o prpack/prpack_igraph_graph.o prpack/prpack_preprocessed_ge_graph.o prpack/prpack_preprocessed_gs_graph.o prpack/prpack_preprocessed_scc_graph.o prpack/prpack_preprocessed_schur_graph.o prpack/prpack_result.o prpack/prpack_solver.o prpack/prpack_utils.o qsort.o qsort_r.o random.o random_walk.o sbm.o scan.o scg.o scg_approximate_methods.o scg_exact_scg.o scg_kmeans.o scg_optimal_method.o scg_utils.o separators.o sir.o spanning_trees.o sparsemat.o spectral_properties.o spmatrix.o st-cuts.o statusbar.o structural_properties.o structure_generators.o sugiyama.o topology.o triangles.o type_indexededgelist.o types.o vector.o vector_ptr.o version.o visitors.o walktrap.o walktrap_communities.o walktrap_graph.o walktrap_heap.o zeroin.o dgetv0.o dlaqrb.o dmout.o dnaitr.o dnapps.o dnaup2.o dnaupd.o dnconv.o dneigh.o dneupd.o dngets.o dsaitr.o dsapps.o dsaup2.o dsaupd.o dsconv.o dseigt.o dsesrt.o dseupd.o dsgets.o dsortc.o dsortr.o dstatn.o dstats.o dstqrb.o dvout.o ivout.o second.o glpk/amd/amd_1.o glpk/amd/amd_2.o glpk/amd/amd_aat.o glpk/amd/amd_control.o glpk/amd/amd_defaults.o glpk/amd/amd_dump.o glpk/amd/amd_info.o glpk/amd/amd_order.o glpk/amd/amd_post_tree.o glpk/amd/amd_postorder.o glpk/amd/amd_preprocess.o glpk/amd/amd_valid.o glpk/colamd/colamd.o glpk/glpapi01.o glpk/glpapi02.o glpk/glpapi03.o glpk/glpapi04.o glpk/glpapi05.o glpk/glpapi06.o glpk/glpapi07.o glpk/glpapi08.o glpk/glpapi09.o glpk/glpapi10.o glpk/glpapi11.o glpk/glpapi12.o glpk/glpapi13.o glpk/glpapi14.o glpk/glpapi15.o glpk/glpapi16.o glpk/glpapi17.o glpk/glpapi18.o glpk/glpapi19.o glpk/glpavl.o glpk/glpbfd.o glpk/glpbfx.o glpk/glpcpx.o glpk/glpdmp.o glpk/glpdmx.o glpk/glpenv01.o glpk/glpenv02.o glpk/glpenv03.o glpk/glpenv04.o glpk/glpenv05.o glpk/glpenv06.o glpk/glpenv07.o glpk/glpenv08.o glpk/glpfhv.o glpk/glpgmp.o glpk/glphbm.o glpk/glpini01.o glpk/glpini02.o glpk/glpios01.o glpk/glpios02.o glpk/glpios03.o glpk/glpios04.o glpk/glpios05.o glpk/glpios06.o glpk/glpios07.o glpk/glpios08.o glpk/glpios09.o glpk/glpios10.o glpk/glpios11.o glpk/glpios12.o glpk/glpipm.o glpk/glplib01.o glpk/glplib02.o glpk/glplib03.o glpk/glplpf.o glpk/glplpx01.o glpk/glplpx02.o glpk/glplpx03.o glpk/glpluf.o glpk/glplux.o glpk/glpmat.o glpk/glpmpl01.o glpk/glpmpl02.o glpk/glpmpl03.o glpk/glpmpl04.o glpk/glpmpl05.o glpk/glpmpl06.o glpk/glpmps.o glpk/glpnet01.o glpk/glpnet02.o glpk/glpnet03.o glpk/glpnet04.o glpk/glpnet05.o glpk/glpnet06.o glpk/glpnet07.o glpk/glpnet08.o glpk/glpnet09.o glpk/glpnpp01.o glpk/glpnpp02.o glpk/glpnpp03.o glpk/glpnpp04.o glpk/glpnpp05.o glpk/glpqmd.o glpk/glprgr.o glpk/glprng01.o glpk/glprng02.o glpk/glpscf.o glpk/glpscl.o glpk/glpsdf.o glpk/glpspm.o glpk/glpspx01.o glpk/glpspx02.o glpk/glpsql.o glpk/glpssx01.o glpk/glpssx02.o glpk/glptsp.o simpleraytracer/Color.o simpleraytracer/Light.o simpleraytracer/Point.o simpleraytracer/RIgraphRay.o simpleraytracer/Ray.o simpleraytracer/RayTracer.o simpleraytracer/RayVector.o simpleraytracer/Shape.o simpleraytracer/Sphere.o simpleraytracer/Triangle.o simpleraytracer/unit_limiter.o uuid/R.o uuid/clear.o uuid/compare.o uuid/copy.o uuid/gen_uuid.o uuid/isnull.o uuid/pack.o uuid/parse.o uuid/unpack.o uuid/unparse.o rinterface.o rinterface_extra.o lazyeval.o -lxml2 -lz -llzma -licui18n -licuuc -licudata -lm -ldl -lgmp -lgfortran -lm -lquadmath -llapack -lblas -lgfortran -lm -lquadmath -L/usr/lib64/R/lib -lR
installing to /home/phrb/R/x86_64-pc-linux-gnu-library/3.4/igraph/libs
,** R
,** demo
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** testing if installed package can be loaded
,* DONE (igraph)
,* installing *source* package ‘tidyr’ ...
,** package ‘tidyr’ successfully unpacked and MD5 sums checked
,** libs
g++  -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c RcppExports.cpp -o RcppExports.o
g++  -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c fill.cpp -o fill.o
g++  -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c melt.cpp -o melt.o
g++  -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -c simplifyPieces.cpp -o simplifyPieces.o
g++ -shared -L/usr/lib64/R/lib -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o tidyr.so RcppExports.o fill.o melt.o simplifyPieces.o -L/usr/lib64/R/lib -lR
installing to /home/phrb/R/x86_64-pc-linux-gnu-library/3.4/tidyr/libs
,** R
,** data
,*** moving datasets to lazyload DB
,** demo
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,*** copying figures
,** building package indices
,** installing vignettes
,** testing if installed package can be loaded
,* DONE (tidyr)
,* installing *source* package ‘GGally’ ...
,** package ‘GGally’ successfully unpacked and MD5 sums checked
,** R
,** data
,*** moving datasets to lazyload DB
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** installing vignettes
,** testing if installed package can be loaded
,* DONE (GGally)
,* installing *source* package ‘plotly’ ...
,** package ‘plotly’ successfully unpacked and MD5 sums checked
,** R
,** data
,*** moving datasets to lazyload DB
,** demo
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** testing if installed package can be loaded
,* DONE (plotly)
,* installing *source* package ‘rPref’ ...
,** package ‘rPref’ successfully unpacked and MD5 sums checked
,** libs
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c bnl.cpp -o bnl.o
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c hasse.cpp -o hasse.o
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c pref-classes.cpp -o pref-classes.o
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c psel-par-top.cpp -o psel-par-top.o
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c psel-par.cpp -o psel-par.o
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c scalagon.cpp -o scalagon.o
g++ -std=gnu++11 -I/usr/include/R/ -DNDEBUG  -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/phrb/R/x86_64-pc-linux-gnu-library/3.4/RcppParallel/include" -D_FORTIFY_SOURCE=2   -fpic  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -c topk_setting.cpp -o topk_setting.o
g++ -std=gnu++11 -shared -L/usr/lib64/R/lib -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o rPref.so RcppExports.o bnl.o hasse.o pref-classes.o psel-par-top.o psel-par.o scalagon.o topk_setting.o -L/usr/lib64/R/lib -lR
installing to /home/phrb/R/x86_64-pc-linux-gnu-library/3.4/rPref/libs
,** R
,** inst
,** preparing package for lazy loading
,** help
,*** installing help indices
,** building package indices
,** installing vignettes
,** testing if installed package can be loaded
,* DONE (rPref)

The downloaded source packages are in
	‘/tmp/RtmpDcsxEu/downloaded_packages’
#+end_example

** Modifying & Analysing the FPGA Data Set
Cloning and updating the =legup-tuner= repository:

#+NAME: update_legup_tuner
#+BEGIN_SRC sh :results output
git clone https://github.com/phrb/legup-tuner.git || (cd legup-tuner && git pull)
#+END_SRC

Export your path to =repository_dir= variable:

#+name: repository_dir
#+begin_src sh :results output :exports both
pwd | tr -d "\n"
#+end_src

** Updating & Cloning Repositories
*** GPU Autotuning Screening Experiment
#+NAME: update_screening_experiment
#+BEGIN_SRC sh :results output
git clone https://github.com/phrb/autotuning_screening_experiment.git || (cd autotuning_screening_experiment && git pull)
#+END_SRC
* Bibliography
* 2017
** November 
*** [2017-11-28 Tue]
**** Install and Configure Emacs
- Attempted to use vim-orgmode but gave up: not enough features
- Switch to Emacs
**** Start an OrgMode Journal
- Use template from webinars
- Populate with some tasks
**** Advance on Reconfig Presentation
- Should add presentation notes for Alfredo
*** [2017-11-29 Wed]
- Complete Reconfig Presentation
- Read Fisher's Design of Experiments
**** Meeting with Alfredo
- Present our work for Brice and his research center
- Finish slides for Reconfig
*** [2017-11-30 Thu]
- Fix OFII form error and post it
- Start working on NODAL poster
**** Amélie's Presentation
- She is the author of Johanne's NIPS paper
- Two bandit cases: bandit and semi-bandit
- It is possible to achieve Nash Equilibria with both, given certain
  conditions
- I sent her an e-mail, asking for her C++ implementation of her work
- She already sent her code
- Print and read Amélie's paper
** December
*** Reading Fisher's Design & Montgomery's Design                :Book:DOE:
**** Quotes for key concepts
- "Every experiment may be said to exist only in order to give the
    facts a chance of disproving the null hypothesis"
- "The null hypothesis must be exact, that is free from vagueness and
    ambiguity"
**** A null hipothesis for autotuning techniques
***** Definitions
- A base autotuning technique t_b
- A new autotuning technique t_n
- A set of autotuning problems P
- A metric M
***** An exact null hipothesis H 
- We can state H as: The improvement of M produced by t_n is equal to t_b for all
  problems p \in P, that is, t_n performance is equal to t_b for P.
***** Problems 
- What is the chance of disproving H? In other words, to be considered better for P,
  for how many problems p \in P must t_n perform better than t_b?
- The set P must be very well chosen for this experiment to make sense. 
*** Studying "Learning with Bandit Feedback in Potential Games"      :Code:
**** Reading "Learning with Bandit Feedback in Potential Games" 
The [[file:~/Dropbox/papers/bandit-problem/cohen2017learning.pdf][pdf file]] is in my paper library.
***** Managing Autotuning Techniques as an N-Player Game
- Understanding applicability will require studying the implementation
  in C++ shared by Amélie.
- The players are distributed processes
- The actions are changing, keeping, restarting or reconfiguring
  search techniques
- The payoff is finding better configurations
  - Related to the Area Under the Curve Credit Assignment
  - The 'full bandit' case is very similar to MAB AUC
- Gaming strategies could consist of policies to select
  techniques based on the number of processes, past results,
  and maybe characteristics of the search space
- In this context, what would be equivalent to the *Nash Equilibrium*?
  - No process "wants" to change its policy for selecting techniques
  - No process "wants" to change its current technique
**** Studying the code from "Learning with Bandit Feedback in Potential Games"
The [[file:~/code/bandit-johanne/][source code]] is located in my code library.  
***** General Questions & Considerations
It seems the game has only 2 players, but the paper considers N-player
games. From the paper, it seems that the N-player implementation would
work without much change.

Payoffs seem to be pre-computed for each strategy but this does not,
at first, imply that needing to compute the payoffs would change
anything.

To adapt this code to the selection of search algorithms by Julia
processes we would need a way to implement the strategies.
***** Questions about specific points in code
****** =main.cpp=
Questions and execution flow related to the [[file:~/code/bandit-johanne/code/main.cpp][main file]].

******* Questions

- Why weren't random payoffs used?
- How are strategies represented in the =evol= array?

******* Execution Flow

1. Declare payoff and strategy arrays
2. Initialize pre-computed payoffs
3. Initialize seeds array
4. Instantiate a new =Game=
5. Call =Game->Play=
6. Save output to file
   
****** =game.h= & =game.cpp=
Questions and execution flow related to the [[file:~/code/bandit-johanne/code/game.h][header]] and the [[file:~/code/bandit-johanne/code/game.cpp][implementation]].

******* Questions

Re-read [[file:~/Dropbox/papers/bandit-problem/cohen2017learning.pdf][the paper]] to understand:

- What is a potential game?
- What does the =potential_function= do?
- What are the constraints on payoff arrays?
- What are =gamma= & =utility=?
- What is =res= used for inside =Game->play=? And inside =Game=?

******* Execution Flow

1. Instantiated by =main.cpp=
2. =void Game->play= is called by =main.cpp=
3. Open output file
4. Loop for the number of steps:
   1. Registers player strategies in =evol= for step =i= such that:
      #+BEGIN_SRC C
evol[i][(int)floor(P1->proba_strat[0]*100)][(int)floor(P2->proba_strat[0]*100)]++;
      #+END_SRC
   
      Where =P1= and =P2= are =Player= objects and the =proba_strat= arrays store
      the current strategy of each player.
   2. Calls =play_one_turn= (see below)
5. Save output to file

******** Execution Flow of =play_one_turn=

1. Called by =Game->play=
2. Initializes =epsilon=, =gamma= and =utility=
3. Set strategies for each player with =P->setStrat()= and
   =P->draw_proba()=
4. Update =utility= arrays with =P1->utility(P2->getStrat())=
   and =P2->utility(P1->getStrat())=
5. Update =y_strat= arrays with =utility= and =gamma=
6. Calls =P->update_proba(epsilon)= for each player

****** =player.h= & =player.cpp=
Questions and execution flow related to the
[[file:~/code/bandit-johanne/code/player.h][header]] and the
[[file:~/code/bandit-johanne/code/player.cpp][implementation]].

******* Questions

- What are the arrays =proba_strat= & =y_strat=?

*** [2017-12-01 Fri]
- Finish the Reconfig poster
- Converge to final Reconfig presentation
*** [2017-12-04 Mon]
- Set up build environment for latest Julia version
- Apply Sai's corrections to presentation
**** Fix NODAL's status in Julia pkg Manager
- Fixed warnings and deprecations
- Tagged new version 'v0.3.5'
- Released new version
- Made new pull request to METADATA
- Waiting for merge
*** [2017-12-05 Tue]
- Started using new us-layout keyboard.
- Study the Bandit's code and paper
**** Start NODAL's 'dev' branch
- Pushed 'dev' branch to GitHub repository.
- Added development workflow to Journal
*** [2017-12-06 Wed]
- Describe Hedge's code exec flow ([[Studying "Learning with Bandit Feedback in Potential Games"][Main Section]])
- Elaborate concrete bandit implementation plan for autotuning ([[Studying "Learning with Bandit Feedback in Potential Games"][Main Section]])
- Resume study of Fisher's and Montgomer's books ([[Reading Fisher's Design & Montgomery's Design][Main Section]])
**** Discussion with Brice and Arnaud
Meeting notes kindly taken by Arnaud.
***** Questions left open in Pedro's journal
- Bandits: This would clearly be useful for auto-tuning as we may not
  know in advance what would work better on a given instance.
  - Bandit algorithms could be used to select which algorithms work better.
  - They could also be used to select which areas to explore.
  A possibly interesting question is "How does parallel bandit work?".

- Game Theory: branch of mathematics for
  1. modeling/studying situations where agents compete with each others.
  2. improving situation where agents compete with each others
  3. design fully distributed algorithms/protocols
  It's not clear yet how game theory would help in our auto-tuning
  context but we can keep this in mind.

- Design of Experiments: Master 2 lecture on
[[https://github.com/alegrand/SMPE][SMPE]]. Description and
  rooms are
[[http://mescal.imag.fr/membres/arnaud.legrand/teaching/2017/M2R_SMPE.php][here]].

- Quick discussions about Julia and how it compares with other
  languages (compiled on the fly, FFI, ...).
***** Autotuning context:
  - So far, with FPGAs, what was distinctive was:
    1. Many many compilation parameters
    2. Several parameters to optimize
    3. Extremely long experiments
    4. Parallel exploration
    Can we keep all these research challenges open or should we focus
    on one or two of them ?
  - Brice thinks there is:
    - The structure of the code is also important for the compiler and
      it may be worth looking at code transformation. Changing the
      code may have a lot of impact on performance and this
      variability may contain a lot of useful information. BOAST
      (meta-programming rather than code transformation) can help to
      investigate this.

      Actually, the fact some gain can be obtained by tweaking the
      compiler option may mean we're far from the peak performance,
      which may be caused by an ineffective code structure. *This could
      be explored with BOAST and* *we should probably check this before
      going into compiler flag exploration*.
  - Discussions about compiler passes (LLVM) and the importance of
    unroll/jam.
  - Questions:
    - Do we have FPGAs to play with ?
      - Some of the recent Intel Skylake CPUs have FPGAs. They were
        released in Spring but Google and Amazon bought them all so we
        have to wait for new ones to be produced.
    - Do we have the right compilers/toolchain ? Is it functional ?
      - Maybe. :) Intel is supposed to provide us with an OpenCL to
        FPGA compiler with their Skylake chips.
      - Before, Pedro used an open-source High Level Synthesis tool.
    - Can we explore application structures for FPGAs with BOAST ?
      - Sure, why not ?

  - Arnaud mentions http://www.exanest.eu/ and Fabien Chaix he knows
    quite well.
  - Pedro's work was published at ReConfig (Cancun) and Alfredo's
    currently presenting it.
    - https://github.com/phrb/slides-reconfig-2017-autotuning
    -
https://github.com/phrb/slides-reconfig-2017-autotuning/raw/master/src/presentation.pdf
      - Slide 9: We have a quick discussion on why there is a single
        configuration file controlling all the knobs/parameters of the
        blue workflow compared to being able to obtain intermediary
        information and possibly perform selections at each step
        before moving to the next one.
      - Slide 9: This phase is fast. It's the compiling from the
        Verilog format to the hardware synthesis that is really
        slow. They use Quartus. Quartus also has parameters but this
        parameter space was not explored yet in this work.
        - LegUp is supposed to have a cost model that allows to guide
          the optimization without going all the way down to the
          hardware synthesis to evaluate configurations but it was not
          functional.
      - Slide 11: summarizes the whole workflow. 6+ compilation passes
      - Brice wonders if peak performance models exists for such
        app/systems. It would be worth knowing how far we are from the
        optimal to decide whether further optimizations are needed.
      - Quick discussion about multi-criteria optimization and Pareto
        front.
***** Stuff to do
- Create a big data frame with all the samples you obtained during the
  exploration of the autotuner. We'll try to explore (metric
  variability, parameter space exploration, criteria Pareto structure)
  it together.
- The same could be done for GPU experiments.
*** [2017-12-07 Thu]
**** Creating a Data Frame for FPGA Autotuning Samples :R:Code:FPGA:Autotuning:
***** Installing R Dependencies
The next code block install all =R= dependencies.
We are not using =ggplot2= to create the =csv= files,
but it will be used later for plotting.

We are installing =rjson= because part of the data files were generated
by OpenTuner in the =JSON= format.  The other packages are from Arnaud's
[[https://github.com/alegrand/SMPE#learning-r][guidelines]] for the SMPE course.

#+CALL: install_r_deps()

***** Generating =csv= Files with the Data
#+HEADER: :results output :exports both :session *R*
#+HEADER: :var repository_dir=repository_dir
#+begin_src R
print(repository_dir)
#+end_src

#+RESULTS:
: [1] "/home/phrb/org/journal"

First, we configure libraries and initialize variables:

#+HEADER: :results output :exports both :session *R*
#+HEADER: :var repository_dir=repository_dir
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_csv_files.r
#+begin_src R

library(tidyr)
library(dplyr)
library(jsonlite)

runs         <- 10
tuning_time  <- 5400

repository   <- paste(repository_dir, "/legup-tuner", sep = "")
results      <- "post_place_and_route/py/results"

output_dir   <- paste(repository, results, "r_scripts/data", sep = "/")

experiments  <- c("default_stratixV_perf", "default_stratixV_perflat",
                  "default_stratixV_area", "default_stratixV_balanced")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

txt_measurements <- c("log_details.txt", "best_cycles_log.txt",
                      "best_fmax_log.txt", "best_lu_log.txt",
                      "best_pins_log.txt", "best_regs_log.txt",
                      "best_block_log.txt", "best_ram_log.txt",
                      "best_dps_log.txt")

json_configurations <- "best_log.json"

headers <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs", "Blocks",
             "RAM", "DPS")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
#+end_example

Then, we define the =cbind.fill= function, which merges columns and
fills missing rows with 'NA'.  This happens in this dataset because of
unsynchronized logging, where the last configuration was saved twice
in one of the log files. Will require to later clean the lines with
'NA's.

#+HEADER: :results output :exports both :session *R*
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_csv_files.r
#+begin_src R
#
# Function from:
#
#    https://stackoverflow.com/questions/7962267/cbind-a-df-with-an-empty-df-cbind-fill
#
#
cbind.fill <- function(...){
    nm <- list(...)
    nm <- lapply(nm, as.matrix)
    n <- max(sapply(nm, nrow))
    do.call(cbind, lapply(nm, function (x)
        rbind(x, matrix(, n-nrow(x), ncol(x)))))
}

#+end_src

#+RESULTS:

Now we defined the =generate_csv_files= function,
which will load all data and create easily-importable
=csv= files:

#+HEADER: :results output :exports both :session *R*
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_csv_files.r
#+begin_src R
generate_csv_files <- function() {
    dir.create(output_dir)

    for (experiment in experiments) {
        dir.create(paste(output_dir, strsplit(experiment, "_")[[1]][3], sep = "/"))

        for (application in applications) {
            data <- data.frame()

            for (iteration in 1:runs) {
                target_file <- (paste(repository, results, experiment,
                                    paste(application, tuning_time, iteration,
                                            sep = "_"), json_configurations,
                                    sep = "/"))

                if (file.exists(target_file)) {
                    configuration <- fromJSON(target_file)
                }

                columns <- data.frame()

                for (measurement in txt_measurements) {
                    target_file <- paste(repository, results, experiment,
                                        paste(application, tuning_time, iteration,
                                            sep = "_"), measurement,
                                        sep = "/")

                    if (file.exists(target_file)) {
                        new_column <- read.table(target_file, header = FALSE)[2]

                        if (ncol(columns) == 0) {
                            columns <- new_column
                        } else {
                            columns = cbind.fill(columns, new_column)
                        }
                    }
                }

                if (ncol(columns) != 0) {
                    colnames(columns) <- headers

                    columns = cbind.fill(configuration, columns)

                    if (nrow(data) == 0) {
                        data <- columns
                    } else {
                        data = bind_rows(as.data.frame(data),
                                        as.data.frame(columns))
                    }
                }
            }

            data <- data[complete.cases(data), ]

            write.csv(data, file = paste(paste(output_dir, strsplit(experiment,
                                                                    "_")[[1]][3],
                                            application, sep = "/"), ".csv",
                                        sep = ""))
        }
    }
}

#+end_src

#+RESULTS:

Now, we can simply run the =generate_csv_files= function:

#+HEADER: :results output :exports both :session *R*
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_csv_files.r
#+begin_src R
generate_csv_files()
#+end_src

#+RESULTS:
: There were 50 or more warnings (use warnings() to see the first 50)

**** Arnaud's Lecture on Linear Regression
The slides and code are hosted at
[[https://github.com/alegrand/SMPE][GitHub]].
*** [2017-12-08 Fri]
- Finish the data frames for FPGA data ([[Creating a Data Frame for FPGA Autotuning Samples][Main Section]])
**** Analysing FPGA Autotuning Samples            :R:Code:FPGA:Autotuning:
The generated =csv= files, made in [[Creating a Data Frame for FPGA Autotuning Samples][this section]], live in the [[https://github.com/phrb/legup-tuner/tree/master/post_place_and_route/py/results/r_scripts/data][repository]],
and are organized by *experiment* and CHStone *application*. The
*experiments* are the autotuning runs targeting different optimization
objectives. The *applications* are the different programs that were
autotuned.

It makes sense to combine data from different *experiments*, for a
same *application*, because the search space is the same and the
individual hardware metrics refer to the same FPGA circuit.

The =WNS= column is not directly comparable between different
*experiments*, even for the same *application*, because it represents a
different computation over the absolute metric values for each
*application*.  To compare =WNS= columns it would be necessary to
recompute =WNS= with different weights using the other hardware metrics.

Combining data from different *applications* would be more complicated.
The search spaces are not the same, but the *target FPGA* is the same.
We could try to understand some property of the hardware by looking
at the variability of the hardware metrics.

***** Multivariate Analysis
Implementing some ideas from [[https://little-book-of-r-for-multivariate-analysis.readthedocs.io/en/latest/src/multivariateanalysis.html][The Little Book of R for Multivariate
Analysis]].

****** Introduction
To run the code in this section you first need to clone the repository
to get the data and the R scripts:

#+call: update_legup_tuner()

****** Summary Statistics
First, we will combine all *experiments* with the *dfdiv* application. In
this case, the =WNS= columns are not directly comparable so I am not
removing the rows where ~WNS == Inf~. This indicates a penalty that
happened when there was some problem during HLS, synthesis, or
testing. The following script, hosted at [[https://raw.githubusercontent.com/phrb/legup-tuner/master/post_place_and_route/py/results/r_scripts/mean_sd.r][GitHub]], will print the *mean*
and *standard deviation* for the FPGA *hardware metrics* and *WNS*.

First, let's define the necessary variables and import the
=dplyr= library:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :var repository_dir=repository_dir
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/mean_sd.r
#+BEGIN_SRC R

library(dplyr)

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

experiments <- c("balanced", "area", "perf", "perflat")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

#+END_SRC

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
#+end_example


Now, we load the data into two data frames. The =data= data frame
contains all lines, including the ones with ~WNS == Inf~, the =clean_data=
data frame contains the clean samples.  Note that we are merging all
*experiments* for a single *application* in this case.

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/mean_sd.r
#+BEGIN_SRC R
data       <- data.frame()
clean_data <- data.frame()

application <- applications[2]

for (experiment in experiments) {
    new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                               experiment, paste(application,
                                                 ".csv",
                                                 sep = ""),
                               sep = "/"),
                         header = TRUE, sep = ",")

    new_data       <- as.data.frame(new_data)
    new_clean_data <- new_data[is.finite(new_data$WNS),]

    if (ncol(data) == 0) {
        data <- new_data
    } else {
        data <- rbind(data, new_data)
    }

    if (ncol(clean_data) == 0) {
        clean_data <- new_clean_data
    } else {
        clean_data <- rbind(clean_data, new_clean_data)
    }
}

#+END_SRC

#+RESULTS:

Now, we get the indices of the =hardware_metrics= for which we want
to compute the mean and standard deviation in this dataset:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/mean_sd.r
#+BEGIN_SRC R
names <- c("WNS","RAM")

idx <- match(names, names(data))

#+END_SRC

#+RESULTS:

By looking at the data with the ~WNS == Inf~ rows we get wrong values
for mean and standard deviation because repeated samples are in the
data frame, strengthening their contribution contribution to the final
values:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/mean_sd.r
#+BEGIN_SRC R
print("Data with 'WNS == Inf' rows:")

print("Mean:")
sapply(data[idx[1]:idx[2]], mean)

print("Standard Deviation:")
sapply(data[idx[1]:idx[2]], sd)

#+END_SRC

#+RESULTS:
#+begin_example
[1] "Data with 'WNS == Inf' rows:"
[1] "Mean:"
         WNS       Cycles         FMax          LUs         Pins         Regs 
         Inf  587.1083650   24.1486882    1.0000000    3.2813688 4153.5665399 
      Blocks          RAM 
   0.8992395    0.8992395
[1] "Standard Deviation:"
         WNS       Cycles         FMax          LUs         Pins         Regs 
         NaN  227.1528406   13.1032536    0.0000000    0.4500950 1123.2949061 
      Blocks          RAM 
   0.3012978    0.3012978
#+end_example

We can compute the correct values by using the =clean_data= data frame:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/mean_sd.r
#+BEGIN_SRC R
print("Data without 'WNS == Inf' rows:")

print("Mean:")
sapply(clean_data[idx[1]:idx[2]], mean)

print("Standard Deviation:")
sapply(clean_data[idx[1]:idx[2]], sd)
#+END_SRC

#+RESULTS:
#+begin_example
[1] "Data without 'WNS == Inf' rows:"
[1] "Mean:"
         WNS       Cycles         FMax          LUs         Pins         Regs 
   1.0651531  564.3596215   23.6492429    1.0000000    3.2492114 4032.5268139 
      Blocks          RAM 
   0.9116719    0.9116719
[1] "Standard Deviation:"
         WNS       Cycles         FMax          LUs         Pins         Regs 
   0.3079517  207.3545319   12.8765244    0.0000000    0.4332403 1049.1423668 
      Blocks          RAM 
   0.2842201    0.2842201
#+end_example

****** Attempts at Computing Correlations
Following [[https://little-book-of-r-for-multivariate-analysis.readthedocs.io/en/latest/src/multivariateanalysis.html#calculating-correlations-for-multivariate-data][this guide]] I attempted to compute and plot the largest
correlations between *parameters* and *hardware metrics*.  The largest
correlations might not be really signficant, because the relationship
between variables might not be linear, as illustrated [[http://www.dummies.com/education/math/statistics/how-to-interpret-a-correlation-coefficient-r/][here]]. Therefore,
the following script plots the 30 largest correlations, for all
*applications* in all *experiments*, so that we can look at the
relationships between variables. The script also generates =csv= files
with the 120 strongest correlations. The script is hosted at
[[https://raw.githubusercontent.com/phrb/legup-tuner/master/post_place_and_route/py/results/r_scripts/correlations.r][GitHub]].

First, we will import the dependencies, set the graphics output,
and define paths:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :var repository_dir=repository_dir
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/correlations.r
#+begin_src R

library(dplyr)

setEPS()

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

plot_dir <- c(repository_dir,
              "/legup-tuner/",
              "post_place_and_route/py/results/r_scripts/",
              "correlations")

experiments <- c("balanced", "area", "perf", "perflat")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

#+end_src

#+RESULTS:

Then we will define two functions. The =sorted_correlations= function
gives us the sorted correlation matrices for *parameters* and *hardware
metrics*. The =plot_application_correlations= function plots the strongest
30 correlations between *parameters* and *hardware metrics*, and
writes the 120 strongest correlations to =csv= files:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/correlations.r
#+begin_src R
#
# Function adapted from:
#
#   https://little-book-of-r-for-multivariate-analysis.readthedocs.io/en/latest/src/multivariateanalysis.html#calculating-correlations-for-multivariate-data
#
sorted_correlations <- function(data, datapoints) {
    cormatrix <- cor(data)

    diag(cormatrix) <- 0
    cormatrix[lower.tri(cormatrix)] <- 0

    fm <- as.data.frame(as.table(cormatrix))

    names(fm) <- c("First.Variable", "Second.Variable","Correlation")

    hardware_metrics <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs",
                          "Blocks", "RAM", "DPS")

    #
    # Restricting comparisons to correlations that contain a hardware metric
    #
    fm <- dplyr::filter(fm, grepl(paste(hardware_metrics, collapse = "|"),
                                  fm$Second.Variable))

    head(fm[order(abs(fm$Correlation), decreasing = T), ], n = datapoints)
}

plot_application_correlations <- function() {
    dir.create(paste(plot_dir, collapse = ""))

    for (application in applications) {
        data       <- data.frame()
        clean_data <- data.frame()

        for (experiment in experiments) {
            new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                                       experiment, paste(application,
                                                         ".csv",
                                                         sep = ""),
                                       sep = "/"),
                                 header = TRUE, sep = ",")

            new_data <- as.data.frame(new_data)
            new_data <- new_data[is.finite(new_data$WNS),]

            if (ncol(data) == 0) {
                data <- new_data
            } else {
                data <- rbind(data, new_data)
            }
        }

        data  <- sapply(data, as.numeric)

        correlation <- sorted_correlations(data, 120)

        print(paste("Generating 120 strongest correlations for '", application,
                    "'...", sep = ""))

        write.csv(correlation, file = paste(paste(plot_dir, collapse = ""),
                                            paste("correlations_", application,
                                                  ".csv", sep = ""), sep = "/"))
        print(paste("Generating scatter plots of the 30 strongest correlations for '",
                    application, "'...", sep = ""))

        print(paste(paste("CSV generated at ", 
                          paste(plot_dir, collapse = ""),
                          sep = ""), paste("correlations_", application,
                                           ".csv", sep = ""),
                    sep = "/"))

        short_correlation <- correlation[1:30, ]

        postscript(paste(paste(plot_dir, collapse = ""), paste("correlations_",
                                                               application,
                                                               ".eps",
                                                               sep = ""),
                         sep = "/"),
                   width = 16, height = 11)

        old.par <- par(mfrow = c(5, 6))

        for (i in 1:nrow(short_correlation)) {
            first  <- as.character(short_correlation[i, 'First.Variable'])
            second <- as.character(short_correlation[i, 'Second.Variable'])

            plot(data[, first], data[, second], xlab = first, ylab = second)
        }

        print(paste(paste("Plot generated at ",
                          paste(plot_dir, collapse = ""),
                          sep = ""), paste("correlations_", application,
                                           ".eps", sep = ""),
                    sep = "/"))

        par(old.par)
        dev.off()
    }
}

#+end_src

#+RESULTS:

Now we can run =plot_application_correlations= and generate the files:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/correlations.r
#+begin_src R
plot_application_correlations()
#+end_src

#+RESULTS:
#+begin_example
[1] "Generating 120 strongest correlations for 'dfadd'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'dfadd'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfadd.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfadd.eps"
[1] "Generating 120 strongest correlations for 'dfdiv'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'dfdiv'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfdiv.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfdiv.eps"
[1] "Generating 120 strongest correlations for 'dfmul'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'dfmul'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfmul.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfmul.eps"
[1] "Generating 120 strongest correlations for 'sha'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'sha'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_sha.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_sha.eps"
[1] "Generating 120 strongest correlations for 'motion'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'motion'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_motion.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_motion.eps"
[1] "Generating 120 strongest correlations for 'adpcm'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'adpcm'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_adpcm.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_adpcm.eps"
[1] "Generating 120 strongest correlations for 'dfsin'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'dfsin'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfsin.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfsin.eps"
[1] "Generating 120 strongest correlations for 'aes'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'aes'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_aes.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_aes.eps"
[1] "Generating 120 strongest correlations for 'blowfish'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'blowfish'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_blowfish.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_blowfish.eps"
[1] "Generating 120 strongest correlations for 'gsm'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'gsm'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_gsm.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_gsm.eps"
[1] "Generating 120 strongest correlations for 'mips'..."
[1] "Generating scatter plots of the 30 strongest correlations for 'mips'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_mips.csv"
[1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_mips.eps"
There were 26 warnings (use warnings() to see them)
#+end_example

Open one of these =eps= files with:

#+HEADER: :var repository_dir=repository_dir
#+begin_src sh
evince $repository_dir/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/correlations_dfdiv.eps&
#+end_src

#+RESULTS:

*** [2017-12-11 Mon]
**** Reading the [[file:~/Dropbox/papers/autotuning/cronsioe2013boast.pdf][BOAST]] paper
- BOAST: Bringing Optimization through Automatic
  Source-to-source Transformations
- Optimizes loop structures for different HPC architectures
  - Loop unrolling and tiling
***** Questions
1. Why loop tiling with PIPS was not performed and measured?
2. What would be the improvements of appling unrolling and
   tiling to the same loop?
3. Can "search-based" strategies help for larger loops?
2. What would be the improvements of appling unrolling and
   tiling to the same loop?
3. Can "search-based" strategies help for larger loops?
***** Optimization Methodology
- Compare BOAST with PIPS, another code transformation tool
- Benchmark transformed code to find the best version
  - Objective: Perform loop unrolling and tiling using PIPS
    - Did not perform loop tiling with PIPS
  - Independently measured hardware counters
  - Hardware counters:
    - Cache accesses and misses
    - Instruction cache misses
    - TLB data and instruction misses
    - Total CPU cycles
**** Attempts at PCA ([[Analysing FPGA Autotuning Samples][Main Section]])       :R:Code:FPGA:Autotuning:DataVis:
Make sure you have the data:

#+call: update_legup_tuner()

#+RESULTS:
: Already up to date.

Following [[https://little-book-of-r-for-multivariate-analysis.readthedocs.io/en/latest/src/multivariateanalysis.html#principal-component-analysis][this guide]] I attempted to perform Principal Component
Analysis for the data combining all *experiments* for all
*applications*. The following script generates [[https://stat.ethz.ch/R-manual/R-devel/library/stats/html/screeplot.html][scree plots]] for the PCA
of each *application*. The script is hosted at [[https://raw.githubusercontent.com/phrb/legup-tuner/master/post_place_and_route/py/results/r_scripts/pca.r][GitHub]].

Initial setup:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :var repository_dir=repository_dir
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/pca.r
#+BEGIN_SRC R

library(dplyr)

setEPS()

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

plot_dir <- c(repository_dir,
              "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "scree_plots")

experiments <- c("balanced", "area", "perf", "perflat")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

hardware_metrics <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs", "Blocks",
                      "RAM", "DPS")

#+END_SRC

#+RESULTS:

Now, we define the =load_data= and the =plot_scree_pca= functions:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/pca.r
#+BEGIN_SRC R
load_data <- function(application, experiment) {
    return(as.data.frame(read.csv(paste(paste(csv_dir, collapse = ""),
                                        experiment, paste(application,
                                                          ".csv",
                                                          sep = ""),
                                        sep = "/"),
                                  header = TRUE, sep = ",")))
}

plot_scree_pca <- function() {
    dir.create(paste(plot_dir, collapse = ""))

    for (application in applications) {
        data <- data.frame()

        for (experiment in experiments) {
            new_data <- load_data(application, experiment)
            new_data <- new_data[is.finite(new_data$WNS),]

            if (ncol(data) == 0) {
                data <- new_data
            } else {
                data <- rbind(data, new_data)
            }
        }

        headers <- names(data)
        data  <- as.data.frame(sapply(data, as.numeric))

        standardised_data <- as.data.frame(scale(data[, !(names(data) %in% hardware_metrics)]))

        data.pca <- prcomp(t(na.omit(t(standardised_data))))

        print(paste("Generating scree plots of PCA for '",
                    application, "'...", sep = ""))

        postscript(paste(paste(plot_dir, collapse = ""), paste("scree_",
                                                               application,
                                                               ".eps",
                                                               sep = ""),
                         sep = "/"),
                   width = 16, height = 11)

        screeplot(data.pca, type = "lines")

        dev.off()
    }
}

#+END_SRC

#+RESULTS:

Now, we run =plot_scree_pca= to generate the scree plots:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/pca.r
#+begin_src R
plot_scree_pca()
#+end_src

#+RESULTS:
#+begin_example
[1] "Generating scree plots of PCA for 'dfadd'..."
[1] "Generating scree plots of PCA for 'dfdiv'..."
[1] "Generating scree plots of PCA for 'dfmul'..."
[1] "Generating scree plots of PCA for 'sha'..."
[1] "Generating scree plots of PCA for 'motion'..."
[1] "Generating scree plots of PCA for 'adpcm'..."
[1] "Generating scree plots of PCA for 'dfsin'..."
[1] "Generating scree plots of PCA for 'aes'..."
[1] "Generating scree plots of PCA for 'blowfish'..."
[1] "Generating scree plots of PCA for 'gsm'..."
[1] "Generating scree plots of PCA for 'mips'..."
There were 15 warnings (use warnings() to see them)
#+end_example

Open one of these =eps= files with:

#+HEADER: :var repository_dir=repository_dir
#+begin_src sh
evince $repository_dir/legup-tuner/post_place_and_route/py/results/r_scripts/scree_plots/scree_dfdiv.eps&
#+end_src

#+RESULTS:

**** Looking at data with Arnaud. Not sure where we were heading though. :R:Code:FPGA:Autotuning:
Make sure you have the data:

#+call: update_legup_tuner()

#+RESULTS:
: Already up to date.

Define the =load_data= function. This function receives lists of
*experiments*, an *application* and a directory containing *csv* files with
the data sets. The function returns a *data frame* with merged data for
an *application* across all *experiments*:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+HEADER: :var repository_dir=repository_dir
#+BEGIN_SRC R

load_data <- function(application, experiments, csv_dir) {
    data <- data.frame()

    for (experiment in experiments) {
        new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                                    experiment, paste(application,
                                                        ".csv",
                                                        sep = ""),
                                    sep = "/"),
                                header = TRUE, sep = ",")

        new_data <- new_data[is.finite(new_data$WNS),]
        new_data <- as.data.frame(new_data)

        if (ncol(data) == 0) {
            data <- new_data
        } else {
            data <- rbind(data, new_data)
        }
    }

    headers <- names(data)
    data    <- as.data.frame(sapply(data, as.numeric))
    data    <- t(na.omit(t(data)))
    return(as.data.frame(data))
}

#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

plot_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "plots")

experiments <- c("balanced", "area", "perf", "perflat")


applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

hardware_metrics <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs",
                      "Blocks", "RAM", "DPS")
#+end_src

#+RESULTS:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R
application <- applications[2]
data        <- load_data(application, experiments, csv_dir)

#+end_src

#+RESULTS:
: Warning message:
: In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion

Checking the data:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R
dim(data)
str(data, list.len = 999)

#+end_src

#+RESULTS:
#+begin_example
[1] 317 150
'data.frame':	317 obs. of  150 variables:
 $ X                                           : num  1 2 5 7 8 9 10 12 13 14 ...
 $ set_operation_latency.altfp_divide_16       : num  33 33 33 33 33 33 33 33 33 33 ...
 $ set_resource_constraint.signed_divide_16    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.mem_dual_port         : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_operation_latency.altfp_truncate_16     : num  3 3 3 3 3 3 4 4 4 4 ...
 $ set_resource_constraint.altfp_multiply_64   : num  1 1 1 1 1 1 1 3 3 3 ...
 $ set_parameter.NO_ROMS                       : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_resource_constraint.signed_multiply_8   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_fptosi          : num  6 6 6 6 6 6 6 6 6 6 ...
 $ set_resource_constraint.unsigned_modulus_16 : num  1 1 1 1 1 1 5 5 5 5 ...
 $ set_resource_constraint.unsigned_multiply_32: num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.altfp_add_8         : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.unsigned_multiply_32  : num  1 1 1 1 3 3 3 3 3 3 ...
 $ set_resource_constraint.unsigned_add_32     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.unsigned_divide_16    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.signed_multiply_16  : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_modulus_32     : num  1 1 1 1 1 1 0 0 0 0 ...
 $ set_operation_latency.signed_multiply_32    : num  1 1 1 1 1 1 5 5 5 5 ...
 $ set_operation_latency.altfp_add_64          : num  14 14 14 14 14 14 14 4 4 2 ...
 $ set_operation_latency.altfp_subtract_32     : num  14 14 14 14 14 14 14 14 14 14 ...
 $ set_parameter.PS_MIN_SIZE                   : num  1 1 1 1 1 1 1 1 1 4 ...
 $ set_resource_constraint.altfp_add_64        : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_multiply_64     : num  11 11 11 11 11 11 11 11 11 11 ...
 $ set_operation_latency.unsigned_multiply_8   : num  1 1 1 1 1 1 1 1 1 5 ...
 $ set_operation_latency.unsigned_add_32       : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_truncate_8      : num  3 3 3 3 3 3 3 3 3 3 ...
 $ set_resource_constraint.signed_multiply_64  : num  1 1 1 1 6 6 6 6 6 6 ...
 $ set_operation_latency.signed_divide_64      : num  1 1 1 1 1 1 2 6 6 6 ...
 $ set_resource_constraint.altfp_subtract_16   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.MB_MINIMIZE_HW                : num  2 2 2 2 2 2 2 2 2 1 ...
 $ set_parameter.PATTERN_SHARE_ADD             : num  3 3 3 3 3 3 3 3 3 3 ...
 $ set_resource_constraint.signed_add_16       : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.MULTIPLIER_NO_CHAIN           : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_resource_constraint.unsigned_multiply_8 : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.reg                   : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_operation_latency.unsigned_modulus_64   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.unsigned_divide_16  : num  1 1 1 1 1 1 1 7 7 8 ...
 $ set_resource_constraint.unsigned_divide_64  : num  1 1 1 1 1 1 7 7 7 7 ...
 $ set_resource_constraint.signed_divide_8     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_extend_32       : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_resource_constraint.altfp_add_16        : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.signed_modulus_32   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.DONT_CHAIN_GET_ELEM_PTR       : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_resource_constraint.unsigned_modulus_64 : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.unsigned_modulus_8    : num  1 1 1 1 1 1 0 0 0 0 ...
 $ set_resource_constraint.mem_dual_port       : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_parameter.SDC_MULTIPUMP                 : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_operation_latency.signed_multiply_16    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_multiply_16     : num  11 11 11 11 11 11 6 6 6 6 ...
 $ set_operation_latency.unsigned_modulus_16   : num  1 1 1 1 4 4 6 6 6 6 ...
 $ set_resource_constraint.altfp_subtract_64   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_add_8          : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.unsigned_add_16       : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.PATTERN_SHARE_SUB             : num  3 3 3 3 3 3 3 3 3 3 ...
 $ set_parameter.CLOCK_PERIOD                  : num  10 10 10 10 24 24 24 24 24 20 ...
 $ set_resource_constraint.altfp_subtract_8    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.NO_LOOP_PIPELINING            : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_operation_latency.altfp_divide_64       : num  64 64 64 64 64 64 64 64 64 64 ...
 $ set_parameter.INCREMENTAL_SDC               : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_operation_latency.signed_divide_8       : num  1 1 1 1 4 4 4 4 4 4 ...
 $ set_resource_constraint.altfp_multiply_8    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.unsigned_multiply_16: num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_modulus_64     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.unsigned_multiply_64  : num  1 1 1 1 1 1 3 3 3 3 ...
 $ set_resource_constraint.unsigned_multiply_64: num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_add_32         : num  1 1 1 1 1 1 1 1 1 4 ...
 $ set_parameter.DISABLE_REG_SHARING           : num  2 2 2 2 2 2 2 1 1 1 ...
 $ set_operation_latency.unsigned_divide_64    : num  1 1 1 1 1 1 5 7 7 7 ...
 $ set_resource_constraint.unsigned_modulus_8  : num  1 1 1 1 1 1 4 4 4 4 ...
 $ set_combine_basicblock                      : num  0 0 0 0 0 0 0 0 0 0 ...
 $ set_parameter.ENABLE_PATTERN_SHARING        : num  2 2 2 2 2 2 2 1 1 1 ...
 $ set_parameter.PIPELINE_RESOURCE_SHARING     : num  1 1 1 1 1 1 2 2 2 2 ...
 $ set_parameter.MULTIPUMPING                  : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_resource_constraint.signed_add_32       : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_add_32          : num  14 14 14 14 14 14 14 14 14 14 ...
 $ set_resource_constraint.altfp_divide_64     : num  1 1 1 1 3 3 2 2 2 2 ...
 $ set_operation_latency.signed_modulus_8      : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.PIPELINE_ALL                  : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_resource_constraint.altfp_add_32        : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.PS_MIN_WIDTH                  : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_operation_latency.altfp_subtract_8      : num  14 14 14 14 14 14 14 14 14 14 ...
 $ set_operation_latency.signed_multiply_8     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_extend_64       : num  2 2 2 2 7 7 7 7 7 7 ...
 $ set_operation_latency.local_mem_dual_port   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_subtract_64     : num  14 14 14 14 14 14 14 14 14 14 ...
 $ set_resource_constraint.signed_divide_32    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.signed_multiply_32  : num  1 1 1 1 1 1 7 6 6 6 ...
 $ set_operation_latency.signed_divide_16      : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_multiply_64    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.PATTERN_SHARE_BITOPS          : num  3 3 3 3 3 3 3 3 3 3 ...
 $ set_resource_constraint.signed_add_8        : num  1 1 1 1 4 4 4 4 4 4 ...
 $ set_parameter.SDC_PRIORITY                  : num  1 1 1 1 1 1 1 1 1 2 ...
 $ set_resource_constraint.altfp_multiply_32   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.altfp_divide_16     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.signed_modulus_16   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_add_64         : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.unsigned_modulus_32 : num  1 1 1 1 7 7 7 7 7 7 ...
 $ set_operation_latency.altfp_multiply_8      : num  11 11 11 11 11 11 11 11 11 2 ...
 $ set_resource_constraint.signed_modulus_64   : num  1 1 1 1 1 1 1 7 7 7 ...
 $ set_operation_latency.signed_comp_o         : num  1 1 1 1 5 5 5 5 5 5 ...
 $ set_parameter.PS_MAX_SIZE                   : num  10 10 10 10 10 10 10 10 10 10 ...
 $ set_operation_latency.signed_comp_u         : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.DUAL_PORT_BINDING             : num  1 1 1 1 1 1 1 2 2 2 ...
 $ set_resource_constraint.unsigned_divide_32  : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_multiply_32     : num  11 11 11 11 11 11 11 11 11 11 ...
 $ set_operation_latency.altfp_add_16          : num  14 14 14 14 14 14 14 14 14 14 ...
 $ set_operation_latency.altfp_truncate_32     : num  3 3 3 3 3 3 3 3 3 3 ...
 $ set_operation_latency.unsigned_add_64       : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_add_16         : num  1 1 1 1 1 1 1 2 2 6 ...
 $ set_parameter.PS_BIT_DIFF_THRESHOLD         : num  10 10 10 10 10 10 10 10 10 14 ...
 $ set_operation_latency.altfp_add_8           : num  14 14 14 14 14 14 14 14 14 1 ...
 $ set_operation_latency.altfp_divide_32       : num  33 33 33 33 33 33 33 33 33 33 ...
 $ set_operation_latency.altfp_sitofp          : num  6 6 6 6 6 6 6 6 6 6 ...
 $ set_resource_constraint.unsigned_add_64     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.signed_add_64       : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.signed_divide_32      : num  1 1 1 1 7 7 4 4 4 4 ...
 $ set_parameter.MODULO_SCHEDULER              : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_resource_constraint.unsigned_add_16     : num  1 1 1 1 1 1 1 6 6 6 ...
 $ set_operation_latency.altfp_divide_8        : num  33 33 33 33 33 33 33 33 33 33 ...
 $ set_parameter.EXPLICIT_LPM_MULTS            : num  2 2 2 2 2 2 2 2 2 1 ...
 $ set_parameter.MB_MAX_BACK_PASSES            : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ set_operation_latency.signed_modulus_16     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.unsigned_multiply_16  : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_extend_8        : num  2 2 2 2 2 2 2 2 2 2 ...
 $ set_operation_latency.unsigned_divide_32    : num  1 1 1 1 1 1 1 1 1 6 ...
 $ set_operation_latency.altfp_subtract_16     : num  14 14 14 14 14 14 14 14 14 14 ...
 $ set_resource_constraint.unsigned_add_8      : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_parameter.PATTERN_SHARE_SHIFT           : num  3 3 3 3 3 3 3 3 3 3 ...
 $ set_operation_latency.unsigned_divide_8     : num  1 1 1 1 7 7 7 7 7 7 ...
 $ set_resource_constraint.altfp_multiply_16   : num  1 1 1 1 1 1 1 8 8 8 ...
 $ set_resource_constraint.altfp_divide_32     : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.unsigned_divide_8   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_truncate_64     : num  3 3 3 3 0 0 0 3 3 3 ...
 $ set_operation_latency.unsigned_modulus_32   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.unsigned_add_8        : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_operation_latency.altfp_extend_16       : num  2 2 2 2 1 1 1 1 1 1 ...
 $ set_resource_constraint.altfp_divide_8      : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.altfp_subtract_32   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.signed_modulus_8    : num  1 1 1 1 1 1 5 5 5 5 ...
 $ set_resource_constraint.signed_divide_64    : num  1 1 1 1 1 1 1 1 1 1 ...
 $ set_resource_constraint.shared_mem_dual_port: num  1 1 1 1 5 5 5 5 5 5 ...
 $ WNS                                         : num  1 1 1.117 1.86 0.991 ...
 $ Cycles                                      : num  486 486 486 486 458 458 554 602 602 794 ...
 $ FMax                                        : num  15.7 15.7 15.7 15.7 15.9 ...
 $ LUs                                         : num  1 1 1 1 1 1 1 1 1 1 ...
 $ Pins                                        : num  3 3 3 3 3 3 3 3 3 3 ...
 $ Regs                                        : num  3949 3949 3949 3949 3968 ...
 $ Blocks                                      : num  1 1 1 1 1 1 1 1 1 1 ...
 $ RAM                                         : num  1 1 1 1 1 1 1 1 1 1 ...
 $ DPS                                         : num  16 16 16 16 16 16 16 16 16 5 ...
#+end_example

Plotting =pairs= with =GGally=:

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 600 :height 400
#+begin_src R
library(GGally)

hw_metrics    <- tail(names(data), n = 9)
hw_parameters <- head(names(data), n = 151 - 9)

dir.create(paste(plot_dir, collapse = ""))

setEPS()

postscript(paste(paste(plot_dir, collapse = ""), paste("ggpairs_",
                                                       application,
                                                       ".eps",
                                                       sep = ""),
                 sep = "/"),
           width = 16, height = 16)

ggpairs_plot <- ggpairs(data, columns = hw_metrics)

print(ggpairs_plot)

dev.off()

ggpairs_plot

#+end_src

#+RESULTS:
[[file:/tmp/babel-16599JP5/figure16599R5p.png]]

#+HEADER: :var repository_dir=repository_dir
#+begin_src sh
evince $repository_dir/legup-tuner/post_place_and_route/py/results/r_scripts/plots/ggpairs_dfdiv.eps&
#+end_src

#+RESULTS:

Checking correlations of 5 random *parameters* with the *hardware metrics*:

#+HEADER: :results output graphics :file (org-babel-temp-file "figure" ".png")
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+HEADER: :exports both :width 1600 :height 1400 :session *R*
#+begin_src R

my_plot <- plot(data[c(sample(hw_parameters, size = 5), hw_metrics)])

setEPS()

postscript(paste(paste(plot_dir, collapse = ""), paste("random_5_corr_",
                                                       application,
                                                       ".eps",
                                                       sep = ""),
                 sep = "/"),
           width = 16, height = 16)

plot(data[c(sample(hw_parameters, size = 5), hw_metrics)])

dev.off()

#+end_src

#+RESULTS:
[[file:/tmp/babel-4788SYS/figure4788EiI.png]]

#+HEADER: :var repository_dir=repository_dir
#+begin_src sh
evince $repository_dir/legup-tuner/post_place_and_route/py/results/r_scripts/plots/random_5_corr_dfdiv.eps&
#+end_src

#+RESULTS:

Plotting =ggpairs= for 5 random *parameters* and all *hardware metrics*:

#+HEADER: :results output graphics :file (org-babel-temp-file "figure" ".png")
#+HEADER: :exports both :width 1600 :height 1400 :session *R*
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R
ggpairs(data[c(sample(hw_parameters, size = 5), hw_metrics)])
#+end_src

#+RESULTS:
[[file:/tmp/babel-4788SYS/figure4788RsO.png]]

#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R :results output :session *R* :exports both
lm(data = head(data[!names(data) %in% (hw_metrics[hw_metrics != "FMax"])]),
   FMax ~ .)
#+end_src

#+RESULTS:
#+begin_example

Call:
lm(formula = FMax ~ ., data = head(data[!names(data) %in% (hw_metrics[hw_metrics != 
    "FMax"])]))

Coefficients:
                                 (Intercept)  
                                   1.560e+01  
                                           X  
                                  -1.973e-15  
       set_operation_latency.altfp_divide_16  
                                          NA  
    set_resource_constraint.signed_divide_16  
                                          NA  
         set_operation_latency.mem_dual_port  
                                          NA  
     set_operation_latency.altfp_truncate_16  
                                          NA  
   set_resource_constraint.altfp_multiply_64  
                                          NA  
                       set_parameter.NO_ROMS  
                                          NA  
   set_resource_constraint.signed_multiply_8  
                                          NA  
          set_operation_latency.altfp_fptosi  
                                          NA  
 set_resource_constraint.unsigned_modulus_16  
                                          NA  
set_resource_constraint.unsigned_multiply_32  
                                          NA  
         set_resource_constraint.altfp_add_8  
                                          NA  
  set_operation_latency.unsigned_multiply_32  
                                   1.000e-01  
     set_resource_constraint.unsigned_add_32  
                                          NA  
    set_operation_latency.unsigned_divide_16  
                                          NA  
  set_resource_constraint.signed_multiply_16  
                                          NA  
     set_operation_latency.signed_modulus_32  
                                          NA  
    set_operation_latency.signed_multiply_32  
                                          NA  
          set_operation_latency.altfp_add_64  
                                          NA  
     set_operation_latency.altfp_subtract_32  
                                          NA  
                   set_parameter.PS_MIN_SIZE  
                                          NA  
        set_resource_constraint.altfp_add_64  
                                          NA  
     set_operation_latency.altfp_multiply_64  
                                          NA  
   set_operation_latency.unsigned_multiply_8  
                                          NA  
       set_operation_latency.unsigned_add_32  
                                          NA  
      set_operation_latency.altfp_truncate_8  
                                          NA  
  set_resource_constraint.signed_multiply_64  
                                          NA  
      set_operation_latency.signed_divide_64  
                                          NA  
   set_resource_constraint.altfp_subtract_16  
                                          NA  
                set_parameter.MB_MINIMIZE_HW  
                                          NA  
             set_parameter.PATTERN_SHARE_ADD  
                                          NA  
       set_resource_constraint.signed_add_16  
                                          NA  
           set_parameter.MULTIPLIER_NO_CHAIN  
                                          NA  
 set_resource_constraint.unsigned_multiply_8  
                                          NA  
                   set_operation_latency.reg  
                                          NA  
   set_operation_latency.unsigned_modulus_64  
                                          NA  
  set_resource_constraint.unsigned_divide_16  
                                          NA  
  set_resource_constraint.unsigned_divide_64  
                                          NA  
     set_resource_constraint.signed_divide_8  
                                          NA  
       set_operation_latency.altfp_extend_32  
                                          NA  
        set_resource_constraint.altfp_add_16  
                                          NA  
   set_resource_constraint.signed_modulus_32  
                                          NA  
       set_parameter.DONT_CHAIN_GET_ELEM_PTR  
                                          NA  
 set_resource_constraint.unsigned_modulus_64  
                                          NA  
    set_operation_latency.unsigned_modulus_8  
                                          NA  
       set_resource_constraint.mem_dual_port  
                                          NA  
                 set_parameter.SDC_MULTIPUMP  
                                          NA  
    set_operation_latency.signed_multiply_16  
                                          NA  
     set_operation_latency.altfp_multiply_16  
                                          NA  
   set_operation_latency.unsigned_modulus_16  
                                          NA  
   set_resource_constraint.altfp_subtract_64  
                                          NA  
          set_operation_latency.signed_add_8  
                                          NA  
       set_operation_latency.unsigned_add_16  
                                          NA  
             set_parameter.PATTERN_SHARE_SUB  
                                          NA  
                  set_parameter.CLOCK_PERIOD  
                                          NA  
    set_resource_constraint.altfp_subtract_8  
                                          NA  
            set_parameter.NO_LOOP_PIPELINING  
                                          NA  
       set_operation_latency.altfp_divide_64  
                                          NA  
               set_parameter.INCREMENTAL_SDC  
                                          NA  
       set_operation_latency.signed_divide_8  
                                          NA  
    set_resource_constraint.altfp_multiply_8  
                                          NA  
set_resource_constraint.unsigned_multiply_16  
                                          NA  
     set_operation_latency.signed_modulus_64  
                                          NA  
  set_operation_latency.unsigned_multiply_64  
                                          NA  
set_resource_constraint.unsigned_multiply_64  
                                          NA  
         set_operation_latency.signed_add_32  
                                          NA  
           set_parameter.DISABLE_REG_SHARING  
                                          NA  
    set_operation_latency.unsigned_divide_64  
                                          NA  
  set_resource_constraint.unsigned_modulus_8  
                                          NA  
                      set_combine_basicblock  
                                          NA  
        set_parameter.ENABLE_PATTERN_SHARING  
                                          NA  
     set_parameter.PIPELINE_RESOURCE_SHARING  
                                          NA  
                  set_parameter.MULTIPUMPING  
                                          NA  
       set_resource_constraint.signed_add_32  
                                          NA  
          set_operation_latency.altfp_add_32  
                                          NA  
     set_resource_constraint.altfp_divide_64  
                                          NA  
      set_operation_latency.signed_modulus_8  
                                          NA  
                  set_parameter.PIPELINE_ALL  
                                          NA  
        set_resource_constraint.altfp_add_32  
                                          NA  
                  set_parameter.PS_MIN_WIDTH  
                                          NA  
      set_operation_latency.altfp_subtract_8  
                                          NA  
     set_operation_latency.signed_multiply_8  
                                          NA  
       set_operation_latency.altfp_extend_64  
                                          NA  
   set_operation_latency.local_mem_dual_port  
                                          NA  
     set_operation_latency.altfp_subtract_64  
                                          NA  
    set_resource_constraint.signed_divide_32  
                                          NA  
  set_resource_constraint.signed_multiply_32  
                                          NA  
      set_operation_latency.signed_divide_16  
                                          NA  
    set_operation_latency.signed_multiply_64  
                                          NA  
          set_parameter.PATTERN_SHARE_BITOPS  
                                          NA  
        set_resource_constraint.signed_add_8  
                                          NA  
                  set_parameter.SDC_PRIORITY  
                                          NA  
   set_resource_constraint.altfp_multiply_32  
                                          NA  
     set_resource_constraint.altfp_divide_16  
                                          NA  
   set_resource_constraint.signed_modulus_16  
                                          NA  
         set_operation_latency.signed_add_64  
                                          NA  
 set_resource_constraint.unsigned_modulus_32  
                                          NA  
      set_operation_latency.altfp_multiply_8  
                                          NA  
   set_resource_constraint.signed_modulus_64  
                                          NA  
         set_operation_latency.signed_comp_o  
                                          NA  
                   set_parameter.PS_MAX_SIZE  
                                          NA  
         set_operation_latency.signed_comp_u  
                                          NA  
             set_parameter.DUAL_PORT_BINDING  
                                          NA  
  set_resource_constraint.unsigned_divide_32  
                                          NA  
     set_operation_latency.altfp_multiply_32  
                                          NA  
          set_operation_latency.altfp_add_16  
                                          NA  
     set_operation_latency.altfp_truncate_32  
                                          NA  
       set_operation_latency.unsigned_add_64  
                                          NA  
         set_operation_latency.signed_add_16  
                                          NA  
         set_parameter.PS_BIT_DIFF_THRESHOLD  
                                          NA  
           set_operation_latency.altfp_add_8  
                                          NA  
       set_operation_latency.altfp_divide_32  
                                          NA  
          set_operation_latency.altfp_sitofp  
                                          NA  
     set_resource_constraint.unsigned_add_64  
                                          NA  
       set_resource_constraint.signed_add_64  
                                          NA  
      set_operation_latency.signed_divide_32  
                                          NA  
              set_parameter.MODULO_SCHEDULER  
                                          NA  
     set_resource_constraint.unsigned_add_16  
                                          NA  
        set_operation_latency.altfp_divide_8  
                                          NA  
            set_parameter.EXPLICIT_LPM_MULTS  
                                          NA  
            set_parameter.MB_MAX_BACK_PASSES  
                                          NA  
     set_operation_latency.signed_modulus_16  
                                          NA  
  set_operation_latency.unsigned_multiply_16  
                                          NA  
        set_operation_latency.altfp_extend_8  
                                          NA  
    set_operation_latency.unsigned_divide_32  
                                          NA  
     set_operation_latency.altfp_subtract_16  
                                          NA  
      set_resource_constraint.unsigned_add_8  
                                          NA  
           set_parameter.PATTERN_SHARE_SHIFT  
                                          NA  
     set_operation_latency.unsigned_divide_8  
                                          NA  
   set_resource_constraint.altfp_multiply_16  
                                          NA  
     set_resource_constraint.altfp_divide_32  
                                          NA  
   set_resource_constraint.unsigned_divide_8  
                                          NA  
     set_operation_latency.altfp_truncate_64  
                                          NA  
   set_operation_latency.unsigned_modulus_32  
                                          NA  
        set_operation_latency.unsigned_add_8  
                                          NA  
       set_operation_latency.altfp_extend_16  
                                          NA  
      set_resource_constraint.altfp_divide_8  
                                          NA  
   set_resource_constraint.altfp_subtract_32  
                                          NA  
    set_resource_constraint.signed_modulus_8  
                                          NA  
    set_resource_constraint.signed_divide_64  
                                          NA  
set_resource_constraint.shared_mem_dual_port  
                                          NA
#+end_example

Damn, we need to get rid of "useless" parameters. Let's go dirty!

#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R :results output :session *R* :exports both
data_bak = data
#+end_src

#+RESULTS:

#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R :results output :session *R* :exports both
fixed_param = c()
for(i in names(data)) {
    if(dim(unique(data[i]))[1]==1) { fixed_param = c(fixed_param,i) }
}
fixed_param;
for(i in names(data)) {
    data = data[!is.na(data[,i]),]
    data = data[!is.infinite(data[,i]),]
#    data[,i]=as.numeric(data[,i])
}
data = data[!names(data) %in% (c(fixed_param,hw_metrics[hw_metrics!="FMax"]))]
dim(data)
#+end_src

#+RESULTS:
: [1] "LUs"
: [1] 317 142

#+begin_src R :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
summary(lm(data=data, FMax ~ .))
#+end_src

#+RESULTS:
#+begin_example

Call:
lm(formula = FMax ~ ., data = data)

Residuals:
       Min         1Q     Median         3Q        Max 
-3.963e-13 -7.930e-15  0.000e+00  5.570e-15  1.260e-12 

Coefficients: (57 not defined because of singularities)
                                               Estimate Std. Error    t value
(Intercept)                                   1.581e+00  2.729e-12  5.793e+11
X                                            -9.689e-16  3.156e-16 -3.070e+00
set_operation_latency.altfp_divide_16        -3.087e-01  7.230e-15 -4.269e+13
set_resource_constraint.signed_divide_16     -1.202e+00  1.366e-13 -8.801e+12
set_operation_latency.mem_dual_port           1.964e+00  3.386e-13  5.800e+12
set_operation_latency.altfp_truncate_16      -3.941e+00  4.183e-13 -9.422e+12
set_resource_constraint.altfp_multiply_64    -4.192e+00  1.871e-13 -2.241e+13
set_parameter.NO_ROMS                         3.347e+00  3.166e-13  1.057e+13
set_resource_constraint.signed_multiply_8    -3.607e+00  1.911e-13 -1.887e+13
set_operation_latency.altfp_fptosi            1.555e+00  1.446e-13  1.075e+13
set_resource_constraint.unsigned_modulus_16  -3.621e+00  2.579e-13 -1.404e+13
set_resource_constraint.unsigned_multiply_32  2.731e+00  1.126e-13  2.426e+13
set_resource_constraint.altfp_add_8           1.139e+00  1.447e-13  7.868e+12
set_operation_latency.unsigned_multiply_32    1.589e+00  1.124e-13  1.414e+13
set_resource_constraint.unsigned_add_32       5.163e+00  2.250e-13  2.294e+13
set_operation_latency.unsigned_divide_16      3.895e-01  6.612e-14  5.890e+12
set_resource_constraint.signed_multiply_16   -9.574e-01  1.920e-13 -4.987e+12
set_operation_latency.signed_modulus_32      -1.024e+00  1.608e-13 -6.365e+12
set_operation_latency.signed_multiply_32      4.624e+00  2.302e-13  2.009e+13
set_operation_latency.altfp_add_64           -2.901e-01  1.859e-14 -1.560e+13
set_operation_latency.altfp_subtract_32       7.665e-01  2.858e-14  2.682e+13
set_parameter.PS_MIN_SIZE                    -8.925e-01  3.009e-14 -2.966e+13
set_resource_constraint.altfp_add_64          1.079e+00  6.164e-14  1.750e+13
set_operation_latency.altfp_multiply_64       9.609e-01  7.588e-14  1.266e+13
set_operation_latency.unsigned_multiply_8     1.576e+00  5.901e-14  2.671e+13
set_operation_latency.unsigned_add_32         6.328e-01  8.368e-14  7.562e+12
set_operation_latency.altfp_truncate_8       -5.091e-01  8.641e-14 -5.892e+12
set_resource_constraint.signed_multiply_64    2.921e+00  1.041e-13  2.805e+13
set_operation_latency.signed_divide_64        1.680e+00  1.898e-13  8.852e+12
set_resource_constraint.altfp_subtract_16     1.062e+00  1.029e-13  1.032e+13
set_parameter.MB_MINIMIZE_HW                 -8.907e+00  2.462e-13 -3.617e+13
set_parameter.PATTERN_SHARE_ADD               1.436e-14  1.734e-14  8.280e-01
set_resource_constraint.signed_add_16         3.049e+00  3.845e-13  7.932e+12
set_parameter.MULTIPLIER_NO_CHAIN            -1.438e+00  3.435e-13 -4.185e+12
set_resource_constraint.unsigned_multiply_8  -4.986e-01  3.056e-14 -1.632e+13
set_operation_latency.reg                    -2.187e+00  1.998e-13 -1.095e+13
set_operation_latency.unsigned_modulus_64     3.020e+00  1.467e-13  2.059e+13
set_resource_constraint.unsigned_divide_16   -1.317e-01  1.146e-13 -1.149e+12
set_resource_constraint.unsigned_divide_64    1.421e+00  9.922e-14  1.432e+13
set_resource_constraint.signed_divide_8       4.760e+00  3.682e-13  1.293e+13
set_operation_latency.altfp_extend_32         1.896e-01  9.549e-14  1.986e+12
set_resource_constraint.altfp_add_16          3.600e+00  2.127e-13  1.693e+13
set_resource_constraint.signed_modulus_32     4.788e-02  1.395e-13  3.432e+11
set_parameter.DONT_CHAIN_GET_ELEM_PTR         4.045e-01  1.077e-13  3.756e+12
set_resource_constraint.unsigned_modulus_64  -3.451e+00  1.106e-13 -3.119e+13
set_operation_latency.unsigned_modulus_8      5.268e+00  2.087e-13  2.525e+13
set_resource_constraint.mem_dual_port        -7.728e+00  4.528e-13 -1.707e+13
set_parameter.SDC_MULTIPUMP                   9.133e+00  5.994e-13  1.524e+13
set_operation_latency.signed_multiply_16     -4.332e+00  1.514e-13 -2.861e+13
set_operation_latency.altfp_multiply_16       6.019e-01  4.157e-14  1.448e+13
set_operation_latency.unsigned_modulus_16     2.620e-01  9.755e-14  2.686e+12
set_resource_constraint.altfp_subtract_64    -1.872e-01  1.431e-13 -1.308e+12
set_operation_latency.signed_add_8           -1.996e+00  7.013e-14 -2.846e+13
set_operation_latency.unsigned_add_16         1.579e+00  2.192e-13  7.206e+12
set_parameter.PATTERN_SHARE_SUB              -6.206e-15  1.613e-14 -3.850e-01
set_parameter.CLOCK_PERIOD                    8.830e-02  1.979e-14  4.461e+12
set_resource_constraint.altfp_subtract_8      4.483e+00  1.675e-13  2.676e+13
set_parameter.NO_LOOP_PIPELINING              3.606e+00  2.862e-13  1.260e+13
set_operation_latency.altfp_divide_64        -5.857e-02  4.056e-15 -1.444e+13
set_parameter.INCREMENTAL_SDC                -1.171e+01  7.271e-13 -1.611e+13
set_operation_latency.signed_divide_8        -8.171e+00  2.727e-13 -2.996e+13
set_resource_constraint.altfp_multiply_8      2.154e+00  2.474e-13  8.706e+12
set_resource_constraint.unsigned_multiply_16  1.640e+00  1.904e-13  8.614e+12
set_operation_latency.signed_modulus_64      -1.904e+00  1.261e-13 -1.509e+13
set_operation_latency.unsigned_multiply_64    1.710e+00  1.295e-13  1.320e+13
set_resource_constraint.unsigned_multiply_64 -2.886e+00  1.000e-13 -2.886e+13
set_operation_latency.signed_add_32          -7.264e-01  8.704e-14 -8.346e+12
set_parameter.DISABLE_REG_SHARING             2.740e+00  1.436e-13  1.908e+13
set_operation_latency.unsigned_divide_64      5.914e+00  2.269e-13  2.607e+13
set_resource_constraint.unsigned_modulus_8   -2.024e+00  2.198e-13 -9.208e+12
set_combine_basicblock                        2.966e+00  3.145e-13  9.430e+12
set_parameter.ENABLE_PATTERN_SHARING         -1.907e+00  3.565e-13 -5.348e+12
set_parameter.PIPELINE_RESOURCE_SHARING      -4.787e-14  1.559e-14 -3.071e+00
set_parameter.MULTIPUMPING                    1.365e+00  6.111e-13  2.234e+12
set_resource_constraint.signed_add_32        -2.808e+00  1.308e-13 -2.148e+13
set_operation_latency.altfp_add_32           -2.171e-01  6.039e-14 -3.595e+12
set_resource_constraint.altfp_divide_64       2.453e+00  3.338e-13  7.350e+12
set_operation_latency.signed_modulus_8       -9.201e-01  1.639e-13 -5.612e+12
set_parameter.PIPELINE_ALL                    7.456e+00  3.900e-13  1.912e+13
set_resource_constraint.altfp_add_32         -1.890e+00  2.377e-13 -7.952e+12
set_parameter.PS_MIN_WIDTH                   -4.041e-01  3.927e-14 -1.029e+13
set_operation_latency.altfp_subtract_8               NA         NA         NA
set_operation_latency.signed_multiply_8              NA         NA         NA
set_operation_latency.altfp_extend_64                NA         NA         NA
set_operation_latency.local_mem_dual_port            NA         NA         NA
set_operation_latency.altfp_subtract_64              NA         NA         NA
set_resource_constraint.signed_divide_32             NA         NA         NA
set_resource_constraint.signed_multiply_32           NA         NA         NA
set_operation_latency.signed_divide_16               NA         NA         NA
set_operation_latency.signed_multiply_64             NA         NA         NA
set_parameter.PATTERN_SHARE_BITOPS            6.478e-14  2.484e-14  2.608e+00
set_resource_constraint.signed_add_8                 NA         NA         NA
set_parameter.SDC_PRIORITY                   -7.256e-14  2.391e-14 -3.034e+00
set_resource_constraint.altfp_multiply_32            NA         NA         NA
set_resource_constraint.altfp_divide_16              NA         NA         NA
set_resource_constraint.signed_modulus_16            NA         NA         NA
set_operation_latency.signed_add_64                  NA         NA         NA
set_resource_constraint.unsigned_modulus_32          NA         NA         NA
set_operation_latency.altfp_multiply_8               NA         NA         NA
set_resource_constraint.signed_modulus_64            NA         NA         NA
set_operation_latency.signed_comp_o                  NA         NA         NA
set_parameter.PS_MAX_SIZE                            NA         NA         NA
set_operation_latency.signed_comp_u                  NA         NA         NA
set_parameter.DUAL_PORT_BINDING               1.558e-14  2.269e-14  6.870e-01
set_resource_constraint.unsigned_divide_32           NA         NA         NA
set_operation_latency.altfp_multiply_32              NA         NA         NA
set_operation_latency.altfp_add_16                   NA         NA         NA
set_operation_latency.altfp_truncate_32              NA         NA         NA
set_operation_latency.unsigned_add_64                NA         NA         NA
set_operation_latency.signed_add_16                  NA         NA         NA
set_parameter.PS_BIT_DIFF_THRESHOLD                  NA         NA         NA
set_operation_latency.altfp_add_8                    NA         NA         NA
set_operation_latency.altfp_divide_32                NA         NA         NA
set_operation_latency.altfp_sitofp                   NA         NA         NA
set_resource_constraint.unsigned_add_64              NA         NA         NA
set_resource_constraint.signed_add_64                NA         NA         NA
set_operation_latency.signed_divide_32               NA         NA         NA
set_parameter.MODULO_SCHEDULER                       NA         NA         NA
set_resource_constraint.unsigned_add_16              NA         NA         NA
set_operation_latency.altfp_divide_8                 NA         NA         NA
set_parameter.EXPLICIT_LPM_MULTS                     NA         NA         NA
set_parameter.MB_MAX_BACK_PASSES                     NA         NA         NA
set_operation_latency.signed_modulus_16              NA         NA         NA
set_operation_latency.unsigned_multiply_16           NA         NA         NA
set_operation_latency.altfp_extend_8                 NA         NA         NA
set_operation_latency.unsigned_divide_32             NA         NA         NA
set_operation_latency.altfp_subtract_16              NA         NA         NA
set_resource_constraint.unsigned_add_8               NA         NA         NA
set_parameter.PATTERN_SHARE_SHIFT             2.626e-14  1.810e-14  1.450e+00
set_operation_latency.unsigned_divide_8              NA         NA         NA
set_resource_constraint.altfp_multiply_16            NA         NA         NA
set_resource_constraint.altfp_divide_32              NA         NA         NA
set_resource_constraint.unsigned_divide_8            NA         NA         NA
set_operation_latency.altfp_truncate_64              NA         NA         NA
set_operation_latency.unsigned_modulus_32            NA         NA         NA
set_operation_latency.unsigned_add_8                 NA         NA         NA
set_operation_latency.altfp_extend_16                NA         NA         NA
set_resource_constraint.altfp_divide_8               NA         NA         NA
set_resource_constraint.altfp_subtract_32            NA         NA         NA
set_resource_constraint.signed_modulus_8             NA         NA         NA
set_resource_constraint.signed_divide_64             NA         NA         NA
set_resource_constraint.shared_mem_dual_port         NA         NA         NA
                                             Pr(>|t|)    
(Intercept)                                   < 2e-16 ***
X                                             0.00240 ** 
set_operation_latency.altfp_divide_16         < 2e-16 ***
set_resource_constraint.signed_divide_16      < 2e-16 ***
set_operation_latency.mem_dual_port           < 2e-16 ***
set_operation_latency.altfp_truncate_16       < 2e-16 ***
set_resource_constraint.altfp_multiply_64     < 2e-16 ***
set_parameter.NO_ROMS                         < 2e-16 ***
set_resource_constraint.signed_multiply_8     < 2e-16 ***
set_operation_latency.altfp_fptosi            < 2e-16 ***
set_resource_constraint.unsigned_modulus_16   < 2e-16 ***
set_resource_constraint.unsigned_multiply_32  < 2e-16 ***
set_resource_constraint.altfp_add_8           < 2e-16 ***
set_operation_latency.unsigned_multiply_32    < 2e-16 ***
set_resource_constraint.unsigned_add_32       < 2e-16 ***
set_operation_latency.unsigned_divide_16      < 2e-16 ***
set_resource_constraint.signed_multiply_16    < 2e-16 ***
set_operation_latency.signed_modulus_32       < 2e-16 ***
set_operation_latency.signed_multiply_32      < 2e-16 ***
set_operation_latency.altfp_add_64            < 2e-16 ***
set_operation_latency.altfp_subtract_32       < 2e-16 ***
set_parameter.PS_MIN_SIZE                     < 2e-16 ***
set_resource_constraint.altfp_add_64          < 2e-16 ***
set_operation_latency.altfp_multiply_64       < 2e-16 ***
set_operation_latency.unsigned_multiply_8     < 2e-16 ***
set_operation_latency.unsigned_add_32         < 2e-16 ***
set_operation_latency.altfp_truncate_8        < 2e-16 ***
set_resource_constraint.signed_multiply_64    < 2e-16 ***
set_operation_latency.signed_divide_64        < 2e-16 ***
set_resource_constraint.altfp_subtract_16     < 2e-16 ***
set_parameter.MB_MINIMIZE_HW                  < 2e-16 ***
set_parameter.PATTERN_SHARE_ADD               0.40852    
set_resource_constraint.signed_add_16         < 2e-16 ***
set_parameter.MULTIPLIER_NO_CHAIN             < 2e-16 ***
set_resource_constraint.unsigned_multiply_8   < 2e-16 ***
set_operation_latency.reg                     < 2e-16 ***
set_operation_latency.unsigned_modulus_64     < 2e-16 ***
set_resource_constraint.unsigned_divide_16    < 2e-16 ***
set_resource_constraint.unsigned_divide_64    < 2e-16 ***
set_resource_constraint.signed_divide_8       < 2e-16 ***
set_operation_latency.altfp_extend_32         < 2e-16 ***
set_resource_constraint.altfp_add_16          < 2e-16 ***
set_resource_constraint.signed_modulus_32     < 2e-16 ***
set_parameter.DONT_CHAIN_GET_ELEM_PTR         < 2e-16 ***
set_resource_constraint.unsigned_modulus_64   < 2e-16 ***
set_operation_latency.unsigned_modulus_8      < 2e-16 ***
set_resource_constraint.mem_dual_port         < 2e-16 ***
set_parameter.SDC_MULTIPUMP                   < 2e-16 ***
set_operation_latency.signed_multiply_16      < 2e-16 ***
set_operation_latency.altfp_multiply_16       < 2e-16 ***
set_operation_latency.unsigned_modulus_16     < 2e-16 ***
set_resource_constraint.altfp_subtract_64     < 2e-16 ***
set_operation_latency.signed_add_8            < 2e-16 ***
set_operation_latency.unsigned_add_16         < 2e-16 ***
set_parameter.PATTERN_SHARE_SUB               0.70076    
set_parameter.CLOCK_PERIOD                    < 2e-16 ***
set_resource_constraint.altfp_subtract_8      < 2e-16 ***
set_parameter.NO_LOOP_PIPELINING              < 2e-16 ***
set_operation_latency.altfp_divide_64         < 2e-16 ***
set_parameter.INCREMENTAL_SDC                 < 2e-16 ***
set_operation_latency.signed_divide_8         < 2e-16 ***
set_resource_constraint.altfp_multiply_8      < 2e-16 ***
set_resource_constraint.unsigned_multiply_16  < 2e-16 ***
set_operation_latency.signed_modulus_64       < 2e-16 ***
set_operation_latency.unsigned_multiply_64    < 2e-16 ***
set_resource_constraint.unsigned_multiply_64  < 2e-16 ***
set_operation_latency.signed_add_32           < 2e-16 ***
set_parameter.DISABLE_REG_SHARING             < 2e-16 ***
set_operation_latency.unsigned_divide_64      < 2e-16 ***
set_resource_constraint.unsigned_modulus_8    < 2e-16 ***
set_combine_basicblock                        < 2e-16 ***
set_parameter.ENABLE_PATTERN_SHARING          < 2e-16 ***
set_parameter.PIPELINE_RESOURCE_SHARING       0.00239 ** 
set_parameter.MULTIPUMPING                    < 2e-16 ***
set_resource_constraint.signed_add_32         < 2e-16 ***
set_operation_latency.altfp_add_32            < 2e-16 ***
set_resource_constraint.altfp_divide_64       < 2e-16 ***
set_operation_latency.signed_modulus_8        < 2e-16 ***
set_parameter.PIPELINE_ALL                    < 2e-16 ***
set_resource_constraint.altfp_add_32          < 2e-16 ***
set_parameter.PS_MIN_WIDTH                    < 2e-16 ***
set_operation_latency.altfp_subtract_8             NA    
set_operation_latency.signed_multiply_8            NA    
set_operation_latency.altfp_extend_64              NA    
set_operation_latency.local_mem_dual_port          NA    
set_operation_latency.altfp_subtract_64            NA    
set_resource_constraint.signed_divide_32           NA    
set_resource_constraint.signed_multiply_32         NA    
set_operation_latency.signed_divide_16             NA    
set_operation_latency.signed_multiply_64           NA    
set_parameter.PATTERN_SHARE_BITOPS            0.00969 ** 
set_resource_constraint.signed_add_8               NA    
set_parameter.SDC_PRIORITY                    0.00269 ** 
set_resource_constraint.altfp_multiply_32          NA    
set_resource_constraint.altfp_divide_16            NA    
set_resource_constraint.signed_modulus_16          NA    
set_operation_latency.signed_add_64                NA    
set_resource_constraint.unsigned_modulus_32        NA    
set_operation_latency.altfp_multiply_8             NA    
set_resource_constraint.signed_modulus_64          NA    
set_operation_latency.signed_comp_o                NA    
set_parameter.PS_MAX_SIZE                          NA    
set_operation_latency.signed_comp_u                NA    
set_parameter.DUAL_PORT_BINDING               0.49292    
set_resource_constraint.unsigned_divide_32         NA    
set_operation_latency.altfp_multiply_32            NA    
set_operation_latency.altfp_add_16                 NA    
set_operation_latency.altfp_truncate_32            NA    
set_operation_latency.unsigned_add_64              NA    
set_operation_latency.signed_add_16                NA    
set_parameter.PS_BIT_DIFF_THRESHOLD                NA    
set_operation_latency.altfp_add_8                  NA    
set_operation_latency.altfp_divide_32              NA    
set_operation_latency.altfp_sitofp                 NA    
set_resource_constraint.unsigned_add_64            NA    
set_resource_constraint.signed_add_64              NA    
set_operation_latency.signed_divide_32             NA    
set_parameter.MODULO_SCHEDULER                     NA    
set_resource_constraint.unsigned_add_16            NA    
set_operation_latency.altfp_divide_8               NA    
set_parameter.EXPLICIT_LPM_MULTS                   NA    
set_parameter.MB_MAX_BACK_PASSES                   NA    
set_operation_latency.signed_modulus_16            NA    
set_operation_latency.unsigned_multiply_16         NA    
set_operation_latency.altfp_extend_8               NA    
set_operation_latency.unsigned_divide_32           NA    
set_operation_latency.altfp_subtract_16            NA    
set_resource_constraint.unsigned_add_8             NA    
set_parameter.PATTERN_SHARE_SHIFT             0.14832    
set_operation_latency.unsigned_divide_8            NA    
set_resource_constraint.altfp_multiply_16          NA    
set_resource_constraint.altfp_divide_32            NA    
set_resource_constraint.unsigned_divide_8          NA    
set_operation_latency.altfp_truncate_64            NA    
set_operation_latency.unsigned_modulus_32          NA    
set_operation_latency.unsigned_add_8               NA    
set_operation_latency.altfp_extend_16              NA    
set_resource_constraint.altfp_divide_8             NA    
set_resource_constraint.altfp_subtract_32          NA    
set_resource_constraint.signed_modulus_8           NA    
set_resource_constraint.signed_divide_64           NA    
set_resource_constraint.shared_mem_dual_port       NA    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 9.384e-14 on 232 degrees of freedom
Multiple R-squared:      1,	Adjusted R-squared:      1 
F-statistic: 7.084e+28 on 84 and 232 DF,  p-value: < 2.2e-16
#+end_example

Hmmm, pretty hard to interpret.

Let's look at something more specific for a change!

#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R :results output :session *R* :exports both
data=data_bak
summary(lm(data=data,Regs~ set_operation_latency.signed_multiply_64))
#+end_src

#+RESULTS:
#+begin_example

Call:
lm(formula = Regs ~ set_operation_latency.signed_multiply_64, 
    data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-1381.48  -411.48    61.52   135.52  2730.82 

Coefficients:
                                         Estimate Std. Error t value Pr(>|t|)
(Intercept)                               3382.18      50.62   66.82   <2e-16
set_operation_latency.signed_multiply_64   431.30      21.40   20.16   <2e-16
                                            
(Intercept)                              ***
set_operation_latency.signed_multiply_64 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 694.4 on 315 degrees of freedom
Multiple R-squared:  0.5633,	Adjusted R-squared:  0.5619 
F-statistic: 406.3 on 1 and 315 DF,  p-value: < 2.2e-16
#+end_example

#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 400 :session *R* 
library(ggplot2)
ggplot(data=data, aes(y=Regs, x=set_operation_latency.signed_multiply_64, color=set_operation_latency.signed_add_64)) +
    geom_jitter(aes(x=as.factor(set_operation_latency.signed_multiply_64))) +
    geom_smooth(aes(x=as.numeric(set_operation_latency.signed_multiply_64)), method="lm", formula=y~x+I(1/(x+1))) +
    theme_bw()

#+end_src

#+RESULTS:
[[file:/tmp/babel-4788SYS/figure4788e2U.png]]

#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 400 :session *R* 
ggplot(data=data, aes(y=Regs, x=set_operation_latency.signed_add_64, color=set_operation_latency.signed_multiply_64)) +
    geom_jitter(aes(x=as.factor(set_operation_latency.signed_add_64))) +
    geom_smooth(aes(x=as.numeric(set_operation_latency.signed_add_64)), method="lm", formula=y~x) +
    theme_bw()
#+end_src

#+RESULTS:
[[file:/tmp/babel-4788SYS/figure4788rAb.png]]

#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/generate_plots.r
#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 400 :session *R* 
ggplot(data=data[data$set_operation_latency.signed_multiply_64 ==1,], aes(y=Regs, x=set_operation_latency.signed_add_64)) +
    geom_jitter(aes(x=as.factor(set_operation_latency.signed_add_64))) +
    geom_smooth(aes(x=as.numeric(set_operation_latency.signed_add_64)), method="lm", formula=y~x) +
    theme_bw() 
#+end_src

#+RESULTS:
[[file:/tmp/babel-4788SYS/figure47884Kh.png]]

In the end, it's very hard to know what's good, why such or such
parameter was used, etc.

- We discussed about the difficulties in multi-dimension setups:
  https://blog.acolyer.org/2017/10/31/same-stats-different-graphs-generating-datasets-with-varied-appearance-and-identical-statistics-through-simulated-annealing/
- The analysis (lm or aov) is really hard when mixing factors and
  continuous variables.
- It's possible to sort parameters by importance (for aov) but I'm not
  sure how to do this in a systematic way in such a high dimension.
*** [2017-12-12 Tue]
- Cleaning up older entries
- Now using git submodules for code
- Now tangling code blocks into scripts
**** More Attempts at Correlations        :R:Code:FPGA:Autotuning:DataVis:
***** Setup
Make sure you have the data:

#+CALL: update_legup_tuner()

Import dependencies, set the graphics output, and define paths:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :var repository_dir=repository_dir
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/more_correlations.r
#+begin_src R

library(dplyr)
library(GGally)

setEPS()

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

plot_dir <- c(repository_dir,
              "/legup-tuner/",
              "post_place_and_route/py/results/r_scripts/",
              "correlations")

experiments <- c("balanced", "area", "perf", "perflat")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

hardware_metrics <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs",
                      "Blocks", "RAM", "DPS")

dir.create(paste(plot_dir, collapse = ""), showWarnings = FALSE)

#+end_src

#+RESULTS:

***** Pearson, Spearman and Kendall Correlations
The =sorted_correlations= function filters correlation matrices, getting
only rows with one of the hardware metrics. Then, it sorts rows by
correlation.

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/more_correlations.r
#+begin_src R
#
# Function adapted from:
#
#   https://little-book-of-r-for-multivariate-analysis.readthedocs.io/en/latest/src/multivariateanalysis.html#calculating-correlations-for-multivariate-data
#
sorted_correlations <- function(data, datapoints) {
    names(data) <- c("First.Variable", "Second.Variable","Correlation")

    #
    # Restricting comparisons to correlations that contain a hardware metric
    #
    data <- dplyr::filter(data, grepl(paste(hardware_metrics,
                                            collapse = "|"),
                                      data$Second.Variable))

    head(data[order(abs(data$Correlation), decreasing = T), ],
         n = datapoints)
}

#+end_src

#+RESULTS:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/more_correlations.r
#+begin_src R
load_data <- function(application, experiments) {
    data       <- data.frame()

    for (experiment in experiments) {
        new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                                   experiment, paste(application,
                                                     ".csv",
                                                     sep = ""),
                                   sep = "/"),
                             header = TRUE, sep = ",")

        new_data <- as.data.frame(new_data)
        new_data <- new_data[is.finite(new_data$WNS),]

        if (ncol(data) == 0) {
            data <- new_data
        } else {
            data <- rbind(data, new_data)
        }
    }

    data  <- as.data.frame(sapply(data, as.numeric))
    return(data)
}

plot_correlations <- function(application, experiments, cor_method,
                              plot_columns) {
    data <- load_data(application, experiments)

    cormatrix <- cor(data, method = cor_method)
    diag(cormatrix) <- 0
    cormatrix[lower.tri(cormatrix)] <- 0
    cormatrix <- as.data.frame(as.table(cormatrix))

    correlation <- sorted_correlations(cormatrix, 120)

    print(paste("Generating 120 strongest correlations for '", application,
                "'...", sep = ""))

    write.csv(correlation, file = paste(paste(plot_dir, collapse = ""),
                                        paste(cor_method, "_", application,
                                              ".csv", sep = ""), sep = "/"))

    print(paste(paste("CSV generated at ", 
                      paste(plot_dir, collapse = ""),
                      sep = ""), paste(cor_method, "_", application,
                                       ".csv", sep = ""),
                sep = "/"))

    short_correlation <- correlation[1:plot_columns, ]

    print(paste("Generating scatter plots of the ",
                plot_columns, " strongest correlations for '",
                application, "'...", sep = ""))

    postscript(paste(paste(plot_dir, collapse = ""), paste(cor_method,
                                                           "_",
                                                           application,
                                                           ".eps",
                                                           sep = ""),
                     sep = "/"),
               width = 20, height = 20)
    
    columns <- unique(c(as.vector(short_correlation$First.Variable),
                        as.vector(short_correlation$Second.Variable)))

    ggpairs_plot <- ggpairs(data, columns = columns)
    
    print(ggpairs_plot)

    print(paste(paste("Plot generated at ",
                      paste(plot_dir, collapse = ""),
                      sep = ""), paste(cor_method, "_", application,
                                       ".eps", sep = ""),
                sep = "/"))

    dev.off()
    
    return(short_correlation)
}

#+end_src

#+RESULTS:

Now we can run =plot_correlations= and generate the files.  We will
order the correlation matrices using 3 correlation coefficients:

1. [[https://en.wikipedia.org/wiki/Pearson_correlation_coefficient][Pearson's]]
   
   Default =R= method. Checks for linear relationships.

2. [[https://en.wikipedia.org/wiki/Spearman%2527s_rank_correlation_coefficient][Spearman's]]

   Check for monotonic relationships.

3. [[https://en.wikipedia.org/wiki/Kendall_rank_correlation_coefficient][Kendall's]]

   Works for factors? Need to understand better.

To plot the 10 largest correlations, run:

#+HEADER: :results output :session *R* :exports both
#+begin_src R
cor_pearson <- plot_correlations("dfdiv", experiments, "pearson", 10)
cor_spearman <- plot_correlations("dfdiv", experiments, "spearman", 10)
cor_kendall <- plot_correlations("dfdiv", experiments, "kendall", 10)

#+end_src

#+RESULTS:
#+begin_example
[1] "Generating 120 strongest correlations for 'dfdiv'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/pearson_dfdiv.csv"
[1] "Generating scatter plots of the 10 strongest correlations for 'dfdiv'..."
 plot: [1,1] [--------------------------------------------------]  1% est: 0s  plot: [1,2] [=-------------------------------------------------]  1% est: 6s  plot: [1,3] [=-------------------------------------------------]  2% est: 8s  plot: [1,4] [=-------------------------------------------------]  2% est: 9s  plot: [1,5] [=-------------------------------------------------]  3% est:10s  plot: [1,6] [==------------------------------------------------]  3% est:10s  plot: [1,7] [==------------------------------------------------]  4% est:10s  plot: [1,8] [==------------------------------------------------]  4% est:10s  plot: [1,9] [==------------------------------------------------]  5% est:10s  plot: [1,10] [==-----------------------------------------------]  5% est:10s  plot: [1,11] [===----------------------------------------------]  6% est:11s  plot: [1,12] [===----------------------------------------------]  6% est:11s  plot: [1,13] [===----------------------------------------------]  7% est:11s  plot: [1,14] [====---------------------------------------------]  7% est:11s  plot: [2,1] [====----------------------------------------------]  8% est:12s  plot: [2,2] [====----------------------------------------------]  8% est:11s  plot: [2,3] [====----------------------------------------------]  9% est:11s  plot: [2,4] [=====---------------------------------------------]  9% est:11s  plot: [2,5] [=====---------------------------------------------] 10% est:11s  plot: [2,6] [=====---------------------------------------------] 10% est:11s  plot: [2,7] [=====---------------------------------------------] 11% est:11s  plot: [2,8] [======--------------------------------------------] 11% est:11s  plot: [2,9] [======--------------------------------------------] 12% est:10s  plot: [2,10] [======-------------------------------------------] 12% est:10s  plot: [2,11] [======-------------------------------------------] 13% est:10s  plot: [2,12] [======-------------------------------------------] 13% est:10s  plot: [2,13] [=======------------------------------------------] 14% est:10s  plot: [2,14] [=======------------------------------------------] 14% est:10s  plot: [3,1] [=======-------------------------------------------] 15% est:10s  plot: [3,2] [========------------------------------------------] 15% est:10s  plot: [3,3] [========------------------------------------------] 16% est:10s  plot: [3,4] [========------------------------------------------] 16% est:10s  plot: [3,5] [========------------------------------------------] 17% est:10s  plot: [3,6] [=========-----------------------------------------] 17% est: 9s  plot: [3,7] [=========-----------------------------------------] 18% est: 9s  plot: [3,8] [=========-----------------------------------------] 18% est: 9s  plot: [3,9] [=========-----------------------------------------] 19% est: 9s  plot: [3,10] [==========---------------------------------------] 19% est: 9s  plot: [3,11] [==========---------------------------------------] 20% est: 9s  plot: [3,12] [==========---------------------------------------] 20% est: 9s  plot: [3,13] [==========---------------------------------------] 21% est: 9s  plot: [3,14] [==========---------------------------------------] 21% est: 9s  plot: [4,1] [===========---------------------------------------] 22% est: 9s  plot: [4,2] [===========---------------------------------------] 22% est: 9s  plot: [4,3] [===========---------------------------------------] 23% est: 9s  plot: [4,4] [============--------------------------------------] 23% est: 9s  plot: [4,5] [============--------------------------------------] 24% est: 9s  plot: [4,6] [============--------------------------------------] 24% est: 9s  plot: [4,7] [============--------------------------------------] 25% est: 8s  plot: [4,8] [=============-------------------------------------] 26% est: 8s  plot: [4,9] [=============-------------------------------------] 26% est: 8s  plot: [4,10] [=============------------------------------------] 27% est: 8s  plot: [4,11] [=============------------------------------------] 27% est: 8s  plot: [4,12] [=============------------------------------------] 28% est: 8s  plot: [4,13] [==============-----------------------------------] 28% est: 8s  plot: [4,14] [==============-----------------------------------] 29% est: 8s  plot: [5,1] [===============-----------------------------------] 29% est: 8s  plot: [5,2] [===============-----------------------------------] 30% est: 8s  plot: [5,3] [===============-----------------------------------] 30% est: 8s  plot: [5,4] [===============-----------------------------------] 31% est: 8s  plot: [5,5] [================----------------------------------] 31% est: 8s  plot: [5,6] [================----------------------------------] 32% est: 8s  plot: [5,7] [================----------------------------------] 32% est: 8s  plot: [5,8] [================----------------------------------] 33% est: 8s  plot: [5,9] [=================---------------------------------] 33% est: 8s  plot: [5,10] [================---------------------------------] 34% est: 7s  plot: [5,11] [=================--------------------------------] 34% est: 7s  plot: [5,12] [=================--------------------------------] 35% est: 7s  plot: [5,13] [=================--------------------------------] 35% est: 7s  plot: [5,14] [==================-------------------------------] 36% est: 7s  plot: [6,1] [==================--------------------------------] 36% est: 7s  plot: [6,2] [==================--------------------------------] 37% est: 7s  plot: [6,3] [===================-------------------------------] 37% est: 7s  plot: [6,4] [===================-------------------------------] 38% est: 7s  plot: [6,5] [===================-------------------------------] 38% est: 7s  plot: [6,6] [===================-------------------------------] 39% est: 7s  plot: [6,7] [====================------------------------------] 39% est: 7s  plot: [6,8] [====================------------------------------] 40% est: 7s  plot: [6,9] [====================------------------------------] 40% est: 7s  plot: [6,10] [====================-----------------------------] 41% est: 7s  plot: [6,11] [====================-----------------------------] 41% est: 7s  plot: [6,12] [====================-----------------------------] 42% est: 7s  plot: [6,13] [=====================----------------------------] 42% est: 6s  plot: [6,14] [=====================----------------------------] 43% est: 6s  plot: [7,1] [======================----------------------------] 43% est: 6s  plot: [7,2] [======================----------------------------] 44% est: 6s  plot: [7,3] [======================----------------------------] 44% est: 6s  plot: [7,4] [======================----------------------------] 45% est: 6s  plot: [7,5] [=======================---------------------------] 45% est: 6s  plot: [7,6] [=======================---------------------------] 46% est: 6s  plot: [7,7] [=======================---------------------------] 46% est: 6s  plot: [7,8] [=======================---------------------------] 47% est: 6s  plot: [7,9] [========================--------------------------] 47% est: 6s  plot: [7,10] [========================-------------------------] 48% est: 6s  plot: [7,11] [========================-------------------------] 48% est: 6s  plot: [7,12] [========================-------------------------] 49% est: 6s  plot: [7,13] [========================-------------------------] 49% est: 6s  plot: [7,14] [========================-------------------------] 50% est: 6s  plot: [8,1] [=========================-------------------------] 51% est: 6s  plot: [8,2] [==========================------------------------] 51% est: 5s  plot: [8,3] [==========================------------------------] 52% est: 5s  plot: [8,4] [==========================------------------------] 52% est: 5s  plot: [8,5] [==========================------------------------] 53% est: 5s  plot: [8,6] [===========================-----------------------] 53% est: 5s  plot: [8,7] [===========================-----------------------] 54% est: 5s  plot: [8,8] [===========================-----------------------] 54% est: 5s  plot: [8,9] [===========================-----------------------] 55% est: 5s  plot: [8,10] [===========================----------------------] 55% est: 5s  plot: [8,11] [===========================----------------------] 56% est: 5s  plot: [8,12] [===========================----------------------] 56% est: 5s  plot: [8,13] [============================---------------------] 57% est: 5s  plot: [8,14] [============================---------------------] 57% est: 5s  plot: [9,1] [=============================---------------------] 58% est: 5s  plot: [9,2] [=============================---------------------] 58% est: 5s  plot: [9,3] [=============================---------------------] 59% est: 5s  plot: [9,4] [==============================--------------------] 59% est: 5s  plot: [9,5] [==============================--------------------] 60% est: 4s  plot: [9,6] [==============================--------------------] 60% est: 4s  plot: [9,7] [==============================--------------------] 61% est: 4s  plot: [9,8] [===============================-------------------] 61% est: 4s  plot: [9,9] [===============================-------------------] 62% est: 4s  plot: [9,10] [==============================-------------------] 62% est: 4s  plot: [9,11] [===============================------------------] 63% est: 4s  plot: [9,12] [===============================------------------] 63% est: 4s  plot: [9,13] [===============================------------------] 64% est: 4s  plot: [9,14] [================================-----------------] 64% est: 4s  plot: [10,1] [================================-----------------] 65% est: 4s  plot: [10,2] [================================-----------------] 65% est: 4s  plot: [10,3] [================================-----------------] 66% est: 4s  plot: [10,4] [================================-----------------] 66% est: 4s  plot: [10,5] [=================================----------------] 67% est: 4s  plot: [10,6] [=================================----------------] 67% est: 4s  plot: [10,7] [=================================----------------] 68% est: 4s  plot: [10,8] [==================================---------------] 68% est: 3s  plot: [10,9] [==================================---------------] 69% est: 3s  plot: [10,10] [=================================---------------] 69% est: 3s  plot: [10,11] [==================================--------------] 70% est: 3s  plot: [10,12] [==================================--------------] 70% est: 3s  plot: [10,13] [==================================--------------] 71% est: 3s  plot: [10,14] [==================================--------------] 71% est: 3s  plot: [11,1] [===================================--------------] 72% est: 3s  plot: [11,2] [====================================-------------] 72% est: 3s  plot: [11,3] [====================================-------------] 73% est: 3s  plot: [11,4] [====================================-------------] 73% est: 3s  plot: [11,5] [====================================-------------] 74% est: 3s  plot: [11,6] [====================================-------------] 74% est: 3s  plot: [11,7] [=====================================------------] 75% est: 3s  plot: [11,8] [=====================================------------] 76% est: 3s  plot: [11,9] [=====================================------------] 76% est: 3s  plot: [11,10] [=====================================-----------] 77% est: 3s  plot: [11,11] [=====================================-----------] 77% est: 3s  plot: [11,12] [=====================================-----------] 78% est: 3s  plot: [11,13] [=====================================-----------] 78% est: 2s  plot: [11,14] [======================================----------] 79% est: 2s  plot: [12,1] [=======================================----------] 79% est: 2s  plot: [12,2] [=======================================----------] 80% est: 2s  plot: [12,3] [=======================================----------] 80% est: 2s  plot: [12,4] [========================================---------] 81% est: 2s  plot: [12,5] [========================================---------] 81% est: 2s  plot: [12,6] [========================================---------] 82% est: 2s  plot: [12,7] [========================================---------] 82% est: 2s  plot: [12,8] [========================================---------] 83% est: 2s  plot: [12,9] [=========================================--------] 83% est: 2s  plot: [12,10] [========================================--------] 84% est: 2s  plot: [12,11] [========================================--------] 84% est: 2s  plot: [12,12] [=========================================-------] 85% est: 2s  plot: [12,13] [=========================================-------] 85% est: 2s  plot: [12,14] [=========================================-------] 86% est: 2s  plot: [13,1] [==========================================-------] 86% est: 2s  plot: [13,2] [==========================================-------] 87% est: 2s  plot: [13,3] [===========================================------] 87% est: 1s  plot: [13,4] [===========================================------] 88% est: 1s  plot: [13,5] [===========================================------] 88% est: 1s  plot: [13,6] [============================================-----] 89% est: 1s  plot: [13,7] [============================================-----] 89% est: 1s  plot: [13,8] [============================================-----] 90% est: 1s  plot: [13,9] [============================================-----] 90% est: 1s  plot: [13,10] [============================================----] 91% est: 1s  plot: [13,11] [============================================----] 91% est: 1s  plot: [13,12] [============================================----] 92% est: 1s  plot: [13,13] [============================================----] 92% est: 1s  plot: [13,14] [=============================================---] 93% est: 1s  plot: [14,1] [==============================================---] 93% est: 1s  plot: [14,2] [==============================================---] 94% est: 1s  plot: [14,3] [==============================================---] 94% est: 1s  plot: [14,4] [==============================================---] 95% est: 1s  plot: [14,5] [===============================================--] 95% est: 1s  plot: [14,6] [===============================================--] 96% est: 0s  plot: [14,7] [===============================================--] 96% est: 0s  plot: [14,8] [================================================-] 97% est: 0s  plot: [14,9] [================================================-] 97% est: 0s  plot: [14,10] [===============================================-] 98% est: 0s  plot: [14,11] [===============================================-] 98% est: 0s  plot: [14,12] [================================================] 99% est: 0s  plot: [14,13] [================================================] 99% est: 0s  plot: [14,14] [================================================]100% est: 0s                                                                               [1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/pearson_dfdiv.eps"
Warning messages:
1: In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion
2: In cor(data, method = cor_method) : the standard deviation is zero
[1] "Generating 120 strongest correlations for 'dfdiv'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/spearman_dfdiv.csv"
[1] "Generating scatter plots of the 10 strongest correlations for 'dfdiv'..."
 plot: [1,1] [--------------------------------------------------]  1% est: 0s  plot: [1,2] [=-------------------------------------------------]  1% est: 5s  plot: [1,3] [=-------------------------------------------------]  2% est: 6s  plot: [1,4] [=-------------------------------------------------]  2% est: 7s  plot: [1,5] [=-------------------------------------------------]  3% est: 8s  plot: [1,6] [==------------------------------------------------]  4% est: 8s  plot: [1,7] [==------------------------------------------------]  4% est: 8s  plot: [1,8] [==------------------------------------------------]  5% est: 8s  plot: [1,9] [===-----------------------------------------------]  5% est: 8s  plot: [1,10] [===----------------------------------------------]  6% est: 8s  plot: [1,11] [===----------------------------------------------]  7% est: 8s  plot: [1,12] [===----------------------------------------------]  7% est: 8s  plot: [1,13] [====---------------------------------------------]  8% est: 8s  plot: [2,1] [====----------------------------------------------]  8% est: 8s  plot: [2,2] [====----------------------------------------------]  9% est: 8s  plot: [2,3] [=====---------------------------------------------]  9% est: 8s  plot: [2,4] [=====---------------------------------------------] 10% est: 8s  plot: [2,5] [=====---------------------------------------------] 11% est: 8s  plot: [2,6] [======--------------------------------------------] 11% est: 8s  plot: [2,7] [======--------------------------------------------] 12% est: 8s  plot: [2,8] [======--------------------------------------------] 12% est: 8s  plot: [2,9] [=======-------------------------------------------] 13% est: 8s  plot: [2,10] [=======------------------------------------------] 14% est: 8s  plot: [2,11] [=======------------------------------------------] 14% est: 8s  plot: [2,12] [=======------------------------------------------] 15% est: 8s  plot: [2,13] [========-----------------------------------------] 15% est: 8s  plot: [3,1] [========------------------------------------------] 16% est: 8s  plot: [3,2] [========------------------------------------------] 17% est: 8s  plot: [3,3] [=========-----------------------------------------] 17% est: 8s  plot: [3,4] [=========-----------------------------------------] 18% est: 8s  plot: [3,5] [=========-----------------------------------------] 18% est: 8s  plot: [3,6] [=========-----------------------------------------] 19% est: 8s  plot: [3,7] [==========----------------------------------------] 20% est: 8s  plot: [3,8] [==========----------------------------------------] 20% est: 8s  plot: [3,9] [==========----------------------------------------] 21% est: 8s  plot: [3,10] [==========---------------------------------------] 21% est: 8s  plot: [3,11] [===========--------------------------------------] 22% est: 8s  plot: [3,12] [===========--------------------------------------] 22% est: 8s  plot: [3,13] [===========--------------------------------------] 23% est: 7s  plot: [4,1] [============--------------------------------------] 24% est: 7s  plot: [4,2] [============--------------------------------------] 24% est: 7s  plot: [4,3] [============--------------------------------------] 25% est: 7s  plot: [4,4] [=============-------------------------------------] 25% est: 7s  plot: [4,5] [=============-------------------------------------] 26% est: 7s  plot: [4,6] [=============-------------------------------------] 27% est: 7s  plot: [4,7] [==============------------------------------------] 27% est: 7s  plot: [4,8] [==============------------------------------------] 28% est: 7s  plot: [4,9] [==============------------------------------------] 28% est: 7s  plot: [4,10] [==============-----------------------------------] 29% est: 7s  plot: [4,11] [==============-----------------------------------] 30% est: 7s  plot: [4,12] [===============----------------------------------] 30% est: 7s  plot: [4,13] [===============----------------------------------] 31% est: 7s  plot: [5,1] [================----------------------------------] 31% est: 7s  plot: [5,2] [================----------------------------------] 32% est: 7s  plot: [5,3] [================----------------------------------] 33% est: 7s  plot: [5,4] [=================---------------------------------] 33% est: 7s  plot: [5,5] [=================---------------------------------] 34% est: 6s  plot: [5,6] [=================---------------------------------] 34% est: 6s  plot: [5,7] [=================---------------------------------] 35% est: 6s  plot: [5,8] [==================--------------------------------] 36% est: 6s  plot: [5,9] [==================--------------------------------] 36% est: 6s  plot: [5,10] [==================-------------------------------] 37% est: 6s  plot: [5,11] [==================-------------------------------] 37% est: 6s  plot: [5,12] [===================------------------------------] 38% est: 6s  plot: [5,13] [===================------------------------------] 38% est: 6s  plot: [6,1] [====================------------------------------] 39% est: 6s  plot: [6,2] [====================------------------------------] 40% est: 6s  plot: [6,3] [====================------------------------------] 40% est: 6s  plot: [6,4] [====================------------------------------] 41% est: 6s  plot: [6,5] [=====================-----------------------------] 41% est: 6s  plot: [6,6] [=====================-----------------------------] 42% est: 6s  plot: [6,7] [=====================-----------------------------] 43% est: 6s  plot: [6,8] [======================----------------------------] 43% est: 6s  plot: [6,9] [======================----------------------------] 44% est: 6s  plot: [6,10] [======================---------------------------] 44% est: 6s  plot: [6,11] [======================---------------------------] 45% est: 5s  plot: [6,12] [======================---------------------------] 46% est: 5s  plot: [6,13] [=======================--------------------------] 46% est: 5s  plot: [7,1] [=======================---------------------------] 47% est: 5s  plot: [7,2] [========================--------------------------] 47% est: 5s  plot: [7,3] [========================--------------------------] 48% est: 5s  plot: [7,4] [========================--------------------------] 49% est: 5s  plot: [7,5] [=========================-------------------------] 49% est: 5s  plot: [7,6] [=========================-------------------------] 50% est: 5s  plot: [7,7] [=========================-------------------------] 50% est: 5s  plot: [7,8] [=========================-------------------------] 51% est: 5s  plot: [7,9] [==========================------------------------] 51% est: 5s  plot: [7,10] [==========================-----------------------] 52% est: 5s  plot: [7,11] [==========================-----------------------] 53% est: 5s  plot: [7,12] [==========================-----------------------] 53% est: 5s  plot: [7,13] [==========================-----------------------] 54% est: 5s  plot: [8,1] [===========================-----------------------] 54% est: 4s  plot: [8,2] [============================----------------------] 55% est: 4s  plot: [8,3] [============================----------------------] 56% est: 4s  plot: [8,4] [============================----------------------] 56% est: 4s  plot: [8,5] [============================----------------------] 57% est: 4s  plot: [8,6] [=============================---------------------] 57% est: 4s  plot: [8,7] [=============================---------------------] 58% est: 4s  plot: [8,8] [=============================---------------------] 59% est: 4s  plot: [8,9] [==============================--------------------] 59% est: 4s  plot: [8,10] [=============================--------------------] 60% est: 4s  plot: [8,11] [==============================-------------------] 60% est: 4s  plot: [8,12] [==============================-------------------] 61% est: 4s  plot: [8,13] [==============================-------------------] 62% est: 4s  plot: [9,1] [===============================-------------------] 62% est: 4s  plot: [9,2] [===============================-------------------] 63% est: 4s  plot: [9,3] [================================------------------] 63% est: 4s  plot: [9,4] [================================------------------] 64% est: 3s  plot: [9,5] [================================------------------] 64% est: 3s  plot: [9,6] [=================================-----------------] 65% est: 3s  plot: [9,7] [=================================-----------------] 66% est: 3s  plot: [9,8] [=================================-----------------] 66% est: 3s  plot: [9,9] [=================================-----------------] 67% est: 3s  plot: [9,10] [=================================----------------] 67% est: 3s  plot: [9,11] [=================================----------------] 68% est: 3s  plot: [9,12] [==================================---------------] 69% est: 3s  plot: [9,13] [==================================---------------] 69% est: 3s  plot: [10,1] [==================================---------------] 70% est: 3s  plot: [10,2] [===================================--------------] 70% est: 3s  plot: [10,3] [===================================--------------] 71% est: 3s  plot: [10,4] [===================================--------------] 72% est: 3s  plot: [10,5] [===================================--------------] 72% est: 3s  plot: [10,6] [====================================-------------] 73% est: 3s  plot: [10,7] [====================================-------------] 73% est: 3s  plot: [10,8] [====================================-------------] 74% est: 3s  plot: [10,9] [=====================================------------] 75% est: 2s  plot: [10,10] [====================================------------] 75% est: 2s  plot: [10,11] [====================================------------] 76% est: 2s  plot: [10,12] [=====================================-----------] 76% est: 2s  plot: [10,13] [=====================================-----------] 77% est: 2s  plot: [11,1] [======================================-----------] 78% est: 2s  plot: [11,2] [======================================-----------] 78% est: 2s  plot: [11,3] [=======================================----------] 79% est: 2s  plot: [11,4] [=======================================----------] 79% est: 2s  plot: [11,5] [=======================================----------] 80% est: 2s  plot: [11,6] [=======================================----------] 80% est: 2s  plot: [11,7] [========================================---------] 81% est: 2s  plot: [11,8] [========================================---------] 82% est: 2s  plot: [11,9] [========================================---------] 82% est: 2s  plot: [11,10] [========================================--------] 83% est: 2s  plot: [11,11] [========================================--------] 83% est: 2s  plot: [11,12] [========================================--------] 84% est: 2s  plot: [11,13] [=========================================-------] 85% est: 1s  plot: [12,1] [==========================================-------] 85% est: 1s  plot: [12,2] [==========================================-------] 86% est: 1s  plot: [12,3] [==========================================-------] 86% est: 1s  plot: [12,4] [===========================================------] 87% est: 1s  plot: [12,5] [===========================================------] 88% est: 1s  plot: [12,6] [===========================================------] 88% est: 1s  plot: [12,7] [===========================================------] 89% est: 1s  plot: [12,8] [============================================-----] 89% est: 1s  plot: [12,9] [============================================-----] 90% est: 1s  plot: [12,10] [===========================================-----] 91% est: 1s  plot: [12,11] [============================================----] 91% est: 1s  plot: [12,12] [============================================----] 92% est: 1s  plot: [12,13] [============================================----] 92% est: 1s  plot: [13,1] [==============================================---] 93% est: 1s  plot: [13,2] [==============================================---] 93% est: 1s  plot: [13,3] [==============================================---] 94% est: 1s  plot: [13,4] [==============================================---] 95% est: 1s  plot: [13,5] [===============================================--] 95% est: 0s  plot: [13,6] [===============================================--] 96% est: 0s  plot: [13,7] [===============================================--] 96% est: 0s  plot: [13,8] [================================================-] 97% est: 0s  plot: [13,9] [================================================-] 98% est: 0s  plot: [13,10] [===============================================-] 98% est: 0s  plot: [13,11] [===============================================-] 99% est: 0s  plot: [13,12] [================================================] 99% est: 0s  plot: [13,13] [================================================]100% est: 0s                                                                               [1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/spearman_dfdiv.eps"
Warning messages:
1: In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion
2: In cor(data, method = cor_method) : the standard deviation is zero
[1] "Generating 120 strongest correlations for 'dfdiv'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/kendall_dfdiv.csv"
[1] "Generating scatter plots of the 10 strongest correlations for 'dfdiv'..."
 plot: [1,1] [--------------------------------------------------]  1% est: 0s  plot: [1,2] [=-------------------------------------------------]  1% est: 5s  plot: [1,3] [=-------------------------------------------------]  2% est: 6s  plot: [1,4] [=-------------------------------------------------]  3% est: 7s  plot: [1,5] [==------------------------------------------------]  3% est: 7s  plot: [1,6] [==------------------------------------------------]  4% est: 7s  plot: [1,7] [==------------------------------------------------]  5% est: 7s  plot: [1,8] [===-----------------------------------------------]  6% est: 7s  plot: [1,9] [===-----------------------------------------------]  6% est: 8s  plot: [1,10] [===----------------------------------------------]  7% est: 8s  plot: [1,11] [====---------------------------------------------]  8% est: 8s  plot: [1,12] [====---------------------------------------------]  8% est: 9s  plot: [2,1] [=====---------------------------------------------]  9% est: 9s  plot: [2,2] [=====---------------------------------------------] 10% est: 8s  plot: [2,3] [=====---------------------------------------------] 10% est: 8s  plot: [2,4] [======--------------------------------------------] 11% est: 8s  plot: [2,5] [======--------------------------------------------] 12% est: 8s  plot: [2,6] [======--------------------------------------------] 12% est: 8s  plot: [2,7] [=======-------------------------------------------] 13% est: 8s  plot: [2,8] [=======-------------------------------------------] 14% est: 8s  plot: [2,9] [=======-------------------------------------------] 15% est: 8s  plot: [2,10] [=======------------------------------------------] 15% est: 7s  plot: [2,11] [========-----------------------------------------] 16% est: 7s  plot: [2,12] [========-----------------------------------------] 17% est: 7s  plot: [3,1] [=========-----------------------------------------] 17% est: 7s  plot: [3,2] [=========-----------------------------------------] 18% est: 7s  plot: [3,3] [=========-----------------------------------------] 19% est: 7s  plot: [3,4] [==========----------------------------------------] 19% est: 7s  plot: [3,5] [==========----------------------------------------] 20% est: 7s  plot: [3,6] [==========----------------------------------------] 21% est: 7s  plot: [3,7] [===========---------------------------------------] 22% est: 7s  plot: [3,8] [===========---------------------------------------] 22% est: 7s  plot: [3,9] [===========---------------------------------------] 23% est: 7s  plot: [3,10] [============-------------------------------------] 24% est: 7s  plot: [3,11] [============-------------------------------------] 24% est: 6s  plot: [3,12] [============-------------------------------------] 25% est: 6s  plot: [4,1] [=============-------------------------------------] 26% est: 6s  plot: [4,2] [=============-------------------------------------] 26% est: 6s  plot: [4,3] [==============------------------------------------] 27% est: 6s  plot: [4,4] [==============------------------------------------] 28% est: 6s  plot: [4,5] [==============------------------------------------] 28% est: 6s  plot: [4,6] [===============-----------------------------------] 29% est: 6s  plot: [4,7] [===============-----------------------------------] 30% est: 6s  plot: [4,8] [===============-----------------------------------] 31% est: 6s  plot: [4,9] [================----------------------------------] 31% est: 6s  plot: [4,10] [================---------------------------------] 32% est: 6s  plot: [4,11] [================---------------------------------] 33% est: 6s  plot: [4,12] [================---------------------------------] 33% est: 6s  plot: [5,1] [=================---------------------------------] 34% est: 6s  plot: [5,2] [=================---------------------------------] 35% est: 5s  plot: [5,3] [==================--------------------------------] 35% est: 5s  plot: [5,4] [==================--------------------------------] 36% est: 5s  plot: [5,5] [==================--------------------------------] 37% est: 5s  plot: [5,6] [===================-------------------------------] 38% est: 5s  plot: [5,7] [===================-------------------------------] 38% est: 5s  plot: [5,8] [===================-------------------------------] 39% est: 5s  plot: [5,9] [====================------------------------------] 40% est: 5s  plot: [5,10] [====================-----------------------------] 40% est: 5s  plot: [5,11] [====================-----------------------------] 41% est: 5s  plot: [5,12] [====================-----------------------------] 42% est: 5s  plot: [6,1] [=====================-----------------------------] 42% est: 5s  plot: [6,2] [======================----------------------------] 43% est: 5s  plot: [6,3] [======================----------------------------] 44% est: 5s  plot: [6,4] [======================----------------------------] 44% est: 5s  plot: [6,5] [=======================---------------------------] 45% est: 5s  plot: [6,6] [=======================---------------------------] 46% est: 4s  plot: [6,7] [=======================---------------------------] 47% est: 4s  plot: [6,8] [========================--------------------------] 47% est: 4s  plot: [6,9] [========================--------------------------] 48% est: 4s  plot: [6,10] [========================-------------------------] 49% est: 4s  plot: [6,11] [========================-------------------------] 49% est: 4s  plot: [6,12] [========================-------------------------] 50% est: 4s  plot: [7,1] [=========================-------------------------] 51% est: 4s  plot: [7,2] [==========================------------------------] 51% est: 4s  plot: [7,3] [==========================------------------------] 52% est: 4s  plot: [7,4] [==========================------------------------] 53% est: 4s  plot: [7,5] [===========================-----------------------] 53% est: 4s  plot: [7,6] [===========================-----------------------] 54% est: 4s  plot: [7,7] [===========================-----------------------] 55% est: 4s  plot: [7,8] [============================----------------------] 56% est: 4s  plot: [7,9] [============================----------------------] 56% est: 4s  plot: [7,10] [============================---------------------] 57% est: 4s  plot: [7,11] [============================---------------------] 58% est: 3s  plot: [7,12] [=============================--------------------] 58% est: 3s  plot: [8,1] [==============================--------------------] 59% est: 3s  plot: [8,2] [==============================--------------------] 60% est: 3s  plot: [8,3] [==============================--------------------] 60% est: 3s  plot: [8,4] [===============================-------------------] 61% est: 3s  plot: [8,5] [===============================-------------------] 62% est: 3s  plot: [8,6] [===============================-------------------] 62% est: 3s  plot: [8,7] [================================------------------] 63% est: 3s  plot: [8,8] [================================------------------] 64% est: 3s  plot: [8,9] [================================------------------] 65% est: 3s  plot: [8,10] [================================-----------------] 65% est: 3s  plot: [8,11] [================================-----------------] 66% est: 3s  plot: [8,12] [=================================----------------] 67% est: 3s  plot: [9,1] [==================================----------------] 67% est: 3s  plot: [9,2] [==================================----------------] 68% est: 3s  plot: [9,3] [==================================----------------] 69% est: 3s  plot: [9,4] [===================================---------------] 69% est: 2s  plot: [9,5] [===================================---------------] 70% est: 2s  plot: [9,6] [===================================---------------] 71% est: 2s  plot: [9,7] [====================================--------------] 72% est: 2s  plot: [9,8] [====================================--------------] 72% est: 2s  plot: [9,9] [====================================--------------] 73% est: 2s  plot: [9,10] [====================================-------------] 74% est: 2s  plot: [9,11] [====================================-------------] 74% est: 2s  plot: [9,12] [=====================================------------] 75% est: 2s  plot: [10,1] [=====================================------------] 76% est: 2s  plot: [10,2] [=====================================------------] 76% est: 2s  plot: [10,3] [======================================-----------] 77% est: 2s  plot: [10,4] [======================================-----------] 78% est: 2s  plot: [10,5] [======================================-----------] 78% est: 2s  plot: [10,6] [=======================================----------] 79% est: 2s  plot: [10,7] [=======================================----------] 80% est: 2s  plot: [10,8] [=======================================----------] 81% est: 2s  plot: [10,9] [========================================---------] 81% est: 1s  plot: [10,10] [=======================================---------] 82% est: 1s  plot: [10,11] [========================================--------] 83% est: 1s  plot: [10,12] [========================================--------] 83% est: 1s  plot: [11,1] [=========================================--------] 84% est: 1s  plot: [11,2] [==========================================-------] 85% est: 1s  plot: [11,3] [==========================================-------] 85% est: 1s  plot: [11,4] [==========================================-------] 86% est: 1s  plot: [11,5] [===========================================------] 87% est: 1s  plot: [11,6] [===========================================------] 88% est: 1s  plot: [11,7] [===========================================------] 88% est: 1s  plot: [11,8] [============================================-----] 89% est: 1s  plot: [11,9] [============================================-----] 90% est: 1s  plot: [11,10] [===========================================-----] 90% est: 1s  plot: [11,11] [============================================----] 91% est: 1s  plot: [11,12] [============================================----] 92% est: 1s  plot: [12,1] [=============================================----] 92% est: 1s  plot: [12,2] [==============================================---] 93% est: 1s  plot: [12,3] [==============================================---] 94% est: 1s  plot: [12,4] [==============================================---] 94% est: 0s  plot: [12,5] [===============================================--] 95% est: 0s  plot: [12,6] [===============================================--] 96% est: 0s  plot: [12,7] [===============================================--] 97% est: 0s  plot: [12,8] [================================================-] 97% est: 0s  plot: [12,9] [================================================-] 98% est: 0s  plot: [12,10] [===============================================-] 99% est: 0s  plot: [12,11] [================================================] 99% est: 0s  plot: [12,12] [================================================]100% est: 0s                                                                               [1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/kendall_dfdiv.eps"
Warning messages:
1: In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion
2: In cor(data, method = cor_method) : the standard deviation is zero
#+end_example

Open one of these =eps= files with:

#+HEADER: :var repository_dir=repository_dir
#+begin_src sh
evince $repository_dir/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/pearson_dfdiv.eps&
#+end_src

#+RESULTS:

What are the common rows between all correlations?

#+HEADER: :results output :session *R* :exports both
#+begin_src R

print(cor_pearson)
print(cor_spearman)
print(cor_kendall)

inner_join(cor_pearson[ c("First.Variable", "Second.Variable")],
           cor_spearman[ c("First.Variable", "Second.Variable")])

inner_join(cor_pearson[ c("First.Variable", "Second.Variable")],
           cor_kendall[ c("First.Variable", "Second.Variable")])

inner_join(cor_spearman[ c("First.Variable", "Second.Variable")],
           cor_kendall[ c("First.Variable", "Second.Variable")])

inner_join(inner_join(cor_pearson[ c("First.Variable", "Second.Variable")],
           cor_spearman[ c("First.Variable", "Second.Variable")]),
           cor_kendall[ c("First.Variable", "Second.Variable")])

#+end_src

#+RESULTS:
#+begin_example
                               First.Variable Second.Variable Correlation
677                set_parameter.MULTIPUMPING            Pins  -1.0000000
1206                                   Blocks             RAM   1.0000000
370  set_operation_latency.unsigned_divide_64            FMax   0.9580363
1238             set_parameter.MB_MINIMIZE_HW             DPS   0.8393787
1050                                   Cycles          Blocks  -0.8387330
1201                                   Cycles             RAM  -0.8387330
803  set_operation_latency.signed_multiply_16            Regs   0.7855710
887   set_resource_constraint.altfp_divide_32            Regs   0.7689415
852       set_operation_latency.signed_add_64            Regs   0.7659582
394      set_resource_constraint.signed_add_8            FMax   0.7571533
                                First.Variable Second.Variable Correlation
677                 set_parameter.MULTIPUMPING            Pins  -1.0000000
1206                                    Blocks             RAM   1.0000000
1281                set_parameter.MULTIPUMPING             DPS   0.8090146
1355                                      Pins             DPS  -0.8090146
1238              set_parameter.MB_MINIMIZE_HW             DPS   0.7857013
331  set_resource_constraint.altfp_subtract_16            FMax   0.7223399
370   set_operation_latency.unsigned_divide_64            FMax   0.7210865
219   set_operation_latency.unsigned_divide_64          Cycles   0.7129351
821        set_operation_latency.signed_add_32            Regs   0.7084865
415      set_operation_latency.altfp_divide_32            FMax  -0.6974540
                                First.Variable Second.Variable Correlation
677                 set_parameter.MULTIPUMPING            Pins  -1.0000000
1206                                    Blocks             RAM   1.0000000
1281                set_parameter.MULTIPUMPING             DPS   0.7561760
1355                                      Pins             DPS  -0.7561760
1238              set_parameter.MB_MINIMIZE_HW             DPS   0.7343854
984                 set_parameter.PIPELINE_ALL          Blocks   0.6139115
1135                set_parameter.PIPELINE_ALL             RAM   0.6139115
821        set_operation_latency.signed_add_32            Regs   0.6039735
370   set_operation_latency.unsigned_divide_64            FMax   0.5961823
331  set_resource_constraint.altfp_subtract_16            FMax   0.5900102
Joining, by = c("First.Variable", "Second.Variable")
                            First.Variable Second.Variable
1               set_parameter.MULTIPUMPING            Pins
2                                   Blocks             RAM
3 set_operation_latency.unsigned_divide_64            FMax
4             set_parameter.MB_MINIMIZE_HW             DPS
Joining, by = c("First.Variable", "Second.Variable")
                            First.Variable Second.Variable
1               set_parameter.MULTIPUMPING            Pins
2                                   Blocks             RAM
3 set_operation_latency.unsigned_divide_64            FMax
4             set_parameter.MB_MINIMIZE_HW             DPS
Joining, by = c("First.Variable", "Second.Variable")
                             First.Variable Second.Variable
1                set_parameter.MULTIPUMPING            Pins
2                                    Blocks             RAM
3                set_parameter.MULTIPUMPING             DPS
4                                      Pins             DPS
5              set_parameter.MB_MINIMIZE_HW             DPS
6 set_resource_constraint.altfp_subtract_16            FMax
7  set_operation_latency.unsigned_divide_64            FMax
8       set_operation_latency.signed_add_32            Regs
Joining, by = c("First.Variable", "Second.Variable")
Joining, by = c("First.Variable", "Second.Variable")
                            First.Variable Second.Variable
1               set_parameter.MULTIPUMPING            Pins
2                                   Blocks             RAM
3 set_operation_latency.unsigned_divide_64            FMax
4             set_parameter.MB_MINIMIZE_HW             DPS
#+end_example

*** [2017-12-13 Wed]
**** Plotting More Correlations ([[More Attempts at Correlations][Continued from Here]]) :R:Code:FPGA:Autotuning:DataVis:
***** Setup
Make sure you have the data:

#+CALL: update_legup_tuner()

#+RESULTS:
: Already up to date.

Import dependencies, set the graphics output, and define paths:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :var repository_dir=repository_dir
#+begin_src R

library(dplyr)
library(GGally)

setEPS()

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

plot_dir <- c(repository_dir,
              "/legup-tuner/",
              "post_place_and_route/py/results/r_scripts/",
              "correlations")

experiments <- c("balanced", "area", "perf", "perflat")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

hardware_metrics <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs",
                      "Blocks", "RAM", "DPS")

dir.create(paste(plot_dir, collapse = ""))

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Attaching package: ‘GGally’

The following object is masked from ‘package:dplyr’:

    nasa
Warning message:
In dir.create(paste(plot_dir, collapse = "")) :
  '/home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations' already exists
#+end_example
***** Load Data and Plot Functions
#+HEADER: :results output :session *R* :exports both
#+begin_src R
load_data <- function(application, experiments) {
    data       <- data.frame()

    for (experiment in experiments) {
        new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                                   experiment, paste(application,
                                                     ".csv",
                                                     sep = ""),
                                   sep = "/"),
                             header = TRUE, sep = ",")

        new_data <- as.data.frame(new_data)
        new_data <- new_data[is.finite(new_data$WNS),]

        if (ncol(data) == 0) {
            data <- new_data
        } else {
            data <- rbind(data, new_data)
        }
    }

    data  <- as.data.frame(sapply(data, as.numeric))
    return(data)
}
#+end_src

#+RESULTS:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/more_correlations.r
#+begin_src R
plot_correlation_columns <- function (data, correlations, cor_method,
                                      application) {
    postscript(paste(paste(plot_dir, collapse = ""), paste(cor_method,
                                                           "_largest_",
                                                           application,
                                                           ".eps",
                                                           sep = ""),
                     sep = "/"),
               width = 20, height = 20)

    columns <- unique(c(as.vector(correlations$First.Variable),
                        as.vector(correlations$Second.Variable)))

    ggpairs_plot <- ggpairs(data, columns = columns)

    print(ggpairs_plot)

    print(paste(paste("Plot generated at ",
                      paste(plot_dir, collapse = ""),
                      sep = ""), paste(cor_method, "_largest_",
                                       application, ".eps",
                                       sep = ""),
                sep = "/"))

    dev.off()
}

#+end_src

#+RESULTS:

***** Pearson, Spearman and Kendall Correlations
The =sorted_correlations= function filters correlation matrices, getting
only rows with one of the hardware metrics. Then, it sorts rows by
correlation.

#+HEADER: :results output :session *R* :exports both
#+begin_src R
#
# Function adapted from:
#
#   https://little-book-of-r-for-multivariate-analysis.readthedocs.io/en/latest/src/multivariateanalysis.html#calculating-correlations-for-multivariate-data
#
sorted_correlations <- function(data, datapoints) {
    names(data) <- c("First.Variable", "Second.Variable","Correlation")

    #
    # Restricting comparisons to correlations that contain a hardware metric
    #
    data <- dplyr::filter(data, grepl(paste(hardware_metrics,
                                            collapse = "|"),
                                      data$Second.Variable))

    head(data[order(abs(data$Correlation), decreasing = T), ],
         n = datapoints)
}

#+end_src

#+RESULTS:

Computing the correlations using variable =cor= methods:

#+HEADER: :results output :session *R* :exports both
#+begin_src R
plot_correlations <- function(application, experiments, cor_method,
                              plot_columns) {
    data       <- data.frame()

    for (experiment in experiments) {
        new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                                   experiment, paste(application,
                                                     ".csv",
                                                     sep = ""),
                                   sep = "/"),
                             header = TRUE, sep = ",")

        new_data <- as.data.frame(new_data)
        new_data <- new_data[is.finite(new_data$WNS),]

        if (ncol(data) == 0) {
            data <- new_data
        } else {
            data <- rbind(data, new_data)
        }
    }

    data  <- as.data.frame(sapply(data, as.numeric))

    cormatrix <- cor(data, method = cor_method)
    diag(cormatrix) <- 0
    cormatrix[lower.tri(cormatrix)] <- 0
    cormatrix <- as.data.frame(as.table(cormatrix))

    correlation <- sorted_correlations(cormatrix, 120)

    print(paste("Generating 120 strongest correlations for '", application,
                "'...", sep = ""))

    write.csv(correlation, file = paste(paste(plot_dir, collapse = ""),
                                        paste(cor_method, "_", application,
                                              ".csv", sep = ""), sep = "/"))

    print(paste(paste("CSV generated at ", 
                      paste(plot_dir, collapse = ""),
                      sep = ""), paste(cor_method, "_", application,
                                       ".csv", sep = ""),
                sep = "/"))

    short_correlation <- correlation[1:plot_columns, ]

    print(paste("Generating scatter plots of the ",
                plot_columns, " strongest correlations for '",
                application, "'...", sep = ""))

    postscript(paste(paste(plot_dir, collapse = ""), paste(cor_method,
                                                           "_",
                                                           application,
                                                           ".eps",
                                                           sep = ""),
                     sep = "/"),
               width = 20, height = 20)
    
    columns <- unique(c(as.vector(short_correlation$First.Variable),
                        as.vector(short_correlation$Second.Variable)))

    ggpairs_plot <- ggpairs(data, columns = columns)
    
    print(ggpairs_plot)

    print(paste(paste("Plot generated at ",
                      paste(plot_dir, collapse = ""),
                      sep = ""), paste(cor_method, "_", application,
                                       ".eps", sep = ""),
                sep = "/"))

    dev.off()
    
    return(short_correlation)
}

#+end_src

#+RESULTS:

Plotting the 10 largest correlations:

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/more_correlations.r
#+begin_src R

application <- "dfdiv"

cor_pearson <- plot_correlations(application, experiments, "pearson", 10)
cor_spearman <- plot_correlations(application, experiments, "spearman", 10)
cor_kendall <- plot_correlations(application, experiments, "kendall", 10)

#+end_src

#+RESULTS:
#+begin_example
[1] "Generating 120 strongest correlations for 'dfdiv'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/pearson_dfdiv.csv"
[1] "Generating scatter plots of the 10 strongest correlations for 'dfdiv'..."
 plot: [1,1] [--------------------------------------------------]  1% est: 0s  plot: [1,2] [=-------------------------------------------------]  1% est: 6s  plot: [1,3] [=-------------------------------------------------]  2% est: 8s  plot: [1,4] [=-------------------------------------------------]  2% est: 9s  plot: [1,5] [=-------------------------------------------------]  3% est:10s  plot: [1,6] [==------------------------------------------------]  3% est:10s  plot: [1,7] [==------------------------------------------------]  4% est:10s  plot: [1,8] [==------------------------------------------------]  4% est:12s  plot: [1,9] [==------------------------------------------------]  5% est:12s  plot: [1,10] [==-----------------------------------------------]  5% est:12s  plot: [1,11] [===----------------------------------------------]  6% est:12s  plot: [1,12] [===----------------------------------------------]  6% est:11s  plot: [1,13] [===----------------------------------------------]  7% est:11s  plot: [1,14] [====---------------------------------------------]  7% est:11s  plot: [2,1] [====----------------------------------------------]  8% est:11s  plot: [2,2] [====----------------------------------------------]  8% est:11s  plot: [2,3] [====----------------------------------------------]  9% est:11s  plot: [2,4] [=====---------------------------------------------]  9% est:11s  plot: [2,5] [=====---------------------------------------------] 10% est:10s  plot: [2,6] [=====---------------------------------------------] 10% est:10s  plot: [2,7] [=====---------------------------------------------] 11% est:10s  plot: [2,8] [======--------------------------------------------] 11% est:10s  plot: [2,9] [======--------------------------------------------] 12% est:10s  plot: [2,10] [======-------------------------------------------] 12% est:10s  plot: [2,11] [======-------------------------------------------] 13% est:10s  plot: [2,12] [======-------------------------------------------] 13% est:10s  plot: [2,13] [=======------------------------------------------] 14% est:10s  plot: [2,14] [=======------------------------------------------] 14% est:10s  plot: [3,1] [=======-------------------------------------------] 15% est:10s  plot: [3,2] [========------------------------------------------] 15% est:10s  plot: [3,3] [========------------------------------------------] 16% est: 9s  plot: [3,4] [========------------------------------------------] 16% est: 9s  plot: [3,5] [========------------------------------------------] 17% est: 9s  plot: [3,6] [=========-----------------------------------------] 17% est: 9s  plot: [3,7] [=========-----------------------------------------] 18% est: 9s  plot: [3,8] [=========-----------------------------------------] 18% est: 9s  plot: [3,9] [=========-----------------------------------------] 19% est: 9s  plot: [3,10] [==========---------------------------------------] 19% est: 9s  plot: [3,11] [==========---------------------------------------] 20% est: 9s  plot: [3,12] [==========---------------------------------------] 20% est: 9s  plot: [3,13] [==========---------------------------------------] 21% est: 9s  plot: [3,14] [==========---------------------------------------] 21% est: 9s  plot: [4,1] [===========---------------------------------------] 22% est: 9s  plot: [4,2] [===========---------------------------------------] 22% est: 9s  plot: [4,3] [===========---------------------------------------] 23% est: 9s  plot: [4,4] [============--------------------------------------] 23% est: 9s  plot: [4,5] [============--------------------------------------] 24% est: 8s  plot: [4,6] [============--------------------------------------] 24% est: 8s  plot: [4,7] [============--------------------------------------] 25% est: 8s  plot: [4,8] [=============-------------------------------------] 26% est: 8s  plot: [4,9] [=============-------------------------------------] 26% est: 8s  plot: [4,10] [=============------------------------------------] 27% est: 8s  plot: [4,11] [=============------------------------------------] 27% est: 8s  plot: [4,12] [=============------------------------------------] 28% est: 8s  plot: [4,13] [==============-----------------------------------] 28% est: 8s  plot: [4,14] [==============-----------------------------------] 29% est: 8s  plot: [5,1] [===============-----------------------------------] 29% est: 8s  plot: [5,2] [===============-----------------------------------] 30% est: 8s  plot: [5,3] [===============-----------------------------------] 30% est: 8s  plot: [5,4] [===============-----------------------------------] 31% est: 8s  plot: [5,5] [================----------------------------------] 31% est: 8s  plot: [5,6] [================----------------------------------] 32% est: 8s  plot: [5,7] [================----------------------------------] 32% est: 8s  plot: [5,8] [================----------------------------------] 33% est: 8s  plot: [5,9] [=================---------------------------------] 33% est: 7s  plot: [5,10] [================---------------------------------] 34% est: 7s  plot: [5,11] [=================--------------------------------] 34% est: 7s  plot: [5,12] [=================--------------------------------] 35% est: 7s  plot: [5,13] [=================--------------------------------] 35% est: 7s  plot: [5,14] [==================-------------------------------] 36% est: 7s  plot: [6,1] [==================--------------------------------] 36% est: 7s  plot: [6,2] [==================--------------------------------] 37% est: 7s  plot: [6,3] [===================-------------------------------] 37% est: 7s  plot: [6,4] [===================-------------------------------] 38% est: 7s  plot: [6,5] [===================-------------------------------] 38% est: 7s  plot: [6,6] [===================-------------------------------] 39% est: 7s  plot: [6,7] [====================------------------------------] 39% est: 7s  plot: [6,8] [====================------------------------------] 40% est: 7s  plot: [6,9] [====================------------------------------] 40% est: 7s  plot: [6,10] [====================-----------------------------] 41% est: 7s  plot: [6,11] [====================-----------------------------] 41% est: 7s  plot: [6,12] [====================-----------------------------] 42% est: 7s  plot: [6,13] [=====================----------------------------] 42% est: 6s  plot: [6,14] [=====================----------------------------] 43% est: 6s  plot: [7,1] [======================----------------------------] 43% est: 6s  plot: [7,2] [======================----------------------------] 44% est: 6s  plot: [7,3] [======================----------------------------] 44% est: 6s  plot: [7,4] [======================----------------------------] 45% est: 6s  plot: [7,5] [=======================---------------------------] 45% est: 6s  plot: [7,6] [=======================---------------------------] 46% est: 6s  plot: [7,7] [=======================---------------------------] 46% est: 6s  plot: [7,8] [=======================---------------------------] 47% est: 6s  plot: [7,9] [========================--------------------------] 47% est: 6s  plot: [7,10] [========================-------------------------] 48% est: 6s  plot: [7,11] [========================-------------------------] 48% est: 6s  plot: [7,12] [========================-------------------------] 49% est: 6s  plot: [7,13] [========================-------------------------] 49% est: 6s  plot: [7,14] [========================-------------------------] 50% est: 6s  plot: [8,1] [=========================-------------------------] 51% est: 6s  plot: [8,2] [==========================------------------------] 51% est: 5s  plot: [8,3] [==========================------------------------] 52% est: 5s  plot: [8,4] [==========================------------------------] 52% est: 5s  plot: [8,5] [==========================------------------------] 53% est: 5s  plot: [8,6] [===========================-----------------------] 53% est: 5s  plot: [8,7] [===========================-----------------------] 54% est: 5s  plot: [8,8] [===========================-----------------------] 54% est: 5s  plot: [8,9] [===========================-----------------------] 55% est: 5s  plot: [8,10] [===========================----------------------] 55% est: 5s  plot: [8,11] [===========================----------------------] 56% est: 5s  plot: [8,12] [===========================----------------------] 56% est: 5s  plot: [8,13] [============================---------------------] 57% est: 5s  plot: [8,14] [============================---------------------] 57% est: 5s  plot: [9,1] [=============================---------------------] 58% est: 5s  plot: [9,2] [=============================---------------------] 58% est: 5s  plot: [9,3] [=============================---------------------] 59% est: 5s  plot: [9,4] [==============================--------------------] 59% est: 5s  plot: [9,5] [==============================--------------------] 60% est: 4s  plot: [9,6] [==============================--------------------] 60% est: 4s  plot: [9,7] [==============================--------------------] 61% est: 4s  plot: [9,8] [===============================-------------------] 61% est: 4s  plot: [9,9] [===============================-------------------] 62% est: 4s  plot: [9,10] [==============================-------------------] 62% est: 4s  plot: [9,11] [===============================------------------] 63% est: 4s  plot: [9,12] [===============================------------------] 63% est: 4s  plot: [9,13] [===============================------------------] 64% est: 4s  plot: [9,14] [================================-----------------] 64% est: 4s  plot: [10,1] [================================-----------------] 65% est: 4s  plot: [10,2] [================================-----------------] 65% est: 4s  plot: [10,3] [================================-----------------] 66% est: 4s  plot: [10,4] [================================-----------------] 66% est: 4s  plot: [10,5] [=================================----------------] 67% est: 4s  plot: [10,6] [=================================----------------] 67% est: 4s  plot: [10,7] [=================================----------------] 68% est: 4s  plot: [10,8] [==================================---------------] 68% est: 3s  plot: [10,9] [==================================---------------] 69% est: 3s  plot: [10,10] [=================================---------------] 69% est: 3s  plot: [10,11] [==================================--------------] 70% est: 3s  plot: [10,12] [==================================--------------] 70% est: 3s  plot: [10,13] [==================================--------------] 71% est: 3s  plot: [10,14] [==================================--------------] 71% est: 3s  plot: [11,1] [===================================--------------] 72% est: 3s  plot: [11,2] [====================================-------------] 72% est: 3s  plot: [11,3] [====================================-------------] 73% est: 3s  plot: [11,4] [====================================-------------] 73% est: 3s  plot: [11,5] [====================================-------------] 74% est: 3s  plot: [11,6] [====================================-------------] 74% est: 3s  plot: [11,7] [=====================================------------] 75% est: 3s  plot: [11,8] [=====================================------------] 76% est: 3s  plot: [11,9] [=====================================------------] 76% est: 3s  plot: [11,10] [=====================================-----------] 77% est: 3s  plot: [11,11] [=====================================-----------] 77% est: 3s  plot: [11,12] [=====================================-----------] 78% est: 2s  plot: [11,13] [=====================================-----------] 78% est: 2s  plot: [11,14] [======================================----------] 79% est: 2s  plot: [12,1] [=======================================----------] 79% est: 2s  plot: [12,2] [=======================================----------] 80% est: 2s  plot: [12,3] [=======================================----------] 80% est: 2s  plot: [12,4] [========================================---------] 81% est: 2s  plot: [12,5] [========================================---------] 81% est: 2s  plot: [12,6] [========================================---------] 82% est: 2s  plot: [12,7] [========================================---------] 82% est: 2s  plot: [12,8] [========================================---------] 83% est: 2s  plot: [12,9] [=========================================--------] 83% est: 2s  plot: [12,10] [========================================--------] 84% est: 2s  plot: [12,11] [========================================--------] 84% est: 2s  plot: [12,12] [=========================================-------] 85% est: 2s  plot: [12,13] [=========================================-------] 85% est: 2s  plot: [12,14] [=========================================-------] 86% est: 2s  plot: [13,1] [==========================================-------] 86% est: 2s  plot: [13,2] [==========================================-------] 87% est: 1s  plot: [13,3] [===========================================------] 87% est: 1s  plot: [13,4] [===========================================------] 88% est: 1s  plot: [13,5] [===========================================------] 88% est: 1s  plot: [13,6] [============================================-----] 89% est: 1s  plot: [13,7] [============================================-----] 89% est: 1s  plot: [13,8] [============================================-----] 90% est: 1s  plot: [13,9] [============================================-----] 90% est: 1s  plot: [13,10] [============================================----] 91% est: 1s  plot: [13,11] [============================================----] 91% est: 1s  plot: [13,12] [============================================----] 92% est: 1s  plot: [13,13] [============================================----] 92% est: 1s  plot: [13,14] [=============================================---] 93% est: 1s  plot: [14,1] [==============================================---] 93% est: 1s  plot: [14,2] [==============================================---] 94% est: 1s  plot: [14,3] [==============================================---] 94% est: 1s  plot: [14,4] [==============================================---] 95% est: 1s  plot: [14,5] [===============================================--] 95% est: 1s  plot: [14,6] [===============================================--] 96% est: 0s  plot: [14,7] [===============================================--] 96% est: 0s  plot: [14,8] [================================================-] 97% est: 0s  plot: [14,9] [================================================-] 97% est: 0s  plot: [14,10] [===============================================-] 98% est: 0s  plot: [14,11] [===============================================-] 98% est: 0s  plot: [14,12] [================================================] 99% est: 0s  plot: [14,13] [================================================] 99% est: 0s  plot: [14,14] [================================================]100% est: 0s                                                                               [1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/pearson_dfdiv.eps"
Warning messages:
1: In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion
2: In cor(data, method = cor_method) : the standard deviation is zero
[1] "Generating 120 strongest correlations for 'dfdiv'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/spearman_dfdiv.csv"
[1] "Generating scatter plots of the 10 strongest correlations for 'dfdiv'..."
 plot: [1,1] [--------------------------------------------------]  1% est: 0s  plot: [1,2] [=-------------------------------------------------]  1% est: 5s  plot: [1,3] [=-------------------------------------------------]  2% est: 7s  plot: [1,4] [=-------------------------------------------------]  2% est: 7s  plot: [1,5] [=-------------------------------------------------]  3% est: 8s  plot: [1,6] [==------------------------------------------------]  4% est: 8s  plot: [1,7] [==------------------------------------------------]  4% est: 8s  plot: [1,8] [==------------------------------------------------]  5% est: 8s  plot: [1,9] [===-----------------------------------------------]  5% est: 8s  plot: [1,10] [===----------------------------------------------]  6% est: 8s  plot: [1,11] [===----------------------------------------------]  7% est: 9s  plot: [1,12] [===----------------------------------------------]  7% est: 9s  plot: [1,13] [====---------------------------------------------]  8% est: 9s  plot: [2,1] [====----------------------------------------------]  8% est: 9s  plot: [2,2] [====----------------------------------------------]  9% est: 9s  plot: [2,3] [=====---------------------------------------------]  9% est: 9s  plot: [2,4] [=====---------------------------------------------] 10% est: 8s  plot: [2,5] [=====---------------------------------------------] 11% est: 8s  plot: [2,6] [======--------------------------------------------] 11% est: 8s  plot: [2,7] [======--------------------------------------------] 12% est: 8s  plot: [2,8] [======--------------------------------------------] 12% est: 8s  plot: [2,9] [=======-------------------------------------------] 13% est: 8s  plot: [2,10] [=======------------------------------------------] 14% est: 8s  plot: [2,11] [=======------------------------------------------] 14% est: 8s  plot: [2,12] [=======------------------------------------------] 15% est: 8s  plot: [2,13] [========-----------------------------------------] 15% est: 8s  plot: [3,1] [========------------------------------------------] 16% est: 8s  plot: [3,2] [========------------------------------------------] 17% est: 8s  plot: [3,3] [=========-----------------------------------------] 17% est: 8s  plot: [3,4] [=========-----------------------------------------] 18% est: 8s  plot: [3,5] [=========-----------------------------------------] 18% est: 8s  plot: [3,6] [=========-----------------------------------------] 19% est: 8s  plot: [3,7] [==========----------------------------------------] 20% est: 8s  plot: [3,8] [==========----------------------------------------] 20% est: 8s  plot: [3,9] [==========----------------------------------------] 21% est: 8s  plot: [3,10] [==========---------------------------------------] 21% est: 8s  plot: [3,11] [===========--------------------------------------] 22% est: 8s  plot: [3,12] [===========--------------------------------------] 22% est: 8s  plot: [3,13] [===========--------------------------------------] 23% est: 8s  plot: [4,1] [============--------------------------------------] 24% est: 8s  plot: [4,2] [============--------------------------------------] 24% est: 8s  plot: [4,3] [============--------------------------------------] 25% est: 7s  plot: [4,4] [=============-------------------------------------] 25% est: 7s  plot: [4,5] [=============-------------------------------------] 26% est: 7s  plot: [4,6] [=============-------------------------------------] 27% est: 7s  plot: [4,7] [==============------------------------------------] 27% est: 7s  plot: [4,8] [==============------------------------------------] 28% est: 7s  plot: [4,9] [==============------------------------------------] 28% est: 7s  plot: [4,10] [==============-----------------------------------] 29% est: 7s  plot: [4,11] [==============-----------------------------------] 30% est: 7s  plot: [4,12] [===============----------------------------------] 30% est: 7s  plot: [4,13] [===============----------------------------------] 31% est: 7s  plot: [5,1] [================----------------------------------] 31% est: 7s  plot: [5,2] [================----------------------------------] 32% est: 7s  plot: [5,3] [================----------------------------------] 33% est: 7s  plot: [5,4] [=================---------------------------------] 33% est: 7s  plot: [5,5] [=================---------------------------------] 34% est: 7s  plot: [5,6] [=================---------------------------------] 34% est: 7s  plot: [5,7] [=================---------------------------------] 35% est: 6s  plot: [5,8] [==================--------------------------------] 36% est: 6s  plot: [5,9] [==================--------------------------------] 36% est: 6s  plot: [5,10] [==================-------------------------------] 37% est: 6s  plot: [5,11] [==================-------------------------------] 37% est: 6s  plot: [5,12] [===================------------------------------] 38% est: 6s  plot: [5,13] [===================------------------------------] 38% est: 6s  plot: [6,1] [====================------------------------------] 39% est: 6s  plot: [6,2] [====================------------------------------] 40% est: 6s  plot: [6,3] [====================------------------------------] 40% est: 6s  plot: [6,4] [====================------------------------------] 41% est: 6s  plot: [6,5] [=====================-----------------------------] 41% est: 6s  plot: [6,6] [=====================-----------------------------] 42% est: 6s  plot: [6,7] [=====================-----------------------------] 43% est: 6s  plot: [6,8] [======================----------------------------] 43% est: 6s  plot: [6,9] [======================----------------------------] 44% est: 6s  plot: [6,10] [======================---------------------------] 44% est: 6s  plot: [6,11] [======================---------------------------] 45% est: 6s  plot: [6,12] [======================---------------------------] 46% est: 5s  plot: [6,13] [=======================--------------------------] 46% est: 5s  plot: [7,1] [=======================---------------------------] 47% est: 5s  plot: [7,2] [========================--------------------------] 47% est: 5s  plot: [7,3] [========================--------------------------] 48% est: 5s  plot: [7,4] [========================--------------------------] 49% est: 5s  plot: [7,5] [=========================-------------------------] 49% est: 5s  plot: [7,6] [=========================-------------------------] 50% est: 5s  plot: [7,7] [=========================-------------------------] 50% est: 5s  plot: [7,8] [=========================-------------------------] 51% est: 5s  plot: [7,9] [==========================------------------------] 51% est: 5s  plot: [7,10] [==========================-----------------------] 52% est: 5s  plot: [7,11] [==========================-----------------------] 53% est: 5s  plot: [7,12] [==========================-----------------------] 53% est: 5s  plot: [7,13] [==========================-----------------------] 54% est: 5s  plot: [8,1] [===========================-----------------------] 54% est: 5s  plot: [8,2] [============================----------------------] 55% est: 4s  plot: [8,3] [============================----------------------] 56% est: 4s  plot: [8,4] [============================----------------------] 56% est: 4s  plot: [8,5] [============================----------------------] 57% est: 4s  plot: [8,6] [=============================---------------------] 57% est: 4s  plot: [8,7] [=============================---------------------] 58% est: 4s  plot: [8,8] [=============================---------------------] 59% est: 4s  plot: [8,9] [==============================--------------------] 59% est: 4s  plot: [8,10] [=============================--------------------] 60% est: 4s  plot: [8,11] [==============================-------------------] 60% est: 4s  plot: [8,12] [==============================-------------------] 61% est: 4s  plot: [8,13] [==============================-------------------] 62% est: 4s  plot: [9,1] [===============================-------------------] 62% est: 4s  plot: [9,2] [===============================-------------------] 63% est: 4s  plot: [9,3] [================================------------------] 63% est: 4s  plot: [9,4] [================================------------------] 64% est: 4s  plot: [9,5] [================================------------------] 64% est: 3s  plot: [9,6] [=================================-----------------] 65% est: 3s  plot: [9,7] [=================================-----------------] 66% est: 3s  plot: [9,8] [=================================-----------------] 66% est: 3s  plot: [9,9] [=================================-----------------] 67% est: 3s  plot: [9,10] [=================================----------------] 67% est: 3s  plot: [9,11] [=================================----------------] 68% est: 3s  plot: [9,12] [==================================---------------] 69% est: 3s  plot: [9,13] [==================================---------------] 69% est: 3s  plot: [10,1] [==================================---------------] 70% est: 3s  plot: [10,2] [===================================--------------] 70% est: 3s  plot: [10,3] [===================================--------------] 71% est: 3s  plot: [10,4] [===================================--------------] 72% est: 3s  plot: [10,5] [===================================--------------] 72% est: 3s  plot: [10,6] [====================================-------------] 73% est: 3s  plot: [10,7] [====================================-------------] 73% est: 3s  plot: [10,8] [====================================-------------] 74% est: 2s  plot: [10,9] [=====================================------------] 75% est: 2s  plot: [10,10] [====================================------------] 75% est: 2s  plot: [10,11] [====================================------------] 76% est: 2s  plot: [10,12] [=====================================-----------] 76% est: 2s  plot: [10,13] [=====================================-----------] 77% est: 2s  plot: [11,1] [======================================-----------] 78% est: 2s  plot: [11,2] [======================================-----------] 78% est: 2s  plot: [11,3] [=======================================----------] 79% est: 2s  plot: [11,4] [=======================================----------] 79% est: 2s  plot: [11,5] [=======================================----------] 80% est: 2s  plot: [11,6] [=======================================----------] 80% est: 2s  plot: [11,7] [========================================---------] 81% est: 2s  plot: [11,8] [========================================---------] 82% est: 2s  plot: [11,9] [========================================---------] 82% est: 2s  plot: [11,10] [========================================--------] 83% est: 2s  plot: [11,11] [========================================--------] 83% est: 2s  plot: [11,12] [========================================--------] 84% est: 2s  plot: [11,13] [=========================================-------] 85% est: 1s  plot: [12,1] [==========================================-------] 85% est: 1s  plot: [12,2] [==========================================-------] 86% est: 1s  plot: [12,3] [==========================================-------] 86% est: 1s  plot: [12,4] [===========================================------] 87% est: 1s  plot: [12,5] [===========================================------] 88% est: 1s  plot: [12,6] [===========================================------] 88% est: 1s  plot: [12,7] [===========================================------] 89% est: 1s  plot: [12,8] [============================================-----] 89% est: 1s  plot: [12,9] [============================================-----] 90% est: 1s  plot: [12,10] [===========================================-----] 91% est: 1s  plot: [12,11] [============================================----] 91% est: 1s  plot: [12,12] [============================================----] 92% est: 1s  plot: [12,13] [============================================----] 92% est: 1s  plot: [13,1] [==============================================---] 93% est: 1s  plot: [13,2] [==============================================---] 93% est: 1s  plot: [13,3] [==============================================---] 94% est: 1s  plot: [13,4] [==============================================---] 95% est: 1s  plot: [13,5] [===============================================--] 95% est: 0s  plot: [13,6] [===============================================--] 96% est: 0s  plot: [13,7] [===============================================--] 96% est: 0s  plot: [13,8] [================================================-] 97% est: 0s  plot: [13,9] [================================================-] 98% est: 0s  plot: [13,10] [===============================================-] 98% est: 0s  plot: [13,11] [===============================================-] 99% est: 0s  plot: [13,12] [================================================] 99% est: 0s  plot: [13,13] [================================================]100% est: 0s                                                                               [1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/spearman_dfdiv.eps"
Warning messages:
1: In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion
2: In cor(data, method = cor_method) : the standard deviation is zero
[1] "Generating 120 strongest correlations for 'dfdiv'..."
[1] "CSV generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/kendall_dfdiv.csv"
[1] "Generating scatter plots of the 10 strongest correlations for 'dfdiv'..."
 plot: [1,1] [--------------------------------------------------]  1% est: 0s  plot: [1,2] [=-------------------------------------------------]  1% est: 5s  plot: [1,3] [=-------------------------------------------------]  2% est: 6s  plot: [1,4] [=-------------------------------------------------]  3% est: 7s  plot: [1,5] [==------------------------------------------------]  3% est: 7s  plot: [1,6] [==------------------------------------------------]  4% est: 7s  plot: [1,7] [==------------------------------------------------]  5% est: 7s  plot: [1,8] [===-----------------------------------------------]  6% est: 7s  plot: [1,9] [===-----------------------------------------------]  6% est: 8s  plot: [1,10] [===----------------------------------------------]  7% est: 8s  plot: [1,11] [====---------------------------------------------]  8% est: 8s  plot: [1,12] [====---------------------------------------------]  8% est: 8s  plot: [2,1] [=====---------------------------------------------]  9% est: 8s  plot: [2,2] [=====---------------------------------------------] 10% est: 8s  plot: [2,3] [=====---------------------------------------------] 10% est: 7s  plot: [2,4] [======--------------------------------------------] 11% est: 7s  plot: [2,5] [======--------------------------------------------] 12% est: 7s  plot: [2,6] [======--------------------------------------------] 12% est: 7s  plot: [2,7] [=======-------------------------------------------] 13% est: 7s  plot: [2,8] [=======-------------------------------------------] 14% est: 7s  plot: [2,9] [=======-------------------------------------------] 15% est: 7s  plot: [2,10] [=======------------------------------------------] 15% est: 7s  plot: [2,11] [========-----------------------------------------] 16% est: 7s  plot: [2,12] [========-----------------------------------------] 17% est: 7s  plot: [3,1] [=========-----------------------------------------] 17% est: 7s  plot: [3,2] [=========-----------------------------------------] 18% est: 7s  plot: [3,3] [=========-----------------------------------------] 19% est: 7s  plot: [3,4] [==========----------------------------------------] 19% est: 7s  plot: [3,5] [==========----------------------------------------] 20% est: 7s  plot: [3,6] [==========----------------------------------------] 21% est: 7s  plot: [3,7] [===========---------------------------------------] 22% est: 7s  plot: [3,8] [===========---------------------------------------] 22% est: 7s  plot: [3,9] [===========---------------------------------------] 23% est: 7s  plot: [3,10] [============-------------------------------------] 24% est: 7s  plot: [3,11] [============-------------------------------------] 24% est: 7s  plot: [3,12] [============-------------------------------------] 25% est: 7s  plot: [4,1] [=============-------------------------------------] 26% est: 6s  plot: [4,2] [=============-------------------------------------] 26% est: 6s  plot: [4,3] [==============------------------------------------] 27% est: 6s  plot: [4,4] [==============------------------------------------] 28% est: 6s  plot: [4,5] [==============------------------------------------] 28% est: 6s  plot: [4,6] [===============-----------------------------------] 29% est: 6s  plot: [4,7] [===============-----------------------------------] 30% est: 6s  plot: [4,8] [===============-----------------------------------] 31% est: 6s  plot: [4,9] [================----------------------------------] 31% est: 6s  plot: [4,10] [================---------------------------------] 32% est: 6s  plot: [4,11] [================---------------------------------] 33% est: 6s  plot: [4,12] [================---------------------------------] 33% est: 6s  plot: [5,1] [=================---------------------------------] 34% est: 6s  plot: [5,2] [=================---------------------------------] 35% est: 6s  plot: [5,3] [==================--------------------------------] 35% est: 5s  plot: [5,4] [==================--------------------------------] 36% est: 5s  plot: [5,5] [==================--------------------------------] 37% est: 5s  plot: [5,6] [===================-------------------------------] 38% est: 5s  plot: [5,7] [===================-------------------------------] 38% est: 5s  plot: [5,8] [===================-------------------------------] 39% est: 5s  plot: [5,9] [====================------------------------------] 40% est: 5s  plot: [5,10] [====================-----------------------------] 40% est: 5s  plot: [5,11] [====================-----------------------------] 41% est: 5s  plot: [5,12] [====================-----------------------------] 42% est: 5s  plot: [6,1] [=====================-----------------------------] 42% est: 5s  plot: [6,2] [======================----------------------------] 43% est: 5s  plot: [6,3] [======================----------------------------] 44% est: 5s  plot: [6,4] [======================----------------------------] 44% est: 5s  plot: [6,5] [=======================---------------------------] 45% est: 5s  plot: [6,6] [=======================---------------------------] 46% est: 4s  plot: [6,7] [=======================---------------------------] 47% est: 4s  plot: [6,8] [========================--------------------------] 47% est: 4s  plot: [6,9] [========================--------------------------] 48% est: 4s  plot: [6,10] [========================-------------------------] 49% est: 4s  plot: [6,11] [========================-------------------------] 49% est: 4s  plot: [6,12] [========================-------------------------] 50% est: 4s  plot: [7,1] [=========================-------------------------] 51% est: 4s  plot: [7,2] [==========================------------------------] 51% est: 4s  plot: [7,3] [==========================------------------------] 52% est: 4s  plot: [7,4] [==========================------------------------] 53% est: 4s  plot: [7,5] [===========================-----------------------] 53% est: 4s  plot: [7,6] [===========================-----------------------] 54% est: 4s  plot: [7,7] [===========================-----------------------] 55% est: 4s  plot: [7,8] [============================----------------------] 56% est: 4s  plot: [7,9] [============================----------------------] 56% est: 4s  plot: [7,10] [============================---------------------] 57% est: 4s  plot: [7,11] [============================---------------------] 58% est: 3s  plot: [7,12] [=============================--------------------] 58% est: 3s  plot: [8,1] [==============================--------------------] 59% est: 3s  plot: [8,2] [==============================--------------------] 60% est: 3s  plot: [8,3] [==============================--------------------] 60% est: 3s  plot: [8,4] [===============================-------------------] 61% est: 3s  plot: [8,5] [===============================-------------------] 62% est: 3s  plot: [8,6] [===============================-------------------] 62% est: 3s  plot: [8,7] [================================------------------] 63% est: 3s  plot: [8,8] [================================------------------] 64% est: 3s  plot: [8,9] [================================------------------] 65% est: 3s  plot: [8,10] [================================-----------------] 65% est: 3s  plot: [8,11] [================================-----------------] 66% est: 3s  plot: [8,12] [=================================----------------] 67% est: 3s  plot: [9,1] [==================================----------------] 67% est: 3s  plot: [9,2] [==================================----------------] 68% est: 3s  plot: [9,3] [==================================----------------] 69% est: 3s  plot: [9,4] [===================================---------------] 69% est: 2s  plot: [9,5] [===================================---------------] 70% est: 2s  plot: [9,6] [===================================---------------] 71% est: 2s  plot: [9,7] [====================================--------------] 72% est: 2s  plot: [9,8] [====================================--------------] 72% est: 2s  plot: [9,9] [====================================--------------] 73% est: 2s  plot: [9,10] [====================================-------------] 74% est: 2s  plot: [9,11] [====================================-------------] 74% est: 2s  plot: [9,12] [=====================================------------] 75% est: 2s  plot: [10,1] [=====================================------------] 76% est: 2s  plot: [10,2] [=====================================------------] 76% est: 2s  plot: [10,3] [======================================-----------] 77% est: 2s  plot: [10,4] [======================================-----------] 78% est: 2s  plot: [10,5] [======================================-----------] 78% est: 2s  plot: [10,6] [=======================================----------] 79% est: 2s  plot: [10,7] [=======================================----------] 80% est: 2s  plot: [10,8] [=======================================----------] 81% est: 2s  plot: [10,9] [========================================---------] 81% est: 1s  plot: [10,10] [=======================================---------] 82% est: 1s  plot: [10,11] [========================================--------] 83% est: 1s  plot: [10,12] [========================================--------] 83% est: 1s  plot: [11,1] [=========================================--------] 84% est: 1s  plot: [11,2] [==========================================-------] 85% est: 1s  plot: [11,3] [==========================================-------] 85% est: 1s  plot: [11,4] [==========================================-------] 86% est: 1s  plot: [11,5] [===========================================------] 87% est: 1s  plot: [11,6] [===========================================------] 88% est: 1s  plot: [11,7] [===========================================------] 88% est: 1s  plot: [11,8] [============================================-----] 89% est: 1s  plot: [11,9] [============================================-----] 90% est: 1s  plot: [11,10] [===========================================-----] 90% est: 1s  plot: [11,11] [============================================----] 91% est: 1s  plot: [11,12] [============================================----] 92% est: 1s  plot: [12,1] [=============================================----] 92% est: 1s  plot: [12,2] [==============================================---] 93% est: 1s  plot: [12,3] [==============================================---] 94% est: 0s  plot: [12,4] [==============================================---] 94% est: 0s  plot: [12,5] [===============================================--] 95% est: 0s  plot: [12,6] [===============================================--] 96% est: 0s  plot: [12,7] [===============================================--] 97% est: 0s  plot: [12,8] [================================================-] 97% est: 0s  plot: [12,9] [================================================-] 98% est: 0s  plot: [12,10] [===============================================-] 99% est: 0s  plot: [12,11] [================================================] 99% est: 0s  plot: [12,12] [================================================]100% est: 0s                                                                               [1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/kendall_dfdiv.eps"
Warning messages:
1: In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion
2: In cor(data, method = cor_method) : the standard deviation is zero
#+end_example

Open one of these =eps= files with:

#+HEADER: :var repository_dir=repository_dir
#+begin_src sh
evince $repository_dir/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/pearson_dfdiv.eps&
#+end_src

#+RESULTS:

What are the common rows between all correlations?

#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/more_correlations.r
#+begin_src R

print(cor_pearson)
print(cor_spearman)
print(cor_kendall)

correlations <- inner_join(cor_pearson[c("First.Variable",
                                         "Second.Variable")],
                           cor_spearman[c("First.Variable",
                                          "Second.Variable")])

plot_correlation_columns(load_data(application, experiments), correlations,
                         "pearson_spearman", application)

correlations <- inner_join(cor_pearson[c("First.Variable",
                                         "Second.Variable")],
                           cor_kendall[c("First.Variable",
                                         "Second.Variable")])

plot_correlation_columns(load_data(application, experiments), correlations,
                         "pearson_kendall", application)

correltions <- inner_join(cor_spearman[c("First.Variable",
                                         "Second.Variable")],
                          cor_kendall[c("First.Variable",
                                        "Second.Variable")])
plot_correlation_columns(load_data(application, experiments), correlations,
                         "spearman_kendall", application)

correlations <- inner_join(inner_join(cor_pearson[c("First.Variable",
                                                    "Second.Variable")],
                                      cor_spearman[c("First.Variable",
                                                     "Second.Variable")]),
                           cor_kendall[c("First.Variable",
                                         "Second.Variable")])

plot_correlation_columns(load_data(application, experiments), correlations,
                         "pearson_spearman_kendall", application)

#+end_src

#+RESULTS:
#+begin_example
                               First.Variable Second.Variable Correlation
677                set_parameter.MULTIPUMPING            Pins  -1.0000000
1206                                   Blocks             RAM   1.0000000
370  set_operation_latency.unsigned_divide_64            FMax   0.9580363
1238             set_parameter.MB_MINIMIZE_HW             DPS   0.8393787
1050                                   Cycles          Blocks  -0.8387330
1201                                   Cycles             RAM  -0.8387330
803  set_operation_latency.signed_multiply_16            Regs   0.7855710
887   set_resource_constraint.altfp_divide_32            Regs   0.7689415
852       set_operation_latency.signed_add_64            Regs   0.7659582
394      set_resource_constraint.signed_add_8            FMax   0.7571533
                                First.Variable Second.Variable Correlation
677                 set_parameter.MULTIPUMPING            Pins  -1.0000000
1206                                    Blocks             RAM   1.0000000
1281                set_parameter.MULTIPUMPING             DPS   0.8090146
1355                                      Pins             DPS  -0.8090146
1238              set_parameter.MB_MINIMIZE_HW             DPS   0.7857013
331  set_resource_constraint.altfp_subtract_16            FMax   0.7223399
370   set_operation_latency.unsigned_divide_64            FMax   0.7210865
219   set_operation_latency.unsigned_divide_64          Cycles   0.7129351
821        set_operation_latency.signed_add_32            Regs   0.7084865
415      set_operation_latency.altfp_divide_32            FMax  -0.6974540
                                First.Variable Second.Variable Correlation
677                 set_parameter.MULTIPUMPING            Pins  -1.0000000
1206                                    Blocks             RAM   1.0000000
1281                set_parameter.MULTIPUMPING             DPS   0.7561760
1355                                      Pins             DPS  -0.7561760
1238              set_parameter.MB_MINIMIZE_HW             DPS   0.7343854
984                 set_parameter.PIPELINE_ALL          Blocks   0.6139115
1135                set_parameter.PIPELINE_ALL             RAM   0.6139115
821        set_operation_latency.signed_add_32            Regs   0.6039735
370   set_operation_latency.unsigned_divide_64            FMax   0.5961823
331  set_resource_constraint.altfp_subtract_16            FMax   0.5900102
Joining, by = c("First.Variable", "Second.Variable")
 plot: [1,1] [=-------------------------------------------------]  2% est: 0s  plot: [1,2] [==------------------------------------------------]  3% est: 2s  plot: [1,3] [==------------------------------------------------]  5% est: 3s  plot: [1,4] [===-----------------------------------------------]  6% est: 3s  plot: [1,5] [====----------------------------------------------]  8% est: 3s  plot: [1,6] [=====---------------------------------------------]  9% est: 3s  plot: [1,7] [=====---------------------------------------------] 11% est: 3s  plot: [1,8] [======--------------------------------------------] 12% est: 3s  plot: [2,1] [=======-------------------------------------------] 14% est: 3s  plot: [2,2] [========------------------------------------------] 16% est: 3s  plot: [2,3] [=========-----------------------------------------] 17% est: 3s  plot: [2,4] [=========-----------------------------------------] 19% est: 3s  plot: [2,5] [==========----------------------------------------] 20% est: 3s  plot: [2,6] [===========---------------------------------------] 22% est: 3s  plot: [2,7] [============--------------------------------------] 23% est: 3s  plot: [2,8] [============--------------------------------------] 25% est: 3s  plot: [3,1] [=============-------------------------------------] 27% est: 3s  plot: [3,2] [==============------------------------------------] 28% est: 3s  plot: [3,3] [===============-----------------------------------] 30% est: 3s  plot: [3,4] [================----------------------------------] 31% est: 3s  plot: [3,5] [================----------------------------------] 33% est: 2s  plot: [3,6] [=================---------------------------------] 34% est: 2s  plot: [3,7] [==================--------------------------------] 36% est: 2s  plot: [3,8] [===================-------------------------------] 38% est: 2s  plot: [4,1] [====================------------------------------] 39% est: 2s  plot: [4,2] [====================------------------------------] 41% est: 2s  plot: [4,3] [=====================-----------------------------] 42% est: 2s  plot: [4,4] [======================----------------------------] 44% est: 2s  plot: [4,5] [=======================---------------------------] 45% est: 2s  plot: [4,6] [=======================---------------------------] 47% est: 2s  plot: [4,7] [========================--------------------------] 48% est: 2s  plot: [4,8] [=========================-------------------------] 50% est: 2s  plot: [5,1] [==========================------------------------] 52% est: 2s  plot: [5,2] [===========================-----------------------] 53% est: 2s  plot: [5,3] [===========================-----------------------] 55% est: 2s  plot: [5,4] [============================----------------------] 56% est: 2s  plot: [5,5] [=============================---------------------] 58% est: 2s  plot: [5,6] [==============================--------------------] 59% est: 2s  plot: [5,7] [==============================--------------------] 61% est: 1s  plot: [5,8] [===============================-------------------] 62% est: 1s  plot: [6,1] [================================------------------] 64% est: 1s  plot: [6,2] [=================================-----------------] 66% est: 1s  plot: [6,3] [==================================----------------] 67% est: 1s  plot: [6,4] [==================================----------------] 69% est: 1s  plot: [6,5] [===================================---------------] 70% est: 1s  plot: [6,6] [====================================--------------] 72% est: 1s  plot: [6,7] [=====================================-------------] 73% est: 1s  plot: [6,8] [======================================------------] 75% est: 1s  plot: [7,1] [======================================------------] 77% est: 1s  plot: [7,2] [=======================================-----------] 78% est: 1s  plot: [7,3] [========================================----------] 80% est: 1s  plot: [7,4] [=========================================---------] 81% est: 1s  plot: [7,5] [=========================================---------] 83% est: 1s  plot: [7,6] [==========================================--------] 84% est: 1s  plot: [7,7] [===========================================-------] 86% est: 1s  plot: [7,8] [============================================------] 88% est: 0s  plot: [8,1] [=============================================-----] 89% est: 0s  plot: [8,2] [=============================================-----] 91% est: 0s  plot: [8,3] [==============================================----] 92% est: 0s  plot: [8,4] [===============================================---] 94% est: 0s  plot: [8,5] [================================================--] 95% est: 0s  plot: [8,6] [================================================--] 97% est: 0s  plot: [8,7] [=================================================-] 98% est: 0s  plot: [8,8] [==================================================]100% est: 0s                                                                               [1] "Plot generated at /home/phrb/org/journal/legup-tuner/post_place_and_route/py/results/r_scripts/correlations/pearson_spearman_largest_dfdiv.eps"
null device 
          1 
Warning message:
In lapply(X = X, FUN = FUN, ...) : NAs introduced by coercion
Joining, by = c("First.Variable", "Second.Variable")
                            First.Variable Second.Variable
1               set_parameter.MULTIPUMPING            Pins
2                                   Blocks             RAM
3 set_operation_latency.unsigned_divide_64            FMax
4             set_parameter.MB_MINIMIZE_HW             DPS
Joining, by = c("First.Variable", "Second.Variable")
                             First.Variable Second.Variable
1                set_parameter.MULTIPUMPING            Pins
2                                    Blocks             RAM
3                set_parameter.MULTIPUMPING             DPS
4                                      Pins             DPS
5              set_parameter.MB_MINIMIZE_HW             DPS
6 set_resource_constraint.altfp_subtract_16            FMax
7  set_operation_latency.unsigned_divide_64            FMax
8       set_operation_latency.signed_add_32            Regs
Joining, by = c("First.Variable", "Second.Variable")
Joining, by = c("First.Variable", "Second.Variable")
                            First.Variable Second.Variable
1               set_parameter.MULTIPUMPING            Pins
2                                   Blocks             RAM
3 set_operation_latency.unsigned_divide_64            FMax
4             set_parameter.MB_MINIMIZE_HW             DPS
#+end_example

**** Discussions with Arnaud and Brice :DOE:FPGA:Autotuning:Arnaud:DataVis:
- Read [[https://hal.inria.fr/hal-01579422][Steven's reports]]
- Introduction to Experiment Design and in particular to screening:
  https://github.com/alegrand/SMPE/blob/master/lectures/5_design_of_experiments.pdf
- Reading Jain's book entitled "The Art of Computer Systems
  Performance Analysis" could be a good thing too.
- Correlations can be fixed for non-linear relations but the measure
  monotony. If the relation is quadratic, this notion of correlation
  is completely irrelevant.
***** Particular difficulties
- Data is messy:
  - some metrics are perfectly related
  - some metrics have only two possible values
  - some metrics have very few possible values
  - some parameters seem to be correlated to each others as we got NAs
    in the regression and a perfect (over)fit.
  - parameter space is biased by the learning algorithm
- High parameter dimension:
  - A good sample is anyway not possible. This means the initial
    sample may strongly bias our analysis as many large areas of the
    space will not be covered.
  - Having indications of which parameters are the most influent is
    generally done through 2-level factorial designs.
    - This misses possible non linear (concave or convex) relations,
      which may be important here.
    - With so many dimensions only saturated screening designs would
      have a chance to provide some relevant feedback. One would then
      completely ignore interactions.
      they 
- Quantile regression: most techniques (anova, linear model, or even
  correlations...) to analyze the experiments focus on the average
  behavior whereas we are rather looking for minimas, hence quantile
  regression. Such regression can be hard to use and may not be very
  robust in high dimension.
- Pareto optimization:
  - We still do not know what the space looks like
*** [2017-12-14 Thu]
- Configure ~spacemacs~
- Ask Danilo for information for ADUM and Cotutelle
**** Cleaning FPGA Datasets               :R:Code:FPGA:Autotuning:DataVis:
#+call: update_legup_tuner()

#+RESULTS:
: Already up to date.

Setting up variables

#+HEADER: :results output :session *R* :exports both
#+HEADER: :var repository_dir=repository_dir
#+BEGIN_SRC R

library(dplyr)
library(tidyr)
library(GGally)
library(plotly)

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

plot_dir <- c(repository_dir,
              "/legup-tuner/",
              "post_place_and_route/py/results/r_scripts/",
              "correlations")

experiments <- c("balanced", "area", "perf", "perflat")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

hardware_metrics <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs",
                      "Blocks", "RAM", "DPS")

load_data <- function(application, experiments) {
    data       <- data.frame()

    for (experiment in experiments) {
        new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                                   experiment, paste(application,
                                                     ".csv",
                                                     sep = ""),
                                   sep = "/"),
                             header = TRUE, sep = ",")

        new_data <- as.data.frame(new_data)

        if (ncol(data) == 0) {
            data <- new_data
        } else {
            data <- rbind(data, new_data)
        }
    }

    data  <- as.data.frame(data)
    return(data)
}

#+END_SRC

#+RESULTS:

First, remove all ~NA~ values:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
data <- load_data("dfdiv", experiments)

dim(data)

data <- data %>% drop_na()

dim(data)
#+END_SRC

#+RESULTS:
: [1] 526 151
: [1] 526 151

It seems this dataset has no ~NA~, which is weird since we found them in other
settings. Now, let's remove ~Inf~ values:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
data <- data[is.finite(data$WNS),]

dim(data)
#+END_SRC

#+RESULTS:
: [1] 317 151

It seems we had a lot of ~Inf~ values for ~WNS~. To make it clear, ~Inf~ appears
when there was an error during compilation, high-level synthesis or execution.

Now, let's remove some *hardware metrics*. We will remove *WNS* because we could
recompute it with the other metrics if needed. We will remove *Blocks* and *RAM*
because they are correlated with *Regs*. We will remove *LUs* and *Pins* because
they seem to assume only one or two values across the data set. Finally, we will
remove *FMax* and *Cycles* but add *MKS*, the *makespan* or *wall-clock time*,
computed as ~Cycles / (1000 * FMax)~.

In fact, we should look at the correlations between *hardware metrics*
to decide what to keep and what to leave behind:

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 800
#+BEGIN_SRC R
ggpairs(data, columns = hardware_metrics,
        mapping = ggplot2::aes(alpha = .1))
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-2401hm4/figure2401t1n.png]]

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
data <- data %>% mutate(MKS = (Cycles / (1000 * FMax)))

data <- select(data, -one_of(c("WNS", "Blocks", "RAM", "LUs", "Pins", "Cycles",
                               "FMax")))
dim(data)

tail(names(data), 8)

data_bak = data
#+END_SRC

#+RESULTS:
: [1] 317 145
: [1] "set_resource_constraint.altfp_divide_8"      
: [2] "set_resource_constraint.altfp_subtract_32"   
: [3] "set_resource_constraint.signed_modulus_8"    
: [4] "set_resource_constraint.signed_divide_64"    
: [5] "set_resource_constraint.shared_mem_dual_port"
: [6] "Regs"                                        
: [7] "DPS"                                         
: [8] "MKS"

**** Seminar: Learning Nash Equilibria in Distributed Systems
- Compares multi-agent learning in economics and computer science
  - Recommender Systems
  - Online markets
- Learning rules:
  - Update behaviour with information from experience
  - Uncoupled from other players' payoffs
- Model
  - Exploration and exploitation are "mood" based
    - "Moods" are agent states that control rates
      of exploration, exploitation
    - These states change according to changes in
      payoffs
- Conclusion
  - Multi-agent learning achieves welfare maximizing equilibria, despite using
    uncoupled strategies
**** Arnaud's Lecture
- *Thursdays*: 3:45pm to 5:15pm
- *Amphi H Ensimag* (H building)
- Today: DoE
***** Ideas for DoE-Inspired Autotuning:
- *Question:*
  - Is there a metric for expressing how the accuracy of estimates
    made from incomplete experimental designs changes as experiments are
    completed?
- Parallel and distributed "search" algorithms
- Generate sets of experimental designs, such as 2^p:
  - Generate experiments for different tuples of
    parameters and metrics
  - Generate experiments in blocks, to be performed
    by different experimenters
  - As shown by Arnaud, experiments should be represented
    by matrices with parameter values
- Distribute experiment blocks between algorithms:
  - Search algorithms *perturb lines and columns* of the
    experiment matrices, *instead of directly changing parameters*
  - What can we get from incomplete experiments?
  - Does autotuning stop if it finds a "good-enough" point?
- Variability of experimental designs:
  - Small designs:
    - Finish fast
    - Get statistics and generate new ones
  - Large designs:
    - Could be "bets" on certain relationships
    - Could provide more robust statistics when finished
  - How to determine how variable the designs should be?
*** [2017-12-15 Fri]
**** Continue work on [[Cleaning FPGA Datasets][Cleaning FPGA Datasets]] :R:Code:FPGA:Autotuning:DataVis:
***** Clean Data Reading Function
#+HEADER: :results output :session *R* :exports both
#+HEADER: :var repository_dir=repository_dir
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/load_data.r
#+NAME: define_load_data
#+BEGIN_SRC R

library(dplyr)
library(tidyr)
library(GGally)
library(plotly)

csv_dir <- c(repository_dir,
             "/legup-tuner/",
             "post_place_and_route/py/results/r_scripts/",
             "data")

plot_dir <- c(repository_dir,
              "/legup-tuner/",
              "post_place_and_route/py/results/r_scripts/",
              "correlations")

experiments <- c("balanced", "area", "perf", "perflat")

applications <- c("dfadd", "dfdiv", "dfmul", "sha", "motion", "adpcm",
                  "dfsin", "aes", "blowfish", "gsm", "mips")

hardware_metrics <- c("WNS", "Cycles", "FMax", "LUs", "Pins", "Regs",
                      "Blocks", "RAM", "DPS")

load_data <- function(application, experiments, removed_columns) {
    data <- data.frame()

    for (experiment in experiments) {
        new_data <- read.csv(paste(paste(csv_dir, collapse = ""),
                                   experiment, paste(application,
                                                     ".csv",
                                                     sep = ""),
                                   sep = "/"),
                             header = TRUE, sep = ",")

        new_data <- as.data.frame(new_data)

        new_data["experiment"] <- rep(experiment, nrow(new_data))

        if (ncol(data) == 0) {
            data <- new_data
        } else {
            data <- rbind(data, new_data)
        }
    }

    data <- as.data.frame(data)
    data <- data %>% drop_na()
    data <- data[is.finite(data$WNS),]
    data <- data %>% mutate(MKS = (Cycles / (1000 * FMax)))
    data <- select(data, -one_of(removed_columns))
    return(data)
}

#+END_SRC

#+RESULTS: define_load_data

#+RESULTS:

**** Looking at Clean Data                :R:Code:FPGA:Autotuning:DataVis:
Now that we have only 3 *hardware metrics*, we can look at their relationships
in 3D. The next code block generates a 3D scatter plot for *MKS*, *Regs* and
*DPS*. The plot is interactive and will be opened in your browser. We will use
the =plotly= library for the 3D plot.

#+CALL: update_legup_tuner()

#+RESULTS:
: Already up to date.

#+CALL: define_load_data()

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Attaching package: ‘GGally’

The following object is masked from ‘package:dplyr’:

    nasa
Loading required package: ggplot2

Attaching package: ‘plotly’

The following object is masked from ‘package:ggplot2’:

    last_plot

The following object is masked from ‘package:stats’:

    filter

The following object is masked from ‘package:graphics’:

    layout
#+end_example

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
removed <- c("WNS", "Blocks", "RAM", "LUs", "Pins", "Cycles", "FMax")
data <- load_data("dfdiv", experiments, removed)

p <- plot_ly(data, x = ~MKS, y = ~Regs, z = ~DPS, color = ~set_operation_latency.unsigned_divide_64) %>%
     add_markers() %>%
     layout(scene = list(xaxis = list(title = 'MKS'),
                         yaxis = list(title = 'Regs'),
                         zaxis = list(title = 'DSP')))
p
#+END_SRC

#+RESULTS:

Now, let's try to clean the data set a little bit more, by checking how many
*parameters* have less than a specific number values across the data set. We
will check how many parameters have at least ~n~ distinct values, for ~1 <= n
<= 26~. I chose ~26~ as the upper limit for distinct values because no
parameter has at least ~26~ distinct values in this data set:

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
count_uniques <- function(x, n) {
  uniques <- length(unique(x))
  if (uniques >= n) {
      return(uniques)
  } else {
      return(NA)
  }
}

clear_uniques <- function(x, y) {
    uniques <- as.data.frame(y)
    return(c(x, dim(na.omit(uniques))[1]))
}

uniques <- sapply(c(1:26),
                  function(x) clear_uniques(x, 
                                            apply(data, 2,
                                                  function(y) count_uniques(y,
                                                                            x))))
uniques <- as.data.frame(t(uniques))
names(uniques) <- c("Distinct.Values", "Parameters")

ggplot(uniques, aes(x = Distinct.Values, y = Parameters)) +
       geom_point() + geom_line() +
       scale_x_continuous(breaks = seq(min(uniques$Distinct.Values),
                                       max(uniques$Distinct.Values),
                                       by = 2)) +
       scale_y_continuous(breaks = seq(min(uniques$Parameters),
                                       max(uniques$Parameters),
                                       by = 10))
#+END_SRC 

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816VGs.png]]

I wanted to check which is the only *parameter* that has 25
distinct values:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
uniques <- apply(data, 2, function(y) count_uniques(y, 25))
uniques <- na.omit(uniques)
names(uniques)

#+END_SRC

#+RESULTS:
: [1] "X"                                "set_parameter.MB_MAX_BACK_PASSES"
: [3] "Regs"                             "MKS"

Let's see how it relates to ~MKS~, ~Regs~ and ~DSP~:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
p <- plot_ly(data, x = ~MKS, y = ~Regs, z = ~DPS,
             color = ~set_parameter.MB_MAX_BACK_PASSES) %>%
     add_markers() %>%
     layout(scene = list(xaxis = list(title = 'MKS'),
                         yaxis = list(title = 'Regs'),
                         zaxis = list(title = 'DSP')))
p
#+END_SRC

#+RESULTS:

It does not seem to be "strongly responsible" for the behaviour of any of the
metrics...

**** Computing the Pareto Border          :R:Code:FPGA:Autotuning:DataVis:
We will use the [[http://www.p-roocks.de/rpref/index.php][rPref]] package for computing the Pareto border.

#+CALL: update_legup_tuner()

#+RESULTS:
: Already up to date.

#+CALL: define_load_data()

#+RESULTS:

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
library(rPref)

removed <- c("WNS", "Blocks", "RAM", "LUs", "Pins", "Cycles", "FMax")
data <- load_data("dfdiv", experiments, removed)

criterion <- low(MKS) * low(Regs) 

pareto <- psel(data, criterion) 

ggplot(data, aes(x = MKS, y = Regs)) + 
       geom_point(color = "darkgray") +
       geom_point(data = pareto, color = "blue") +
       geom_line(data = pareto, color = "blue")
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816x4W.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
criterion <- low(MKS) * low(Regs) 

pareto <- psel(data, criterion, top = nrow(data)) 

ggplot(pareto, aes(x = MKS, y = Regs, color = factor(.level))) + 
       geom_point(size = 3) 
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816-Cd.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
criterion <- low(MKS) * low(DPS) 

pareto <- psel(data, criterion) 

ggplot(data, aes(x = MKS, y = DPS)) + 
       geom_point(color = "darkgray") +
       geom_point(data = pareto, color = "blue") +
       geom_line(data = pareto, color = "blue")
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816LNj.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
criterion <- low(MKS) * low(DPS) 

pareto <- psel(data, criterion, top = nrow(data)) 

ggplot(pareto, aes(x = MKS, y = DPS, color = factor(.level))) + 
       geom_point(size = 3) 
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816YXp.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
criterion <- low(Regs) * low(DPS) 

pareto <- psel(data, criterion) 

ggplot(data, aes(x = Regs, y = DPS)) + 
       geom_point(color = "darkgray") +
       geom_point(data = pareto, color = "blue") +
       geom_line(data = pareto, color = "blue")
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816lhv.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
criterion <- low(Regs) * low(DPS) 

pareto <- psel(data, criterion, top = nrow(data)) 

ggplot(pareto, aes(x = Regs, y = DPS, color = factor(.level))) + 
       geom_point(size = 3) 
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816k1E.png]]

*** [2017-12-18 Mon]
- An interesting read: [[https://docs.julialang.org/en/latest/manual/performance-tips/][Julia Performance Tips]] 
**** Configuring Julia in OrgMode
I created some Julia setup functions that install a few interesting
packages. For Julia to be more useful I will use the stable version in this
Journal.

#+CALL: install_julia_deps()

#+CALL: update_julia_pkg()

***** Testing Plotting with Gadfly 

#+HEADER: :results output graphics :session *julia* :exports both
#+HEADER: :file "/tmp/gadfly_test.png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC julia
using Gadfly
using RDatasets

iris = dataset("datasets", "iris")
p = plot(iris, x=:SepalLength, y=:SepalWidth, Geom.point);
img = PNG("/tmp/gadfly_test.png", 6inch, 4inch)
draw(img, p)
#+END_SRC

#+RESULTS:
[[file:/tmp/gadfly_test.png]]
**** Looking Further at Clean Data ([[Looking at Clean Data][Continued]])
#+CALL: update_legup_tuner()

#+RESULTS:
: Already up to date.

#+CALL: define_load_data()

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Attaching package: ‘GGally’

The following object is masked from ‘package:dplyr’:

    nasa
Loading required package: ggplot2

Attaching package: ‘plotly’

The following object is masked from ‘package:ggplot2’:

    last_plot

The following object is masked from ‘package:stats’:

    filter

The following object is masked from ‘package:graphics’:

    layout
#+end_example

#+NAME: define_parameter_cleaning_functions
#+HEADER: :results output :session *R* :exports both
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/plot_parameter_variability.r
#+BEGIN_SRC R
count_uniques <- function(x, n) {
  uniques <- length(unique(x))
  if (uniques >= n) {
      return(uniques)
  } else {
      return(NA)
  }
}

clear_uniques <- function(x, y) {
    uniques <- as.data.frame(y)
    return(c(x, dim(na.omit(uniques))[1]))
}

plot_uniques <- function(range, data) {
    uniques <- sapply(range,
                      function(x) clear_uniques(x, 
                                                apply(data, 2,
                                                      function(y) count_uniques(y,
                                                                                x))))
    uniques <- as.data.frame(t(uniques))
    names(uniques) <- c("Distinct.Values", "Parameters")

    ggplot(uniques, aes(x = Distinct.Values, y = Parameters)) +
          geom_point() + geom_line() +
          scale_x_continuous(breaks = seq(min(uniques$Distinct.Values),
                                          max(uniques$Distinct.Values),
                                          by = 2)) +
          scale_y_continuous(breaks = seq(min(uniques$Parameters),
                                          max(uniques$Parameters),
                                          by = 10),
                             trans = "log")
}

get_parameters_with_values <- function(threshold, data) {
    uniques <- apply(data, 2, function(y) count_uniques(y, threshold))
    uniques <- na.omit(uniques)
    parameters <- names(uniques)
    return(parameters[!(parameters %in% c("MKS", "Regs", "DPS", "X"))])
}
#+END_SRC 

#+RESULTS: define_parameter_cleaning_functions

Looking at parameter "variability" for all parameters in the dataset:

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
removed <- c("WNS", "Blocks", "RAM", "LUs", "Pins", "Cycles", "FMax")
data <- load_data("dfdiv", experiments, removed)
plot_uniques(c(1:26), data)
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-9460ux/figure946b6K.png]]

Let's focus, arbitrarily, in the parameters with no less than *11* distinct
values:

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 800
#+BEGIN_SRC R
names <- get_parameters_with_values(11, data)

setEPS()

postscript("/tmp/ggpairs_few_metrics.eps", width = 16, height = 16)

ggpairs_plot <- ggpairs(data, columns = c(c("MKS", "DPS", "Regs"), names),
                        mapping = ggplot2::aes(alpha = .1))

print(ggpairs_plot)

dev.off()

ggpairs_plot
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816w-D.png]]
**** Computing Pareto Border for the 3 Metrics ([[Computing the Pareto Border][Continued]])
We will use the [[http://www.p-roocks.de/rpref/index.php][rPref]] package for computing the Pareto border.

#+CALL: update_legup_tuner()

#+RESULTS:
: Already up to date.

#+CALL: define_load_data()

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Attaching package: ‘GGally’

The following object is masked from ‘package:dplyr’:

    nasa
Loading required package: ggplot2

Attaching package: ‘plotly’

The following object is masked from ‘package:ggplot2’:

    last_plot

The following object is masked from ‘package:stats’:

    filter

The following object is masked from ‘package:graphics’:

    layout
#+end_example


#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 800
#+BEGIN_SRC R
library(rPref)

removed <- c("WNS", "Blocks", "RAM", "LUs", "Pins", "Cycles", "FMax")
data <- load_data("dfdiv", experiments, removed)

criterion <- low(Regs) * low(DPS) * low(MKS)

pareto <- psel(data, criterion, top = nrow(data)) 

pareto <- pareto[with(pareto, order(X)), ]

ggplot(pareto, aes(x = MKS, y = Regs, color = (.level == 1))) + 
       geom_point(size = 3) +
       geom_point(data = pareto[1 ,],
                  aes(x = MKS, y = Regs),
                  color = "black",
                  shape = 2,
                  size = 5)
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-9460ux/figure946oER.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 800
#+BEGIN_SRC R
ggplot(pareto, aes(x = MKS, y = DPS, color = (.level == 1))) + 
       geom_point(size = 3)  +
       geom_point(data = pareto[1 ,],
                  aes(x = MKS, y = DPS),
                  color = "black",
                  shape = 2,
                  size = 5)
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816xxi.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 800
#+BEGIN_SRC R
ggplot(pareto, aes(x = Regs, y = DPS, color = (.level == 1))) + 
       geom_point(size = 3)  +
       geom_point(data = pareto[1 ,],
                  aes(x = Regs, y = DPS),
                  color = "black",
                  shape = 2,
                  size = 5)
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-8816rvR/figure8816-7o.png]]

Generating a 3D plot:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
best <- which.min(pareto$MKS + pareto$Regs + pareto$DPS)
p <- plot_ly(pareto, x = ~MKS, y = ~Regs, z = ~DPS, color = ~(.level == 1),
             colors = "Set1") %>%
     add_markers() %>%
     layout(scene = list(annotations = list(list(x = pareto[1, "MKS"],
                                                 y = pareto[1, "Regs"],
                                                 z = pareto[1, "DPS"],
                                                 text = "Starting Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                             list(x = pareto[nrow(pareto), "MKS"],
                                                 y = pareto[nrow(pareto), "Regs"],
                                                 z = pareto[nrow(pareto), "DPS"],
                                                 text = "Final Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                             list(x = pareto[best, "MKS"],
                                                 y = pareto[best, "Regs"],
                                                 z = pareto[best, "DPS"],
                                                 text = "Best Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1)),
                         xaxis = list(title = 'MKS'),
                         yaxis = list(title = 'Regs'),
                         zaxis = list(title = 'DSP')))

p
#+END_SRC

#+RESULTS:

#+NAME: define_plot_3D_pareto
#+HEADER: :results output :exports both :session *R*
#+HEADER: :tangle legup-tuner/post_place_and_route/py/results/r_scripts/plot_3D_pareto.r
#+BEGIN_SRC R
library(rPref)
plot_3D_pareto <- function(data) {
    criterion <- low(MKS) * low(Regs) * low(DPS)

    pareto <- psel(data, criterion, top = nrow(data)) 

    pareto <- pareto[with(pareto, order(X)), ]

    p <- plot_ly(pareto, x = ~MKS, y = ~Regs, z = ~DPS, color = ~(.level == 1),
                colors = "Set1") %>%
        add_markers() %>%
        layout(scene = list(annotations = list(list(x = pareto[1, "MKS"],
                                                    y = pareto[1, "Regs"],
                                                    z = pareto[1, "DPS"],
                                                    text = "Starting Point",
                                                    textangle = 0,
                                                    font = list(color = "black",
                                                                size = 12),
                                                    arrowcolor = "black",
                                                    arrowsize = 3,
                                                    arrowwidth = 1,
                                                    arrowhead = 1)),
                            xaxis = list(title = 'MKS'),
                            yaxis = list(title = 'Regs'),
                            zaxis = list(title = 'DSP')))

    return(p)
}
#+END_SRC

#+RESULTS: define_plot_3D_pareto

**** Seminar: Autotuning MPI Collectives using Performance Guidelines
- MPI Benchmark: Ohio State University Micro-Benchmarks (OSU)
  - For example, measures latency of ~MPIGather~ calls
  - Measuring MPI execution times is not trivial
  - Benchmark does not measure Makespan:
    - (Sum of time spent in MPI functions) / (Number of Processes)
  - System noise impacts short measurements more
    - Smaller experiment size get more variability than longer experiments
- Discuss some MPI performance guidelines and programming patterns
- *NREP Problem*: find a suitable *number of repetitions*
  such that the *run-time* metric is *reproducible*
  - Obtain distribution of run-time measurements for different
    message sizes
  - Apply statistical tests
- PGMPITuneLib:
  - User links the library to their MPI code
  - Selects optimized functions according to problem and
    user memory constraints
  - Repository in https://github.com/hunsa/pgmpi
**** Looking at Pareto Border with Arnaud
- John Kitchin's group at CMU: Async Org Mode Calls
- Grigori Fursin: Multi-objective compiler auto-tuning using mobile phones
  - Check [[http://mescal.imag.fr/membres/arnaud.legrand/teaching/2013/PC_11_linalg.pdf][this presentation]]
*** [2017-12-19 Tue]
- Update NODAL for latest Julia version
- Parametrize ~load_data~
**** Read [[https://hal.inria.fr/hal-01579422][Steven's report]]
***** Case Study
- Objective: Optimize a Laplacian kernel to minimize the time it takes
             to compute one pixel.
- 7 Parameters
- Warm-up effects on GPUs due to power consumption optimizations
- Fixed tuning strategy:
  - The strategy mentions points are taken at random at each step,
    but shouldn't it in fact use the current algorithm?
    - Example: "Sample 50 points at random", for the GA, would be
      "evaluate 50 candidates"?
- Good performance of Random-based search methods:
  - In this search space, there is a high probability
    of finding a configuration with small slowdown
  - Even though there are configurations with +300x
    slowdown, they are much rarer than better configurations
  - *Question:* Could this be the case for most autotuning problems?
**** Looking at Other CHStone Applications
#+CALL: update_legup_tuner()

#+RESULTS:
: Already up to date.

#+CALL: define_load_data()

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Attaching package: ‘GGally’

The following object is masked from ‘package:dplyr’:

    nasa
Loading required package: ggplot2

Attaching package: ‘plotly’

The following object is masked from ‘package:ggplot2’:

    last_plot

The following object is masked from ‘package:stats’:

    filter

The following object is masked from ‘package:graphics’:

    layout
#+end_example

#+CALL: define_parameter_cleaning_functions()

#+RESULTS:

#+CALL: define_plot_3D_pareto()

#+RESULTS:
: 
: Attaching package: ‘rPref’
: 
: The following object is masked from ‘package:dplyr’:
: 
:     between

Using our previously-defined utility functions, let's look at the data for the
experiments with other CHStone applications:

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 800
#+BEGIN_SRC R
library(GGally)

application <- "dfdiv"

data <- load_data(application, experiments, c("WNS", "FMax", "Cycles"))

ggpairs(data, columns = tail(names(data), n = 7))
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-850Xi8/figure850PMc.png]]

#+HEADER: :results output graphics :session *R* :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
removed <- c("WNS", "Blocks", "RAM", "LUs", "Pins", "Cycles", "FMax")
data <- load_data(application, experiments, c("WNS", "FMax", "Cycles"))

plot_uniques(c(1:26), data)
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-850Xi8/figure8502qu.png]]

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
plot_3D_pareto(data)
#+END_SRC

#+RESULTS:

By looking at the data for all applications, we can see that the *Blocks*,
*RAM*, *LUs* and *Pins* have almost always one or two values, and are correlated
in some cases. The *DSP* metric has more variability, but also presents a single
value in some applications.

Therefore, it seems reasonable to describe the optimization objective as
minimizing *MKS*, *Regs* and *DSP*.
*** [2017-12-20 Wed]
**** Meeting with Brice
- Summarized the recent analysis of the FPGA data:
  - Dropping most hardware metrics does make sense for all
    tested applications: It seems reasonable to describe the optimization
    objective as minimizing *MKS*, *Regs* and *DSP*. Although *DSP* has
    few values in some applications as well.
  - Highlighting the starting configuration in the 3D Pareto border
    plots helps visualizinng the bias of the search algorithms:
    most evaluated configurations are close to the starting point.
  - Regarding the variability of the parameters, Brice noted the
    shape of the graph of number of parameters vs. distinct values is
    similar to a [[https://en.wikipedia.org/wiki/Log-normal_distribution][Log-normal Distribution]], which is also found in
    file size distributions. ([[https://link.springer.com/article/10.1140%252Fepjb%252Fe2011-20581-3][This book]] is related to these distributions,
                              but unrelated to this work, it seemed curious)
- Discussion about Steven's Report:
  - Although the probability of finding configurations with high slowdowns
    was small in Steven's study, it seems likely that this is not the case
    for other autotuning problems. In particular, Brice mentioned that
    targeting different architectures tipically lowers the probability
    of finding good configurations. See [[https://succes2017.sciencesconf.org/data/Talk_BOAST_SUCCES_Grenoble.pdf][this presentation]] for an example.
- Discussion about Design of Experiments:
  - It is possible to measure the "quality" of estimates made with
    partially-complete experimental designs. Brice recommended reading
    Jain's book to learn more about this.
  - Brice thinks restricting search algorithms to an experimental design
    could be interesting
- TODOs:
  - Read Jain's book to better understand how to extract information
    from incomplete experimental designs
  - Learn more about BOAST: install it, read the papers in the [[https://forge.imag.fr/projects/boast/][repository]]
**** Reading Jain's The Art of Computer Systems Performance Analysis
- 2^k Factorial Designs
- 2^(k-p) Factorial Designs
- Simple techniques for computing the impact of
  each factor in the *variability* of each response.
- Reading about Factorial Designs in Montgomery's book as well
**** Checking [[http://prof.beuth-hochschule.de/groemping/software/versuchsplanung/][Ulrike Grömping]]'s R packages for Experimental Design
- Downloaded FrF2 [[https://cran.r-project.org/web/packages/FrF2/index.html][source from CRAN]]
**** Generating 2^k Factorial Designs in Julia
Here I will generate some simple 2^k factorial designs
in Julia with mockup responses, and attempt to follow
the examples in Chapter 17 of Jain's book.
***** Section 17.3: Sign Table Method
First, let's generate experiments for factors *A*, *B*, and their
interaction *AB*, with response variable *Y* and identity column *I*.
We are using the ~IterTools~ module for generating the combinations
of factor values and the ~DataFrames~ module so we can use R-like
data frame structures. The values for the response variable *Y*
come from the example in Jain's book.

#+HEADER: :results output :exports both :session *julia*
#+BEGIN_SRC julia
using DataFrames, IterTools
factors = 2
response = [15, 45, 25, 75]

combinations = [p for p in product(repeat([[-1, 1]], inner = factors)...)]

sign_table = DataFrame(I  = ones(combinations, Int),
                       A  = [p[1] for p in combinations],
                       B  = [p[2] for p in combinations],
                       AB = [p[1] * p[2] for p in combinations],
                       Y  = response)

totals = [dot(sign_table[c], sign_table[:Y]) for c in
             [n for n in names(sign_table)[1:end - 1]]]

push!(totals, 0)
push!(sign_table, totals)
push!(sign_table, totals ./ 4)

sign_table
#+END_SRC

#+RESULTS:
#+begin_example

2
4-element Array{Int64,1}:
 15
 45
 25
 75

4-element Array{Tuple{Int64,Int64},1}:
 (-1, -1)
 (1, -1) 
 (-1, 1) 
 (1, 1)

4×5 DataFrames.DataFrame
│ Row │ I │ A  │ B  │ AB │ Y  │
├─────┼───┼────┼────┼────┼────┤
│ 1   │ 1 │ -1 │ -1 │ 1  │ 15 │
│ 2   │ 1 │ 1  │ -1 │ -1 │ 45 │
│ 3   │ 1 │ -1 │ 1  │ -1 │ 25 │
│ 4   │ 1 │ 1  │ 1  │ 1  │ 75 │

4-element Array{Int64,1}:
 160
  80
  40
  20

5-element Array{Int64,1}:
 160
  80
  40
  20
   0



6×5 DataFrames.DataFrame
│ Row │ I   │ A  │ B  │ AB │ Y  │
├─────┼─────┼────┼────┼────┼────┤
│ 1   │ 1   │ -1 │ -1 │ 1  │ 15 │
│ 2   │ 1   │ 1  │ -1 │ -1 │ 45 │
│ 3   │ 1   │ -1 │ 1  │ -1 │ 25 │
│ 4   │ 1   │ 1  │ 1  │ 1  │ 75 │
│ 5   │ 160 │ 80 │ 40 │ 20 │ 0  │
│ 6   │ 40  │ 20 │ 10 │ 5  │ 0  │
#+end_example

*** [2017-12-21 Thu]
- Continue work on [[Generating 2^k Factorial Designs in Julia][Generating Designs in Julia]]
- Arnaud's Lecture 2
**** Seminaire: François Tessier: TAPIOCA
- Une bibliothèque d'agrégation de données pour les I/O
  parallèles prenant en compte la topologie
* 2018
** January
*** [2018-01-08 Mon]
- Complete ADUM Registration
  - Print documents needed to complete MSTII registration
- Update CAF documents on website
**** Reading the [[/home/phrb/code/boast/Paper2/BOAST.pdf][BOAST paper]]
- [[file:~/Dropbox/papers/autotuning/castro2013adaptive.pdf][Castro's]] adaptive sampling approach
*** [2018-01-09 Tue]
**** Reading [[file:~/Dropbox/papers/autotuning/castro2013adaptive.pdf][Castro's]] adaptive sampling paper
- Compares space-filling and adaptive sampling strategies
**** Installing BOAST
- Got an error from the =gem= installed version, complaining of
  an undefined method called =make_tmpname=
- Downloaded the code and commented some lines that undefined this method before 
  redefining it inside a class. This could have happened because of my Ruby version.
  - Ruby version: =2.5.0p0=
  - Commented lines 12 and 15 of =CompiledRuntime.rb=
- README example now works
*** [2018-01-11 Thu]
- Write two paragraphs on High-Level Synthesis for Alfredo's project
**** LIG Keynote: Adaptive Resource Management for Next Generation Systems
- Presenter: Martin Schulz
- Rising complexity of architectures and applications
  - Parallellism with programming models
  - Incresing faults
  - Energy levels
- Tradeoff Performance vs. Energy
  - Unnaceptable for HPC developers
- Adagio Runtime
- Is energy minimization the right objective?
- Conductor
- Intel GEOPM
**** Discussion with Steven
- I presented him the FPGA experiments and what we have been doing so far
- Steven shared his [[https://github.com/swhatelse/M2_internship][M2 journal]] repository so I can get implementation
  details
- He mentioned one of the things we wanted to try in his work
  but did not have time to were [[https://en.wikipedia.org/wiki/Optimal_design][optimal designs]], specifically
  D-optimal designs
*** [2018-01-15 Mon]
**** Some test functions for optimization
*Objective*: write simple test functions for initially compare different
experimental designs in a setting restricted to a budget of point evaluations.

The functions below are from [[https://en.wikipedia.org/wiki/Test_functions_for_optimization][this Wikipedia article]].

#+HEADER: :session *julia*
#+HEADER: :results output :exports both
#+NAME: define_optimization_test_functions_julia
#+BEGIN_SRC julia
function sphere(values::Array{Float64, 1})
    sum(v * v for v in values)
end

# Warm-up
sphere(zeros(8))

@time sphere(zeros(8))

function rosenbrock(values::Array{Float64, 1})
    sum([(100 * ((values[i + 1] - (values[i] ^ 2)) ^ 2)) + ((values[i] - 1) ^ 2) for i = 1:length(values) - 1])
end

# Warm-up
rosenbrock(ones(8))

@time rosenbrock(ones(8))

function rastrigin(values::Array{Float64, 1})
    (10 * length(values)) + sum([(v ^ 2) - (10 * cos(2 * pi * v)) for v in values])
end

# Warm-up
rastrigin(zeros(8))

@time rastrigin(zeros(8))

#+END_SRC

#+RESULTS: define_optimization_test_functions_julia
#+begin_example
sphere (generic function with 1 method)


0.0

  0.000003 seconds (9 allocations: 368 bytes)
0.0

rosenbrock (generic function with 1 method)


0.0

  0.000003 seconds (9 allocations: 512 bytes)
0.0

rastrigin (generic function with 1 method)


0.0

  0.000003 seconds (8 allocations: 480 bytes)
0.0
#+end_example

**** Comparing Experimental Designs
An initial methodology to compare experimental designs,
using test functions for mathematical optimizaion for now.

- Select test function
- Fix number of factors
- Select factor levels and limits
- Fix budget of point evaluations
  - Expensive-to-evaluate condition
- Select an Experimental Design
  - Full & Fractional 2-Factor Factorial
  - Full & Fractional Multi-Factor Factorial
  - D-Optimal
  - Screening + Response Surface Methods
  - 2-Factor Factorial with Random Factors
- Perform experiments
  - Save data such as:
    - Time to complete
    - Points evaluated
    - Computed effects
*** [2018-01-16 Tue]
**** Comparing Experimental Designs in R
We will use the rosenbrock function for now.
In R, we can implement it as such:

#+HEADER: :session *R*
#+HEADER: :results output :exports both
#+NAME: define_optimization_test_functions_R
#+BEGIN_SRC R
rosenbrock <- function(x) {
    n <- length(x)
    x1 <- x[2:n]
    x2 <- x[1:(n-1)]
    sum(100*(x1-x2^2)^2 + (1-x2)^2)
}
#+END_SRC

#+RESULTS: define_optimization_test_functions_R

Now, we fix the number of factors, their levels and limits:

#+HEADER: :session *R*
#+HEADER: :results output :exports both
#+BEGIN_SRC R
library(FrF2)

factors = 3
runs = 2 ** factors

d1 = FrF2(nruns = runs, nfactors = factors, randomize = TRUE, seed = 685712)

d1

absolute_limits <- rep(1.0, factors) * 3

# Mapping [1, 2] -> [-1, 1]
response <- sapply(1:length(d1$A), function (x) rosenbrock(absolute_limits * (((as.numeric(d1[x,]) - 1) * 2) - 1)))
d1 <- add.response(d1, response, replace = TRUE)
d1_aov <- aov(response ~ . + .^2, data = d1)

summary(d1_aov)
#+END_SRC

#+RESULTS:
#+begin_example
creating full factorial with 8 runs ...
   A  B  C
1 -1 -1 -1
2 -1 -1  1
3  1 -1  1
4 -1  1 -1
5 -1  1  1
6  1  1  1
7  1  1 -1
8  1 -1 -1
class=design, type= full factorial
            Df    Sum Sq   Mean Sq   F value   Pr(>F)    
A            1       288       288 1.853e+26 4.68e-14 ***
B            1 233798688 233798688 1.504e+32  < 2e-16 ***
C            1 233280000 233280000 1.501e+32  < 2e-16 ***
A:B          1         0         0 1.340e+00    0.454    
A:C          1         0         0 1.340e-01    0.777    
B:C          1         0         0 1.060e+00    0.491    
Residuals    1         0         0                       
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example

This only works for factorial designs where factors have
only 2 levels. The [[http://www1.beuth-hochschule.de/FB_II/reports/Report-2016-001.pdf][documentation]] of the =DoE.base= package
shows how general factorial designs can be generated in =R=.

#+HEADER: :session *R*
#+HEADER: :results output :exports both
#+BEGIN_SRC R
library(DoE.base)

map_interval <- function(interval, value) {
    # Map [interval[1], interval[2]] to [-1, 1]
    return(((value - interval[1]) * (2/(interval[2] - interval[1]))) - 1)
}

factors = 4
runs = 2 ** factors

levels = 10

d1 <- fac.design(nlevels = rep(levels, factors), blocks = 1)

absolute_limits <- rep(1.0, factors) * 3

# Mapping [1, 2] -> [-1, 1]
response <- sapply(1:length(d1$A), function (x) rosenbrock(absolute_limits * map_interval(c(1, levels), as.numeric(d1[x,]))))
d1 <- add.response(d1, response, replace = TRUE)
d1_aov <- aov(response ~ . + .^2, data = d1)
#+END_SRC

#+HEADER: :session *R*
#+HEADER: :results output :exports both
#+BEGIN_SRC R
summary(d1_aov)
#+END_SRC

#+RESULTS:
#+begin_example
              Df    Sum Sq   Mean Sq   F value Pr(>F)    
A              9 9.320e+10 1.036e+10 4.618e+29 <2e-16 ***
B              9 1.331e+11 1.479e+10 6.595e+29 <2e-16 ***
C              9 1.331e+11 1.479e+10 6.595e+29 <2e-16 ***
D              9 2.076e+10 2.307e+09 1.029e+29 <2e-16 ***
A:B           81 1.530e+10 1.888e+08 8.422e+27 <2e-16 ***
A:C           81 0.000e+00 0.000e+00 9.750e-01 0.5425    
A:D           81 0.000e+00 0.000e+00 1.392e+00 0.0117 *  
B:C           81 1.530e+10 1.888e+08 8.422e+27 <2e-16 ***
B:D           81 0.000e+00 0.000e+00 9.340e-01 0.6474    
C:D           81 1.530e+10 1.888e+08 8.422e+27 <2e-16 ***
Residuals   9477 0.000e+00 0.000e+00                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example

**** Meeting with HPE PUMA Team
- This meeting will focus on DNN training and writes on PUMA
- Aayush and John Paul are going to present and share their slides
- John Paul presented work and questions related to PUMA writes
  - He will share the paper he mentioned via e-mail
***** DNN Training on PUMA
- Aayush discussed possible changes to PUMA's architecture and instructions in
  order to support training
- His [[file:~/Dropbox/HPE_PUMA/dnn_training_slide1.pdf][short presentation]]
***** Next Steps to MICRA
- Aayush:
  - Survey on enabling training on other architectures
- Izzat:
  - Collaborate with Aayush to understand how the advances to
    enable training found on the literature could be applied to
    the compiler software
  - There is already a related work section on the Wiki,
    linking to a spreadsheet with all read work
  - Make a special spreadsheet for memristors
- Dejan:
  - Put the literature review on the Wiki so others can get up to
    speed
*** [2018-01-17 Wed]
**** Comparing General Factorial Experimental Designs in R
The [[http://www1.beuth-hochschule.de/FB_II/reports/Report-2016-001.pdf][documentation]] of the =DoE.base= package shows how general factorial designs
can be generated in =R=.

Defining Rosenbrock:
#+CALL: define_optimization_test_functions_R()

#+RESULTS:

Improve mapping function map arbitrary intervals:

#+HEADER: :session *R*
#+HEADER: :results output :exports both
#+BEGIN_SRC R
library(DoE.base)

map_intervals <- function(interval_a, interval_b, value_a) {
    return(((value_a - interval_a[1]) * ((interval_b[2] - interval_b[1]) / (interval_a[2] - interval_a[1]))) + interval_b[1])
}

factors = 2
runs = 2 ** factors

levels = 16

d1 <- fac.design(nlevels = rep(levels, factors), blocks = 1)

summary(d1)

limits <- c(1.05, 0.95)

response <- sapply(1:length(d1$A), function (x) rosenbrock(map_intervals(c(1, levels), limits, as.numeric(d1[x,]))))
d1 <- add.response(d1, response, replace = TRUE)
d1_aov <- aov(response ~ ., data = d1)
#+END_SRC

#+RESULTS:
#+begin_example
creating full factorial with 256 runs ...
Call:
fac.design(nlevels = rep(levels, factors), blocks = 1)

Experimental design of type  full factorial 
256  runs

Factor settings (scale ends):
    A  B
1   1  1
2   2  2
3   3  3
4   4  4
5   5  5
6   6  6
7   7  7
8   8  8
9   9  9
10 10 10
11 11 11
12 12 12
13 13 13
14 14 14
15 15 15
16 16 16
#+end_example

Main effects plot:

#+HEADER: :session *R*
#+HEADER: :results output graphics :exports both
#+HEADER: :file (org-babel-temp-file "figure" ".png")
#+HEADER: :width 800 :height 600
#+BEGIN_SRC R
plot(d1)
#+END_SRC

#+RESULTS:
[[file:/tmp/babel-9460ux/figure946BfK.png]]

#+HEADER: :session *R*
#+HEADER: :results output :exports both
#+BEGIN_SRC R
summary.lm(d1_aov)
#+END_SRC

#+RESULTS:
#+begin_example

Call:
aov.default(formula = response ~ ., data = d1)

Residuals:
    Min      1Q  Median      3Q     Max 
-1.0156 -0.2033  0.0000  0.2033  1.0156 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  4.733e-01  2.519e-02  18.792   <2e-16 ***
A.L         -8.315e-02  1.008e-01  -0.825    0.410    
A.Q          1.348e+00  1.008e-01  13.377   <2e-16 ***
A.C         -3.569e-02  1.008e-01  -0.354    0.723    
A^4          2.322e-04  1.008e-01   0.002    0.998    
A^5          3.074e-16  1.008e-01   0.000    1.000    
A^6         -1.632e-15  1.008e-01   0.000    1.000    
A^7          2.770e-15  1.008e-01   0.000    1.000    
A^8         -2.388e-15  1.008e-01   0.000    1.000    
A^9          3.599e-15  1.008e-01   0.000    1.000    
A^10        -1.758e-15  1.008e-01   0.000    1.000    
A^11         8.807e-16  1.008e-01   0.000    1.000    
A^12         2.862e-17  1.008e-01   0.000    1.000    
A^13        -1.445e-15  1.008e-01   0.000    1.000    
A^14         4.339e-16  1.008e-01   0.000    1.000    
A^15        -2.182e-16  1.008e-01   0.000    1.000    
B.L          2.322e-02  1.008e-01   0.230    0.818    
B.Q          3.359e-01  1.008e-01   3.334    0.001 ** 
B.C         -1.249e-16  1.008e-01   0.000    1.000    
B^4          1.110e-16  1.008e-01   0.000    1.000    
B^5         -9.021e-17  1.008e-01   0.000    1.000    
B^6         -1.024e-16  1.008e-01   0.000    1.000    
B^7          4.025e-16  1.008e-01   0.000    1.000    
B^8         -2.637e-16  1.008e-01   0.000    1.000    
B^9          6.939e-16  1.008e-01   0.000    1.000    
B^10        -2.498e-16  1.008e-01   0.000    1.000    
B^11         5.551e-16  1.008e-01   0.000    1.000    
B^12        -1.665e-16  1.008e-01   0.000    1.000    
B^13        -2.810e-16  1.008e-01   0.000    1.000    
B^14         3.747e-16  1.008e-01   0.000    1.000    
B^15        -3.469e-16  1.008e-01   0.000    1.000    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.403 on 225 degrees of freedom
Multiple R-squared:  0.459,	Adjusted R-squared:  0.3869 
F-statistic: 6.364 on 30 and 225 DF,  p-value: < 2.2e-16
#+end_example
**** Questions on Experimental Designs
- Can we get anything from trying to fit linear models
  to potentially non-linear relationships?
  - Arnaud :: Yes. Trends, e.g., does this parameter has an
              impact. Obviously, we could miss something but assuming
              the simpler model is the way to go (Occam's razor).
- Is it possible to compare multiple 2-level factorial
  experimental designs in different intervals with a single
  multi-level experimental design? Is it possible to combine
  multiple 2-level factorial experimental designs?
  - Arnaud :: I'm not sure
- How to generate and analyse 2-Factor Factorial with Random Factor designs?
  - Look at the =lme4= =R= [[https://cran.r-project.org/web/packages/lme4/lme4.pdf][package documentation]]
  - Arnaud :: I started looking into it, and in particular on this
              [[www.bodowinter.com/tutorial/bw_LME_tutorial2.pdf][tutorial on mixed models/designs]] (it's pretty good btw).
              I'm not sure this is what we need but I may have
              misunderstood.
- How to effectively combine Screening and Response Surface Designs?
  - Arnaud :: That's precisely what we're going to try. Now that we
              have looked into the data generated by your auto-tuner
              and got as much information as we could from it, you
              should try to sample the space using a screening
              design. We talked about this. A naive approach would
              take about 20 hours but it can easily be parallelized.
- How to implement RSM?
  - Look at the =rsm= =R= [[https://cran.r-project.org/web/packages/rsm/rsm.pdf][package documentation]]
  - Arnaud :: I know little about RSM but I'm eager to learn.
**** Meeting with Arnaud and Brice
***** Looking at Annotated Pareto Borders
- Add a column to =data= with an optimization scenario identifier,
- Use this identifier to:
  - Color each optimization scenario differently, increasing
    saturation for subsequent samples of a same scenario
  - Annotate starting and ending points for each scenario
***** Todo
- Generate and run screening design with HLS in FPGA CHStone applications
*** [2018-01-18 Thu]
- Mandatory EDMSTII 1st year PhD Half-day Event
**** Plackett-Burman Designs
***** Questions
- What is the difference between a Plackett-Burman design and:
  - A Hadamard Matrix?
  - A Hadamard Matrix generated with the Paley Construction?
***** Generating Plackett-Burman in R

FrF2 does not generate PB designs larger than 100:

#+HEADER: :session *R*
#+HEADER: :results output
#+BEGIN_SRC R
library(FrF2)

pb(16)
pb(128)
FrF2(nruns = 128, nfactors = 127, repeat.only = FALSE, randomize = TRUE,
     seed = NULL)
#+END_SRC

#+RESULTS:
#+begin_example
Screening 15 factors in 16 runs involves perfect aliasing of 
 pairwise interactions of the first six factors with the last factor.
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
1   1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
2  -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
3   1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
4  -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
5  -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
6   1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
7  -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
8   1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
9  -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
10  1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
11 -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
12  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
13 -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
14  1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
15 -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
16  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
class=design, type= pb
Error in pb.list[[2]][[which(pb.list[[1]] == nruns)]] : 
  attempt to select less than one element in get1index
    F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 F13 F14 F15 F16 F17 F18 F19 F20 F21
1    1 -1  1 -1  1 -1 -1 -1  1  -1  -1  -1   1   1  -1  -1   1   1   1  -1  -1
2   -1  1  1 -1 -1  1 -1 -1 -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1
3   -1  1  1  1  1 -1 -1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1
4   -1  1 -1  1 -1  1 -1 -1  1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1
5   -1 -1  1 -1 -1 -1  1  1 -1  -1   1   1   1  -1  -1   1   1  -1   1   1  -1
6   -1  1  1  1  1 -1  1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1
7    1 -1 -1 -1 -1 -1  1 -1 -1   1   1  -1   1   1   1   1  -1  -1  -1   1   1
8    1 -1 -1  1 -1  1 -1 -1 -1   1   1   1  -1  -1  -1  -1   1   1  -1   1   1
9    1 -1  1 -1 -1  1  1 -1  1  -1  -1  -1   1   1  -1  -1   1   1  -1   1   1
10   1 -1 -1 -1 -1  1  1 -1 -1   1   1  -1   1   1   1   1  -1  -1  -1   1   1
11   1  1  1  1  1  1 -1  1  1   1   1   1   1   1   1   1   1   1   1   1   1
12   1  1 -1  1 -1  1  1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1  -1  -1  -1
13   1 -1  1 -1  1  1  1 -1  1  -1  -1  -1   1   1  -1  -1   1   1   1  -1  -1
14  -1  1 -1 -1  1  1  1 -1  1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1
15  -1  1 -1  1  1  1  1 -1  1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
16  -1  1 -1 -1 -1 -1  1 -1  1  -1   1   1  -1   1   1  -1   1  -1   1  -1   1
17  -1 -1 -1  1 -1  1 -1  1  1   1  -1  -1  -1   1  -1   1   1  -1   1   1  -1
18  -1  1 -1 -1  1 -1 -1 -1  1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1
19   1  1  1 -1  1  1  1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1
20  -1  1  1  1 -1 -1 -1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1
21  -1  1 -1 -1  1  1 -1 -1  1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1
22   1  1  1  1 -1 -1  1  1  1   1   1   1   1   1   1   1   1   1  -1  -1  -1
23  -1 -1 -1  1  1 -1 -1  1  1   1  -1  -1  -1   1  -1   1   1  -1  -1  -1   1
24  -1 -1  1 -1 -1  1 -1  1 -1  -1   1   1   1  -1  -1   1   1  -1   1   1  -1
25   1 -1 -1  1  1  1 -1 -1 -1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1
26  -1  1  1  1  1  1  1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1
27  -1 -1 -1 -1 -1  1  1  1  1   1  -1   1   1  -1   1  -1  -1   1   1   1  -1
28  -1 -1  1 -1 -1  1  1  1 -1  -1   1   1   1  -1  -1   1   1  -1   1   1  -1
29  -1  1 -1  1 -1 -1 -1 -1  1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1
30   1  1  1  1  1  1  1  1  1   1   1   1   1   1   1   1   1   1   1   1   1
31   1  1 -1  1 -1  1 -1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1  -1  -1  -1
32   1  1 -1 -1  1  1  1  1 -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
33  -1 -1 -1  1  1 -1  1  1  1   1  -1  -1  -1   1  -1   1   1  -1  -1  -1   1
34   1  1 -1  1 -1 -1 -1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1  -1  -1  -1
35  -1 -1 -1 -1 -1  1 -1  1  1   1  -1   1   1  -1   1  -1  -1   1   1   1  -1
36   1 -1  1  1  1 -1 -1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1
37   1 -1 -1 -1 -1 -1 -1 -1 -1   1   1  -1   1   1   1   1  -1  -1  -1   1   1
38   1 -1  1 -1 -1 -1 -1 -1  1  -1  -1  -1   1   1  -1  -1   1   1  -1   1   1
39   1 -1  1  1  1  1  1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1
40  -1 -1  1 -1  1  1 -1  1 -1  -1   1   1   1  -1  -1   1   1  -1  -1  -1   1
41  -1  1  1 -1 -1 -1 -1 -1 -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1
42   1 -1  1 -1 -1 -1  1 -1  1  -1  -1  -1   1   1  -1  -1   1   1  -1   1   1
43   1  1  1 -1 -1  1 -1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
44   1 -1  1 -1  1 -1  1 -1  1  -1  -1  -1   1   1  -1  -1   1   1   1  -1  -1
45  -1  1  1  1 -1 -1  1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1
46  -1  1  1 -1 -1  1  1 -1 -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1
47  -1 -1  1 -1 -1 -1 -1  1 -1  -1   1   1   1  -1  -1   1   1  -1   1   1  -1
48   1 -1 -1  1  1 -1  1 -1 -1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1
49  -1 -1 -1  1  1  1  1  1  1   1  -1  -1  -1   1  -1   1   1  -1  -1  -1   1
50   1  1 -1  1  1 -1 -1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1
51   1  1 -1  1  1 -1  1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1
52   1  1 -1  1  1  1  1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1
53   1  1 -1 -1  1  1 -1  1 -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
54  -1  1  1  1  1  1 -1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1
55   1  1 -1 -1 -1  1  1  1 -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
56  -1  1  1 -1  1 -1  1 -1 -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
57   1 -1 -1  1  1 -1 -1 -1 -1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1
58  -1  1 -1  1  1 -1  1 -1  1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
59   1 -1 -1  1  1  1  1 -1 -1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1
60  -1 -1 -1  1 -1 -1 -1  1  1   1  -1  -1  -1   1  -1   1   1  -1   1   1  -1
61   1 -1  1  1 -1 -1 -1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1  -1   1   1
62   1 -1 -1  1 -1  1  1 -1 -1   1   1   1  -1  -1  -1  -1   1   1  -1   1   1
63  -1 -1 -1 -1  1  1  1  1  1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1
64  -1  1 -1  1 -1 -1  1 -1  1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1
65  -1 -1 -1 -1 -1 -1  1  1  1   1  -1   1   1  -1   1  -1  -1   1   1   1  -1
66  -1  1  1 -1 -1 -1  1 -1 -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1
67   1  1 -1  1  1  1 -1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1
68  -1 -1  1  1 -1  1  1  1 -1  -1   1  -1  -1   1   1  -1  -1   1   1   1  -1
69  -1 -1  1  1  1  1  1  1 -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1   1
70   1 -1 -1 -1 -1  1 -1 -1 -1   1   1  -1   1   1   1   1  -1  -1  -1   1   1
71  -1 -1  1  1 -1 -1 -1  1 -1  -1   1  -1  -1   1   1  -1  -1   1   1   1  -1
72  -1 -1  1 -1  1 -1 -1  1 -1  -1   1   1   1  -1  -1   1   1  -1  -1  -1   1
73   1  1  1 -1  1  1 -1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1
74  -1 -1 -1  1  1  1 -1  1  1   1  -1  -1  -1   1  -1   1   1  -1  -1  -1   1
75   1  1 -1 -1 -1  1 -1  1 -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
76   1  1 -1 -1 -1 -1  1  1 -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
77  -1  1 -1  1  1 -1 -1 -1  1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
78   1  1 -1 -1  1 -1  1  1 -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
79   1  1  1  1  1 -1  1  1  1   1   1   1   1   1   1   1   1   1   1   1   1
80   1 -1  1 -1 -1  1 -1 -1  1  -1  -1  -1   1   1  -1  -1   1   1  -1   1   1
81   1  1  1 -1  1 -1 -1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1
82  -1  1  1  1 -1  1 -1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1
83  -1 -1  1 -1  1 -1  1  1 -1  -1   1   1   1  -1  -1   1   1  -1  -1  -1   1
84  -1  1 -1 -1 -1  1 -1 -1  1  -1   1   1  -1   1   1  -1   1  -1   1  -1   1
85   1 -1  1  1 -1  1 -1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1  -1   1   1
86   1  1  1 -1 -1 -1  1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
87  -1  1  1  1 -1  1  1 -1 -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1
88  -1 -1 -1  1 -1  1  1  1  1   1  -1  -1  -1   1  -1   1   1  -1   1   1  -1
89  -1  1 -1  1  1  1 -1 -1  1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
90   1 -1 -1 -1  1  1 -1 -1 -1   1   1  -1   1   1   1   1  -1  -1   1  -1  -1
91   1  1  1  1 -1 -1 -1  1  1   1   1   1   1   1   1   1   1   1  -1  -1  -1
92   1  1  1 -1 -1 -1 -1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
93   1 -1 -1 -1  1  1  1 -1 -1   1   1  -1   1   1   1   1  -1  -1   1  -1  -1
94  -1 -1 -1  1 -1 -1  1  1  1   1  -1  -1  -1   1  -1   1   1  -1   1   1  -1
95   1  1  1 -1  1 -1  1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1
96   1 -1 -1 -1  1 -1 -1 -1 -1   1   1  -1   1   1   1   1  -1  -1   1  -1  -1
97   1 -1 -1  1 -1 -1  1 -1 -1   1   1   1  -1  -1  -1  -1   1   1  -1   1   1
98  -1 -1  1 -1  1  1  1  1 -1  -1   1   1   1  -1  -1   1   1  -1  -1  -1   1
99  -1  1 -1 -1  1 -1  1 -1  1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1
100  1  1 -1 -1 -1 -1 -1  1 -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
101  1  1  1 -1 -1  1  1  1  1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
102  1  1  1  1 -1  1  1  1  1   1   1   1   1   1   1   1   1   1  -1  -1  -1
103  1  1 -1  1 -1 -1  1  1 -1  -1  -1   1   1   1  -1  -1  -1  -1  -1  -1  -1
104  1 -1  1  1  1 -1  1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1
105 -1 -1 -1 -1  1 -1 -1  1  1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1
106 -1  1  1 -1  1  1  1 -1 -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
107 -1  1  1 -1  1 -1 -1 -1 -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
108  1  1 -1 -1  1 -1 -1  1 -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
109  1 -1  1  1  1  1 -1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1
110 -1 -1 -1 -1  1  1 -1  1  1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1
111 -1  1 -1 -1 -1 -1 -1 -1  1  -1   1   1  -1   1   1  -1   1  -1   1  -1   1
112 -1  1 -1 -1 -1  1  1 -1  1  -1   1   1  -1   1   1  -1   1  -1   1  -1   1
113 -1  1 -1  1 -1  1  1 -1  1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1
114  1 -1  1  1 -1 -1  1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1  -1   1   1
115  1 -1  1 -1  1  1 -1 -1  1  -1  -1  -1   1   1  -1  -1   1   1   1  -1  -1
116 -1 -1  1  1  1 -1 -1  1 -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1   1
117  1 -1  1  1 -1  1  1 -1  1  -1  -1   1  -1  -1   1   1  -1  -1  -1   1   1
118 -1 -1  1  1 -1 -1  1  1 -1  -1   1  -1  -1   1   1  -1  -1   1   1   1  -1
119  1  1  1  1 -1  1 -1  1  1   1   1   1   1   1   1   1   1   1  -1  -1  -1
120 -1  1  1 -1  1  1 -1 -1 -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
121  1  1  1  1  1 -1 -1  1  1   1   1   1   1   1   1   1   1   1   1   1   1
122  1 -1 -1  1 -1 -1 -1 -1 -1   1   1   1  -1  -1  -1  -1   1   1  -1   1   1
123 -1 -1  1  1 -1  1 -1  1 -1  -1   1  -1  -1   1   1  -1  -1   1   1   1  -1
124 -1 -1 -1 -1  1 -1  1  1  1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1
125 -1 -1  1  1  1  1 -1  1 -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1   1
126  1 -1 -1 -1  1 -1  1 -1 -1   1   1  -1   1   1   1   1  -1  -1   1  -1  -1
127 -1 -1 -1 -1 -1 -1 -1  1  1   1  -1   1   1  -1   1  -1  -1   1   1   1  -1
128 -1 -1  1  1  1 -1  1  1 -1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1   1
    F22 F23 F24 F25 F26 F27 F28 F29 F30 F31 F32 F33 F34 F35 F36 F37 F38 F39 F40
1     1   1  -1  -1  -1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1
2    -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
3     1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
4     1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1
5    -1   1   1  -1   1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1
6     1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
7     1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1   1   1   1   1  -1  -1
8     1   1  -1  -1  -1  -1   1   1   1   1  -1  -1   1  -1  -1  -1  -1   1   1
9    -1  -1   1   1   1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1
10    1   1  -1  -1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1
11    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
12    1   1   1   1  -1  -1  -1  -1   1   1   1   1   1   1   1  -1  -1  -1  -1
13    1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1
14   -1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1
15   -1   1  -1   1   1  -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1
16    1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1
17    1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1
18   -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1   1  -1   1  -1
19    1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
20   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
21   -1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1
22   -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
23   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1  -1   1
24   -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1   1
25   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1
26    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
27    1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1  -1   1  -1   1   1  -1
28   -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1   1
29    1  -1   1  -1  -1   1  -1   1   1  -1   1  -1   1  -1   1   1  -1   1  -1
30    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
31    1   1   1   1  -1  -1  -1  -1   1   1   1   1   1   1   1  -1  -1  -1  -1
32   -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1  -1  -1  -1  -1
33   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1  -1   1
34    1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1
35    1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1  -1   1  -1   1   1  -1
36    1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1   1
37    1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1   1   1   1   1  -1  -1
38   -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1   1
39    1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1
40    1  -1  -1   1  -1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1
41   -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
42   -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1   1
43   -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
44    1   1  -1  -1  -1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1
45   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
46   -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
47   -1   1   1  -1   1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1
48   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1  -1   1   1   1   1  -1  -1
49   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1  -1  -1   1  -1   1   1  -1
50   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1
51   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1
52   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1
53   -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1  -1  -1  -1  -1
54    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
55    1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1
56    1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
57   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1  -1   1   1   1   1  -1  -1
58   -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1
59   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1
60    1  -1  -1   1  -1   1   1  -1   1  -1  -1   1   1   1  -1   1  -1  -1   1
61   -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1
62    1   1  -1  -1  -1  -1   1   1   1   1  -1  -1   1  -1  -1  -1  -1   1   1
63   -1   1   1  -1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1
64    1  -1   1  -1  -1   1  -1   1   1  -1   1  -1   1  -1   1   1  -1   1  -1
65    1  -1  -1   1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1  -1   1
66   -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
67   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1
68   -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1
69    1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1   1
70    1   1  -1  -1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1
71   -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1
72    1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1
73    1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
74   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1  -1  -1   1  -1   1   1  -1
75    1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1
76    1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1
77   -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1
78   -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1
79    1   1   1   1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
80   -1  -1   1   1   1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1
81    1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
82   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
83    1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1
84    1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1
85   -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1
86   -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
87   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
88    1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1
89   -1   1  -1   1   1  -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1
90   -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1  -1  -1  -1  -1   1   1
91   -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
92   -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
93   -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1  -1  -1  -1  -1   1   1
94    1  -1  -1   1  -1   1   1  -1   1  -1  -1   1   1   1  -1   1  -1  -1   1
95    1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
96   -1  -1   1   1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1  -1  -1
97    1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1  -1  -1
98    1  -1  -1   1  -1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1
99   -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1   1  -1   1  -1
100   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1
101  -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
102  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
103   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1
104   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1   1
105  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1   1  -1   1  -1  -1   1
106   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
107   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
108  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1
109   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1
110  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1
111   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1
112   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1
113   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1
114  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1
115   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1
116   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1
117  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1
118  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1
119  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
120   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
121   1   1   1   1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
122   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1  -1  -1
123  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1
124  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1   1  -1   1  -1  -1   1
125   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1   1
126  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1  -1   1   1   1   1  -1  -1
127   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1   1   1  -1   1  -1  -1   1
128   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1  -1  -1   1   1  -1
    F41 F42 F43 F44 F45 F46 F47 F48 F49 F50 F51 F52 F53 F54 F55 F56 F57 F58 F59
1     1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1
2    -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1
3    -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
4     1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
5     1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1   1   1
6    -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
7     1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
8     1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
9    -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1   1  -1
10   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1   1   1  -1
11    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
12    1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
13   -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
14   -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
15    1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1
16    1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
17    1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1  -1   1   1
18    1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
19   -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1
20   -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1   1
21   -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
22   -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1   1
23   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1
24   -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
25    1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1
26    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
27   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
28   -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
29   -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1
30    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
31    1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
32   -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
33   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1
34   -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1   1
35   -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
36   -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
37    1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
38    1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
39    1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
40   -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1
41    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
42    1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
43   -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
44    1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1
45   -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1   1
46   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1
47    1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1   1   1
48   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
49    1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
50   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
51   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
52    1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1
53   -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
54    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
55   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1   1   1   1
56    1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1
57   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
58   -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
59    1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1
60   -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
61   -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1   1   1  -1
62    1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
63   -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1
64   -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1
65    1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1  -1   1   1
66    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
67    1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1
68    1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1  -1   1   1
69    1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
70   -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1   1   1  -1
71   -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
72    1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
73   -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1
74    1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
75   -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1   1   1   1
76    1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
77   -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
78    1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
79   -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
80   -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1   1  -1
81    1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
82    1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
83    1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
84   -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1   1  -1   1
85    1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
86    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1  -1  -1  -1
87    1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
88    1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1  -1   1   1
89    1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1
90   -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
91   -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1   1
92    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1  -1  -1  -1
93   -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
94   -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
95    1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
96    1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1
97   -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1   1   1  -1
98   -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1
99    1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
100   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
101  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
102   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
103  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1   1
104  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
105   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
106  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
107   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1
108   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
109   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
110  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1
111   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
112  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1   1  -1   1
113   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
114  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1   1   1  -1
115  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
116  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
117   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
118  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
119   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
120  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
121  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
122  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1   1   1  -1
123   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1  -1   1   1
124   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
125   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
126   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1
127   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1  -1   1   1
128  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
    F60 F61 F62 F63 F64 F65 F66 F67 F68 F69 F70 F71 F72 F73 F74 F75 F76 F77 F78
1    -1   1   1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1
2    -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
3     1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
4     1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1
5    -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1
6     1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
7     1   1   1  -1  -1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1
8     1   1   1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1
9    -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
10   -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1
11    1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
12   -1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
13    1  -1  -1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
14    1   1  -1   1  -1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1
15   -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
16    1   1  -1   1  -1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1
17   -1   1  -1  -1   1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
18   -1  -1   1  -1   1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
19   -1  -1  -1  -1  -1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
20   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
21    1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
22    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
23   -1   1  -1  -1   1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
24    1   1  -1  -1   1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
25   -1  -1  -1   1   1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1
26   -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
27    1  -1   1   1  -1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
28    1   1  -1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1
29   -1  -1   1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1
30    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
31   -1   1   1   1   1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1
32   -1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
33   -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1
34    1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1
35    1  -1   1   1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1
36    1  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
37    1   1   1  -1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
38    1  -1  -1   1   1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1
39   -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
40   -1  -1   1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
41    1  -1   1  -1   1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
42    1  -1  -1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
43    1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
44   -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1
45   -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
46   -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
47   -1  -1   1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
48    1   1   1  -1  -1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
49    1  -1   1   1  -1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1
50   -1   1   1   1   1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1
51   -1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
52    1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
53   -1   1   1   1   1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1
54   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
55    1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
56   -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
57    1   1   1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1
58    1   1  -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
59   -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
60    1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
61   -1   1   1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
62    1   1   1  -1  -1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
63   -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
64   -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
65   -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
66    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
67    1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1
68   -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
69    1   1  -1  -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
70   -1  -1  -1   1   1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
71    1   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
72    1   1  -1  -1   1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1
73   -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
74    1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1
75    1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1
76   -1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
77    1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1
78    1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1
79   -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
80   -1   1   1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1
81    1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
82    1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
83    1   1  -1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1
84   -1  -1   1  -1   1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
85    1  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
86   -1  -1  -1  -1  -1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
87    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
88   -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1
89   -1  -1   1  -1   1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1
90    1   1   1  -1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
91    1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
92   -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1
93    1   1   1  -1  -1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1
94    1  -1   1   1  -1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1
95    1   1   1   1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
96   -1  -1  -1   1   1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1
97   -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1
98   -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1
99   -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1
100  -1   1   1   1   1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1
101   1   1   1   1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1
102  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
103   1  -1  -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1
104   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
105   1  -1   1   1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1
106   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1
107  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
108   1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1
109  -1   1   1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
110  -1   1  -1  -1   1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1
111   1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1
112  -1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1
113   1   1  -1   1  -1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1
114  -1   1   1  -1  -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
115   1  -1  -1   1   1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1
116  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
117   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
118   1   1  -1  -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
119  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
120   1  -1   1  -1   1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1
121  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
122  -1  -1  -1   1   1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1
123  -1  -1   1   1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
124   1  -1   1   1  -1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1
125   1   1  -1  -1   1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
126  -1  -1  -1   1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1
127  -1   1  -1  -1   1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1
128  -1  -1   1   1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
    F79 F80 F81 F82 F83 F84 F85 F86 F87 F88 F89 F90 F91 F92 F93 F94 F95 F96 F97
1    -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1   1   1
2    -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1
3     1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1
4    -1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1  -1   1
5    -1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1
6    -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1
7    -1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1
8    -1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1  -1  -1
9     1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1   1   1
10   -1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1   1   1
11   -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
12   -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1   1   1
13    1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1
14   -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1
15    1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1
16   -1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1
17    1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1  -1   1
18    1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1
19   -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1
20    1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
21    1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1
22    1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
23    1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1   1  -1
24    1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1  -1   1
25   -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1
26   -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1
27    1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1   1  -1
28   -1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1   1  -1
29   -1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1
30    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
31    1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1  -1  -1
32    1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1
33   -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1  -1   1
34    1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1
35   -1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1  -1   1
36    1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1   1
37    1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1
38   -1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1
39   -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
40    1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1
41   -1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1
42    1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1
43    1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
44    1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1
45   -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
46    1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1
47    1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1
48    1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1  -1  -1
49   -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1
50    1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1   1   1
51   -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1  -1  -1
52   -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1
53   -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1
54    1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1
55    1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1
56    1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1  -1   1
57   -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1   1   1
58    1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1  -1   1
59    1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1
60    1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1
61    1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1
62    1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1   1   1
63    1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1
64    1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1
65    1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1
66    1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1
67    1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1
68    1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1  -1
69    1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
70    1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1  -1  -1
71   -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1
72    1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1   1  -1
73    1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1
74    1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1
75   -1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1
76    1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1
77   -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1   1  -1
78    1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1  -1  -1
79    1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1  -1  -1
80   -1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1  -1  -1
81    1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1
82    1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1  -1   1
83   -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1  -1   1
84    1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1
85    1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1  -1
86   -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1
87   -1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1  -1   1   1  -1
88   -1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1   1  -1
89   -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1
90    1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1  -1  -1
91   -1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1
92    1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1
93   -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1
94   -1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1
95   -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
96    1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1   1   1   1   1
97    1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1
98   -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1
99   -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1  -1   1
100  -1   1   1   1   1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1
101  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1   1   1
102   1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1
103  -1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1
104  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1  -1  -1
105  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1   1  -1
106   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1
107  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1   1  -1
108  -1  -1  -1  -1  -1   1   1   1   1   1   1   1   1  -1  -1  -1  -1   1   1
109   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
110  -1  -1   1   1  -1   1  -1  -1   1   1  -1  -1   1  -1   1   1  -1  -1   1
111   1   1  -1   1  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1
112  -1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1  -1   1   1  -1
113   1  -1   1  -1   1   1  -1   1  -1  -1   1  -1   1   1  -1   1  -1   1  -1
114  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1
115  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1   1   1  -1  -1  -1  -1
116  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1   1  -1
117  -1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1   1   1
118   1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
119  -1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1  -1  -1
120  -1  -1   1  -1   1  -1   1  -1   1   1  -1   1  -1   1  -1   1  -1  -1   1
121  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1   1   1
122  -1   1   1  -1  -1  -1  -1   1   1   1   1  -1  -1  -1  -1   1   1   1   1
123  -1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1   1
124   1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1  -1   1
125  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1
126  -1   1   1  -1  -1  -1  -1   1   1  -1  -1   1   1   1   1  -1  -1  -1  -1
127  -1   1  -1  -1   1  -1   1   1  -1  -1   1   1  -1   1  -1  -1   1   1  -1
128   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1   1  -1  -1   1  -1   1
    F98 F99 F100 F101 F102 F103 F104 F105 F106 F107 F108 F109 F110 F111 F112
1    -1  -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1    1
2    -1   1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1    1
3     1  -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1
4    -1   1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1    1
5     1  -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1    1
6    -1   1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1
7     1   1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1    1
8     1   1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1    1
9    -1  -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1   -1
10   -1  -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1   -1
11   -1  -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1
12    1   1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1   -1
13   -1  -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1    1
14    1  -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1    1
15    1  -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1    1
16   -1   1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1    1
17    1  -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1    1
18    1  -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1    1
19    1   1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1    1
20    1  -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1   -1
21   -1   1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1   -1
22   -1  -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1    1
23   -1   1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1    1
24    1  -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1    1
25    1   1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1
26    1  -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1
27   -1   1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1   -1
28   -1   1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1   -1
29    1  -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1   -1
30    1   1    1    1    1    1    1    1    1    1    1    1    1    1    1
31   -1  -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1    1
32    1   1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1    1
33    1  -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1
34    1   1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1   -1
35    1  -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1    1
36   -1  -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1
37   -1  -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1   -1
38   -1  -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1   -1
39   -1  -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1
40    1  -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1   -1
41    1  -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1   -1
42    1   1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1    1
43   -1  -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1    1
44    1   1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1   -1
45   -1   1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1    1
46    1  -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1   -1
47   -1   1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1   -1
48    1   1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1
49   -1   1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1    1
50    1   1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1
51   -1  -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1   -1
52    1   1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1
53   -1  -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1   -1
54   -1   1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1
55    1   1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1   -1
56   -1   1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1   -1
57   -1  -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1    1
58   -1   1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1
59   -1  -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1    1
60   -1   1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1   -1
61   -1  -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1   -1
62   -1  -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1   -1
63   -1   1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1    1
64   -1   1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1    1
65    1  -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1    1
66   -1   1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1    1
67   -1  -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1   -1
68   -1   1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1   -1
69   -1   1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1
70    1   1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1    1
71   -1   1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1   -1
72   -1   1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1    1
73   -1  -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1   -1
74    1  -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1
75   -1  -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1    1
76   -1  -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1    1
77    1  -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1    1
78   -1  -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1   -1
79   -1  -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1
80    1   1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1    1
81    1   1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1    1
82   -1   1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1    1
83    1  -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1   -1
84   -1   1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1    1
85    1   1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1    1
86   -1  -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1    1
87    1  -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1   -1
88   -1   1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1   -1
89   -1   1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1
90    1   1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1   -1
91    1   1    1    1    1    1    1    1    1    1    1    1    1    1   -1
92    1   1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1   -1
93   -1  -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1    1
94    1  -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1    1
95   -1  -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1   -1
96   -1  -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1    1
97    1   1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1    1
98   -1   1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1    1
99   -1   1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1   -1
100   1   1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1   -1
101   1   1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1   -1
102   1   1    1    1    1    1    1    1    1    1    1    1    1    1   -1
103  -1  -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1    1
104   1   1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1
105  -1   1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1    1
106   1  -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1    1
107   1  -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1    1
108   1   1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1    1
109   1   1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1
110   1  -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1   -1
111   1  -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1   -1
112   1  -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1   -1
113   1  -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1   -1
114   1   1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1    1
115   1   1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1   -1
116  -1   1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1
117  -1  -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1   -1
118   1  -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1    1
119  -1  -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1    1
120  -1   1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1   -1
121   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1
122  -1  -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1   -1
123   1  -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1    1
124   1  -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1   -1
125   1  -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1
126   1   1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1   -1
127  -1   1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1   -1
128   1  -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1
    F113 F114 F115 F116 F117 F118 F119 F120 F121 F122 F123 F124 F125 F126 F127
1      1   -1   -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1
2     -1    1   -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1
3     -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1
4     -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1
5     -1   -1    1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1
6      1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1
7      1   -1   -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1
8      1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1
9     -1    1    1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1
10    -1    1    1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1
11    -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1
12    -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1
13     1   -1   -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1
14    -1    1   -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1
15    -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1
16    -1    1   -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1
17    -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1
18    -1    1   -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1
19     1    1    1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1
20     1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1
21     1   -1    1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1
22     1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
23    -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1
24    -1   -1    1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1
25    -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1
26    -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1
27     1    1   -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1
28     1    1   -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1
29     1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1
30     1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
31     1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1
32     1    1    1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1
33     1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1
34    -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1
35    -1   -1    1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1
36     1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1
37    -1    1    1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1
38    -1    1    1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1
39     1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1
40     1    1   -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1
41     1   -1    1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1
42     1   -1   -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1
43     1    1    1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1
44    -1    1    1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1
45    -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1
46     1   -1    1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1
47     1    1   -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1
48    -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1
49    -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1
50     1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1
51    -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1
52     1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1
53    -1   -1   -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1
54     1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1
55    -1   -1   -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1
56     1   -1    1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1
57     1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1
58     1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1
59     1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1
60     1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1
61    -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1
62    -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1
63    -1   -1    1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1
64    -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1
65    -1   -1    1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1
66    -1    1   -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1
67    -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1
68     1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1
69    -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1
70     1   -1   -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1
71     1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1
72    -1   -1    1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1
73    -1   -1   -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1
74     1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1
75     1    1    1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1
76     1    1    1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1
77    -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1
78    -1   -1   -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1
79    -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1
80     1   -1   -1    1    1   -1   -1   -1   -1    1    1   -1   -1    1    1
81     1    1    1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1
82    -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1
83     1    1   -1   -1    1    1   -1    1   -1   -1    1    1   -1   -1    1
84    -1    1   -1   -1    1   -1    1   -1    1   -1    1    1   -1    1   -1
85     1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1
86     1    1    1    1    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1
87     1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1   -1    1
88     1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1   -1    1
89     1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1
90    -1    1    1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1
91    -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1
92    -1   -1   -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1
93     1   -1   -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1
94    -1   -1    1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1
95    -1   -1   -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1
96     1   -1   -1   -1   -1    1    1   -1   -1    1    1    1    1   -1   -1
97     1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1    1    1
98    -1   -1    1    1   -1   -1    1   -1    1    1   -1   -1    1    1   -1
99     1   -1    1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1
100   -1   -1   -1    1    1    1    1    1    1    1    1   -1   -1   -1   -1
101   -1   -1   -1   -1   -1   -1   -1    1    1    1    1    1    1    1    1
102   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1   -1
103    1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1   -1   -1
104   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1
105   -1   -1    1   -1    1    1   -1   -1    1    1   -1    1   -1   -1    1
106   -1    1   -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1
107   -1    1   -1    1   -1    1   -1   -1    1   -1    1   -1    1   -1    1
108    1    1    1   -1   -1   -1   -1   -1   -1   -1   -1    1    1    1    1
109   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1
110    1    1   -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1
111    1   -1    1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1
112    1   -1    1    1   -1    1   -1    1   -1    1   -1   -1    1   -1    1
113    1   -1    1    1   -1    1   -1   -1    1   -1    1    1   -1    1   -1
114    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1
115   -1    1    1   -1   -1    1    1    1    1   -1   -1    1    1   -1   -1
116   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1
117   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1
118   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1
119    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
120    1   -1    1   -1    1   -1    1    1   -1    1   -1    1   -1    1   -1
121    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1
122   -1    1    1    1    1   -1   -1   -1   -1    1    1    1    1   -1   -1
123   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1
124    1    1   -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1
125    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1
126   -1    1    1    1    1   -1   -1    1    1   -1   -1   -1   -1    1    1
127    1    1   -1    1   -1   -1    1    1   -1   -1    1   -1    1    1   -1
128    1    1   -1   -1    1    1   -1   -1    1    1   -1   -1    1    1   -1
class=design, type= FrF2
#+end_example
*** [2018-01-19 Fri]
**** Screening & Fractional Factorial Designs
From [[file:~/Dropbox/papers/design-of-experiments/montgomery2013design.pdf][Montgomery's book]], at page 321:

The successful use of fractional factorial designs is based on three key ideas:

1. The sparsity of effects principle. When there are several variables, the system or
process is likely to be driven primarily by some of the main effects and low-order
interactions.
2. The projection property. Fractional factorial designs can be projected into stronger
(larger) designs in the subset of significant factors.
3. Sequential experimentation. It is possible to combine the runs of two (or more)
fractional factorials to construct sequentially a larger design to estimate the factor
effects and interactions of interest.
**** Plackett-Burman, Hadamard & Skew Hadamard Matrices
Plackett-Burman designs are generated using the
[[https://en.wikipedia.org/wiki/Paley_construction][Paley construction]], which generates [[https://en.wikipedia.org/wiki/Hadamard_matrix][Hadamard matrices]]
of size =N=, where =N= is a multiple of 4. For experiments
with number of runs which are *powers of two*, Plackett-Burman
designs are equivalent to *fractional factorial designs*.

The Paley construction generates [[https://en.wikipedia.org/wiki/Hadamard_matrix#Skew_Hadamard_matrices][skew Hadamard matrices]] for sizes
=N= when =N - 1= is a multiple of 4.
**** Generating "arbitrary" Hadamard Matrices
- Look at the =survey= R [[https://cran.r-project.org/web/packages/survey/index.html][package]]
  - The =paley= function generates Hadamard matrices
    for primes =p= where =p - 1= is a multiple of 4. Now, it is necessary to
    find out exactly how generate a Plackett-Burman design from a Hadamard
    matrix built with the Paley construction.
*** [2018-01-22 Mon]
**** Generating Plackett-Burman Designs with ~survey~
The =survey= [[https://cran.r-project.org/web/packages/survey/index.html][package]] provides a function for generating
Hadamard matrices using the Paley construction. To obtain
the Plackett-Burman design from a Hadamard matrix built using
the Paley construction, we can remove the first row and rotate
the matrix, or simply remove the first column.

To check if a given design is a Plackett-Burman design,
we will check for the following properties, obtained in
the [[file:~/Dropbox/papers/design-of-experiments/plackett1946design.pdf][original Plackett-Burman paper]]:

1. Each component is replicated at each of its values the
   same number of times
   - That is, the sum of elements in each column is zero
2. Each pair of components occur together at every
   combination of values the same number of times
   - That is, the sum of each pair of columns will produce
     a column with the same number of occurrences of =2= and
     =-2=, and twice that number of occurrences of =0=
3. The number of assemblies is divisible by the
   square of the number of values
   - This is guaranteed by the construction of the matrices,
     which generates matrices with sizes multiple of 4

We define the =is_plackett_burman= function to check these
properties:

#+NAME: define_is_plackett_burman
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
is_plackett_burman <- function(design) {
    sums <- c()
    for (column in names(design)) {
        sums <- c(sums, sum(design[column]))
        if(sum(design[column])!=0) { return(FALSE) }
    }

    names_d <- names(design)
    pairs <- data.frame()

    for (column in names(design)) {
        combinations <- names_d[names_d != column]

        for (combination in combinations) {

            sums <- design[column] + design[combination]
            counts <- as.data.frame(table(sums))

            if ((dim(counts)[1] != 3) ||
               (counts[1, "Freq"] != counts[3, "Freq"]) ||
               (counts[1, "Freq"] != counts[2, "Freq"] / 2)) {
                return(FALSE)
            }
        }
    }
    return(TRUE)
}
#+END_SRC

#+RESULTS: define_is_plackett_burman

Let's now check if generating a Plackett-Burman design by
first generating a Hadamard matrix with the Paley construction
obeys those properties. We will start with an experiment of 20 runs
for 19 factors, and we will use =FrF2= as a sanity check:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
library(survey)
library(FrF2)

design <- pb(nruns = 20, randomize = FALSE)
design <- as.data.frame(design)
design <- as.data.frame(lapply(design, function(x) as.numeric(as.character(x))))

is_plackett_burman(design)
dim(design)

hadamard <- paley(prime = 19)[,-1]
hadamard <- (2 * hadamard) - 1
design <- as.data.frame(hadamard)

is_plackett_burman(design)
dim(design)
#+END_SRC

#+RESULTS:
: [1] TRUE
: [1] 20 19
: [1] TRUE
: [1] 20 19

Now, note that =pb= also does not work for ~nruns = 4~, and
that we can generate such a design using this method:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
design <- pb(nruns = 16, randomize = FALSE)
design
#+END_SRC

#+RESULTS:
#+begin_example
Screening 15 factors in 16 runs involves perfect aliasing of 
 pairwise interactions of the first six factors with the last factor.
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
1  -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
2   1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
3  -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
4   1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
5  -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
6   1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
7  -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
8   1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
9  -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
10  1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
11 -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
12  1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
13 -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
14  1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
15 -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
16  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
class=design, type= pb
#+end_example

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
design <- pb(nruns = 4, randomize = FALSE)
#+END_SRC

#+RESULTS:
: Error in pb.list[[2]][[which(pb.list[[1]] == nruns)]] : 
:   attempt to select less than one element in get1index

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
hadamard <- paley(prime = 3)[,-1]
hadamard <- (2 * hadamard) - 1
design <- as.data.frame(hadamard)

is_plackett_burman(design)
design
#+END_SRC

#+RESULTS:
: [1] TRUE
:   V1 V2 V3
: 1  1  1  1
: 2 -1 -1  1
: 3 -1  1 -1
: 4  1 -1 -1

This method matches the Plackett-Burman design of size 4
presented at the [[https://en.wikipedia.org/wiki/Plackett%25E2%2580%2593Burman_design][Wikipedia article]], albeit unsorted.

With this method we can also generate screening designs for up to
7919 factors using the =survey= package, or for as many factors as
we want, provided we implement our own version of the code and find
larger primes ~p~ such that ~(p + 1) % 4 == 0~.

Unfortunately, I was not able to finish the run for 7919 factors.
Maybe the algorithm is inneficient, maybe it is possible to improve it.
For now, we can generate and check -- slowly -- the design
for our 128 factors:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
system.time(hadamard <- paley(prime = 131)[,-1])
system.time(hadamard <- (2 * hadamard) - 1)
system.time(design <- as.data.frame(hadamard))

system.time(is_plackett_burman(design))
#+END_SRC

#+RESULTS:
:    user  system elapsed 
:   0.004   0.000   0.004
:    user  system elapsed 
:       0       0       0
:    user  system elapsed 
:   0.000   0.000   0.001
:    user  system elapsed 
:  13.221   0.000  13.222

As noted by Arnaud, the =is_plackett_burman= function is the responsible for
this massive slowdown, and the generation is actually fast:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
system.time(hadamard <- paley(prime = 131)[,-1])
system.time(hadamard <- (2 * hadamard) - 1)
system.time(design <- as.data.frame(hadamard))
#+END_SRC

#+RESULTS:
:    user  system elapsed 
:   0.003   0.000   0.003
:    user  system elapsed 
:       0       0       0
:    user  system elapsed 
:   0.000   0.000   0.001

*** [2018-01-23 Tue]
**** Generating Primes where ~(p + 1) % 4 == 0~
Simply generating primes is pretty fast:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using Primes

function compute_primes()
    @time prime_list = primes(7920)
end

compute_primes()
#+END_SRC

#+RESULTS:
#+begin_example


compute_primes (generic function with 1 method)

  0.000030 seconds (5 allocations: 10.391 KiB)
1000-element Array{Int64,1}:
    2
    3
    5
    7
   11
   13
   17
   19
   23
   29
   31
   37
   41
   43
   47
   53
   59
   61
   67
   71
   73
   79
   83
    ⋮
 7703
 7717
 7723
 7727
 7741
 7753
 7757
 7759
 7789
 7793
 7817
 7823
 7829
 7841
 7853
 7867
 7873
 7877
 7879
 7883
 7901
 7907
 7919
#+end_example

I selected 7920 because 7919 is the largest prime the ~paley~ function
from ~survey~ has precomputed.

Let's implement the naive way to find all primes ~p~
where ~(p + 1) % 4 == 0~:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
@time selected_primes = [p for p in primes(7920) if (p + 1) % 4 == 0]

selected_primes
#+END_SRC

#+RESULTS:
#+begin_example
  0.054427 seconds (20.16 k allocations: 1.112 MiB)
504-element Array{Int64,1}:
    3
    7
   11
   19
   23
   31
   43
   47
   59
   67
   71
   79
   83
  103
  107
  127
  131
  139
  151
  163
  167
  179
  191
    ⋮
 7507
 7523
 7547
 7559
 7583
 7591
 7603
 7607
 7639
 7643
 7687
 7691
 7699
 7703
 7723
 7727
 7759
 7823
 7867
 7879
 7883
 7907
 7919

504-element Array{Int64,1}:
    3
    7
   11
   19
   23
   31
   43
   47
   59
   67
   71
   79
   83
  103
  107
  127
  131
  139
  151
  163
  167
  179
  191
    ⋮
 7507
 7523
 7547
 7559
 7583
 7591
 7603
 7607
 7639
 7643
 7687
 7691
 7699
 7703
 7723
 7727
 7759
 7823
 7867
 7879
 7883
 7907
 7919
#+end_example

Trying to improve the performance, we will first get rid of the global
variables. This gives us a ~2x speedup. Note that the number of
allocations is still pretty high:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function first_primes_divisible_offset(factor::Int,
                                       max_prime::Int,
                                       offset::Int = 1)
    [p for p in primes(max_prime) if (p + offset) % factor == 0]                                
end

function compute_primes()
    @time new_selected_primes = first_primes_divisible_offset(4, 7920)
end

compute_primes()
#+END_SRC

#+RESULTS:
#+begin_example
first_primes_divisible_offset (generic function with 2 methods)

compute_primes (generic function with 1 method)

  0.019856 seconds (451 allocations: 45.844 KiB)
504-element Array{Int64,1}:
    3
    7
   11
   19
   23
   31
   43
   47
   59
   67
   71
   79
   83
  103
  107
  127
  131
  139
  151
  163
  167
  179
  191
    ⋮
 7507
 7523
 7547
 7559
 7583
 7591
 7603
 7607
 7639
 7643
 7687
 7691
 7699
 7703
 7723
 7727
 7759
 7823
 7867
 7879
 7883
 7907
 7919
#+end_example

We can try using a regular ~for~ instead of the comprehesion, using
the ~@inbounds~ macro, and giving size hints to the compiler.
This gives us a ~420x speedup:

#+NAME: define_primes_divisible_offset
#+HEADER: :results output :session *Julia*
#+HEADER: :tangle doe_utils/plackett_burman.jl
#+BEGIN_SRC julia
using Primes

function primes_divisible_offset(factor::Int,
                                 offset::Int,
                                 max_prime::Int)
    all_primes = primes(max_prime)
    selected_primes = Int[]

    sizehint!(selected_primes, length(all_primes))

    @inbounds for i = 1:length(all_primes)
        (all_primes[i] + offset) % factor == 0 && push!(selected_primes, all_primes[i])
    end

    return selected_primes
end
#+END_SRC

#+RESULTS: define_primes_divisible_offset
: 
: 
: primes_divisible_offset (generic function with 1 method)

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function compute_primes()
    @time new_selected_primes = primes_divisible_offset(4, 1, 7920)
end

compute_primes()
#+END_SRC

#+RESULTS:
#+begin_example
compute_primes (generic function with 1 method)

  0.000048 seconds (7 allocations: 18.344 KiB)
504-element Array{Int64,1}:
    3
    7
   11
   19
   23
   31
   43
   47
   59
   67
   71
   79
   83
  103
  107
  127
  131
  139
  151
  163
  167
  179
  191
  199
  211
  223
    ⋮
 7487
 7499
 7507
 7523
 7547
 7559
 7583
 7591
 7603
 7607
 7639
 7643
 7687
 7691
 7699
 7703
 7723
 7727
 7759
 7823
 7867
 7879
 7883
 7907
 7919
#+end_example

**** The Paley Construction
Let's understand better the Paley construction in
~survey~.
***** The Paley Construction in ~survey~
From the [[file:~/code/survey/R/paley.R][paley.R]] file, after initialization and error checks,
we get:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
p <- 7 # Just for testing
n <- outer(0:(p - 1), 0:(p - 1), "+") %% p

n
#+END_SRC

#+RESULTS:
:      [,1] [,2] [,3] [,4] [,5] [,6] [,7]
: [1,]    0    1    2    3    4    5    6
: [2,]    1    2    3    4    5    6    0
: [3,]    2    3    4    5    6    0    1
: [4,]    3    4    5    6    0    1    2
: [5,]    4    5    6    0    1    2    3
: [6,]    5    6    0    1    2    3    4
: [7,]    6    0    1    2    3    4    5

This line generates the offset matrix for comparing
with the computed quadratic residues of the first step of
the [[https://en.wikipedia.org/wiki/Paley_construction][Paley construction]]. Then, we compute the quadratic residues:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
res <- integer(1 + floor((p - 1) / 2))

res[1] <- 0
res[2] <- 1

for(i in 2:floor((p - 1) / 2)) {
    res[i + 1] <- (i * i) %% p
}

res
#+END_SRC

#+RESULTS:
: [1] 0 1 4 2

With that we can compute the Jacobsthal matrix for this prime.
This is done by substituting ~-1~ for every element in
the ~m~ matrix that is also a quadratic residue in ~res~,
and ~1~ otherwise:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
m <- n
m[m %in% res] <- -1

m[m > 0] <- 1

rval <- cbind(1, rbind(1, m))

rval
#+END_SRC

#+RESULTS:
:      [,1] [,2] [,3] [,4]
: [1,]    1    1    1    1
: [2,]    1   -1   -1    1
: [3,]    1   -1    1   -1
: [4,]    1    1   -1   -1

Now, let's check if everything went OK:

#+CALL: define_is_plackett_burman()

#+RESULTS:

#+NAME: define_is.hadamard
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
is.hadamard<-function(H){
    return(ncol(H) == nrow(H) &&
           all.equal(crossprod(H), diag(ncol(H)) * ncol(H)) &&
           all.equal(max(abs(H)), 1) &&
           sum(rval[-1, ]) == 0)
}
#+END_SRC

#+RESULTS: define_is.hadamard

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
is.hadamard(rval)
is_plackett_burman(rval[, -1])
#+END_SRC

#+RESULTS:
: [1] TRUE
: [1] TRUE

*** [2018-01-24 Wed]
**** The Paley Construction in Julia
Let's implement the Paley construction in Julia.
First, the naive implementation. We will allocate the
matrix inside the function.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function slow_offset_matrix(p::Int)
    line = [collect(Int, 1:p)]
    matrix = repeat(line, outer = p)

    for i = 1:p
        matrix[i] = ((matrix[i] .+ i) .+ 1) .% p
    end

    return matrix
end

@time slow_offset_matrix(7919)
#+END_SRC

#+RESULTS:
#+begin_example
slow_offset_matrix (generic function with 1 method)

  1.049002 seconds (573.67 k allocations: 494.620 MiB, 6.36% gc time)
7919-element Array{Array{Int64,1},1}:
 [3, 4, 5, 6, 7, 8, 9, 10, 11, 12  …  7912, 7913, 7914, 7915, 7916, 7917, 7918, 0, 1, 2]                                    
 [4, 5, 6, 7, 8, 9, 10, 11, 12, 13  …  7913, 7914, 7915, 7916, 7917, 7918, 0, 1, 2, 3]                                      
 [5, 6, 7, 8, 9, 10, 11, 12, 13, 14  …  7914, 7915, 7916, 7917, 7918, 0, 1, 2, 3, 4]                                        
 [6, 7, 8, 9, 10, 11, 12, 13, 14, 15  …  7915, 7916, 7917, 7918, 0, 1, 2, 3, 4, 5]                                          
 [7, 8, 9, 10, 11, 12, 13, 14, 15, 16  …  7916, 7917, 7918, 0, 1, 2, 3, 4, 5, 6]                                            
 [8, 9, 10, 11, 12, 13, 14, 15, 16, 17  …  7917, 7918, 0, 1, 2, 3, 4, 5, 6, 7]                                              
 [9, 10, 11, 12, 13, 14, 15, 16, 17, 18  …  7918, 0, 1, 2, 3, 4, 5, 6, 7, 8]                                                
 [10, 11, 12, 13, 14, 15, 16, 17, 18, 19  …  0, 1, 2, 3, 4, 5, 6, 7, 8, 9]                                                  
 [11, 12, 13, 14, 15, 16, 17, 18, 19, 20  …  1, 2, 3, 4, 5, 6, 7, 8, 9, 10]                                                 
 [12, 13, 14, 15, 16, 17, 18, 19, 20, 21  …  2, 3, 4, 5, 6, 7, 8, 9, 10, 11]                                                
 [13, 14, 15, 16, 17, 18, 19, 20, 21, 22  …  3, 4, 5, 6, 7, 8, 9, 10, 11, 12]                                               
 [14, 15, 16, 17, 18, 19, 20, 21, 22, 23  …  4, 5, 6, 7, 8, 9, 10, 11, 12, 13]                                              
 [15, 16, 17, 18, 19, 20, 21, 22, 23, 24  …  5, 6, 7, 8, 9, 10, 11, 12, 13, 14]                                             
 [16, 17, 18, 19, 20, 21, 22, 23, 24, 25  …  6, 7, 8, 9, 10, 11, 12, 13, 14, 15]                                            
 [17, 18, 19, 20, 21, 22, 23, 24, 25, 26  …  7, 8, 9, 10, 11, 12, 13, 14, 15, 16]                                           
 [18, 19, 20, 21, 22, 23, 24, 25, 26, 27  …  8, 9, 10, 11, 12, 13, 14, 15, 16, 17]                                          
 [19, 20, 21, 22, 23, 24, 25, 26, 27, 28  …  9, 10, 11, 12, 13, 14, 15, 16, 17, 18]                                         
 [20, 21, 22, 23, 24, 25, 26, 27, 28, 29  …  10, 11, 12, 13, 14, 15, 16, 17, 18, 19]                                        
 [21, 22, 23, 24, 25, 26, 27, 28, 29, 30  …  11, 12, 13, 14, 15, 16, 17, 18, 19, 20]                                        
 [22, 23, 24, 25, 26, 27, 28, 29, 30, 31  …  12, 13, 14, 15, 16, 17, 18, 19, 20, 21]                                        
 [23, 24, 25, 26, 27, 28, 29, 30, 31, 32  …  13, 14, 15, 16, 17, 18, 19, 20, 21, 22]                                        
 [24, 25, 26, 27, 28, 29, 30, 31, 32, 33  …  14, 15, 16, 17, 18, 19, 20, 21, 22, 23]                                        
 [25, 26, 27, 28, 29, 30, 31, 32, 33, 34  …  15, 16, 17, 18, 19, 20, 21, 22, 23, 24]                                        
 ⋮                                                                                                                          
 [7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908  …  7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898]
 [7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909  …  7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899]
 [7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910  …  7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900]
 [7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911  …  7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901]
 [7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912  …  7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902]
 [7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913  …  7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903]
 [7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914  …  7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904]
 [7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915  …  7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905]
 [7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916  …  7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906]
 [7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917  …  7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907]
 [7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918  …  7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908]
 [7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 0  …  7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909]   
 [7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 0, 1  …  7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910]      
 [7912, 7913, 7914, 7915, 7916, 7917, 7918, 0, 1, 2  …  7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911]         
 [7913, 7914, 7915, 7916, 7917, 7918, 0, 1, 2, 3  …  7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912]            
 [7914, 7915, 7916, 7917, 7918, 0, 1, 2, 3, 4  …  7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913]               
 [7915, 7916, 7917, 7918, 0, 1, 2, 3, 4, 5  …  7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914]                  
 [7916, 7917, 7918, 0, 1, 2, 3, 4, 5, 6  …  7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915]                     
 [7917, 7918, 0, 1, 2, 3, 4, 5, 6, 7  …  7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916]                        
 [7918, 0, 1, 2, 3, 4, 5, 6, 7, 8  …  7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917]                           
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9  …  7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918]                              
 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  …  7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 0]                                
 [2, 3, 4, 5, 6, 7, 8, 9, 10, 11  …  7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 0, 1]
#+end_example

*** [2018-01-26 Fri]
**** The Paley Construction in Julia II
Now we remove the matrix allocation from the function and used
a more fitting data structure. We also avoid accessing matrix
elements when possible:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function generate_offset_matrix(matrix::Matrix{Int})
    prime::Int = size(matrix, 1)

    @inbounds for i = 1:prime
       @inbounds for j = 1:prime
           matrix[i, j] = (i + j + 1) % prime
       end
    end

    return matrix
end

function compute()
    p = 3
    @time A = Matrix{Int}(p, p)
    @time generate_offset_matrix(A)
end

compute()
#+END_SRC

#+RESULTS:
#+begin_example
generate_offset_matrix (generic function with 1 method)

compute (generic function with 1 method)

  0.000001 seconds (1 allocation: 160 bytes)
  0.000000 seconds
3×3 Array{Int64,2}:
 0  1  2
 1  2  0
 2  0  1
#+end_example

Finally, we compute the residues and set values to ~-1~ and ~1~ accordingly. We
implemented a simlpe binary search function to improve the process of checking
whether a given number is a quadratic residue. This enables us to
generate very large designs in reasonable time.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function binary_search(array::Array{Int, 1}, target::Int)
    n::Int = length(array)

    left::Int = 1
    right::Int = n

    @inbounds while left <= right
        middle = (left + right) >>> 1

        if array[middle] < target
            left = middle + 1
        elseif array[middle] > target
            right = middle - 1
        else
            return true
        end
    end

    return false
end

function paley(matrix::Matrix{Int})
    prime::Int = size(matrix, 1)

    residues_length::Int = 1 + floor((prime - 1) / 2)    
    residues::Array{Int, 1} = Array{Int, 1}(residues_length)

    residues[1] = 0
    residues[2] = 1

    @inbounds for i = 2:(residues_length - 1)
        residues[i + 1] = (i * i) % prime
    end

    sort!(residues)

    @inbounds for i = 1:prime
       @inbounds for j = 1:prime
           offset_value::Int = (i + j - 1) % prime
           if binary_search(residues, offset_value)
               matrix[i, j] = -1
           else
               matrix[i, j] = 1
           end
       end
    end

    return matrix
end
#+END_SRC

#+RESULTS:
: binary_search (generic function with 1 method)
: 
: paley (generic function with 1 method)

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function compute()
    p = 7
    A = Matrix{Int}(p, p)
    @time paley(A)
end

compute()
#+END_SRC

#+RESULTS:
#+begin_example
compute (generic function with 1 method)

  0.000006 seconds (1 allocation: 112 bytes)
7×7 Array{Int64,2}:
 -1  -1   1  -1   1   1  -1
 -1   1  -1   1   1  -1  -1
  1  -1   1   1  -1  -1  -1
 -1   1   1  -1  -1  -1   1
  1   1  -1  -1  -1   1  -1
  1  -1  -1  -1   1  -1   1
 -1  -1  -1   1  -1   1   1
#+end_example

Let's check for the validity of the designs created with our function:

#+NAME: define_julia_is_plackett_burman
#+HEADER: :results output :session *Julia*
#+HEADER: :tangle doe_utils/plackett_burman.jl
#+BEGIN_SRC julia
using StatsBase

function is_plackett_burman(design::Matrix{Int})
    design_size = size(design, 2)

    for i = 1:design_size
        if sum(design[:, i]) != 0
            return false
        end
    end

    for i = 1:design_size
        for j = 1:design_size
            if i != j
                values = counts(design[:, i] + design[:, j])
                if length(values) != 5 ||
                   values[1] != values[5] ||
                   values[1] != values[3] / 2
                    return false
                end
            end
        end
    end

    return true
end
#+END_SRC

#+RESULTS: define_julia_is_plackett_burman
: 
: 
: is_plackett_burman (generic function with 1 method)

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function compute()
    p = 7
    A = Matrix{Int}(p, p)
    @time paley(A)

    # Making "A" a Plackett-Burman Design:
    B = Matrix{Int}(p + 1, p)
    @time B[1, :] = ones(p)
    @time B[2:p + 1, 1:p] = A

    B
    @time is_plackett_burman(B)
end

compute()
#+END_SRC

#+RESULTS:
: compute (generic function with 1 method)
: 
:   0.000006 seconds (1 allocation: 112 bytes)
:   0.000001 seconds (2 allocations: 160 bytes)
:   0.000001 seconds (2 allocations: 64 bytes)
:   0.000017 seconds (266 allocations: 25.375 KiB)
: true
*** [2018-01-29 Mon]
**** Generating Plackett-Burman Designs in Julia
We will piece together all the code snippets from the last
days to define a Julia function for generating Plackett-Burman
designs. This function should enter =NODAL=.

Defining function for generating primes whose offset is
divisible by some integer:

#+CALL: define_primes_divisible_offset()

#+RESULTS:
: 
: 
: primes_divisible_offset (generic function with 1 method)

Defining the function to check for Plackett-Burman properties:

#+CALL: define_julia_is_plackett_burman()

#+RESULTS:
: 
: 
: is_plackett_burman (generic function with 1 method)

We will re-write the Paley construction function so that it
can fill a matrix with uneven dimensions. This will allow us
to only allocate one matrix for the Plackett-Burman construction:

#+NAME: define_julia_paley
#+HEADER: :results output :session *Julia*
#+HEADER: :tangle doe_utils/plackett_burman.jl
#+BEGIN_SRC julia
function binary_search(array::Array{Int, 1}, target::Int)
    n::Int = length(array)

    left::Int = 1
    right::Int = n

    @inbounds while left <= right
        middle = (left + right) >>> 1

        if array[middle] < target
            left = middle + 1
        elseif array[middle] > target
            right = middle - 1
        else
            return true
        end
    end

    return false
end

function paley(matrix::Matrix{Int})
    dimension::Tuple{Int, Int} = size(matrix)

    starting_row::Int = (dimension[1] == dimension[2] ? 1 : 2)
    ending_row::Int = dimension[1]

    prime::Int = dimension[2]

    residues_length::Int = 1 + floor((prime - 1) / 2)
    residues::Array{Int, 1} = Array{Int, 1}(residues_length)

    residues[1] = 0
    residues[2] = 1

    @inbounds for i = 2:(residues_length - 1)
        residues[i + 1] = (i * i) % prime
    end

    sort!(residues)

    @inbounds for i = starting_row:ending_row
       @inbounds for j = 1:prime
           offset_value::Int = (i + j - 1) % prime
           if binary_search(residues, offset_value)
               matrix[i, j] = -1
           else
               matrix[i, j] = 1
           end
       end
    end

    return matrix
end
#+END_SRC

#+RESULTS: define_julia_paley
: binary_search (generic function with 1 method)
: 
: paley (generic function with 1 method)

#+NAME: define_julia_plackett_burman
#+HEADER: :results output :session *Julia*
#+HEADER: :tangle doe_utils/plackett_burman.jl
#+BEGIN_SRC julia
function plackett_burman(matrix_size::Int)
    # Paley construction works for primes where (p + 1) % 4 == 0
    # Therefore, 'factor::Int = 4' and 'offset::Int = 1' in the call
    # to 'primes_divisible_offset':
    p = primes_divisible_offset(4, 1, matrix_size)[end]

    # The matrix for the Plackett-Burman design must have
    # 'p + 1' rows and 'p' columns, corresponding to
    # 'p + 1' experiments for 'p' factors.
    A = Matrix{Int}(p + 1, p)
    A[1, :] = ones(p)
    paley(A)
end
#+END_SRC

#+RESULTS: define_julia_plackett_burman
: plackett_burman (generic function with 2 methods)

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function compute()
    @time design = plackett_burman(150)
    @time is_plackett_burman(design)
end

compute()
#+END_SRC

#+RESULTS:
: compute (generic function with 1 method)
: 
:   0.000874 seconds (11 allocations: 155.219 KiB)
:   0.018235 seconds (115.37 k allocations: 71.585 MiB, 8.38% gc time)
: true

**** Updating NODAL to Julia's latest version
- Compiled new Julia version
- Re-built 'dev' and 'master' on Travis
- Updated examples:
  - Improved syntax, remove global variables
  - Fixed warnings derived from example code
- Fixed deprecation warnings
*** [2018-01-30 Tue]
**** Improving the Pareto Border for the 3 Metrics
We will use the [[http://www.p-roocks.de/rpref/index.php][rPref]] package for computing the Pareto border.

#+CALL: update_legup_tuner()

#+RESULTS:
: Already up to date.

#+CALL: define_load_data()

#+RESULTS:

Generating a 3D plot:

#+HEADER: :results output :session *R* :exports both
#+BEGIN_SRC R
library(rPref)
library(dplyr)

removed <- c("WNS", "Blocks", "RAM", "LUs", "Pins", "Cycles", "FMax")
data <- load_data("dfdiv", experiments, removed)

dim(data)

criterion <- low(Regs) * low(DPS) * low(MKS)

pareto <- psel(data, criterion, top = nrow(data)) 

pareto <- pareto[with(pareto, order(X)), ]

scenarios <- data.frame()

for (target in c("area", "perf", "perflat", "balanced")) {
    filtered_pareto <- filter(pareto, experiment == target)

    best <- which.min(filtered_pareto$MKS + filtered_pareto$Regs + filtered_pareto$DPS)

    scenarios["bestMKS", target] <- filtered_pareto[best, "MKS"]
    scenarios["bestRegs", target] <- filtered_pareto[best, "Regs"]
    scenarios["bestDPS", target] <- filtered_pareto[best, "DPS"]

    scenarios["firstMKS", target] <- filtered_pareto[1, "MKS"]
    scenarios["firstRegs", target] <- filtered_pareto[1, "Regs"]
    scenarios["firstDPS", target] <- filtered_pareto[1, "DPS"]

    scenarios["lastMKS", target] <- filtered_pareto[nrow(filtered_pareto), "MKS"]
    scenarios["lastRegs", target] <- filtered_pareto[nrow(filtered_pareto), "Regs"]
    scenarios["lastDPS", target] <- filtered_pareto[nrow(filtered_pareto), "DPS"]
}

print(scenarios)

p <- plot_ly(pareto, x = ~MKS, y = ~Regs, z = ~DPS,
              color = ~(.level == 1), colors = "Set1") %>%
    add_markers() %>%
    layout(scene = list(annotations = list(list(x = scenarios["firstMKS", "area"],
                                                y = scenarios["firstRegs", "area"],
                                                z = scenarios["firstDPS", "area"],
                                                text = "Global Starting Point",
                                                textangle = 0,
                                                font = list(color = "black",
                                                            size = 12),
                                                arrowcolor = "black",
                                                arrowsize = 3,
                                                arrowwidth = 1,
                                                arrowhead = 1),
                                            list(x = scenarios["lastMKS", "area"],
                                                 y = scenarios["lastRegs", "area"],
                                                 z = scenarios["lastDPS", "area"],
                                                 text = "Area Final Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "area"],
                                                 y = scenarios["bestRegs", "area"],
                                                 z = scenarios["bestDPS", "area"],
                                                 text = "Area Best Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["lastMKS", "balanced"],
                                                 y = scenarios["lastRegs", "balanced"],
                                                 z = scenarios["lastDPS", "balanced"],
                                                 text = "Balanced Final Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "balanced"],
                                                 y = scenarios["bestRegs", "balanced"],
                                                 z = scenarios["bestDPS", "balanced"],
                                                 text = "Balanced Best Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["lastMKS", "perflat"],
                                                 y = scenarios["lastRegs", "perflat"],
                                                 z = scenarios["lastDPS", "perflat"],
                                                 text = "Perflat Final Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "perflat"],
                                                 y = scenarios["bestRegs", "perflat"],
                                                 z = scenarios["bestDPS", "perflat"],
                                                 text = "Perflat Best Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "perf"],
                                                 y = scenarios["bestRegs", "perf"],
                                                 z = scenarios["bestDPS", "perf"],
                                                 text = "Perf Best & Last Points",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1)),
                        xaxis = list(title = 'MKS'),
                        yaxis = list(title = 'Regs'),
                        zaxis = list(title = 'DSP')))

print(p)

p <- plot_ly(pareto, x = ~MKS, y = ~Regs, z = ~DPS,
              color = ~(experiment), colors = "Set2") %>%
    add_markers() %>%
    layout(scene = list(annotations = list(list(x = scenarios["firstMKS", "area"],
                                                y = scenarios["firstRegs", "area"],
                                                z = scenarios["firstDPS", "area"],
                                                text = "Global Starting Point",
                                                textangle = 0,
                                                font = list(color = "black",
                                                            size = 12),
                                                arrowcolor = "black",
                                                arrowsize = 3,
                                                arrowwidth = 1,
                                                arrowhead = 1),
                                            list(x = scenarios["lastMKS", "area"],
                                                 y = scenarios["lastRegs", "area"],
                                                 z = scenarios["lastDPS", "area"],
                                                 text = "Area Final Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "area"],
                                                 y = scenarios["bestRegs", "area"],
                                                 z = scenarios["bestDPS", "area"],
                                                 text = "Area Best Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["lastMKS", "balanced"],
                                                 y = scenarios["lastRegs", "balanced"],
                                                 z = scenarios["lastDPS", "balanced"],
                                                 text = "Balanced Final Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "balanced"],
                                                 y = scenarios["bestRegs", "balanced"],
                                                 z = scenarios["bestDPS", "balanced"],
                                                 text = "Balanced Best Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["lastMKS", "perflat"],
                                                 y = scenarios["lastRegs", "perflat"],
                                                 z = scenarios["lastDPS", "perflat"],
                                                 text = "Perflat Final Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "perflat"],
                                                 y = scenarios["bestRegs", "perflat"],
                                                 z = scenarios["bestDPS", "perflat"],
                                                 text = "Perflat Best Point",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1),
                                            list(x = scenarios["bestMKS", "perf"],
                                                 y = scenarios["bestRegs", "perf"],
                                                 z = scenarios["bestDPS", "perf"],
                                                 text = "Perf Best & Last Points",
                                                 textangle = 0,
                                                 font = list(color = "black",
                                                             size = 12),
                                                 arrowcolor = "black",
                                                 arrowsize = 3,
                                                 arrowwidth = 1,
                                                 arrowhead = 1)),
                        xaxis = list(title = 'MKS'),
                        yaxis = list(title = 'Regs'),
                        zaxis = list(title = 'DSP')))

print(p)
#+END_SRC

#+RESULTS:
#+begin_example

Attaching package: ‘rPref’

The following object is masked from ‘package:dplyr’:

    between
[1] 317 146
                  area         perf      perflat     balanced
bestMKS   2.455752e-02 1.762809e-02 2.519768e-02 2.066028e-02
bestRegs  3.123000e+03 3.187000e+03 2.919000e+03 2.432000e+03
bestDPS   1.000000e+00 5.000000e+00 1.000000e+00 5.000000e+00
firstMKS  3.095541e-02 3.095541e-02 3.095541e-02 3.095541e-02
firstRegs 3.949000e+03 3.949000e+03 3.949000e+03 3.949000e+03
firstDPS  1.600000e+01 1.600000e+01 1.600000e+01 1.600000e+01
lastMKS   3.035936e-02 1.762809e-02 2.044542e-02 2.511900e-02
lastRegs  3.743000e+03 3.187000e+03 2.953000e+03 5.533000e+03
lastDPS   3.000000e+00 5.000000e+00 1.000000e+00 1.000000e+00
#+end_example
**** Meeting with PUMA Team
- Dejan requested I propose something I can contribute to in relation to autotuning,
  since no one is in the position to do that
  - Since the project is too oriented to architectural contributions, maybe this is the end
    of my participation in this project?
  - TODO: Find some tuning knobs or architectural configuration I can explore
    - The paper might have hints at what could be done
- Izzat thinks architecture must move first and then the rest will follow
- Aayush: Matrix-matrix multiplication assume matrices are constant
  - Aayush is looking into what would be needed to implement non-constant multiplication
- Next sesion will be in two weeks, Dejan will not be participating
  - Maybe someone could record the meeting so Dejan can follow up
  - Aayush and Izzat will present short updates
- Aayush does not have a target venue in mind for next steps in the analog domain
  - Looking at operations that have tunable knobs
  - Mix-precision training
  - Aayush could invite architecture people from his group to participate in the project
- Izzat asks: What is the main requisite that is holding the project back?
  - Aayush answers that people can complete the review on training,
    that is, the main requisite is the literature review
  - Izzat said more people could be involved in the literature review since it is
    easily parallelizable, that is, each person could look at one or two papers
  - Aayush will share the papers he needs reviewed, so people can signup for papers
  - Next week could be a discussion of the reviews, and everyone could be involved deeper
*** [2018-01-31 Wed]
**** Keeping Track of Results in NODAL
NODAL should have a database for keeping record of the results of the
experiments and easing future analysis. A first approach is to use
SQLite, which is very simple and just creates a database in a single
file in disk. It is also possible to create an in-memory database
which is later written to disk. Another approach would be to use
the new JuliaDB package, which seems to fit well in distributed
systems.

Two initial ideas:

1. Each technique uses an individual in-memory database to store its
   results, which are later stored in a global database in disk
   - Could be easier to run in multiple machines since all results
     would be stored later, minimizing interprocess communication
     during execution
   - Until databases are synchronized, there is no way to use the
     data techniques in different machines gathered
   - Parallel writing to individual databases is trivial to implement
2. All techniques write results to a common database in disk
   - Parallel writing could be queued in each single machine,
     but execution in multiple machines would require a different strategy
   - Could be easier to use data gathered during tuning to steer experimental
     designs
     
***** Using Indexed Tables & JuliaDB
Creating a simple structure to represent a measurement
that is uniquely identified by hashing a string composed of
its parameter's values:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using JuliaDB

struct Measurement
    f1_value::Int64
    f2_value::Float64
    f3_value::Bool
    f4_value::String
    response::Float64
    complete::Bool
    id::UInt64

    Measurement(f1, f2, f3, f4, r) = new(f1, f2, f3, f4, r, true, hash("$f1$f2$f3$f4"))
    Measurement(f1, f2, f3, f4) = new(f1, f2, f3, f4, -1, false, hash("$f1$f2$f3$f4"))
end

# Using meaningless dummy parameters:
parameters = [Measurement(1, 2.5, true, "--no-merge", 0.00234),
              Measurement(992, 5.621, true, "--merge", 0.8374),
              Measurement(5, 993.11, false, "--merge", 0.3312),
              Measurement(992, 5.621, false, "--no-merge", 123.1878)]
#+END_SRC

#+RESULTS:
#+begin_example





4-element Array{Measurement,1}:
 Measurement(1, 2.5, true, "--no-merge", 0.00234, true, 0xf8ccde572b8c7264)     
 Measurement(992, 5.621, true, "--merge", 0.8374, true, 0x5504c427f376c224)     
 Measurement(5, 993.11, false, "--merge", 0.3312, true, 0xe9325075e908e878)     
 Measurement(992, 5.621, false, "--no-merge", 123.188, true, 0xd0d5365d357790ee)
#+end_example

Storing these parameters in a table:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
names = fieldnames(Measurement)

t = table([[getfield(p, n) for p in parameters] for n in names]...,
          names = names, pkey = :id)
#+END_SRC

#+RESULTS:
#+begin_example
7-element Array{Symbol,1}:
 :f1_value
 :f2_value
 :f3_value
 :f4_value
 :response
 :complete
 :id

Table with 4 rows, 7 columns:
f1_value  f2_value  f3_value  f4_value      response  complete  id
──────────────────────────────────────────────────────────────────────────────────
992       5.621     true      "--merge"     0.8374    true      0x5504c427f376c224
992       5.621     false     "--no-merge"  123.188   true      0xd0d5365d357790ee
5         993.11    false     "--merge"     0.3312    true      0xe9325075e908e878
1         2.5       true      "--no-merge"  0.00234   true      0xf8ccde572b8c7264
#+end_example

We can check if a measurement is in the table without its ~response~ value. This
prevents redundant computation of results.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
k = Measurement(5, 993.11, false, "--merge")

t_query = filter(p -> p.id == k.id, t)

length(rows(t_query)) > 0
#+END_SRC

#+RESULTS:
: Measurement(5, 993.11, false, "--merge", -1.0, false, 0xe9325075e908e878)
: 
: Table with 1 rows, 7 columns:
: f1_value  f2_value  f3_value  f4_value   response  complete  id
: ───────────────────────────────────────────────────────────────────────────────
: 5         993.11    false     "--merge"  0.3312    true      0xe9325075e908e878
: 
: true

If the result was not previously computed, we get:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
k = Measurement(2, 9.263, false, "--merge")

length(rows(filter(p -> p.id == k.id, t))) > 0
#+END_SRC

#+RESULTS:
: Measurement(2, 9.263, false, "--merge", -1.0, false, 0x10bad578d513d719)
: 
: false

Or maybe in an easier way:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
k = Measurement(2, 9.263, false, "--merge")

k.id in select(t, :id)
#+END_SRC

#+RESULTS:
: Measurement(2, 9.263, false, "--merge", -1.0, false, 0x10bad578d513d719)
: 
: false

Now we can grow the table and re-sort it by primary key.
Check [[https://discourse.julialang.org/t/how-to-add-row-to-juliadb-table/7637][this discourse thread]] for the procedure.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
if !(k.id in select(t, :id))
    push!(rows(t), @NT(f1_value = k.f1_value, f2_value = k.f2_value,
                      f3_value = k.f3_value, f4_value = k.f4_value,
                      response = k.response, complete = k.complete,
                      id = k.id))

    # Sorting 't' by its primary key
    t = table(t, pkey = t.pkey, copy = false)
end

t
#+END_SRC

#+RESULTS:
#+begin_example


Table with 5 rows, 7 columns:
f1_value  f2_value  f3_value  f4_value      response  complete  id
──────────────────────────────────────────────────────────────────────────────────
2         9.263     false     "--merge"     -1.0      false     0x10bad578d513d719
992       5.621     true      "--merge"     0.8374    true      0x5504c427f376c224
992       5.621     false     "--no-merge"  123.188   true      0xd0d5365d357790ee
5         993.11    false     "--merge"     0.3312    true      0xe9325075e908e878
1         2.5       true      "--no-merge"  0.00234   true      0xf8ccde572b8c7264
#+end_example
**** Meeting with Arnaud and Brice
Notes taken by Arnaud:
***** Discussions
- Pedro played with PB designs, implemented them in Julia and made his
  framework ready for parallel exploration of the space with pb designs.
- Pedro read several papers on screening designs. There seems to be
  more than just balancing of 1 and -1 in pb designs. Maybe the way
  the aliasing is spread but none of us had the time to fully
  understand what it means. It may be good at some point to read more
  thoroughly the literature.
- The new Pareto plot seem to indicate that either:
  - either the exploration is not good
  - or many factors have absolutely no impact.
  Or both. Some ranges are quite large which may indicate some
  parameters have a large effect while others have none. we will know
  for sure from new experiments.

Things to do, ideas for the follow-up of the thesis?
- We're waiting for the HP agreement to have access again to the FPGA
  software and run new experiments.
- [[https://openresearchsoftware.metajnl.com/][Journal of Open Research
Software]] presenting the Julia
  framework. Why not? Although I'm not the best one for "software
  engineering" papers. The positive point is it will be reviewed but
  it will take some time to write and I don't know the impact.
- Proposing an auto-tuning library (as a service) rather an
  auto-tuning framework.
- Learn more about screening designs
  - the subtleties of generating with two levels and how aliasing
    spreads
    -
http://www.rsc.org/images/Experimental-design-and-optimisation-4-Plackett-Burman-designs-55_tcm18-232212.pdf
  - with more than two levels.
    -
http://www.functionbay.co.kr/documentation/onlinehelp/default.htm#!Documents/plackettandburmandesign.htm
- Investigating another class of optimization/space: the follow-up of
  Steven with BOAST. There were no compilation flag optimisation, only
  the "shape" of the kernel were considered. The space is much smaller
  but the optimization is also very different as we have more
  interactions between parameters and we definitely need quantile
  regression rather than classical (expected/mean) linear regression.
- GPU compiler flags optimization. Pedro worked on that at some point
  and it could be worth revisiting this with the DoE perspective.

***** Playing with R to see the effect of missing values in the design
#+begin_src R :results output :session *R* :exports both
library(FrF2)

df = pb(20)
df
#+end_src

#+RESULTS:
#+begin_example
Loading required package: DoE.base
Loading required package: grid
Loading required package: conf.design

Attaching package: ‘DoE.base’

The following objects are masked from ‘package:stats’:

    aov, lm

The following object is masked from ‘package:graphics’:

    plot.design

The following object is masked from ‘package:base’:

    lengths
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T
1   1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1
2   1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1
3   1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1
4   1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1
5  -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1
6   1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1
7   1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1
8  -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1
9   1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1
10 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1
11 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1
12 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1
13 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1
14  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1
15  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1
16 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1
17 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
18 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1
19  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1
20 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1
class=design, type= pb
#+end_example

#+begin_src R :results output :session *R* :exports both
df$Response = as.numeric(df$S) * 10 + as.numeric(df$T) * 20 +
rnorm(length(df$A))

df
#+end_src

#+RESULTS:
#+begin_example
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T Response
1   1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1 32.28862
2   1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1 60.22126
3   1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1 49.57405
4   1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1 40.38103
5  -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 59.65818
6   1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1 50.02696
7   1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1 39.02083
8  -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 39.46287
9   1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1 61.32479
10 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 29.56344
11 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 51.05901
12 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 59.88701
13 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 30.41986
14  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1 29.93039
15  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1 40.26708
16 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 40.42102
17 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 28.66051
18 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 49.47242
19  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1 49.67567
20 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 59.67977
class=design, type= pb
#+end_example

#+begin_src R :results output :session *R* :exports both
reg = aov(data = df, Response ~ .)

summary(reg)

summary.lm(reg)
#+end_src

#+RESULTS:
#+begin_example
            Df Sum Sq Mean Sq
A            1    1.0     1.0
B            1    0.6     0.6
C            1    1.9     1.9
D            1    0.6     0.6
E            1    2.1     2.1
F            1    0.8     0.8
G            1    0.8     0.8
H            1    0.3     0.3
J            1    0.2     0.2
K            1    0.4     0.4
L            1    0.8     0.8
M            1    0.1     0.1
N            1    0.9     0.9
O            1    0.6     0.6
P            1    0.4     0.4
Q            1    0.7     0.7
R            1    0.6     0.6
S            1  496.5   496.5
T            1 2003.3  2003.3

Call:
aov.default(formula = Response ~ ., data = df)

Residuals:
ALL 20 residuals are 0: no residual degrees of freedom!

Coefficients:
            Estimate Std. Error t value Pr(>|t|)
(Intercept) 45.04974         NA      NA       NA
A1           0.22133         NA      NA       NA
B1           0.16946         NA      NA       NA
C1          -0.30622         NA      NA       NA
D1           0.17416         NA      NA       NA
E1           0.32443         NA      NA       NA
F1           0.20419         NA      NA       NA
G1          -0.19731         NA      NA       NA
H1           0.13184         NA      NA       NA
J1           0.10615         NA      NA       NA
K1           0.13372         NA      NA       NA
L1           0.19416         NA      NA       NA
M1           0.06005         NA      NA       NA
N1           0.21654         NA      NA       NA
O1           0.17570         NA      NA       NA
P1           0.14227         NA      NA       NA
Q1          -0.18196         NA      NA       NA
R1          -0.17010         NA      NA       NA
S1           4.98265         NA      NA       NA
T1          10.00817         NA      NA       NA

Residual standard error: NaN on 0 degrees of freedom
Multiple R-squared:      1,	Adjusted R-squared:    NaN 
F-statistic:   NaN on 19 and 0 DF,  p-value: NA
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file"figure" ".png") :exports both :width 600 :height 400 :session *R*
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-16183psm/figure16183i7v.png]]



#+begin_src R :results output :session *R* :exports both
#reg=lm(data=df[-c(6,18,15),], Response ~ .)
library(AlgDesign)

df2 = df
df2[c(4, 8, 3), ]$Response = NA;
reg = lm(data = df2, Response ~ .)

summary(reg)

summary.lm(reg)

eval.design(~., df)

#+end_src

#+RESULTS:
#+begin_example

Call:
lm.default(formula = Response ~ ., data = df2)

Residuals:
ALL 17 residuals are 0: no residual degrees of freedom!

Coefficients: (3 not defined because of singularities)
              Estimate Std. Error t value Pr(>|t|)
(Intercept)  55.091336         NA      NA       NA
A1            0.397027         NA      NA       NA
B1           10.211057         NA      NA       NA
C1           -0.448498         NA      NA       NA
D1           -0.001541         NA      NA       NA
E1           10.366028         NA      NA       NA
F1            0.346468         NA      NA       NA
G1            9.844290         NA      NA       NA
H1            0.274112         NA      NA       NA
J1           -0.069551         NA      NA       NA
K1            0.275992         NA      NA       NA
L1           -9.847439         NA      NA       NA
M1            0.235748         NA      NA       NA
N1           -9.791632         NA      NA       NA
O1                  NA         NA      NA       NA
P1                  NA         NA      NA       NA
Q1          -10.190132         NA      NA       NA
R1            9.838074         NA      NA       NA
S1           14.990819         NA      NA       NA
T1                  NA         NA      NA       NA

Residual standard error: NaN on 0 degrees of freedom
  (3 observations deleted due to missingness)
Multiple R-squared:      1,	Adjusted R-squared:    NaN 
F-statistic:   NaN on 16 and 0 DF,  p-value: NA

Call:
lm.default(formula = Response ~ ., data = df2)

Residuals:
ALL 17 residuals are 0: no residual degrees of freedom!

Coefficients: (3 not defined because of singularities)
              Estimate Std. Error t value Pr(>|t|)
(Intercept)  55.091336         NA      NA       NA
A1            0.397027         NA      NA       NA
B1           10.211057         NA      NA       NA
C1           -0.448498         NA      NA       NA
D1           -0.001541         NA      NA       NA
E1           10.366028         NA      NA       NA
F1            0.346468         NA      NA       NA
G1            9.844290         NA      NA       NA
H1            0.274112         NA      NA       NA
J1           -0.069551         NA      NA       NA
K1            0.275992         NA      NA       NA
L1           -9.847439         NA      NA       NA
M1            0.235748         NA      NA       NA
N1           -9.791632         NA      NA       NA
O1                  NA         NA      NA       NA
P1                  NA         NA      NA       NA
Q1          -10.190132         NA      NA       NA
R1            9.838074         NA      NA       NA
S1           14.990819         NA      NA       NA
T1                  NA         NA      NA       NA

Residual standard error: NaN on 0 degrees of freedom
  (3 observations deleted due to missingness)
Multiple R-squared:      1,	Adjusted R-squared:    NaN 
F-statistic:   NaN on 16 and 0 DF,  p-value: NA
Error in eval.design(~., df) : Singular design
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file"figure" ".png") :exports both :width 600 :height 400 :session *R*
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-1900fOu/figure1900Yyt.png]]

** February
*** [2018-02-01 Thu]
**** IndexedTables and Channels in Julia
Making things more clear, let's define functions for initializing a dummy
~Measurement~ table. More importantly, we will define a function for adding a
unique entry to a table using the names defined in a given object, in this case
a ~Measurement~, as column names, and the object's values for each name as row
values. As before, we will use the hash of values as primary key for this table.

#+NAME: startup_distributed_tables
#+HEADER: :results output :session *Julia*
#+HEADER: :tangle doe_utils/distributed_experiments_concept.jl
#+BEGIN_SRC julia
if length(workers()) > 1
    rmprocs(workers())
end

addprocs()

import JuliaDB

@everywhere begin
    using JuliaDB

    mutable struct Measurement
        f1_value::Int64
        f2_value::Float64
        f3_value::Bool
        f4_value::String
        response::Float64
        complete::Bool
        id::UInt64

        Measurement(f1, f2, f3, f4, r) = new(f1, f2, f3, f4, r, true, hash("$f1$f2$f3$f4"))
        Measurement(f1, f2, f3, f4) = new(f1, f2, f3, f4, -1, false, hash("$f1$f2$f3$f4"))
    end

    function random_measurement()
        Measurement(rand(1:512), randexp(), bitrand()[1], rand(["--merge", "--no-merge"]), randexp())
    end

    function init_dummy_table()
        n = rand(4:10)

        parameters = Array{Measurement, 1}(n)

        # Generating meaningless, random parameters
        for i = 1:n
            parameters[i] = random_measurement()
        end

        names = fieldnames(Measurement)

        return table([[getfield(p, n) for p in parameters] for n in names]...,
                    names = names, pkey = :id)
    end

    function contains(t::NextTable, entry::Measurement)
        return entry.id in select(t, :id)
    end

    function add_complete_unique_entry!(t::NextTable, entry::Measurement)
        if entry.complete && !contains(t, entry)
            row_expr::Expr = :@NT

            for name in fieldnames(Measurement)
                push!(row_expr.args, Expr(Symbol("="), name, getfield(entry, name)))
            end

            push!(rows(t), eval(row_expr))

            # Sorting 't' by its primary key
            t = table(t, pkey = t.pkey, copy = false)
        end

        t
    end

    function measure(channel::RemoteChannel)
        put!(channel, init_dummy_table())
    end
end

#+END_SRC

#+RESULTS: startup_distributed_tables
#+begin_example
Task (done) @0x00007fa4ae4fdf90

4-element Array{Int64,1}:
 6
 7
 8
 9



#+end_example

Let's initialize the dummy table and attempt to add a new, incomplete
measurement. Note that the entry is not added.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
t = init_dummy_table()

k = Measurement(2, 9.263, false, "--merge")

add_complete_unique_entry!(t, k)

contains(t, k)
#+END_SRC

#+RESULTS:
#+begin_example
Table with 9 rows, 7 columns:
f1_value  f2_value  f3_value  f4_value      response  complete  id
──────────────────────────────────────────────────────────────────────────────────
38        0.193098  true      "--merge"     1.59589   true      0x2059aeb577a4992b
141       0.986257  true      "--merge"     2.90147   true      0x30231ace7f091ef0
427       1.17486   true      "--no-merge"  0.250161  true      0x709d921441a95b4f
92        0.57061   false     "--merge"     0.528176  true      0x79a391495a933127
257       0.520253  true      "--merge"     0.987173  true      0x7e8c8ebfaeff634d
52        2.57561   false     "--merge"     0.207802  true      0x847661511f04aabf
310       0.518026  true      "--no-merge"  0.987956  true      0x9676046bd2651988
304       0.240112  true      "--merge"     0.67181   true      0xc14b535f385c959f
166       0.458236  false     "--no-merge"  0.587674  true      0xcc228bc9aa58f9e4

Measurement(2, 9.263, false, "--merge", -1.0, false, 0x10bad578d513d719)

Table with 9 rows, 7 columns:
f1_value  f2_value  f3_value  f4_value      response  complete  id
──────────────────────────────────────────────────────────────────────────────────
38        0.193098  true      "--merge"     1.59589   true      0x2059aeb577a4992b
141       0.986257  true      "--merge"     2.90147   true      0x30231ace7f091ef0
427       1.17486   true      "--no-merge"  0.250161  true      0x709d921441a95b4f
92        0.57061   false     "--merge"     0.528176  true      0x79a391495a933127
257       0.520253  true      "--merge"     0.987173  true      0x7e8c8ebfaeff634d
52        2.57561   false     "--merge"     0.207802  true      0x847661511f04aabf
310       0.518026  true      "--no-merge"  0.987956  true      0x9676046bd2651988
304       0.240112  true      "--merge"     0.67181   true      0xc14b535f385c959f
166       0.458236  false     "--no-merge"  0.587674  true      0xcc228bc9aa58f9e4

false
#+end_example

Suppose we obtained the response value for ~k~, let's modify it and add it to the
table:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
k.response = randexp()
k.complete = true

add_complete_unique_entry!(t, k)

contains(t, k)
#+END_SRC

#+RESULTS:
#+begin_example
0.8340079134870472
true

Table with 10 rows, 7 columns:
f1_value  f2_value  f3_value  f4_value      response  complete  id
──────────────────────────────────────────────────────────────────────────────────
2         9.263     false     "--merge"     0.834008  true      0x10bad578d513d719
38        0.193098  true      "--merge"     1.59589   true      0x2059aeb577a4992b
141       0.986257  true      "--merge"     2.90147   true      0x30231ace7f091ef0
427       1.17486   true      "--no-merge"  0.250161  true      0x709d921441a95b4f
92        0.57061   false     "--merge"     0.528176  true      0x79a391495a933127
257       0.520253  true      "--merge"     0.987173  true      0x7e8c8ebfaeff634d
52        2.57561   false     "--merge"     0.207802  true      0x847661511f04aabf
310       0.518026  true      "--no-merge"  0.987956  true      0x9676046bd2651988
304       0.240112  true      "--merge"     0.67181   true      0xc14b535f385c959f
166       0.458236  false     "--no-merge"  0.587674  true      0xcc228bc9aa58f9e4

true
#+end_example

***** Working with Channels
Suppose two Julia processes are computing distinct sets of measurements. Since measurements
do not overlap we don't need to check a centralized table for the existance of a certain
measurement. After measurement is complete, or after set intervals, processes can report
their tables to be joined to the central table.

Assuming no repeated measurements, this is how we would launch computations in multiple
processes and merge all tables in a central process:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
@everywhere function measure(channel::RemoteChannel)
    put!(channel, init_dummy_table())
end

results = RemoteChannel(() -> Channel(32))

for p in workers()
    @async remote_do(measure, p, results)
end

t = take!(results)

for i = 1:length(workers()) - 1
    t = merge(t, take!(results))   
end

t
#+END_SRC

#+RESULTS:
#+begin_example


RemoteChannel{Channel{Any}}(1, 1, 40)



Table with 9 rows, 7 columns:
f1_value  f2_value   f3_value  f4_value      response  complete  id
───────────────────────────────────────────────────────────────────────────────────
282       0.533323   true      "--no-merge"  0.49751   true      0x0363723a72e66764
484       0.348535   false     "--merge"     0.30735   true      0x0a2a40204093afb0
435       0.318843   false     "--no-merge"  0.887813  true      0x245d07250c1791f0
337       2.13031    true      "--no-merge"  1.20018   true      0x2c5bfdb71cb9c176
195       0.0305376  true      "--no-merge"  0.71332   true      0x5e8b48e0f8829612
367       0.134364   false     "--no-merge"  0.151851  true      0x9a5ef9a0db01b1b4
424       4.00509    true      "--merge"     0.371395  true      0xa9c87d3ea87798e7
404       0.168736   false     "--merge"     0.48096   true      0xc1b81b37614579b0
194       2.82079    true      "--no-merge"  0.515405  true      0xd44f6773fc6efb00



Table with 54 rows, 7 columns:
f1_value  f2_value    f3_value  f4_value      response   complete  id
─────────────────────────────────────────────────────────────────────────────────────
383       2.50828     true      "--no-merge"  0.493274   true      0x00567e8b149d6764
282       0.533323    true      "--no-merge"  0.49751    true      0x0363723a72e66764
484       0.348535    false     "--merge"     0.30735    true      0x0a2a40204093afb0
432       2.72323     true      "--no-merge"  0.447859   true      0x10e69998197d3d4b
393       0.104914    false     "--merge"     1.29973    true      0x13ac4dca555bbb9f
506       3.77133     true      "--merge"     2.19816    true      0x19b258ef7ccf14ba
280       0.705403    false     "--merge"     0.791397   true      0x1c2cea7f050d07ab
435       0.318843    false     "--no-merge"  0.887813   true      0x245d07250c1791f0
337       2.13031     true      "--no-merge"  1.20018    true      0x2c5bfdb71cb9c176
107       0.0616653   true      "--no-merge"  1.40766    true      0x37900a05de2ffbeb
490       0.0545033   false     "--no-merge"  0.297057   true      0x3ccc2185d34e8bdc
388       0.423003    false     "--no-merge"  0.285466   true      0x3e4e86948f929b20
226       0.167104    true      "--no-merge"  0.684276   true      0x5a7a7d6cb5509deb
411       2.05808     false     "--merge"     0.843146   true      0x5c9d3b8c10f6bdd8
195       0.0305376   true      "--no-merge"  0.71332    true      0x5e8b48e0f8829612
426       0.668689    true      "--merge"     2.01037    true      0x64eef3bdb50d3f86
76        1.41415     false     "--merge"     1.55965    true      0x67ef2d803d0f775a
395       1.02713     true      "--merge"     0.294564   true      0x6ccce7bea11f7c40
421       0.218675    false     "--no-merge"  0.444635   true      0x6eb5747953b5ed95
390       0.227741    true      "--merge"     0.828888   true      0x79b213aba6ae4a79
368       0.493577    false     "--no-merge"  0.581821   true      0x7f1f1b9913791129
407       0.272852    true      "--merge"     0.626909   true      0x7fdc3bcc6c47fa9d
402       0.233224    false     "--merge"     0.330767   true      0x8137135068367beb
412       0.886558    false     "--merge"     1.00748    true      0x85183cb53e083794
470       0.116018    false     "--no-merge"  1.73099    true      0x913c884d726bc81b
⋮
397       0.10941     true      "--merge"     1.30336    true      0x9d905d348fae2782
332       1.3396      false     "--merge"     1.29031    true      0x9dc7d252d07feef7
363       0.00723561  false     "--no-merge"  0.493997   true      0xa9527fc4f0a6db9f
424       4.00509     true      "--merge"     0.371395   true      0xa9c87d3ea87798e7
85        2.59126     true      "--merge"     2.09594    true      0xb2a5e118495468cb
182       1.41895     false     "--merge"     0.235964   true      0xb5fbcca132dfa685
148       2.53847     true      "--merge"     0.190615   true      0xb9330657a89c410e
87        1.71622     true      "--no-merge"  1.07069    true      0xbbc9162ef5005ba7
404       0.168736    false     "--merge"     0.48096    true      0xc1b81b37614579b0
47        1.3565      true      "--merge"     0.182086   true      0xc4c537a649c0881e
354       2.37112     false     "--merge"     4.06       true      0xc6961123d3c63595
81        0.934288    true      "--no-merge"  1.93671    true      0xc9282d738c826bf0
94        0.0252242   false     "--no-merge"  0.759726   true      0xcabff86ac94d81ba
238       0.166296    true      "--merge"     0.384877   true      0xcb3d82c87570d646
35        0.389046    true      "--no-merge"  0.192987   true      0xd1c0bdfbfa747a0f
194       2.82079     true      "--no-merge"  0.515405   true      0xd44f6773fc6efb00
358       0.0414458   true      "--merge"     0.534009   true      0xd57689ba09b0a2ca
411       0.467605    true      "--merge"     0.257621   true      0xd5b0276f13204594
365       0.0401457   false     "--merge"     1.74944    true      0xdca8a9208f7f2523
435       1.52373     false     "--no-merge"  2.24847    true      0xe470186aa2521da1
408       1.49526     true      "--no-merge"  3.74246    true      0xe4b8708adea64edb
458       0.490276    false     "--merge"     0.269367   true      0xf0c6995ccdd5081c
394       0.141915    false     "--merge"     0.0737769  true      0xf32c1a0726c0f37d
104       0.395381    false     "--no-merge"  1.99718    true      0xffa3dcce29eb1ed2
#+end_example

Obviously, workers would check for repeated measurements during generation of new measurements,
and not simply create dummy random tables like this. The central table should also check for
repeated entries in a cleaning step.

**** POLARIS Meeting
- https://tinyurl.com/polaris-inria
- Ask a permanent for access to:
  - POLARIS website
  - OSE
- Journée au vert
  - Lundi-Mardi 5-6 Mars 2018
    
*** [2018-02-02 Fri]
- Finished the OFII process
**** Saving a JuliaDB table to disk
Defining useful functions:

#+CALL: startup_distributed_tables()

#+RESULTS:
#+begin_example
Task (done) @0x00007fa4b0343c70

4-element Array{Int64,1}:
 10
 11
 12
 13



#+end_example

Now, let's write the computed tables to a ~csv~ file:

#+HEADER: :results output :session *Julia*
#+HEADER: :tangle doe_utils/distributed_experiments_concept.jl
#+BEGIN_SRC julia
using FileIO

results = RemoteChannel(() -> Channel(32))

for p in workers()
    @async remote_do(measure, p, results)
end

t = take!(results)

for i = 1:length(workers()) - 1
    t = merge(t, take!(results))
end

t

FileIO.save("./test.csv", t)
#+END_SRC

#+RESULTS:
#+begin_example


RemoteChannel{Channel{Any}}(1, 1, 43)



Table with 5 rows, 7 columns:
f1_value  f2_value   f3_value  f4_value      response  complete  id
───────────────────────────────────────────────────────────────────────────────────
491       1.8934     false     "--merge"     2.58991   true      0x0b54674d56bbc67f
460       1.56159    true      "--no-merge"  0.621704  true      0x9c0df4dc8f00c33c
338       0.265022   true      "--no-merge"  1.6651    true      0xabeccc452d5ecec5
275       0.0792945  true      "--no-merge"  0.968435  true      0xb8a0e51e6f83a45b
208       0.207947   false     "--merge"     0.168493  true      0xeb654e38230a2ee8



Table with 24 rows, 7 columns:
f1_value  f2_value   f3_value  f4_value      response   complete  id
────────────────────────────────────────────────────────────────────────────────────
3         0.466884   true      "--merge"     1.26028    true      0x047a056f1c422c20
491       1.8934     false     "--merge"     2.58991    true      0x0b54674d56bbc67f
457       1.12631    true      "--no-merge"  0.0496524  true      0x0b77ee18965d37c6
315       0.0848518  false     "--no-merge"  3.40648    true      0x1440cca65e7bacd1
185       0.636221   true      "--no-merge"  1.168      true      0x2050a2ab047cc318
189       0.723873   true      "--merge"     0.817965   true      0x23fca485b531c11c
74        0.634778   false     "--no-merge"  1.50434    true      0x368a09274e3ac91d
369       0.81215    false     "--merge"     1.89922    true      0x4569ea338499e27a
334       0.443634   true      "--no-merge"  2.58926    true      0x4dbbae51cdc22ca0
93        1.7604     true      "--merge"     0.364559   true      0x4dc67039030da1a3
477       0.947876   true      "--no-merge"  0.42444    true      0x4fb323909358be22
110       1.65974    false     "--no-merge"  0.25735    true      0x5f3741933b936726
426       1.258      false     "--merge"     0.282177   true      0x65a5b6a0ab044671
245       0.0805777  false     "--no-merge"  1.58031    true      0x79fdf6a8cc5bb04b
183       1.32509    true      "--no-merge"  0.5031     true      0x878283cee583a431
223       2.76347    true      "--merge"     2.31278    true      0x90e41af9c0b04d71
460       1.56159    true      "--no-merge"  0.621704   true      0x9c0df4dc8f00c33c
338       0.265022   true      "--no-merge"  1.6651     true      0xabeccc452d5ecec5
466       0.668824   false     "--merge"     6.5149     true      0xb7902dfbd72a235a
275       0.0792945  true      "--no-merge"  0.968435   true      0xb8a0e51e6f83a45b
294       0.71041    false     "--merge"     0.210697   true      0xbbcb3ff947bdd2c0
208       0.207947   false     "--merge"     0.168493   true      0xeb654e38230a2ee8
330       0.839523   false     "--merge"     1.34819    true      0xf51383992db99cb2
348       0.193002   true      "--no-merge"  0.980365   true      0xf7e7150446bff13e

#+end_example
**** JuliaDB Table Utilities for DoE
Needed calls:

#+CALL: define_primes_divisible_offset()

#+RESULTS:
: 
: 
: primes_divisible_offset (generic function with 1 method)

#+CALL: define_julia_paley()

#+RESULTS:
: binary_search (generic function with 1 method)
: 
: paley (generic function with 1 method)

#+CALL: define_julia_plackett_burman()

#+RESULTS:
: plackett_burman (generic function with 1 method)

Utility to clean workspace and re-add processes:

#+NAME: julia_clean_rmprocs_addprocs
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
workspace()

if length(workers()) > 1
    rmprocs(workers())
end

addprocs()
#+END_SRC

#+RESULTS: julia_clean_rmprocs_addprocs
: 
: 
: 
: 
: 4-element Array{Int64,1}:
:  2
:  3
:  4
:  5

Utilities for creating tables from arbitrary measurements:

#+NAME: define_juliadb_table_utils
#+HEADER: :results output :session *Julia*
#+HEADER: :tangle autotuning_screening_experiment/src/screening/table_utils.jl
#+BEGIN_SRC julia
import JuliaDB
import FileIO

@everywhere begin
    using JuliaDB
    using FileIO

    mutable struct Measurement
        parameters::Dict{Symbol, Any}
        response::Float64
        complete::Bool
        id::UInt64

        Measurement(parameters, r) = new(parameters, r, true, hash(string(r, collect(values(parameters))...)))
        Measurement(parameters) = new(parameters, -1, false, hash(string(-1, collect(values(parameters))...)))
    end

    function init_table(measurements::Array{Measurement, 1})
        rows = Array{Any, 1}()

        parameters = collect(keys(measurements[1].parameters))
        measurement_names = [name for name in fieldnames(measurements[1]) if name != :parameters]
        column_names = vcat(parameters, measurement_names)

        for measurement in measurements
            push!(rows, vcat(collect(values(measurement.parameters)),
                             [getfield(measurement, f) for f in measurement_names]))
        end

        return table([[r[i] for r in rows] for i = 1:length(rows[1])]...,
                     names = column_names, pkey = :id)
    end

    function contains(t::NextTable, entry::Measurement)
        return entry.id in select(t, :id)
    end

    function add_complete_unique_entry!(t::NextTable, entry::Measurement)
        if entry.complete && !contains(t, entry)
            row_expr::Expr = :@NT

            for name in fieldnames(Measurement)
                if name == :parameters
                    for key in keys(entry.parameters)
                        push!(row_expr.args, Expr(Symbol("="), key,
                                                  entry.parameters[key]))
                    end
                else
                    push!(row_expr.args, Expr(Symbol("="), name,
                                              getfield(entry, name)))
                end
            end

            push!(rows(t), eval(row_expr))

            # Sorting 't' by its primary key
            t = table(t, pkey = t.pkey, copy = false)
        end

        t
    end

    function save_to_disk(t::NextTable, filename::String)
        FileIO.save(filename, t)
    end
end
#+END_SRC

#+RESULTS: define_juliadb_table_utils
: 
: 
: 

Now we can create tables with different kinds of measurements:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
parameters = Dict{Symbol, Any}([(:f1, 2.33), (:f2, 3),
                                (:f3, "--merge"),
                                (:f4, false), (:f5, 993.3)])

m = Measurement(parameters, 3312.93)

init_table([m])

parameters = Dict{Symbol, Any}([(:size_i, 32), (:size_j, 64),
                                (:method, "NEWTON"),
                                (:unroll, false), (:block_size, 4),
                                (:cores, 2)])

m = Measurement(parameters, 0.0112)

t = init_table([m])

parameters = Dict{Symbol, Any}([(:size_i, 64), (:size_j, 32),
                                (:method, "DEEPL"),
                                (:unroll, true), (:block_size, 2),
                                (:cores, 4)])

m = Measurement(parameters, 0.3202)

add_complete_unique_entry!(t, m)

parameters = [Dict{Symbol, Any}([(:size_i, 32), (:size_j, 64),
                                 (:method, "NEWTON"),
                                 (:unroll, false), (:block_size, 4),
                                 (:cores, 2)]),
              Dict{Symbol, Any}([(:size_i, 64), (:size_j, 32),
                                 (:method, "DEEPL"),
                                 (:unroll, true), (:block_size, 2),
                                 (:cores, 4)])]

m = [Measurement(p, rand()) for p in parameters]

t = init_table(m)

println(t[2])
#+END_SRC

#+RESULTS:
#+begin_example
Dict{Symbol,Any} with 5 entries:
  :f1 => 2.33
  :f3 => "--merge"
  :f5 => 993.3
  :f2 => 3
  :f4 => false

Measurement(Dict{Symbol,Any}(Pair{Symbol,Any}(:f1, 2.33),Pair{Symbol,Any}(:f3, "--merge"),Pair{Symbol,Any}(:f5, 993.3),Pair{Symbol,Any}(:f2, 3),Pair{Symbol,Any}(:f4, false)), 3312.93, true, 0xd3c53c588a047c6f)

Table with 1 rows, 8 columns:
f1    f3         f5     f2  f4     response  complete  id
─────────────────────────────────────────────────────────────────────────
2.33  "--merge"  993.3  3   false  3312.93   true      0xd3c53c588a047c6f

Dict{Symbol,Any} with 6 entries:
  :cores      => 2
  :method     => "NEWTON"
  :unroll     => false
  :size_j     => 64
  :block_size => 4
  :size_i     => 32

Measurement(Dict{Symbol,Any}(Pair{Symbol,Any}(:cores, 2),Pair{Symbol,Any}(:method, "NEWTON"),Pair{Symbol,Any}(:unroll, false),Pair{Symbol,Any}(:size_j, 64),Pair{Symbol,Any}(:block_size, 4),Pair{Symbol,Any}(:size_i, 32)), 0.0112, true, 0xb9100495dfe116c1)

Table with 1 rows, 9 columns:
cores  method    unroll  size_j  block_size  size_i  response  complete  id
───────────────────────────────────────────────────────────────────────────────────────────
2      "NEWTON"  false   64      4           32      0.0112    true      0xb9100495dfe116c1

Dict{Symbol,Any} with 6 entries:
  :cores      => 4
  :method     => "DEEPL"
  :unroll     => true
  :size_j     => 32
  :block_size => 2
  :size_i     => 64

Measurement(Dict{Symbol,Any}(Pair{Symbol,Any}(:cores, 4),Pair{Symbol,Any}(:method, "DEEPL"),Pair{Symbol,Any}(:unroll, true),Pair{Symbol,Any}(:size_j, 32),Pair{Symbol,Any}(:block_size, 2),Pair{Symbol,Any}(:size_i, 64)), 0.3202, true, 0x5938ff8189cba777)

Table with 2 rows, 9 columns:
cores  method    unroll  size_j  block_size  size_i  response  complete  id
───────────────────────────────────────────────────────────────────────────────────────────
4      "DEEPL"   true    32      2           64      0.3202    true      0x5938ff8189cba777
2      "NEWTON"  false   64      4           32      0.0112    true      0xb9100495dfe116c1

2-element Array{Dict{Symbol,Any},1}:
 Dict{Symbol,Any}(Pair{Symbol,Any}(:cores, 2),Pair{Symbol,Any}(:method, "NEWTON"),Pair{Symbol,Any}(:unroll, false),Pair{Symbol,Any}(:size_j, 64),Pair{Symbol,Any}(:block_size, 4),Pair{Symbol,Any}(:size_i, 32))
 Dict{Symbol,Any}(Pair{Symbol,Any}(:cores, 4),Pair{Symbol,Any}(:method, "DEEPL"),Pair{Symbol,Any}(:unroll, true),Pair{Symbol,Any}(:size_j, 32),Pair{Symbol,Any}(:block_size, 2),Pair{Symbol,Any}(:size_i, 64))

2-element Array{Measurement,1}:
 Measurement(Dict{Symbol,Any}(Pair{Symbol,Any}(:cores, 2),Pair{Symbol,Any}(:method, "NEWTON"),Pair{Symbol,Any}(:unroll, false),Pair{Symbol,Any}(:size_j, 64),Pair{Symbol,Any}(:block_size, 4),Pair{Symbol,Any}(:size_i, 32)), 0.32581, true, 0x63344b81dd9c547f)
 Measurement(Dict{Symbol,Any}(Pair{Symbol,Any}(:cores, 4),Pair{Symbol,Any}(:method, "DEEPL"),Pair{Symbol,Any}(:unroll, true),Pair{Symbol,Any}(:size_j, 32),Pair{Symbol,Any}(:block_size, 2),Pair{Symbol,Any}(:size_i, 64)), 0.829037, true, 0xba3c9eb8f99af7ab)

Table with 2 rows, 9 columns:
cores  method    unroll  size_j  block_size  size_i  response  complete  id
───────────────────────────────────────────────────────────────────────────────────────────
2      "NEWTON"  false   64      4           32      0.32581   true      0x63344b81dd9c547f
4      "DEEPL"   true    32      2           64      0.829037  true      0xba3c9eb8f99af7ab

(cores = 4, method = "DEEPL", unroll = true, size_j = 32, block_size = 2, size_i = 64, response = 0.8290374494839456, complete = true, id = 0xba3c9eb8f99af7ab)
#+end_example
*** [2018-02-05 Mon]
**** Task List for FPGA & GPU Experiments
***** DONE Generate larger plackett-burman sizes in julia
CLOSED: [2018-02-05 Mon 09:43]
:LOGBOOK:
- State "DONE"       from              [2018-02-05 Mon 09:43]
:END:
***** DONE Configure access to GTX-980 at CCSL
CLOSED: [2018-02-05 Mon 16:01]
:LOGBOOK:
- State "DONE"       from "TODO"       [2018-02-05 Mon 16:01]
- State "TODO"       from              [2018-02-05 Mon 09:45]
:END:
- Install Julia 0.6.2
  - Install necessary packages
- Check CUDA version
- Check disk quota
***** DONE Adapt search space from CUDA autotuner to perform experiments
CLOSED: [2018-02-05 Mon 16:10]
:LOGBOOK:
- State "DONE"       from "TODO"       [2018-02-05 Mon 16:10]
- State "TODO"       from              [2018-02-05 Mon 09:45]
:END:
***** STARTED Write script to generate commands from designs
:LOGBOOK:
- State "STARTED"    from "TODO"       [2018-02-05 Mon 16:10]
- State "TODO"       from              [2018-02-05 Mon 09:45]
:END:
***** TODO Write script to log system state periodically
:LOGBOOK:
- State "TODO"       from              [2018-02-05 Mon 09:46]
:END:
- CPU, memory, GPU, network usage
***** DONE Select target program (from Rodinia?)
CLOSED: [2018-02-05 Mon 10:34]
:LOGBOOK:
- State "DONE"       from "TODO"       [2018-02-05 Mon 10:34]
- State "TODO"       from              [2018-02-05 Mon 09:47]
:END:
***** TODO Use GCC parameters?
:LOGBOOK:
- State "TODO"       from              [2018-02-05 Mon 09:47]
:END:
**** Generating Experiments from Designs & Running Them
If you started the Julia process on this journal's root directory,
run the following:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
cd("autotuning_screening_experiment/src/screening")
#+END_SRC

#+RESULTS:

Now we define functions for loading the search space, generating
the experimental design and running it:

#+HEADER: :results output :session *Julia*
#+HEADER: :tangle autotuning_screening_experiment/src/screening/screening.jl
#+BEGIN_SRC julia
using JSON, CSV, DataFrames

include("plackett_burman.jl")
include("table_utils.jl")

abstract type Enumeration end
abstract type Flag end
abstract type Numeric end

struct Factor
    t::Type
    name::String
    min::String
    max::String
end

function generate_search_space(filename::String)
    json_data       = JSON.parsefile(filename)
    parameter_types = ["flags", "enumeration_parameters", "numeric_parameters"]
    parameters      = Array{Factor, 1}()

    for key in keys(json_data)
        prefix = json_data[key]["prefix"]
        for parameter_type in parameter_types
            if !(isempty(json_data[key][parameter_type]))
                if parameter_type == "flags"
                    for parameter in json_data[key][parameter_type]
                        push!(parameters, Factor(Flag, "$prefix $parameter",
                                                 "on", "off"))
                    end
                elseif parameter_type == "enumeration_parameters"
                    for parameter in json_data[key][parameter_type]
                        push!(parameters, Factor(Enumeration, 
                                                 "$prefix $(parameter[1])",
                                                 "$(parameter[2][1])",
                                                 "$(parameter[2][end])"))
                    end
                else
                    for parameter in json_data[key][parameter_type]
                        push!(parameters, Factor(Numeric,
                                                 "$prefix $(parameter[1])",
                                                 "$(parameter[2]["min"])",
                                                 "$(parameter[2]["max"])"))
                    end
                end
            end
        end
    end
    return parameters
end

function generate_design(factors::Array{Factor, 1})
    # TODO: Fix this. Plackett-Burman should return designs larger
    #       than requested rather than smaller.
    plackett_burman(length(factors) + 4)
end

function init_dataframe(measurements::Array{Measurement, 1})
    data = DataFrame()

    for key in keys(measurements[1].parameters)
        data[key] = [m.parameters[key] for m in measurements]
    end

    data[:response] = [m.response for m in measurements]
    data[:complete] = [m.complete for m in measurements]
    data[:id] = [m.id for m in measurements]
    
    data
end

function generate_experiments(design::Array{Int, 2}, factors::Array{Factor, 1})
    design_size = size(design)
    factors_length = length(factors)

    measurements = Array{Measurement, 1}()

    for i = 1:design_size[1]
        levels = Dict{Symbol, Any}()

        for j = 1:factors_length
            if design[i, j] == 1
                levels[Symbol(factors[j].name)] = factors[j].max
            else
                levels[Symbol(factors[j].name)] = factors[j].min
            end
        end

        push!(measurements, Measurement(levels))
    end

    init_dataframe(measurements)
end


function factor_dataframe(factors::Array{Factor, 1})
    data = DataFrame()

    for name in fieldnames(Factor)
        data[name] = [getfield(f, name) for f in factors]
    end

    data
end

function generate_flags(experiments::NextTable)
    flag_dict = Dict{UInt, String}()

    for row in experiments
        flags = string()

        for (flag, value) in zip(keys(row), row)
            if flag != :response && flag != :complete && flag != :id
                if value == "on"
                    flags = string(flags, flag, " ")
                elseif value != "off"
                    try
                        parse(Int, value)
                    catch ArgumentError
                        value = string("\"", value, "\"")
                    end

                    flags = string(flags, flag, value, " ")
                end                    
            end
        end

        flag_dict[row.id] = strip(flags)
    end

    flag_dict
end

function generate_flags(experiments::DataFrame)
    flag_dict = Dict{UInt, String}()

    for i = 1:size(experiments, 1)
        row = experiments[i, :]

        flags = string()

        exclude = [:response, :complete, :id, :dummy1,
                   :dummy2, :dummy3, :dummy4]

        for flag in names(row)
            if !(flag in exclude)
                if row[flag][1] == "on"
                    flags = string(flags, flag, " ")
                elseif row[flag][1] != "off"
                    value = row[flag][1]

                    try
                        value = parse(Int, value)
                    catch ArgumentError
                        value = string("\"", value, "\"")
                    end

                    flags = string(flags, flag, value, " ")
                end                    
            end
        end

        flag_dict[row[:id][1]] = strip(flags)
    end

    flag_dict
end

function log_state()
    log_path = "../../data"

    cpu = open("$log_path/cpu.txt", "a")
    gpu = open("$log_path/gpu.txt", "a")

    cpu_load = open("$log_path/cpu_load.txt", "a")
    gpu_load = open("$log_path/gpu_load.txt", "a")

    hw = open("$log_path/hw.txt", "a")
    uname = open("$log_path/uname.txt", "a")

    write(cpu, readstring(`lscpu`))
    write(cpu, readstring(`cat /proc/cpuinfo`))

    write(hw, readstring(`lshw`))
    write(hw, readstring(`lspci`))

    write(gpu, readstring(`nvidia-smi`))

    write(uname, readstring(`uname -a`))

    write(cpu_load, readstring(`date`))
    write(cpu_load, readstring(`ps aux`))

    write(gpu_load, readstring(`date`))
    write(gpu_load, readstring(`nvidia-smi`))

    close(cpu)
    close(gpu)

    close(cpu_load)
    close(gpu_load)

    close(hw)
    close(uname)
end

function log_state(run_id::UInt)
    log_path = "../../data"

    cpu = open("$log_path/cpu.txt", "a")
    gpu = open("$log_path/gpu.txt", "a")

    cpu_load = open("$log_path/cpu_load.txt", "a")
    gpu_load = open("$log_path/gpu_load.txt", "a")

    hw = open("$log_path/hw.txt", "a")
    uname = open("$log_path/uname.txt", "a")

    measurements = open("$log_path/measurements.txt", "a")

    write(cpu_load, readstring(`date`))
    write(cpu_load, readstring(`ps aux`))

    write(gpu_load, readstring(`date`))
    write(gpu_load, readstring(`nvidia-smi`))

    write(measurements, "$run_id ")
    write(measurements, readstring(`date`))

    close(cpu)
    close(gpu)

    close(cpu_load)
    close(gpu_load)

    close(hw)
    close(uname)

    close(measurements)
end


function compile_with_flags(flags::String)
    environment = copy(ENV)
    environment["NVCC_FLAGS"] = flags

    directory = "../gaussian/"

    c = Cmd(`make`, env = environment, dir = directory)

    println(flags)
    run(c)
end

function measure(experiments::DataFrame, id::UInt,
                 data::DataFrame, replications::Int)

    for i = 1:replications
        measurement = deepcopy(experiments[experiments[:id] .== id, :])

        directory = "../gaussian/"
        c = Cmd(`./run.sh`, dir = directory)
        response = @elapsed run(c)

        measurement[:response] = response
        measurement[:complete] = true

        if isempty(data)
            data = measurement
        else
            append!(data, measurement)
        end
    end

    data
end

#+END_SRC

#+RESULTS:
#+begin_example


plackett_burman (generic function with 1 method)








generate_search_space (generic function with 1 method)

generate_design (generic function with 1 method)

init_dataframe (generic function with 1 method)

generate_experiments (generic function with 1 method)


factor_dataframe (generic function with 1 method)

generate_flags (generic function with 2 methods)

generate_flags (generic function with 2 methods)

log_state (generic function with 2 methods)

log_state (generic function with 2 methods)


compile_with_flags (generic function with 1 method)

measure (generic function with 1 method)
#+end_example

Now we can launch the experiments. This next code block will attempt to launch
the experiments in a local machine. The local machine must have a GPU.
I intend to improve the workflow for this.

#+HEADER: :results output :session *Julia*
#+HEADER: :tangle autotuning_screening_experiment/src/screening/screening.jl
#+BEGIN_SRC julia
function run_experiments()
    factors = generate_search_space("../parameters/nvcc_flags.json")
    design = generate_design(factors)

    i = 1
    while length(factors) != size(design, 2)
        push!(factors, Factor(Numeric, Symbol(string("dummy", i)),
                              string(-1), string(1)))
        i += 1
    end

    experiments = generate_experiments(design, factors)

    CSV.write("./experiments.csv", experiments)

    factor_names = [Symbol(f.name) for f in factors]

    screening_design = DataFrame(design)
    screening_design = names!(screening_design, factor_names)

    CSV.write("./screening_design.csv", screening_design)

    factor_df = factor_dataframe(factors)

    CSV.write("./factors.csv", factor_df)

    flags = generate_flags(experiments)

    replications = 2

    data = DataFrame()

    log_state()

    for (id, flag) in flags
        log_state(id)
        compile_with_flags(flag)
        data = measure(experiments, id, data, replications)
    end

    CSV.write("./results.csv", data)
end

run_experiments()
#+END_SRC

#+RESULTS:
: run_experiments (generic function with 1 method)
: 
: CSV.Sink(    CSV.Options:
:         delim: ','
:         quotechar: '"'
:         escapechar: '\\'
:         null: ""
:         dateformat: dateformat"yyyy-mm-dd", IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1), "./factors.csv", 23, true, String["t", "name", "min", "max"], false)

*** [2018-02-06 Tue]
**** Resume work on [[Generating Experiments from Designs & Running Them]]
- Finish functions for generating commands
- Tweak search space for new CUDA version
- Switch to the better-suited DataFrames for screening
- Test dry-runs at remote machine
- Finish functions for logging system state
- Gather data over night at remote machine
*** [2018-02-07 Wed]
**** Analysing Data from the GPU Autotuning Screening Experiment
First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/3_replications/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

# Uncomment to generate well-formatted figure:
#
#names(ordered_results)
#
#names(ordered_results) <- c("prl", "nad", "ufm", "ftz", "psq", "gpa", "opt", "rdc",
#                            "prd", "aee", "fmd", "flc", "opl", "fsc", "mrc", "dummy1",
#                            "dummy2", "dummy3", "dummy4", "response")

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq   F value   Pr(>F)
X.Xnvlink...preserve.relocs                1 0.0000  0.0000     0.037  0.84803
X..no.align.double                         1 0.0002  0.0002     2.308  0.13661
X..use_fast_math                           1 0.0000  0.0000     0.637  0.42939
X..ftz.                                    1 0.0000  0.0000     0.150  0.70053
X..prec.sqrt.                              1 0.0007  0.0007     9.865  0.00317
X..gpu.architecture.                       1 0.0036  0.0036    48.928 1.91e-08
X..optimize.                               1 0.0017  0.0017    23.422 1.97e-05
X..relocatable.device.code.                1 0.0001  0.0001     0.764  0.38728
X..prec.div.                               1 0.0000  0.0000     0.249  0.62053
X.Xptxas...allow.expensive.optimizations.  1 0.0002  0.0002     2.428  0.12705
X.Xptxas...fmad.                           1 0.0001  0.0001     1.764  0.19170
X.Xptxas...force.load.cache.               1 1.1981  1.1981 16252.071  < 2e-16
X.Xptxas...opt.level.                      1 0.0000  0.0000     0.069  0.79473
X.Xptxas...force.store.cache.              1 0.0002  0.0002     2.249  0.14159
X.Xptxas...maxrregcount.                   1 0.0000  0.0000     0.123  0.72781
dummy1                                     1 0.0005  0.0005     6.979  0.01171
dummy2                                     1 0.0005  0.0005     6.161  0.01736
dummy3                                     1 0.0000  0.0000     0.313  0.57906
dummy4                                     1 0.0001  0.0001     1.240  0.27205
Residuals                                 40 0.0029  0.0001                   
                                             
X.Xnvlink...preserve.relocs                  
X..no.align.double                           
X..use_fast_math                             
X..ftz.                                      
X..prec.sqrt.                             ** 
X..gpu.architecture.                      ***
X..optimize.                              ***
X..relocatable.device.code.                  
X..prec.div.                                 
X.Xptxas...allow.expensive.optimizations.    
X.Xptxas...fmad.                             
X.Xptxas...force.load.cache.              ***
X.Xptxas...opt.level.                        
X.Xptxas...force.store.cache.                
X.Xptxas...maxrregcount.                     
dummy1                                    *  
dummy2                                    *  
dummy3                                       
dummy4                                       
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.019523 -0.003594  0.000297  0.003210  0.032590 

Coefficients:
                                                Estimate Std. Error  t value
(Intercept)                                    8.0779861  0.0044338 1821.930
X.Xnvlink...preserve.relocson                 -0.0004276  0.0022169   -0.193
X..no.align.doubleon                          -0.0033676  0.0022169   -1.519
X..use_fast_mathon                            -0.0017698  0.0022169   -0.798
X..ftz.true                                   -0.0008588  0.0022169   -0.387
X..prec.sqrt.true                              0.0069628  0.0022169    3.141
X..gpu.architecture.sm_52                     -0.0155067  0.0022169   -6.995
X..optimize.3                                 -0.0107288  0.0022169   -4.840
X..relocatable.device.code.true                0.0019378  0.0022169    0.874
X..prec.div.true                               0.0011062  0.0022169    0.499
X.Xptxas...allow.expensive.optimizations.true -0.0034544  0.0022169   -1.558
X.Xptxas...fmad.true                          -0.0029440  0.0022169   -1.328
X.Xptxas...force.load.cache.lu                 0.2826154  0.0022169  127.484
X.Xptxas...opt.level.3                         0.0005806  0.0022169    0.262
X.Xptxas...force.store.cache.cs               -0.0033243  0.0022169   -1.500
X.Xptxas...maxrregcount.63                    -0.0007770  0.0022169   -0.350
dummy1                                         0.0029283  0.0011084    2.642
dummy2                                         0.0027512  0.0011084    2.482
dummy3                                        -0.0006200  0.0011084   -0.559
dummy4                                        -0.0012345  0.0011084   -1.114
                                              Pr(>|t|)    
(Intercept)                                    < 2e-16 ***
X.Xnvlink...preserve.relocson                  0.84803    
X..no.align.doubleon                           0.13661    
X..use_fast_mathon                             0.42939    
X..ftz.true                                    0.70053    
X..prec.sqrt.true                              0.00317 ** 
X..gpu.architecture.sm_52                     1.91e-08 ***
X..optimize.3                                 1.97e-05 ***
X..relocatable.device.code.true                0.38728    
X..prec.div.true                               0.62053    
X.Xptxas...allow.expensive.optimizations.true  0.12705    
X.Xptxas...fmad.true                           0.19170    
X.Xptxas...force.load.cache.lu                 < 2e-16 ***
X.Xptxas...opt.level.3                         0.79473    
X.Xptxas...force.store.cache.cs                0.14159    
X.Xptxas...maxrregcount.63                     0.72781    
dummy1                                         0.01171 *  
dummy2                                         0.01736 *  
dummy3                                         0.57906    
dummy4                                         0.27205    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.008586 on 40 degrees of freedom
Multiple R-squared:  0.9976,	Adjusted R-squared:  0.9964 
F-statistic:   861 on 19 and 40 DF,  p-value: < 2.2e-16
#+end_example

Use this header to generate a well-formatted figure:
##+begin_src R :results output graphics :file "main_effects_gpu.png" :exports both :width 1280 :height 800 :session *R* 

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
# Uncomment to generate well-formatted figure:
#
#names(reg)
#MEPlot(reg, main = "Main Effects Plot of CUDA Compilation Flags for Execution Time", pch = 20,
#       lwd = 3, cex.xax = 1.7, cex.yax = 2, cex.title = 2, cex.main = 1.8, cex.lab = 1.5, abbrev = 2)
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-856mr7/figure856G0J.png]]


#+HEADER: :results output :session *R*
#+BEGIN_SRC R
reg = aov(data = ordered_results, response ~ X..prec.sqrt. + X..gpu.architecture. + X..optimize. + X.Xptxas...force.load.cache. + dummy1 + dummy2 + dummy3 + dummy4)

summary.aov(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                             Df Sum Sq Mean Sq   F value   Pr(>F)    
X..prec.sqrt.                 1 0.0007  0.0007     9.908  0.00275 ** 
X..gpu.architecture.          1 0.0036  0.0036    49.142 5.25e-09 ***
X..optimize.                  1 0.0017  0.0017    23.524 1.20e-05 ***
X.Xptxas...force.load.cache.  1 1.1981  1.1981 16323.419  < 2e-16 ***
dummy1                        1 0.0005  0.0005     7.010  0.01076 *  
dummy2                        1 0.0005  0.0005     6.188  0.01618 *  
dummy3                        1 0.0000  0.0000     0.314  0.57756    
dummy4                        1 0.0001  0.0001     1.246  0.26959    
Residuals                    51 0.0037  0.0001                       
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure8856ic.png]]

**** Meeting with Arnaud & Brice
0:20 minutes to run 20 combinations of parameters with 3 replications.
open tuner =1:30 but it was running 10 replications

- TODO You may want to redo the XP with O2/O3 instead of O0/O3. Hopefully, the
  conclusions should not be that different (except for the impact of -O of
  course). Some parameters may actually become more ineffective.
- Next step: set the factors that are significant to their best levels 
- Then we're left with three different kind of factors that may cal for
  different kind of experiments as we don't know how to do them all at once. In
  any cases, we should set the most important factors to their best level and
  explore the rest of the subspace:
  - unsignificant factors that may become significant when setting the other factors to their best level. We may want to screen again.
  - TODO maxrregcount is integer and may have a tradeoff.
    - min values =16 and max value =63. It looks like setting to 63 improves a
      bit but we have no idea of what happens in the middle. So try with max
      value = (16+63)/2.
    - randomize the 9 other factors (say 8 combinations) and replicate the combination for all three min/middle/max values.
  - force.load.cache and force.store.cache have more than 2 levels (4 or 5) and
    there is no clear order.
    - we could try the Addelman and Kempthorne approach with s=5^1. Up to 11
      factors with 50 combinations but 11 factors is way too much. Could we go
      with less than 25 combinations ? Because all
    - maybe we could use s=2^2=4 levels and project to mix classical 2-level
      with 4 level factors (although the 5th level of one factor would have to
      be dropped).
    - I don't know whether this kind of design is mentionned in the Montgomery.
- Read the 1961 paper by Addelman and Kempthorne.
- Pull the best solution of open tuner:
 
*** [2018-02-08 Thu]
**** Next Steps on Screening Experimental Designs
From our last meeting @ [2018-02-07 Wed]:
***** DONE Use 02/03 as levels instead of O0/03
CLOSED: [2018-02-08 Thu 14:16]
:LOGBOOK:
- State "DONE"       from "TODO"       [2018-02-08 Thu 14:16]
- State "TODO"       from              [2018-02-08 Thu 10:57]
:END:
***** TODO Set significant factors to best levels, explore other factors
:LOGBOOK:
- State "TODO"       from              [2018-02-08 Thu 10:58]
:END:
***** DONE Try ~maxrregcount~ with intermediate values
CLOSED: [2018-02-08 Thu 15:00]
:LOGBOOK:
- State "DONE"       from "TODO"       [2018-02-08 Thu 15:00]
- State "TODO"       from              [2018-02-08 Thu 10:58]
:END:
***** TODO Try the "two columns encoding four levels" idea
:LOGBOOK:
- State "TODO"       from              [2018-02-08 Thu 10:59]
:END:
***** TODO Read [[file:~/Dropbox/papers/design-of-experiments/addelman1961some.pdf][the 1961 Addelman and Kempthorne paper]]
:LOGBOOK:
- State "TODO"       from              [2018-02-08 Thu 11:04]
:END:
***** TODO Compare the screening results with the best OpenTuner configuration
:LOGBOOK:
- State "TODO"       from              [2018-02-08 Thu 11:05]
:END:
**** Exploring GPU Screening Experiments
***** Exploring ~force_load_cache~
****** ~cg~
We will now look at what happens when we change the levels for the ~force-load-cache~ parameter.

First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/3_replications_cache_cg/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq  F value   Pr(>F)
X.Xnvlink...preserve.relocs                1 0.0003  0.0003    0.555    0.461
X..no.align.double                         1 0.0000  0.0000    0.097    0.757
X..use_fast_math                           1 0.0000  0.0000    0.094    0.761
X..ftz.                                    1 0.0001  0.0001    0.187    0.668
X..prec.sqrt.                              1 0.0008  0.0008    1.620    0.210
X..gpu.architecture.                       1 0.0154  0.0154   30.383 2.29e-06
X..optimize.                               1 0.0010  0.0010    2.019    0.163
X..relocatable.device.code.                1 0.0003  0.0003    0.546    0.464
X..prec.div.                               1 0.0010  0.0010    1.969    0.168
X.Xptxas...allow.expensive.optimizations.  1 0.0000  0.0000    0.000    0.996
X.Xptxas...fmad.                           1 0.0002  0.0002    0.306    0.583
X.Xptxas...force.load.cache.               1 1.2445  1.2445 2462.489  < 2e-16
X.Xptxas...opt.level.                      1 0.0001  0.0001    0.220    0.642
X.Xptxas...force.store.cache.              1 0.0000  0.0000    0.033    0.857
X.Xptxas...maxrregcount.                   1 0.0001  0.0001    0.294    0.591
dummy1                                     1 0.0000  0.0000    0.045    0.834
dummy2                                     1 0.0001  0.0001    0.134    0.716
dummy3                                     1 0.0001  0.0001    0.228    0.636
dummy4                                     1 0.0005  0.0005    0.965    0.332
Residuals                                 40 0.0202  0.0005                  
                                             
X.Xnvlink...preserve.relocs                  
X..no.align.double                           
X..use_fast_math                             
X..ftz.                                      
X..prec.sqrt.                                
X..gpu.architecture.                      ***
X..optimize.                                 
X..relocatable.device.code.                  
X..prec.div.                                 
X.Xptxas...allow.expensive.optimizations.    
X.Xptxas...fmad.                             
X.Xptxas...force.load.cache.              ***
X.Xptxas...opt.level.                        
X.Xptxas...force.store.cache.                
X.Xptxas...maxrregcount.                     
dummy1                                       
dummy2                                       
dummy3                                       
dummy4                                       
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.026045 -0.011378 -0.001835  0.003730  0.048183 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    8.074e+00  1.161e-02 695.510
X.Xnvlink...preserve.relocson                  4.323e-03  5.805e-03   0.745
X..no.align.doubleon                          -1.812e-03  5.805e-03  -0.312
X..use_fast_mathon                             1.777e-03  5.805e-03   0.306
X..ftz.true                                   -2.507e-03  5.805e-03  -0.432
X..prec.sqrt.true                              7.388e-03  5.805e-03   1.273
X..gpu.architecture.sm_52                     -3.200e-02  5.805e-03  -5.512
X..optimize.3                                 -8.248e-03  5.805e-03  -1.421
X..relocatable.device.code.true                4.288e-03  5.805e-03   0.739
X..prec.div.true                               8.146e-03  5.805e-03   1.403
X.Xptxas...allow.expensive.optimizations.true  2.943e-05  5.805e-03   0.005
X.Xptxas...fmad.true                          -3.210e-03  5.805e-03  -0.553
X.Xptxas...force.load.cache.cg                 2.880e-01  5.805e-03  49.623
X.Xptxas...opt.level.3                         2.723e-03  5.805e-03   0.469
X.Xptxas...force.store.cache.cs                1.051e-03  5.805e-03   0.181
X.Xptxas...maxrregcount.63                     3.147e-03  5.805e-03   0.542
dummy1                                        -6.135e-04  2.902e-03  -0.211
dummy2                                         1.062e-03  2.902e-03   0.366
dummy3                                        -1.386e-03  2.902e-03  -0.477
dummy4                                         2.851e-03  2.902e-03   0.982
                                              Pr(>|t|)    
(Intercept)                                    < 2e-16 ***
X.Xnvlink...preserve.relocson                    0.461    
X..no.align.doubleon                             0.757    
X..use_fast_mathon                               0.761    
X..ftz.true                                      0.668    
X..prec.sqrt.true                                0.210    
X..gpu.architecture.sm_52                     2.29e-06 ***
X..optimize.3                                    0.163    
X..relocatable.device.code.true                  0.464    
X..prec.div.true                                 0.168    
X.Xptxas...allow.expensive.optimizations.true    0.996    
X.Xptxas...fmad.true                             0.583    
X.Xptxas...force.load.cache.cg                 < 2e-16 ***
X.Xptxas...opt.level.3                           0.642    
X.Xptxas...force.store.cache.cs                  0.857    
X.Xptxas...maxrregcount.63                       0.591    
dummy1                                           0.834    
dummy2                                           0.716    
dummy3                                           0.636    
dummy4                                           0.332    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.02248 on 40 degrees of freedom
Multiple R-squared:  0.9843,	Adjusted R-squared:  0.9768 
F-statistic: 131.7 on 19 and 40 DF,  p-value: < 2.2e-16
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure885I8R.png]]

****** ~cv~
We will now look at what happens when we change the levels for the ~force-load-cache~ parameter.

First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/3_replications_cache_cv/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq   F value   Pr(>F)
X.Xnvlink...preserve.relocs                1   0.08    0.08    257.08  < 2e-16
X..no.align.double                         1   0.08    0.08    247.86  < 2e-16
X..use_fast_math                           1   0.09    0.09    282.64  < 2e-16
X..ftz.                                    1   0.08    0.08    277.25  < 2e-16
X..prec.sqrt.                              1   0.08    0.08    270.58  < 2e-16
X..gpu.architecture.                       1   0.03    0.03     93.69 4.91e-12
X..optimize.                               1   0.10    0.10    319.19  < 2e-16
X..relocatable.device.code.                1   0.05    0.05    176.26 3.03e-16
X..prec.div.                               1   0.07    0.07    214.50  < 2e-16
X.Xptxas...allow.expensive.optimizations.  1   0.06    0.06    180.68  < 2e-16
X.Xptxas...fmad.                           1   0.07    0.07    233.86  < 2e-16
X.Xptxas...force.load.cache.               1  37.93   37.93 124166.60  < 2e-16
X.Xptxas...opt.level.                      1   0.09    0.09    304.32  < 2e-16
X.Xptxas...force.store.cache.              1   1.85    1.85   6070.35  < 2e-16
X.Xptxas...maxrregcount.                   1   0.07    0.07    226.32  < 2e-16
dummy1                                     1   0.06    0.06    200.14  < 2e-16
dummy2                                     1   0.64    0.64   2080.37  < 2e-16
dummy3                                     1   0.08    0.08    263.78  < 2e-16
dummy4                                     1   0.07    0.07    239.39  < 2e-16
Residuals                                 40   0.01    0.00                   
                                             
X.Xnvlink...preserve.relocs               ***
X..no.align.double                        ***
X..use_fast_math                          ***
X..ftz.                                   ***
X..prec.sqrt.                             ***
X..gpu.architecture.                      ***
X..optimize.                              ***
X..relocatable.device.code.               ***
X..prec.div.                              ***
X.Xptxas...allow.expensive.optimizations. ***
X.Xptxas...fmad.                          ***
X.Xptxas...force.load.cache.              ***
X.Xptxas...opt.level.                     ***
X.Xptxas...force.store.cache.             ***
X.Xptxas...maxrregcount.                  ***
dummy1                                    ***
dummy2                                    ***
dummy3                                    ***
dummy4                                    ***
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.027292 -0.004351 -0.001522  0.003293  0.052002 

Coefficients:
                                               Estimate Std. Error t value
(Intercept)                                    8.361723   0.009025 926.500
X.Xnvlink...preserve.relocson                  0.072353   0.004513  16.034
X..no.align.doubleon                           0.071043   0.004513  15.743
X..use_fast_mathon                             0.075864   0.004513  16.812
X..ftz.true                                   -0.075137   0.004513 -16.651
X..prec.sqrt.true                             -0.074228   0.004513 -16.449
X..gpu.architecture.sm_52                      0.043677   0.004513   9.679
X..optimize.3                                 -0.080620   0.004513 -17.866
X..relocatable.device.code.true               -0.059910   0.004513 -13.276
X..prec.div.true                              -0.066090   0.004513 -14.646
X.Xptxas...allow.expensive.optimizations.true  0.060656   0.004513  13.442
X.Xptxas...fmad.true                          -0.069007   0.004513 -15.292
X.Xptxas...force.load.cache.cv                 1.590093   0.004513 352.373
X.Xptxas...opt.level.3                        -0.078720   0.004513 -17.445
X.Xptxas...force.store.cache.cs               -0.351582   0.004513 -77.912
X.Xptxas...maxrregcount.63                    -0.067887   0.004513 -15.044
dummy1                                        -0.031920   0.002256 -14.147
dummy2                                        -0.102911   0.002256 -45.611
dummy3                                        -0.036645   0.002256 -16.241
dummy4                                         0.034909   0.002256  15.472
                                              Pr(>|t|)    
(Intercept)                                    < 2e-16 ***
X.Xnvlink...preserve.relocson                  < 2e-16 ***
X..no.align.doubleon                           < 2e-16 ***
X..use_fast_mathon                             < 2e-16 ***
X..ftz.true                                    < 2e-16 ***
X..prec.sqrt.true                              < 2e-16 ***
X..gpu.architecture.sm_52                     4.91e-12 ***
X..optimize.3                                  < 2e-16 ***
X..relocatable.device.code.true               3.03e-16 ***
X..prec.div.true                               < 2e-16 ***
X.Xptxas...allow.expensive.optimizations.true  < 2e-16 ***
X.Xptxas...fmad.true                           < 2e-16 ***
X.Xptxas...force.load.cache.cv                 < 2e-16 ***
X.Xptxas...opt.level.3                         < 2e-16 ***
X.Xptxas...force.store.cache.cs                < 2e-16 ***
X.Xptxas...maxrregcount.63                     < 2e-16 ***
dummy1                                         < 2e-16 ***
dummy2                                         < 2e-16 ***
dummy3                                         < 2e-16 ***
dummy4                                         < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.01748 on 40 degrees of freedom
Multiple R-squared:  0.9997,	Adjusted R-squared:  0.9996 
F-statistic:  7163 on 19 and 40 DF,  p-value: < 2.2e-16
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure885iJq.png]]

****** ~cs~
We will now look at what happens when we change the levels for the ~force-load-cache~ parameter.

First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/3_replications_cache_cs/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq  F value   Pr(>F)
X.Xnvlink...preserve.relocs                1 0.0003  0.0003    0.658   0.4220
X..no.align.double                         1 0.0002  0.0002    0.362   0.5510
X..use_fast_math                           1 0.0015  0.0015    2.968   0.0927
X..ftz.                                    1 0.0001  0.0001    0.254   0.6172
X..prec.sqrt.                              1 0.0001  0.0001    0.257   0.6153
X..gpu.architecture.                       1 0.0152  0.0152   30.875 1.98e-06
X..optimize.                               1 0.0031  0.0031    6.239   0.0167
X..relocatable.device.code.                1 0.0009  0.0009    1.912   0.1744
X..prec.div.                               1 0.0002  0.0002    0.493   0.4866
X.Xptxas...allow.expensive.optimizations.  1 0.0002  0.0002    0.408   0.5265
X.Xptxas...fmad.                           1 0.0002  0.0002    0.306   0.5833
X.Xptxas...force.load.cache.               1 1.2548  1.2548 2553.211  < 2e-16
X.Xptxas...opt.level.                      1 0.0000  0.0000    0.003   0.9585
X.Xptxas...force.store.cache.              1 0.0006  0.0006    1.321   0.2573
X.Xptxas...maxrregcount.                   1 0.0000  0.0000    0.051   0.8233
dummy1                                     1 0.0008  0.0008    1.657   0.2054
dummy2                                     1 0.0000  0.0000    0.075   0.7860
dummy3                                     1 0.0002  0.0002    0.475   0.4945
dummy4                                     1 0.0003  0.0003    0.572   0.4540
Residuals                                 40 0.0197  0.0005                  
                                             
X.Xnvlink...preserve.relocs                  
X..no.align.double                           
X..use_fast_math                          .  
X..ftz.                                      
X..prec.sqrt.                                
X..gpu.architecture.                      ***
X..optimize.                              *  
X..relocatable.device.code.                  
X..prec.div.                                 
X.Xptxas...allow.expensive.optimizations.    
X.Xptxas...fmad.                             
X.Xptxas...force.load.cache.              ***
X.Xptxas...opt.level.                        
X.Xptxas...force.store.cache.                
X.Xptxas...maxrregcount.                     
dummy1                                       
dummy2                                       
dummy3                                       
dummy4                                       
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.031645 -0.004985 -0.000880  0.003668  0.054500 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    8.0811858  0.0114480 705.903
X.Xnvlink...preserve.relocson                  0.0046443  0.0057240   0.811
X..no.align.doubleon                          -0.0034422  0.0057240  -0.601
X..use_fast_mathon                             0.0098611  0.0057240   1.723
X..ftz.true                                   -0.0028831  0.0057240  -0.504
X..prec.sqrt.true                             -0.0028991  0.0057240  -0.506
X..gpu.architecture.sm_52                     -0.0318055  0.0057240  -5.557
X..optimize.3                                 -0.0142976  0.0057240  -2.498
X..relocatable.device.code.true                0.0079149  0.0057240   1.383
X..prec.div.true                               0.0040196  0.0057240   0.702
X.Xptxas...allow.expensive.optimizations.true -0.0036573  0.0057240  -0.639
X.Xptxas...fmad.true                          -0.0031660  0.0057240  -0.553
X.Xptxas...force.load.cache.cs                 0.2892301  0.0057240  50.529
X.Xptxas...opt.level.3                        -0.0002995  0.0057240  -0.052
X.Xptxas...force.store.cache.cs               -0.0065776  0.0057240  -1.149
X.Xptxas...maxrregcount.63                    -0.0012870  0.0057240  -0.225
dummy1                                        -0.0036842  0.0028620  -1.287
dummy2                                        -0.0007824  0.0028620  -0.273
dummy3                                        -0.0019734  0.0028620  -0.690
dummy4                                        -0.0021639  0.0028620  -0.756
                                              Pr(>|t|)    
(Intercept)                                    < 2e-16 ***
X.Xnvlink...preserve.relocson                   0.4220    
X..no.align.doubleon                            0.5510    
X..use_fast_mathon                              0.0927 .  
X..ftz.true                                     0.6172    
X..prec.sqrt.true                               0.6153    
X..gpu.architecture.sm_52                     1.98e-06 ***
X..optimize.3                                   0.0167 *  
X..relocatable.device.code.true                 0.1744    
X..prec.div.true                                0.4866    
X.Xptxas...allow.expensive.optimizations.true   0.5265    
X.Xptxas...fmad.true                            0.5833    
X.Xptxas...force.load.cache.cs                 < 2e-16 ***
X.Xptxas...opt.level.3                          0.9585    
X.Xptxas...force.store.cache.cs                 0.2573    
X.Xptxas...maxrregcount.63                      0.8233    
dummy1                                          0.2054    
dummy2                                          0.7860    
dummy3                                          0.4945    
dummy4                                          0.4540    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.02217 on 40 degrees of freedom
Multiple R-squared:  0.9849,	Adjusted R-squared:  0.9777 
F-statistic:   137 on 19 and 40 DF,  p-value: < 2.2e-16
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure885VGY.png]]

***** Exploring ~maxrregcount~
We will now look at what happens when we change the levels for the ~maxrregcount~ parameter.
This is the only parameter that is an integer, and the CUDA documentation explicitly mentions
it can be a tradeoff, so we want to know what happens in the middle.

First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/3_replications_half_maxrregs/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq  F value   Pr(>F)
X.Xnvlink...preserve.relocs                1 0.0000  0.0000    0.057 0.812640
X..no.align.double                         1 0.0005  0.0005    1.087 0.303487
X..use_fast_math                           1 0.0001  0.0001    0.118 0.732949
X..ftz.                                    1 0.0011  0.0011    2.389 0.130094
X..prec.sqrt.                              1 0.0001  0.0001    0.305 0.584076
X..gpu.architecture.                       1 0.0065  0.0065   13.782 0.000625
X..optimize.                               1 0.0016  0.0016    3.287 0.077347
X..relocatable.device.code.                1 0.0004  0.0004    0.883 0.353026
X..prec.div.                               1 0.0007  0.0007    1.512 0.226092
X.Xptxas...allow.expensive.optimizations.  1 0.0002  0.0002    0.414 0.523648
X.Xptxas...fmad.                           1 0.0000  0.0000    0.050 0.823950
X.Xptxas...force.load.cache.               1 1.2202  1.2202 2584.826  < 2e-16
X.Xptxas...opt.level.                      1 0.0001  0.0001    0.183 0.670871
X.Xptxas...force.store.cache.              1 0.0000  0.0000    0.041 0.840385
X.Xptxas...maxrregcount.                   1 0.0006  0.0006    1.314 0.258568
dummy1                                     1 0.0010  0.0010    2.166 0.148912
dummy2                                     1 0.0000  0.0000    0.063 0.802355
dummy3                                     1 0.0000  0.0000    0.000 0.991567
dummy4                                     1 0.0000  0.0000    0.092 0.763130
Residuals                                 40 0.0189  0.0005                  
                                             
X.Xnvlink...preserve.relocs                  
X..no.align.double                           
X..use_fast_math                             
X..ftz.                                      
X..prec.sqrt.                                
X..gpu.architecture.                      ***
X..optimize.                              .  
X..relocatable.device.code.                  
X..prec.div.                                 
X.Xptxas...allow.expensive.optimizations.    
X.Xptxas...fmad.                             
X.Xptxas...force.load.cache.              ***
X.Xptxas...opt.level.                        
X.Xptxas...force.store.cache.                
X.Xptxas...maxrregcount.                     
dummy1                                       
dummy2                                       
dummy3                                       
dummy4                                       
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.030785 -0.007653 -0.001010  0.003820  0.056044 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    8.068e+00  1.122e-02 719.079
X.Xnvlink...preserve.relocson                 -1.338e-03  5.610e-03  -0.239
X..no.align.doubleon                           5.848e-03  5.610e-03   1.042
X..use_fast_mathon                             1.928e-03  5.610e-03   0.344
X..ftz.true                                   -8.670e-03  5.610e-03  -1.546
X..prec.sqrt.true                              3.096e-03  5.610e-03   0.552
X..gpu.architecture.sm_52                     -2.083e-02  5.610e-03  -3.712
X..optimize.3                                 -1.017e-02  5.610e-03  -1.813
X..relocatable.device.code.true                5.271e-03  5.610e-03   0.940
X..prec.div.true                               6.897e-03  5.610e-03   1.229
X.Xptxas...allow.expensive.optimizations.true  3.609e-03  5.610e-03   0.643
X.Xptxas...fmad.true                          -1.256e-03  5.610e-03  -0.224
X.Xptxas...force.load.cache.lu                 2.852e-01  5.610e-03  50.841
X.Xptxas...opt.level.3                         2.402e-03  5.610e-03   0.428
X.Xptxas...force.store.cache.cs               -1.137e-03  5.610e-03  -0.203
X.Xptxas...maxrregcount.39                     6.429e-03  5.610e-03   1.146
dummy1                                         4.128e-03  2.805e-03   1.472
dummy2                                         7.068e-04  2.805e-03   0.252
dummy3                                         2.983e-05  2.805e-03   0.011
dummy4                                         8.511e-04  2.805e-03   0.303
                                              Pr(>|t|)    
(Intercept)                                    < 2e-16 ***
X.Xnvlink...preserve.relocson                 0.812640    
X..no.align.doubleon                          0.303487    
X..use_fast_mathon                            0.732949    
X..ftz.true                                   0.130094    
X..prec.sqrt.true                             0.584076    
X..gpu.architecture.sm_52                     0.000625 ***
X..optimize.3                                 0.077347 .  
X..relocatable.device.code.true               0.353026    
X..prec.div.true                              0.226092    
X.Xptxas...allow.expensive.optimizations.true 0.523648    
X.Xptxas...fmad.true                          0.823950    
X.Xptxas...force.load.cache.lu                 < 2e-16 ***
X.Xptxas...opt.level.3                        0.670871    
X.Xptxas...force.store.cache.cs               0.840385    
X.Xptxas...maxrregcount.39                    0.258568    
dummy1                                        0.148912    
dummy2                                        0.802355    
dummy3                                        0.991567    
dummy4                                        0.763130    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.02173 on 40 degrees of freedom
Multiple R-squared:  0.9849,	Adjusted R-squared:  0.9778 
F-statistic: 137.5 on 19 and 40 DF,  p-value: < 2.2e-16
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure8857jj.png]]

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
reg = aov(data = ordered_results, response ~ X..gpu.architecture. + X..optimize. + X.Xptxas...force.load.cache.)

summary.aov(reg)
#+END_SRC

#+RESULTS:
:                              Df Sum Sq Mean Sq  F value   Pr(>F)    
: X..gpu.architecture.          1 0.0065  0.0065   15.231 0.000258 ***
: X..optimize.                  1 0.0016  0.0016    3.632 0.061804 .  
: X.Xptxas...force.load.cache.  1 1.2202  1.2202 2856.553  < 2e-16 ***
: Residuals                    56 0.0239  0.0004                      
: ---
: Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure885V4v.png]]

***** Exploring ~gpu_architecture~
We will now look at what happens when we change the levels for the ~gpu_architecture~ parameter.

First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/3_replications_sm/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq  F value  Pr(>F)
X.Xnvlink...preserve.relocs                1 0.0002  0.0002    0.176   0.677
X..no.align.double                         1 0.0000  0.0000    0.011   0.917
X..use_fast_math                           1 0.0001  0.0001    0.064   0.801
X..ftz.                                    1 0.0001  0.0001    0.078   0.781
X..prec.sqrt.                              1 0.0000  0.0000    0.028   0.868
X..gpu.architecture.                       1 0.0189  0.0189   19.759 6.8e-05
X..optimize.                               1 0.0015  0.0015    1.577   0.217
X..relocatable.device.code.                1 0.0000  0.0000    0.011   0.917
X..prec.div.                               1 0.0000  0.0000    0.008   0.931
X.Xptxas...allow.expensive.optimizations.  1 0.0000  0.0000    0.023   0.881
X.Xptxas...fmad.                           1 0.0003  0.0003    0.292   0.592
X.Xptxas...force.load.cache.               1 1.1847  1.1847 1241.338 < 2e-16
X.Xptxas...opt.level.                      1 0.0000  0.0000    0.046   0.832
X.Xptxas...force.store.cache.              1 0.0004  0.0004    0.451   0.506
X.Xptxas...maxrregcount.                   1 0.0001  0.0001    0.091   0.764
dummy1                                     1 0.0006  0.0006    0.614   0.438
dummy2                                     1 0.0005  0.0005    0.548   0.464
dummy3                                     1 0.0008  0.0008    0.815   0.372
dummy4                                     1 0.0000  0.0000    0.036   0.851
Residuals                                 40 0.0382  0.0010                 
                                             
X.Xnvlink...preserve.relocs                  
X..no.align.double                           
X..use_fast_math                             
X..ftz.                                      
X..prec.sqrt.                                
X..gpu.architecture.                      ***
X..optimize.                                 
X..relocatable.device.code.                  
X..prec.div.                                 
X.Xptxas...allow.expensive.optimizations.    
X.Xptxas...fmad.                             
X.Xptxas...force.load.cache.              ***
X.Xptxas...opt.level.                        
X.Xptxas...force.store.cache.                
X.Xptxas...maxrregcount.                     
dummy1                                       
dummy2                                       
dummy3                                       
dummy4                                       
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.039489 -0.018327 -0.002965  0.004829  0.072249 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    8.0890149  0.0159531 507.051
X.Xnvlink...preserve.relocson                 -0.0033478  0.0079765  -0.420
X..no.align.doubleon                           0.0008368  0.0079765   0.105
X..use_fast_mathon                             0.0020205  0.0079765   0.253
X..ftz.true                                    0.0022307  0.0079765   0.280
X..prec.sqrt.true                              0.0013315  0.0079765   0.167
X..gpu.architecture.sm_52                     -0.0354563  0.0079765  -4.445
X..optimize.3                                 -0.0100163  0.0079765  -1.256
X..relocatable.device.code.true                0.0008398  0.0079765   0.105
X..prec.div.true                              -0.0006963  0.0079765  -0.087
X.Xptxas...allow.expensive.optimizations.true  0.0012056  0.0079765   0.151
X.Xptxas...fmad.true                           0.0043130  0.0079765   0.541
X.Xptxas...force.load.cache.lu                 0.2810341  0.0079765  35.233
X.Xptxas...opt.level.3                        -0.0017062  0.0079765  -0.214
X.Xptxas...force.store.cache.cs                0.0053592  0.0079765   0.672
X.Xptxas...maxrregcount.39                     0.0024084  0.0079765   0.302
dummy1                                         0.0031254  0.0039883   0.784
dummy2                                        -0.0029513  0.0039883  -0.740
dummy3                                         0.0036007  0.0039883   0.903
dummy4                                        -0.0007562  0.0039883  -0.190
                                              Pr(>|t|)    
(Intercept)                                    < 2e-16 ***
X.Xnvlink...preserve.relocson                    0.677    
X..no.align.doubleon                             0.917    
X..use_fast_mathon                               0.801    
X..ftz.true                                      0.781    
X..prec.sqrt.true                                0.868    
X..gpu.architecture.sm_52                      6.8e-05 ***
X..optimize.3                                    0.217    
X..relocatable.device.code.true                  0.917    
X..prec.div.true                                 0.931    
X.Xptxas...allow.expensive.optimizations.true    0.881    
X.Xptxas...fmad.true                             0.592    
X.Xptxas...force.load.cache.lu                 < 2e-16 ***
X.Xptxas...opt.level.3                           0.832    
X.Xptxas...force.store.cache.cs                  0.506    
X.Xptxas...maxrregcount.39                       0.764    
dummy1                                           0.438    
dummy2                                           0.464    
dummy3                                           0.372    
dummy4                                           0.851    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.03089 on 40 degrees of freedom
Multiple R-squared:  0.9694,	Adjusted R-squared:  0.9548 
F-statistic: 66.63 on 19 and 40 DF,  p-value: < 2.2e-16
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure885hIj.png]]

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
reg = aov(data = ordered_results, response ~ X..gpu.architecture. + X.Xptxas...force.load.cache.)

summary.aov(reg)
#+END_SRC

#+RESULTS:
:                              Df Sum Sq Mean Sq F value   Pr(>F)    
: X..gpu.architecture.          1 0.0189  0.0189    25.1 5.59e-06 ***
: X.Xptxas...force.load.cache.  1 1.1847  1.1847  1576.9  < 2e-16 ***
: Residuals                    57 0.0428  0.0008                     
: ---
: Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-885ZvB/figure885UMF.png]]

**** POLARIS Meeting
- As last time, the pad is at https://tinyurl.com/polaris-inria
- Deciding "high-level" titles and themes for presentations
**** Some References on Optimal Multi-Level Supersaturated Designs 
I was looking into works that cited that Addelman and Kempthorne paper and found
that one way to name those kinds of designs is "Optimal Multi-Level
Supersaturated".

Searching by that term I found some more recent references which I believe will
take some time to digest, but that present some ways to construct those designs:

https://projecteuclid.org/download/pdfview_1/euclid.aos/1140191674
https://projecteuclid.org/download/pdfview_1/euclid.ssu/1244555797

Those works also seem to present ways to measure optimality for those designs,
but I still haven't read them.

There is also a reference which seems interesting by its abstract, but I was not
able to find it yet:

https://www.sciencedirect.com/science/article/pii/S0378375812003084

I also found this book on factorial designs which I did not know of, but that
does not seem to discuss Addelman Kempthorne designs directly. It could be
useful for me to study more about DoE in general.

https://www.springer.com/gp/book/9780387319919 
*** [2018-02-12 Mon]
**** Reading about ANOVA and F-Tests in Julia
I've been studying how to implement or use ANOVA tests in Julia, and found out
some information that ended up helping my understanding of F-Tests, ANOVA and
linear models.

Douglas Bates is the developer of the ~lme4~ package in R, and is now
contributing to Julia. His comments on a [[https://github.com/JuliaStats/GLM.jl/pull/65][GitHub pull request]] list resources
regarding linear models ([[http://www.stats.ox.ac.uk/pub/MASS3/Exegeses.pdf][Exegeses on Linear Models]]) and explain more about how
ANOVA is implemented using F-Tests.

Bates's comments lead to the implementation of an F-Test function in the
Generalized Linear Models Julia package. This [[https://github.com/JuliaStats/GLM.jl/blob/master/src/ftest.jl][implementation]] gives a simple and
interesting explanation of how to use F-Test to perform ANOVA, comparing the
relative fit of two models on the same data.
**** Performing ANOVA in Julia using F-Tests
Importing the necessary packages:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using DataFrames, GLM
#+END_SRC

#+RESULTS:

Let's create some random data and generate a response:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
data_names = [:A, :B, :C, :D, :E, :F]

data = DataFrame()

for n in data_names
    data[n] = rand(10)
end

data[:Response] = (2 .* data[:C]) .+ (3 .* data[:A]) - (5 .* data[:E])

data
#+END_SRC

#+RESULTS:
#+begin_example
6-element Array{Symbol,1}:
 :A
 :B
 :C
 :D
 :E
 :F

0×0 DataFrames.DataFrame



10-element DataArrays.DataArray{Float64,1}:
 -2.17384  
  0.559508 
 -0.69123  
 -1.05939  
 -0.256755 
  0.557851 
 -0.267708 
  1.88294  
 -2.67724  
 -0.0301329

10×7 DataFrames.DataFrame
│ Row │ A         │ B        │ C         │ D          │ E        │ F         │ Response   │
├─────┼───────────┼──────────┼───────────┼────────────┼──────────┼───────────┼────────────┤
│ 1   │ 0.623557  │ 0.636231 │ 0.0379813 │ 0.81141    │ 0.824095 │ 0.0993354 │ -2.17384   │
│ 2   │ 0.955077  │ 0.739728 │ 0.741414  │ 0.85233    │ 0.75771  │ 0.97588   │ 0.559508   │
│ 3   │ 0.137487  │ 0.994435 │ 0.740511  │ 0.00785093 │ 0.516943 │ 0.5385    │ -0.69123   │
│ 4   │ 0.653637  │ 0.170175 │ 0.393399  │ 0.348643   │ 0.761421 │ 0.436461  │ -1.05939   │
│ 5   │ 0.41801   │ 0.431467 │ 0.339211  │ 0.41527    │ 0.437841 │ 0.623234  │ -0.256755  │
│ 6   │ 0.7353    │ 0.289023 │ 0.518082  │ 0.713594   │ 0.536842 │ 0.920079  │ 0.557851   │
│ 7   │ 0.0941916 │ 0.230737 │ 0.846342  │ 0.99548    │ 0.448593 │ 0.93209   │ -0.267708  │
│ 8   │ 0.874464  │ 0.104192 │ 0.700623  │ 0.0223294  │ 0.428339 │ 0.523744  │ 1.88294    │
│ 9   │ 0.0874393 │ 0.238128 │ 0.686364  │ 0.332731   │ 0.862457 │ 0.36169   │ -2.67724   │
│ 10  │ 0.606935  │ 0.474219 │ 0.693748  │ 0.23876    │ 0.647687 │ 0.635184  │ -0.0301329 │
#+end_example

Now, let's create a formula for fitting a model with all variables plus a constant:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model_formula = Expr(:call)
model_formula.args = vcat(:+, 1, [n for n in names(data) if n != :Response])
#+END_SRC

#+RESULTS:
#+begin_example
:($(Expr(:call)))
8-element Array{Any,1}:
  :+
 1  
  :A
  :B
  :C
  :D
  :E
  :F
#+end_example

This allows us to fit 3 models: ~reg~ contains all variables plus a constant,
~reg_null~ represents the null hipothesis, where no variables have any impact,
and ~reg_short~ represents a very "economic" model, using only the variables we
know have an impact on the response.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
reg = lm(Formula(:Response, model_formula), data)
reg_null = lm(@formula(Response ~ 1), data)
reg_short = lm(@formula(Response ~ 1 + C + A + E), data)
#+END_SRC

#+RESULTS:
#+begin_example
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ 1 + A + B + C + D + E + F

Coefficients:
                 Estimate   Std.Error     t value Pr(>|t|)
(Intercept)   2.58397e-14  1.7408e-14     1.48436   0.2344
A                     3.0 1.11011e-14  2.70244e14   <1e-42
B             1.85943e-15 1.01204e-14     0.18373   0.8659
C                     2.0 2.20906e-14  9.05361e13   <1e-41
D              9.8268e-15 1.33726e-14    0.734844   0.5157
E                    -5.0 2.37455e-14 -2.10567e14   <1e-42
F            -2.50632e-14 2.46688e-14    -1.01599   0.3844
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ +1

Coefficients:
             Estimate Std.Error   t value Pr(>|t|)
(Intercept)   -0.4156  0.422615 -0.983401   0.3511
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ 1 + C + A + E

Coefficients:
               Estimate   Std.Error     t value Pr(>|t|)
(Intercept)  2.9491e-14 1.40986e-14     2.09177   0.0814
C                   2.0 1.07786e-14  1.85554e14   <1e-83
A                   3.0 7.91033e-15  3.79251e14   <1e-85
E                  -5.0 1.53978e-14 -3.24722e14   <1e-85
#+end_example

Now we perform an *F-Test* with the ~reg~ and ~reg_null~ models. We expect the
F-Statistic to be high, since we know that the model with constant plus all
variables "explains the data much better" that the constant model.

We can also perform F-Tests for nested models such as ~reg~ and ~reg_short~.
This can help decreasing the complexity of a model.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
f_test = ftest(reg.model, reg_null.model)
f_test = ftest(reg.model, reg_short.model, reg_null.model)
f_test = ftest(reg.model, reg_short.model)
#+END_SRC

#+RESULTS:
#+begin_example
        Res. DOF DOF ΔDOF     SSR     ΔSSR     R²    ΔR²                                 F*  p(>F)
Model 1        3   8       0.0000          1.0000                                                 
Model 2        9   2   -6 16.0743 -16.0743 0.0000 1.0000 38224209186400180409473171456.0000 <1e-42
        Res. DOF DOF ΔDOF     SSR     ΔSSR     R²    ΔR²                                 F*  p(>F)
Model 1        3   8       0.0000          1.0000                                                 
Model 2        6   5   -3  0.0000  -0.0000 1.0000 0.0000                             0.5557 0.6793
Model 3        9   2   -3 16.0743 -16.0743 0.0000 1.0000 98284726847097150117548916736.0000 <1e-85
        Res. DOF DOF ΔDOF    SSR    ΔSSR     R²    ΔR²     F*  p(>F)
Model 1        3   8      0.0000         1.0000                     
Model 2        6   5   -3 0.0000 -0.0000 1.0000 0.0000 0.5557 0.6793
#+end_example

***** What happens if the response is random?
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
data_random = deepcopy(data)

data_random[:Response] = rand(10)

data_random
#+END_SRC

#+RESULTS:
#+begin_example
10×7 DataFrames.DataFrame
│ Row │ A         │ B        │ C         │ D          │ E        │ F         │ Response   │
├─────┼───────────┼──────────┼───────────┼────────────┼──────────┼───────────┼────────────┤
│ 1   │ 0.623557  │ 0.636231 │ 0.0379813 │ 0.81141    │ 0.824095 │ 0.0993354 │ -2.17384   │
│ 2   │ 0.955077  │ 0.739728 │ 0.741414  │ 0.85233    │ 0.75771  │ 0.97588   │ 0.559508   │
│ 3   │ 0.137487  │ 0.994435 │ 0.740511  │ 0.00785093 │ 0.516943 │ 0.5385    │ -0.69123   │
│ 4   │ 0.653637  │ 0.170175 │ 0.393399  │ 0.348643   │ 0.761421 │ 0.436461  │ -1.05939   │
│ 5   │ 0.41801   │ 0.431467 │ 0.339211  │ 0.41527    │ 0.437841 │ 0.623234  │ -0.256755  │
│ 6   │ 0.7353    │ 0.289023 │ 0.518082  │ 0.713594   │ 0.536842 │ 0.920079  │ 0.557851   │
│ 7   │ 0.0941916 │ 0.230737 │ 0.846342  │ 0.99548    │ 0.448593 │ 0.93209   │ -0.267708  │
│ 8   │ 0.874464  │ 0.104192 │ 0.700623  │ 0.0223294  │ 0.428339 │ 0.523744  │ 1.88294    │
│ 9   │ 0.0874393 │ 0.238128 │ 0.686364  │ 0.332731   │ 0.862457 │ 0.36169   │ -2.67724   │
│ 10  │ 0.606935  │ 0.474219 │ 0.693748  │ 0.23876    │ 0.647687 │ 0.635184  │ -0.0301329 │

10-element Array{Float64,1}:
 0.831069 
 0.176036 
 0.0811816
 0.742458 
 0.0617893
 0.706769 
 0.750653 
 0.0331454
 0.0634919
 0.529092

10×7 DataFrames.DataFrame
│ Row │ A         │ B        │ C         │ D          │ E        │ F         │ Response  │
├─────┼───────────┼──────────┼───────────┼────────────┼──────────┼───────────┼───────────┤
│ 1   │ 0.623557  │ 0.636231 │ 0.0379813 │ 0.81141    │ 0.824095 │ 0.0993354 │ 0.831069  │
│ 2   │ 0.955077  │ 0.739728 │ 0.741414  │ 0.85233    │ 0.75771  │ 0.97588   │ 0.176036  │
│ 3   │ 0.137487  │ 0.994435 │ 0.740511  │ 0.00785093 │ 0.516943 │ 0.5385    │ 0.0811816 │
│ 4   │ 0.653637  │ 0.170175 │ 0.393399  │ 0.348643   │ 0.761421 │ 0.436461  │ 0.742458  │
│ 5   │ 0.41801   │ 0.431467 │ 0.339211  │ 0.41527    │ 0.437841 │ 0.623234  │ 0.0617893 │
│ 6   │ 0.7353    │ 0.289023 │ 0.518082  │ 0.713594   │ 0.536842 │ 0.920079  │ 0.706769  │
│ 7   │ 0.0941916 │ 0.230737 │ 0.846342  │ 0.99548    │ 0.448593 │ 0.93209   │ 0.750653  │
│ 8   │ 0.874464  │ 0.104192 │ 0.700623  │ 0.0223294  │ 0.428339 │ 0.523744  │ 0.0331454 │
│ 9   │ 0.0874393 │ 0.238128 │ 0.686364  │ 0.332731   │ 0.862457 │ 0.36169   │ 0.0634919 │
│ 10  │ 0.606935  │ 0.474219 │ 0.693748  │ 0.23876    │ 0.647687 │ 0.635184  │ 0.529092  │
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model_formula = Expr(:call)
model_formula.args = vcat(:+, 1, [n for n in names(data_random) if n != :Response])
#+END_SRC

#+RESULTS:
#+begin_example
:($(Expr(:call)))
8-element Array{Any,1}:
  :+
 1  
  :A
  :B
  :C
  :D
  :E
  :F
#+end_example

We will fit the same 3 models and run F-Tests on them:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
reg = lm(Formula(:Response, model_formula), data_random)
reg_null = lm(@formula(Response ~ 1), data_random)
reg_short = lm(@formula(Response ~ 1 + C + A + E), data_random)
#+END_SRC

#+RESULTS:
#+begin_example
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ 1 + A + B + C + D + E + F

Coefficients:
               Estimate Std.Error    t value Pr(>|t|)
(Intercept)    0.487161  0.899008   0.541886   0.6256
A            -0.0211967  0.573296 -0.0369734   0.9728
B             -0.241629  0.522653  -0.462314   0.6753
C             -0.364222   1.14083   -0.31926   0.7705
D              0.540471  0.690608   0.782602   0.4910
E             0.0330877   1.22629  0.0269819   0.9802
F            -0.0722077   1.27398  -0.056679   0.9584
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ +1

Coefficients:
             Estimate Std.Error t value Pr(>|t|)
(Intercept)  0.397569  0.108052  3.6794   0.0051
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ 1 + C + A + E

Coefficients:
               Estimate Std.Error    t value Pr(>|t|)
(Intercept)    0.565469   0.73363   0.770782   0.4701
C             -0.494118  0.560869  -0.880986   0.4122
A            0.00236009  0.411619 0.00573368   0.9956
E              0.180664  0.801233   0.225483   0.8291
#+end_example

When we run the F-Tests we see that it is much less clear that
the constant model is worse than the model with variables. Other than
that, I do not know how far we can interpret these results.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
f_test = ftest(reg.model, reg_null.model)
f_test = ftest(reg.model, reg_short.model, reg_null.model)
f_test = ftest(reg.model, reg_short.model)
#+END_SRC

#+RESULTS:
#+begin_example
        Res. DOF DOF ΔDOF    SSR    ΔSSR     R²    ΔR²     F*  p(>F)
Model 1        3   8      0.5608         0.4663                     
Model 2        9   2   -6 1.0508 -0.4900 0.0000 0.4663 0.4369 0.8215
        Res. DOF DOF ΔDOF    SSR    ΔSSR     R²    ΔR²     F*  p(>F)
Model 1        3   8      0.5608         0.4663                     
Model 2        6   5   -3 0.8857 -0.3249 0.1571 0.3092 0.5794 0.6675
Model 3        9   2   -3 1.0508 -0.1651 0.0000 0.1571 0.3728 0.7760
        Res. DOF DOF ΔDOF    SSR    ΔSSR     R²    ΔR²     F*  p(>F)
Model 1        3   8      0.5608         0.4663                     
Model 2        6   5   -3 0.8857 -0.3249 0.1571 0.3092 0.5794 0.6675
#+end_example
**** ANOVA in Julia with F-Tests: Does it Work with "Factors"?
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using DataFrames, GLM
#+END_SRC

#+RESULTS:

Let's create a make-believe data set using some "Factor"-like parameters. We
will have booleans, enumerations, integers and floats in different ranges.
To compute the response we will define some operation for each data type,
simulating some independent impact for each variable.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
data_names = [:A, :B, :C, :D, :E, :F]

data_factors = [[-1, 1], ['a', 'w', 'k', 'g', 'r', 'e', 'p'], [true, false],
                [2, 4, 8, 16], [0, 1], [4.55, 6.4331, 7.885, 14.44]]

data = DataFrame()

for (n, f) in zip(data_names, data_factors)
    data[n] = rand(f, 10)
end

response(x::Int) = ((3.2 * x) / 2.5) + 1
response(x::Bool) = x ? 0.331 : 0.664
response(x::Char) = convert(Float64, x)

data[:Response] = (2 .* response.(data[:C])) .+
                  (3 .* response.(data[:A])) .-
                  (4.5 .* response.(data[:B])) .+
                  (5 .* response.(data[:E]))

describe(data)
#+END_SRC

#+RESULTS:
#+begin_example
6-element Array{Symbol,1}:
 :A
 :B
 :C
 :D
 :E
 :F

6-element Array{Array{Any,1},1}:
 Any[-1, 1]                            
 Any['a', 'w', 'k', 'g', 'r', 'e', 'p']
 Any[true, false]                      
 Any[2, 4, 8, 16]                      
 Any[0, 1]                             
 Any[4.55, 6.4331, 7.885, 14.44]

0×0 DataFrames.DataFrame



response (generic function with 3 methods)
response (generic function with 3 methods)
response (generic function with 3 methods)

10-element DataArrays.DataArray{Float64,1}:
 -523.612
 -451.612
 -449.678
 -443.932
 -441.332
 -443.278
 -441.332
 -476.012
 -452.278
 -498.512

A
Summary Stats:
Length:         10
Type:           Any
Number Unique:  2
Number Missing: 0
% Missing:      0.000000

B
Summary Stats:
Length:         10
Type:           Any
Number Unique:  5
Number Missing: 0
% Missing:      0.000000

C
Summary Stats:
Length:         10
Type:           Any
Number Unique:  2
Number Missing: 0
% Missing:      0.000000

D
Summary Stats:
Length:         10
Type:           Any
Number Unique:  4
Number Missing: 0
% Missing:      0.000000

E
Summary Stats:
Length:         10
Type:           Any
Number Unique:  2
Number Missing: 0
% Missing:      0.000000

F
Summary Stats:
Length:         10
Type:           Any
Number Unique:  4
Number Missing: 0
% Missing:      0.000000

Response
Summary Stats:
Mean:           -462.157800
Minimum:        -523.612000
1st Quartile:   -470.078500
Median:         -450.645000
3rd Quartile:   -443.441500
Maximum:        -441.332000
Length:         10
Type:           Float64
Number Missing: 0
% Missing:      0.000000
#+end_example

#+END_SRC

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model_formula = Expr(:call)
model_formula.args = vcat(:+, 1, [n for n in names(data) if n != :Response])
#+END_SRC

#+RESULTS:
#+begin_example
:($(Expr(:call)))
8-element Array{Any,1}:
  :+
 1  
  :A
  :B
  :C
  :D
  :E
  :F
#+end_example

Now we fit the three models in the same way as before, with one full model
~reg~, one small model ~reg_short~ and the null hypothesis ~reg_null~. We see
the regressions still work:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
reg = lm(Formula(:Response, model_formula), data)
reg_null = lm(@formula(Response ~ 1), data)
reg_short = lm(@formula(Response ~ 1 + C + A + B + E), data)
#+END_SRC

#+RESULTS:
#+begin_example
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ 1 + A + B + C + D + E + F

Coefficients:
                 Estimate   Std.Error     t value Pr(>|t|)
(Intercept)         9.328 6.80652e-12  1.37045e12   <1e-36
A                    3.84 3.96109e-13   9.6943e12   <1e-38
B                    -4.5 5.75953e-14 -7.81314e13   <1e-41
C                  -0.666 7.04482e-13 -9.45376e11   <1e-35
D            -8.09678e-14 6.18829e-14     -1.3084   0.2820
E                     6.4 9.11661e-13  7.02015e12   <1e-38
F            -1.10092e-13 8.04692e-14    -1.36812   0.2647
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ +1

Coefficients:
             Estimate Std.Error  t value Pr(>|t|)
(Intercept)  -471.548   9.37368 -50.3055   <1e-11
DataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Response ~ 1 + C + A + B + E

Coefficients:
             Estimate   Std.Error     t value Pr(>|t|)
(Intercept)     9.328 1.31136e-11  7.11322e11   <1e-57
C              -0.666 1.42155e-12 -4.68504e11   <1e-57
A                3.84 8.24965e-13  4.65474e12   <1e-62
B                -4.5 1.17279e-13   -3.837e13   <1e-66
E                 6.4 1.48712e-12  4.30362e12   <1e-61
#+end_example

Finally, let's check the results of our "ANOVA" using F-Tests:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
f_test = ftest(reg.model, reg_null.model)
f_test = ftest(reg.model, reg_short.model, reg_null.model)
f_test = ftest(reg.model, reg_short.model)
#+END_SRC

#+RESULTS:
#+begin_example
        Res. DOF DOF ΔDOF       SSR       ΔSSR     R²    ΔR²                                F*  p(>F)
Model 1        3   8         0.0000            1.0000                                                
Model 2        9   2   -6 7907.9337 -7907.9337 0.0000 1.0000 2053176962712925193923198976.0000 <1e-40
        Res. DOF DOF ΔDOF       SSR       ΔSSR     R²    ΔR²                               F*  p(>F)
Model 1        3   8         0.0000            1.0000                                               
Model 2        5   6   -2    0.0000    -0.0000 1.0000 0.0000                          10.8247 0.0425
Model 3        9   2   -4 7907.9337 -7907.9337 0.0000 1.0000 624715882058864330956341248.0000 <1e-66
        Res. DOF DOF ΔDOF    SSR    ΔSSR     R²    ΔR²      F*  p(>F)
Model 1        3   8      0.0000         1.0000                      
Model 2        5   6   -2 0.0000 -0.0000 1.0000 0.0000 10.8247 0.0425
#+end_example

This seems to work the same as before, so using factors instead of numeric types
is not impossible in GLM. We still have the problem of getting inexact or
distorded estimates for the coefficients and for significance when fitting the
models, due to parameter scaling. Using F-Tests and ANOVA could be enough to go
around this limitation.
*** [2018-02-13 Tue]
**** Exploring Results for the Heartwall Screening Experiments
First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/heartwall/3_replications/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq F value   Pr(>F)
X.Xnvlink...preserve.relocs                1 0.0002 0.00017   0.016  0.90093
X..no.align.double                         1 0.0252 0.02518   2.337  0.13422
X..use_fast_math                           1 0.0020 0.00202   0.188  0.66699
X..ftz.                                    1 0.0013 0.00125   0.116  0.73492
X..prec.sqrt.                              1 0.0070 0.00699   0.648  0.42546
X..gpu.architecture.                       1 0.0135 0.01349   1.252  0.26982
X..optimize.                               1 0.0057 0.00574   0.533  0.46978
X..relocatable.device.code.                1 0.0001 0.00014   0.013  0.90983
X..prec.div.                               1 0.0078 0.00780   0.724  0.39981
X.Xptxas...allow.expensive.optimizations.  1 0.0001 0.00014   0.013  0.90878
X.Xptxas...fmad.                           1 0.0051 0.00506   0.470  0.49714
X.Xptxas...force.load.cache.               1 0.0831 0.08315   7.716  0.00829
X.Xptxas...opt.level.                      1 0.0001 0.00011   0.010  0.91968
X.Xptxas...force.store.cache.              1 0.0007 0.00071   0.066  0.79891
X.Xptxas...maxrregcount.                   1 0.2176 0.21761  20.194 5.85e-05
dummy1                                     1 0.0005 0.00050   0.046  0.83081
dummy2                                     1 0.0085 0.00846   0.785  0.38101
dummy3                                     1 0.0047 0.00472   0.438  0.51189
dummy4                                     1 0.0029 0.00288   0.267  0.60820
Residuals                                 40 0.4310 0.01078                 
                                             
X.Xnvlink...preserve.relocs                  
X..no.align.double                           
X..use_fast_math                             
X..ftz.                                      
X..prec.sqrt.                                
X..gpu.architecture.                         
X..optimize.                                 
X..relocatable.device.code.                  
X..prec.div.                                 
X.Xptxas...allow.expensive.optimizations.    
X.Xptxas...fmad.                             
X.Xptxas...force.load.cache.              ** 
X.Xptxas...opt.level.                        
X.Xptxas...force.store.cache.                
X.Xptxas...maxrregcount.                  ***
dummy1                                       
dummy2                                       
dummy3                                       
dummy4                                       
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.10545 -0.06898 -0.01925  0.03875  0.19714 

Coefficients:
                                               Estimate Std. Error t value
(Intercept)                                    0.517608   0.053605   9.656
X.Xnvlink...preserve.relocson                  0.003358   0.026802   0.125
X..no.align.doubleon                           0.040971   0.026802   1.529
X..use_fast_mathon                            -0.011618   0.026802  -0.433
X..ftz.true                                   -0.009138   0.026802  -0.341
X..prec.sqrt.true                              0.021582   0.026802   0.805
X..gpu.architecture.sm_52                     -0.029992   0.026802  -1.119
X..optimize.3                                 -0.019560   0.026802  -0.730
X..relocatable.device.code.true                0.003055   0.026802   0.114
X..prec.div.true                               0.022810   0.026802   0.851
X.Xptxas...allow.expensive.optimizations.true -0.003090   0.026802  -0.115
X.Xptxas...fmad.true                           0.018366   0.026802   0.685
X.Xptxas...force.load.cache.lu                 0.074453   0.026802   2.778
X.Xptxas...opt.level.3                         0.002720   0.026802   0.101
X.Xptxas...force.store.cache.cs               -0.006874   0.026802  -0.256
X.Xptxas...maxrregcount.63                    -0.120445   0.026802  -4.494
dummy1                                         0.002882   0.013401   0.215
dummy2                                        -0.011871   0.013401  -0.886
dummy3                                         0.008869   0.013401   0.662
dummy4                                         0.006925   0.013401   0.517
                                              Pr(>|t|)    
(Intercept)                                   5.25e-12 ***
X.Xnvlink...preserve.relocson                  0.90093    
X..no.align.doubleon                           0.13422    
X..use_fast_mathon                             0.66699    
X..ftz.true                                    0.73492    
X..prec.sqrt.true                              0.42546    
X..gpu.architecture.sm_52                      0.26982    
X..optimize.3                                  0.46978    
X..relocatable.device.code.true                0.90983    
X..prec.div.true                               0.39981    
X.Xptxas...allow.expensive.optimizations.true  0.90878    
X.Xptxas...fmad.true                           0.49714    
X.Xptxas...force.load.cache.lu                 0.00829 ** 
X.Xptxas...opt.level.3                         0.91968    
X.Xptxas...force.store.cache.cs                0.79891    
X.Xptxas...maxrregcount.63                    5.85e-05 ***
dummy1                                         0.83081    
dummy2                                         0.38101    
dummy3                                         0.51189    
dummy4                                         0.60820    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1038 on 40 degrees of freedom
Multiple R-squared:  0.4725,	Adjusted R-squared:  0.222 
F-statistic: 1.886 on 19 and 40 DF,  p-value: 0.04535
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-29856R_X/figure29856OMB.png]]

***** Looking at Half Minimum Register Value
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
experiment_dir <- "autotuning_screening_experiment/data/heartwall/3_replications_32_min_regs/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df  Sum Sq Mean Sq F value   Pr(>F)
X.Xnvlink...preserve.relocs                1 0.00243 0.00243   0.364 0.549721
X..no.align.double                         1 0.00951 0.00951   1.425 0.239553
X..use_fast_math                           1 0.00113 0.00113   0.170 0.682568
X..ftz.                                    1 0.00164 0.00164   0.246 0.622298
X..prec.sqrt.                              1 0.00165 0.00165   0.247 0.621705
X..gpu.architecture.                       1 0.00257 0.00257   0.385 0.538638
X..optimize.                               1 0.00062 0.00062   0.093 0.761680
X..relocatable.device.code.                1 0.00079 0.00079   0.119 0.732382
X..prec.div.                               1 0.00129 0.00129   0.194 0.662084
X.Xptxas...allow.expensive.optimizations.  1 0.00041 0.00041   0.062 0.804378
X.Xptxas...fmad.                           1 0.00062 0.00062   0.092 0.762924
X.Xptxas...force.load.cache.               1 0.11543 0.11543  17.302 0.000164
X.Xptxas...opt.level.                      1 0.00027 0.00027   0.041 0.840905
X.Xptxas...force.store.cache.              1 0.00233 0.00233   0.350 0.557665
X.Xptxas...maxrregcount.                   1 0.20806 0.20806  31.188 1.81e-06
dummy1                                     1 0.00105 0.00105   0.158 0.693376
dummy2                                     1 0.00048 0.00048   0.072 0.789316
dummy3                                     1 0.00288 0.00288   0.432 0.514815
dummy4                                     1 0.00002 0.00002   0.004 0.951508
Residuals                                 40 0.26685 0.00667                 
                                             
X.Xnvlink...preserve.relocs                  
X..no.align.double                           
X..use_fast_math                             
X..ftz.                                      
X..prec.sqrt.                                
X..gpu.architecture.                         
X..optimize.                                 
X..relocatable.device.code.                  
X..prec.div.                                 
X.Xptxas...allow.expensive.optimizations.    
X.Xptxas...fmad.                             
X.Xptxas...force.load.cache.              ***
X.Xptxas...opt.level.                        
X.Xptxas...force.store.cache.                
X.Xptxas...maxrregcount.                  ***
dummy1                                       
dummy2                                       
dummy3                                       
dummy4                                       
Residuals                                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.09788 -0.02329 -0.01879  0.03986  0.19465 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    0.4701613  0.0421782  11.147
X.Xnvlink...preserve.relocson                 -0.0127229  0.0210891  -0.603
X..no.align.doubleon                           0.0251781  0.0210891   1.194
X..use_fast_mathon                            -0.0086879  0.0210891  -0.412
X..ftz.true                                    0.0104696  0.0210891   0.496
X..prec.sqrt.true                              0.0104874  0.0210891   0.497
X..gpu.architecture.sm_52                      0.0130796  0.0210891   0.620
X..optimize.3                                 -0.0064396  0.0210891  -0.305
X..relocatable.device.code.true                0.0072622  0.0210891   0.344
X..prec.div.true                               0.0092857  0.0210891   0.440
X.Xptxas...allow.expensive.optimizations.true  0.0052582  0.0210891   0.249
X.Xptxas...fmad.true                           0.0064049  0.0210891   0.304
X.Xptxas...force.load.cache.lu                 0.0877217  0.0210891   4.160
X.Xptxas...opt.level.3                         0.0042610  0.0210891   0.202
X.Xptxas...force.store.cache.cs               -0.0124694  0.0210891  -0.591
X.Xptxas...maxrregcount.63                    -0.1177745  0.0210891  -5.585
dummy1                                         0.0041876  0.0105445   0.397
dummy2                                        -0.0028364  0.0105445  -0.269
dummy3                                         0.0069299  0.0105445   0.657
dummy4                                         0.0006453  0.0105445   0.061
                                              Pr(>|t|)    
(Intercept)                                   7.70e-14 ***
X.Xnvlink...preserve.relocson                 0.549721    
X..no.align.doubleon                          0.239553    
X..use_fast_mathon                            0.682568    
X..ftz.true                                   0.622298    
X..prec.sqrt.true                             0.621705    
X..gpu.architecture.sm_52                     0.538638    
X..optimize.3                                 0.761680    
X..relocatable.device.code.true               0.732382    
X..prec.div.true                              0.662084    
X.Xptxas...allow.expensive.optimizations.true 0.804378    
X.Xptxas...fmad.true                          0.762924    
X.Xptxas...force.load.cache.lu                0.000164 ***
X.Xptxas...opt.level.3                        0.840905    
X.Xptxas...force.store.cache.cs               0.557665    
X.Xptxas...maxrregcount.63                    1.81e-06 ***
dummy1                                        0.693376    
dummy2                                        0.789316    
dummy3                                        0.514815    
dummy4                                        0.951508    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.08168 on 40 degrees of freedom
Multiple R-squared:  0.5696,	Adjusted R-squared:  0.3652 
F-statistic: 2.787 on 19 and 40 DF,  p-value: 0.003145
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-832YFt/figure832X_H.png]]
**** Meeting with PUMA Team @ [2018-02-13 Tue]
***** Intro
- John Paul is coordinating the meeting
- The meeting will be recorded
- We will start with the discussion of the future rebuttal,
  then we'll move to bibliographic review discussion
***** Rebuttal
- Izzat will share his question organization:
  - Issue of novelty is subjective
  - Argue why the work is helpful - also subjective
  - Highlight differences between PUMA and ISAAC
  - Give clearer explanations for the results obtained
  - Short summary in the rebuttal and the paper
    - These points are currently scattered in the paper
- Aayush is working on the questions about energy
  - Aayush sent a PUMA energy breakdown via e-mail
- We have limited space in the rebuttal (600 words)
  - Izzat mentions we can go over the word limit
- John Paul thinks a good strategy is to try to sway the most
  strongly opinionated reviewer
- Izzat mentions we should make it more clear that memristors are
  already more energy-efficient
- Aayush mentions a qualitative discussion about CMOSs could be
  sufficient
  - We can try to include a more thorough table
  - Sai generated a large quantitative comparison that was not
    included in the final paper
***** Bibliographic Review
****** Memristor Works
******* TIME
- http://nics-efc.org/media/publications/2017/DAC17_218.pdf
- Aaysuh says we should use this approach
- Very shortly discusses reducing writes
- Izzat has some very specific architecture questions,
  Aayush and John Paul have some answers
- John Paul and Izzat mention that the paper should not
  go in the direction of low-level circuit optimization
****** CMOS Works
******* Reducing Models for Execution on Neuromorphic Architectures
***** Next Steps
- List all techniques we came across, select which will be applied
- What the archictecure could look like when those techniques are used?
- Aayush will update the slides with comments from today's meeting
- Aayush proposes a new meeting next week to discuss next steps
*** [2018-02-14 Wed]
**** Exploring Results for the Needle Screening Experiments
First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

Now we load the screening experiment and the results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/needle/3_replications_32_min_regs/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df  Sum Sq  Mean Sq F value Pr(>F)  
X.Xnvlink...preserve.relocs                1 0.00000 0.000005   0.001 0.9723  
X..no.align.double                         1 0.00002 0.000024   0.006 0.9394  
X..use_fast_math                           1 0.00008 0.000079   0.019 0.8902  
X..ftz.                                    1 0.00001 0.000014   0.003 0.9532  
X..prec.sqrt.                              1 0.00028 0.000279   0.068 0.7951  
X..gpu.architecture.                       1 0.02303 0.023025   5.648 0.0223 *
X..optimize.                               1 0.00001 0.000012   0.003 0.9577  
X..relocatable.device.code.                1 0.00000 0.000000   0.000 0.9968  
X..prec.div.                               1 0.00000 0.000003   0.001 0.9790  
X.Xptxas...allow.expensive.optimizations.  1 0.00008 0.000075   0.018 0.8926  
X.Xptxas...fmad.                           1 0.00003 0.000026   0.006 0.9373  
X.Xptxas...force.load.cache.               1 0.00007 0.000074   0.018 0.8936  
X.Xptxas...opt.level.                      1 0.00026 0.000263   0.064 0.8009  
X.Xptxas...force.store.cache.              1 0.00010 0.000096   0.024 0.8789  
X.Xptxas...maxrregcount.                   1 0.00059 0.000592   0.145 0.7051  
dummy1                                     1 0.00017 0.000169   0.041 0.8397  
dummy2                                     1 0.00000 0.000000   0.000 0.9936  
dummy3                                     1 0.00002 0.000019   0.005 0.9464  
dummy4                                     1 0.00004 0.000035   0.009 0.9264  
Residuals                                 40 0.16306 0.004077                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.06407 -0.04001 -0.01902  0.03824  0.12581 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    2.905e-01  3.297e-02   8.812
X.Xnvlink...preserve.relocson                 -5.756e-04  1.649e-02  -0.035
X..no.align.doubleon                          -1.261e-03  1.649e-02  -0.077
X..use_fast_mathon                            -2.291e-03  1.649e-02  -0.139
X..ftz.true                                    9.727e-04  1.649e-02   0.059
X..prec.sqrt.true                             -4.310e-03  1.649e-02  -0.261
X..gpu.architecture.sm_52                     -3.918e-02  1.649e-02  -2.377
X..optimize.3                                  8.798e-04  1.649e-02   0.053
X..relocatable.device.code.true                6.751e-05  1.649e-02   0.004
X..prec.div.true                               4.363e-04  1.649e-02   0.026
X.Xptxas...allow.expensive.optimizations.true -2.239e-03  1.649e-02  -0.136
X.Xptxas...fmad.true                           1.305e-03  1.649e-02   0.079
X.Xptxas...force.load.cache.lu                -2.219e-03  1.649e-02  -0.135
X.Xptxas...opt.level.3                        -4.184e-03  1.649e-02  -0.254
X.Xptxas...force.store.cache.cs               -2.529e-03  1.649e-02  -0.153
X.Xptxas...maxrregcount.63                    -6.283e-03  1.649e-02  -0.381
dummy1                                         1.678e-03  8.243e-03   0.204
dummy2                                        -6.703e-05  8.243e-03  -0.008
dummy3                                        -5.578e-04  8.243e-03  -0.068
dummy4                                        -7.662e-04  8.243e-03  -0.093
                                              Pr(>|t|)    
(Intercept)                                   6.49e-11 ***
X.Xnvlink...preserve.relocson                   0.9723    
X..no.align.doubleon                            0.9394    
X..use_fast_mathon                              0.8902    
X..ftz.true                                     0.9532    
X..prec.sqrt.true                               0.7951    
X..gpu.architecture.sm_52                       0.0223 *  
X..optimize.3                                   0.9577    
X..relocatable.device.code.true                 0.9968    
X..prec.div.true                                0.9790    
X.Xptxas...allow.expensive.optimizations.true   0.8926    
X.Xptxas...fmad.true                            0.9373    
X.Xptxas...force.load.cache.lu                  0.8936    
X.Xptxas...opt.level.3                          0.8009    
X.Xptxas...force.store.cache.cs                 0.8789    
X.Xptxas...maxrregcount.63                      0.7051    
dummy1                                          0.8397    
dummy2                                          0.9936    
dummy3                                          0.9464    
dummy4                                          0.9264    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.06385 on 40 degrees of freedom
Multiple R-squared:  0.132,	Adjusted R-squared:  -0.2804 
F-statistic:  0.32 on 19 and 40 DF,  p-value: 0.9952
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
me_plot <- MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-29856R_X/figure29856P4r.png]]
**** Reading About Design of Experiments, Factorial Designs, Supersaturated Designs
- [[file:~/Dropbox/papers/design-of-experiments/georgiou2014supersaturated.pdf][Georgiou's paper on Supersaturated Designs]]
- [[file:~/Dropbox/papers/design-of-experiments/montgomery2013design.pdf][Montgomery's Book]]
**** [[file:~/Dropbox/papers/design-of-experiments/mukerjee2006modern.pdf][Mukerjee's Book on Factorial Designs]]
- The introduction points to [[file:~/Dropbox/papers/design-of-experiments/wu2000experiments.pdf][Wu's Book on Design of Experiments]], which seems very nice, especially:
  - Chapter 7: Other Design and Analysis Techniques for Experiments at More than
    Two Levels
  - Chapter 8: Nonregular Designs: Construction and Properties
*** [2018-02-15 Thu]
**** Generating Good/Optimal Mixed-Level Designs
Reading [[file:~/Dropbox/papers/design-of-experiments/mukerjee2006modern.pdf][Mukerjee's book]] on Factorial Designs pointed to [[file:~/Dropbox/papers/design-of-experiments/wu2000experiments.pdf][Wu's book]] on Design of Experiments,
which has two chapters (7 & 8) on the design and analysis of multi-level experimental designs.

Search for more specific terms such as "multi-" or "mixed-level experimental
designs" led to finding [[file:~/Dropbox/papers/design-of-experiments/fontana2013algebraic.pdf][Fontana's paper]] on algebraic generation of minimum
orthogonal designs. A [[file:~/Dropbox/papers/design-of-experiments/fontana2017generalized.pdf][later paper]] from the same author generalized these
constructions to mixed-level orthogonal arrays, which can be used to generate
mixed-level optimal designs. Fontana [[file:~/Dropbox/papers/design-of-experiments/fontana2013minimum.pdf][implemented his algorithm]] using the
proprietary software SAS.

Fontana later collaborated with Ulrike, from the ~DoE~ R packages, to implement
this construction in the ~DoE.MIParray~ R [[https://cran.r-project.org/web/packages/DoE.MIParray/DoE.MIParray.pdf][package]]. The [[file:~/Dropbox/papers/design-of-experiments/ulrike2018algorithm.pdf][description]] of the
implementation mentions that proprietary solvers such as ~gurobi~ where used in
the solution.

We now have a way of generating optimal mixed-level orthogonal experimental
designs using R, albeit using proprietary software. Would it be worth evaluating
the difficulty of implementing this using open-source software?

**** Tuning FPGAs using Experimental Design
Looking for works that cited Fontana's paper I came across a 2018 JPDC paper on
[[file:~/Dropbox/papers/design-of-experiments/tuzov2018tuning.pdf][tuning synthesis flags on FPGAs]]. This work uses fractional factorial
experimental designs to explore a subset of flags that control synthesis in
FPGAs, targeting a specific architecture.

The 9 optimization flags they tested in this paper were selected because they
were the most common flags across multiple FPGA synthesis tools. The authors
give no other reason to select those flags. The total number of flags and
optimizations in the targeted system was 72.

Of those 9 flags, it is not entirely clear which are multi-level factors and
which are only boolean or two-level factors. It is also not clear whether the
other 63 flags on the system are multi-level, integers, or other. It seems they
converted some flags to string selections, but this is not explained further.

They used a 2^{9 - 4}_{IV} fractional factorial design with 32 runs to measure
the impact of the 9 flags. The entire search space in this case has 512
different configurations. They use a set of 24 response variables to measure the
effectiveness of each configuration, and attempt to fit linear models using the
9 factors for each response variable, separately.

One particularly weird choice of this study was to use the fitted linear models,
that used 32 configurations, to compute the values of the response variables for
the remaining 480 configurations. This is strange because the using ANOVA
attempts to measure whether each factor impacts the response variables, but not
necessarily gives a correct model, since factor levels are mapped to [0, 1] in
this case.

They did not re-evaluate the predicted points to check for accuracy and did not
show where in the search space the 32 actually measured points were.

*** [2018-02-16 Fri]
**** Reviewing the XP 2018 Paper                           :PaperReview:
*Paper Title*: A Comparison of Task Estimation Accuracy in a Large Agile Environment
(Short Paper)

***** Summary
The paper compares developer accuracy in test-based task estimation at
industrial agile environments. The data set analysed by the paper consists
of 4,434 estimated task, contained in 732 stories, from a single company,

The paper concludes that the estimation of test-based tasks is almost as
innacurate as the estimates of other kinds of tasks. The effort to complete
test-based tasks was under-estimated more often than over-estimated. The paper
also identifies large variations in accuracies of estimations by different
developers.

Although answering the research questions it poses, the paper does not make
clear what were its objectives and contributions.

***** Research Questions
1. Is test-based task estimation more accurate than for other task types?
2. Are there significant differences in estimations across developers

***** Section 2: Analysis of Task Accuracy
Table 1 shows a summary of the data. It is strange that the medians of the
estimates for all categories are all equal, and also that they are all equal to
zero. The paper does not discuss the importance of the median in this specific
data set. Later in the section the accuracy of each category is presented and it
is possible to understand that the medians are all zero because most points are
accurate estimates, which are mapped to zero. I suggest considering removing the
median from the tables because it does not add much to the discussion, since the
values are the same for all categories. Perhaps presenting a histogram of under-
and over-estimates could make this section's argument more clear.

Figures 1a and 1b are not boxplots, since they do not present the data grouped
by its quartiles. It is impossible to distinguish precisely how many points are
plotted in the same place, although it is possible to see that some circles are
darker that others, suggesting some points are at the same spot. The paper does
not mention what tool was used to generate the figures, but I suggest
considering using the boxplot functions built-in in plotting packages from R,
such as ggplot2, or Python, such as matplotlib.

The paper does not discuss that the two categories with lower accuracy are the
ones with the most data points. The accuracy of the other two categories is also
similar, indicating that it could be interesing to check the possibility that
the accuracy decreases as the sample size increases. An interesing question is
whether the distributions of accuracies converge to the same "shape" as sample
increases. Plots of those distributions for all four categories would also be
nice additions to the paper.

***** Section 3: Analysis of Developer Accuracy
Tables 3 and 4 present accuracies of each developer with more than 20 estimates
in the data set, separated by category. The paper does not discuss why only the
"Test" and "All" categories were considered in this section. It would be
interesting to see whether the other categories of estimates had a similar
behaviour, since they had similar estimate accuracies.

It is curious that the same developers had different accuracies in the two
categories, but estimate accuracy in the two categories were similar. Maybe the
different skills of developers in estimating different kinds of tasks balance
each other out. This reinforces that it would be interesting to look at the
analysis of developer accuracy in the other two categories.

***** Conclusion
It would be interesting to explore if the difference between accuracies could be
explained by the sample size, that is, does the accuracy decreases as the sample
size increases?

The paper presents an interesting data set, but my opinion is that the analysis
could be presented better, especially regarding the distribution of over- and
under-estimation. Presenting boxplots or histograms would greatly ease the
understanding of the data set.

The paper answers its research questions, but does not clarify its objectives or
contributions. The paper would benefit from explicitly discussing its objectives
and what was learned from this data analysis.
*** [2018-02-19 Mon]
**** Installing the ~DoE.MIParray~ package
The package is easy to install, but it requires installing, configuring, and
obtaining a license for proprietary solvers Gurobi or Mosek. After
unsuccessfully attempting to install Mosek, I installed Gurobi and its R package
following instructions on Gurobi's [[http://www.gurobi.com/][site]]. I requested an academic license for
Gurobi and tried to use ~Doe.MIParray:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(DoE.MIParray)

feld <- gurobi_MIParray(18, c(2, 3, 3, 3))
feld
#+END_SRC

#+RESULTS:
#+begin_example
no violation of necessary criteria  for strength  2  was found
Academic license - for non-commercial use only
Optimize a model with 26 rows, 54 columns and 1098 nonzeros
Variable types: 0 continuous, 54 integer (54 binary)
Coefficient statistics:
  Matrix range     [5e-01, 2e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+01, 2e+01]
Presolve time: 0.04s
Presolved: 26 rows, 54 columns, 585 nonzeros
Variable types: 0 continuous, 54 integer (54 binary)

Root relaxation: objective 0.000000e+00, 43 iterations, 0.01 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

,*    0     0               0       0.0000000    0.00000  0.00%     -    0s

Explored 0 nodes (55 simplex iterations) in 0.09 seconds
Thread count was 2 (of 4 available processors)

Solution count 1: 0 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%
=== GWLP after enforcing resolution ===
    0     1     2     3     4 
1.000 0.000 0.000 1.778 0.222 
=======================================
[1] 3
Academic license - for non-commercial use only
Warning: zero or small (< 1e-13) coefficients in quadratic constraints, ignored
Optimize a model with 46 rows, 76 columns and 1818 nonzeros
Model has 1 quadratic constraint
Variable types: 21 continuous, 55 integer (54 binary)
Coefficient statistics:
  Matrix range     [4e-01, 3e+00]
  QMatrix range    [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+01, 2e+01]

Loaded MIP start with objective 576

Presolve removed 0 rows and 1 columns
Presolve time: 0.02s
Presolved: 46 rows, 75 columns, 951 nonzeros
Variable types: 17 continuous, 58 integer (54 binary)
Presolve time: 0.02s
Presolved: 88 rows, 77 columns, 995 nonzeros
Presolved model has 1 second-order cone constraint
Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 2.568e+03
 Factor NZ  : 2.824e+03
 Factor Ops : 1.120e+05 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.75708770e+01 -5.40000000e+00  4.74e+02 1.00e-01  1.34e+00     0s
   1   5.94324366e-01 -1.25931102e+01  1.10e+01 1.10e-07  8.92e-02     0s
   2   5.86074004e-02 -1.35552669e+00  1.21e-05 9.50e-10  8.27e-03     0s
   3   8.70800208e-05 -3.20404251e-03  1.33e-11 1.28e-12  1.92e-05     0s
   4   1.36952166e-06 -4.86927800e-06  2.28e-13 3.47e-16  3.65e-08     0s
   5   4.11125129e-08 -2.12634841e-08  1.44e-11 1.14e-15  3.65e-10     0s

Barrier solved model in 5 iterations and 0.05 seconds
Optimal objective 4.11125129e-08


Root relaxation: objective 4.111251e-08, 0 iterations, 0.03 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.00000    0   54  576.00000    0.00000   100%     -    0s
     0     0    0.00000    0   54  576.00000    0.00000   100%     -    0s
H    0     0                     162.0000000    0.00000   100%     -    0s

Explored 1 nodes (0 simplex iterations) in 0.31 seconds
Thread count was 2 (of 4 available processors)

Solution count 2: 162 576 

Optimization achieved user objective limit
Best objective 1.620000000000e+02, best bound 4.111251287696e-08, gap 100.0000%
=== GWLP after optimizing A3 ===
  0   1   2   3   4 
1.0 0.0 0.0 0.5 1.5 
=================================
      [,1] [,2] [,3] [,4]
 [1,]    1    1    1    3
 [2,]    1    1    2    1
 [3,]    1    1    3    2
 [4,]    1    2    1    2
 [5,]    1    2    2    3
 [6,]    1    2    3    1
 [7,]    1    3    1    1
 [8,]    1    3    2    2
 [9,]    1    3    3    3
[10,]    2    1    1    1
[11,]    2    1    2    2
[12,]    2    1    3    3
[13,]    2    2    1    3
[14,]    2    2    2    1
[15,]    2    2    3    2
[16,]    2    3    1    2
[17,]    2    3    2    3
[18,]    2    3    3    1
attr(,"class")
[1] "oa"     "matrix"
attr(,"origin")
attr(,"origin")$package
[1] "DoE.MIParry"

attr(,"origin")$call
gurobi_MIParray(18, c(2, 3, 3, 3))

optimization results:
    A1to2        A3 
"OPTIMAL" "OPTIMAL" 

further attribute(s) (accessible with attr( x , attrname)):
[1] "MIPinfo"
#+end_example

Weird enough, the package runs in the R interpreter at a terminal, but refuses
to find the library at this org-mode session. Further configuration will be
required.

Rebooting the machine seems to have fixed this issue, and now the package works
on org-mode as well.
**** Understanding ~DoE.MIParray~
Reading the [[https://cran.r-project.org/web/packages/DoE.MIParray/DoE.MIParray.pdf][documentation]] and [[http://www1.beuth-hochschule.de/FB_II/reports/Report-2018-001.pdf][preliminar tech report]] to better understand what
kinds of designs can be generated with this technique and if those designs fit
our objective.
*** [2018-02-20 Tue]
**** Reading [[file:~/Dropbox/papers/design-of-experiments/mukerjee2006modern.pdf][Mukerjee's Book]] on Factorial Designs
Chapter 2 provides fundamental definitions of concepts related to factorial
designs. Its definition of contrasts is a little bit different from [[https://en.wikipedia.org/wiki/Contrast_(statistics)][this one]].
The [[https://en.wikipedia.org/wiki/Kronecker_product][Kronecker product]] is also a useful concept presented in this chapter.

This book is much more mathematically denser than any other DoE book I have read
so far. It seems to be a good mathematical foundation for the concepts presented
in books such as [[file:~/Dropbox/papers/design-of-experiments/montgomery2013design.pdf][Montgomery's]], but does not offer much in terms of practical
algorithms or implementations.

A more practical reference is [[file:~/Dropbox/papers/design-of-experiments/hedayat1999orthogonal.pdf][Hedayat's]] Orthogonal Arrays: Theory and
Applications. That book gives an algorithm for the expansive and contractive
replacement techniques for constructing orthogonal arrays from existing
orthogonal arrays.

**** Expansive & Contractive Replacement Method from [[file:~/Dropbox/papers/design-of-experiments/hedayat1999orthogonal.pdf][Hedayat's Orthogonal Arrays]]
Section 9.3 of this book presents the expansive and contractive replacement
methods, two apparently simple strategies to construct mixed-level designs from
other designs, or from parts from the same design.

The expansive replacement method can be used to insert runs from designs with
factors with less levels into designs with factors with more levels, by
replacing selected columns. This seems straightforward because it "encodes" a
set of columns with more levels to a column with less levels.

The contractive replacement method seems more directly applicable in our case.
This method is what the AutoDesign system [[http://www.functionbay.co.kr/documentation/onlinehelp/default.htm#!Documents/plackettandburmandesign.htm][claims to use]] to generate its
mixed-level Plackett-Burman designs. The method requires finding a set of
columns in the original design that fulfill certain properties. Those columns
are used to encode a new factor with more levels, in a process similar to the
one discussed with Arnaud. The main advantages of this method are the guarantee
of not losing orthogonality of the design and not changing the number of runs.

***** The Contractive Replacement Method
One notation for orthogonal arrays is $OA(N, s_1, \dots, s_k, t)$, where
$N$ is the number of rows, $s_1, \dots, s_k$ are the factors, where each $s_i$
represents the number of levels, and $t$ is the strength.

To use the contractive method on an array $A = OA(N, s_1, \dots, s_k, 2)$, we
need to find an OA $B = OA(N, s_u, \forall u \in U, 2)$, constructed from a
subset $U$ of columns of $A$. $B$ must have the following properties:

1. $B$ is composed of $N / L$ repetitions of the same rows, where $L$ denotes
   the number of levels of the new factor
2. $L = 1 - u + \sum\limits_{u \in U}{s_u}$

If we can find $B$, we then encode each unique row as $0, 1, \dots, L - 1$ and
replace the corresponding rows of $A$, in columns in $U$, with this new
encoding. This effectively "contracts" the columns in $U$ into a new column
represeting a factor with L levels.

*** [2018-02-21 Wed]
**** Implementing the Contractive Replacement Method in Julia

#+NAME: define_find_contractible_columns
#+HEADER: :results output :session *Julia* :noweb yes
#+BEGIN_SRC julia
using DataFrames, IterTools

<<define_primes_divisible_offset>>
<<define_julia_paley>>
<<define_julia_plackett_burman>>

# https://stackoverflow.com/questions/47564825/check-if-all-the-elements-of-a-julia-array-are-equal
@inline function all_equal(x::Array{Int64, 1})
    x_length = length(x)
    x_length < 2 && return true
    
    first = x[1]

    for i = 2:x_length
        x[i] == first || return false
    end

    return true
end

function count_repetitions(data::DataFrame, columns::Array{Symbol, 1})
    output = DataFrame()
    rows = size(data, 1)

    new_level = 0

    for i = 1:rows
        combination = Symbol()
        for c in columns
            combination = Symbol(combination, data[i, c])
        end

        if haskey(output, combination)
            output[1, combination] += 1
        else
            output[combination] = [1, i, new_level]
            new_level += 1
        end
    end

    return output
end

function can_contract(data::DataFrame, repetitions::DataFrame, columns::Int)
    # Assuming we are contracting two-level factors
    return all_equal(vec(convert(Array, repetitions[1, :]))) &&
           size(data, 1) / repetitions[1, 1] == convert(Float64, 1 + columns)

end

function find_contractible_columns(design::DataFrame, min_columns::Int, max_columns::Int)
    design_names = names(design)

    contractible_columns = Dict{Int, Any}()

    for columns_size = min_columns:max_columns
        println(string("Running for ", columns_size, " columns..."))
        for columns in subsets(design_names, columns_size)
            repetitions = count_repetitions(design, columns)

            #println(repetitions)

            if can_contract(design, repetitions, columns_size)
              println("Can contract this set")
              println(columns)

              if !haskey(contractible_columns, columns_size - 1)
                  contractible_columns[columns_size - 1] = Dict{Symbol, DataFrame}()
              end

              contractible_columns[columns_size - 1][Symbol(columns...)] = repetitions
            end
        end
    end

    println(contractible_columns)
end
#+END_SRC

#+RESULTS: define_find_contractible_columns
#+begin_example




primes_divisible_offset (generic function with 1 method)
binary_search (generic function with 1 method)

paley (generic function with 1 method)
plackett_burman (generic function with 1 method)


all_equal (generic function with 1 method)

count_repetitions (generic function with 1 method)

can_contract (generic function with 1 method)

find_contractible_columns (generic function with 1 method)
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
find_contractible_columns(DataFrame(plackett_burman(16)), 2, 5)
#+END_SRC

#+RESULTS:
: Running for 2 columns...
: Running for 3 columns...
: Running for 4 columns...
: Running for 5 columns...
: Dict{Int64,Any}()
**** Thoughts on the Contractive Replacement Method
It seems that Plackett-Burman designs are not very well suited
for using this method, since no groups of columns seem to have
the necessary properties. Maybe there is something wrong with my
implementation.

Future steps could be:

1. Re-implement this checking in R using FrF2's ~pb~
2. Try this with different classes of OAs (full factorial?)
3. Debug the checking implementation

*** [2018-02-22 Thu]
**** Testing Julia ~RCall~
It does not work that well with plots, and currently has some importing errors.

#+HEADER: :results output graphics :session *Julia* :exports both
#+HEADER: :file /tmp/rcall_figure.png
#+HEADER: :width 600 :height 400
#+BEGIN_SRC julia
using RDatasets, RCall
using RCall
using RDatasets

mtcars = dataset("datasets", "mtcars")

R"""
library(ggplot2)

ggplot($mtcars, aes(x = WT, y = MPG)) + geom_point()

ggsave("/tmp/rcall_figure.png", width = 2, height = 1.5)
"""
#+END_SRC

#+RESULTS:
[[file:/tmp/rcall_figure.png]]

Getting data from ~FrF2~ works much better. We can convert designs
to Julia ~DataFrames~ very easily:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using RCall, DataFrames

R"""
library(FrF2)

design <- pb(20)
"""

@rget design
#+END_SRC

#+RESULTS:
#+begin_example


RCall.RObject{RCall.VecSxp}
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T
1   1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1
2   1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1
3   1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1
4   1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1
5   1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1
6  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
7  -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1
8  -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1
9  -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1
10 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1
11  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1
12 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1
13 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1
14  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1
15 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1
16 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1
17 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1
18  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1
19  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1
20  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1
class=design, type= pb

20×19 DataFrames.DataFrame
│ Row │ A    │ B    │ C    │ D    │ E    │ F    │ G    │ H    │ J    │ K    │ L    │ M    │ N    │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │
│ 2   │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │
│ 3   │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │
│ 4   │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │
│ 5   │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │
│ 6   │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │
│ 7   │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │
│ 8   │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │
│ 9   │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │
│ 10  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │
│ 11  │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │
│ 12  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │
│ 13  │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │
│ 14  │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │
│ 15  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │
│ 16  │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │
│ 17  │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │
│ 18  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │
│ 19  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │
│ 20  │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │

│ Row │ O    │ P    │ Q    │ R    │ S    │ T    │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │
│ 2   │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │
│ 3   │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │
│ 4   │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │
│ 5   │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │
│ 6   │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │
│ 7   │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │
│ 8   │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │
│ 9   │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │
│ 10  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │
│ 11  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │
│ 12  │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │
│ 13  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │
│ 14  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │
│ 15  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │
│ 16  │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │
│ 17  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │
│ 18  │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │
│ 19  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │
│ 20  │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │
#+end_example
**** Checking ~FrF2~'s PB Designs
First I will wrap ~FrF2~ in Julia using RCall:

#+NAME: define_pb_in_julia
#+HEADER: :results output :session *Julia* :noweb yes
#+BEGIN_SRC julia
<<define_find_contractible_columns>>

using RCall, DataFrames, CategoricalArrays

function load_R_packages()
    reval("library(FrF2)")
end

function pb(design_size)
    load_R_packages()
    reval("r_design <- pb($design_size)")
    @rget r_design
end

function FrF2(nruns, nfactors)
    load_R_packages()
    reval("r_design <- FrF2(nruns = $nruns, nfactors = $nfactors)")
    @rget r_design
end

function categorical_to_int(target_design::DataFrame)
    design = DataFrame()

    for column in names(target_design)
        design[column] = Array{Int, 1}(recode(target_design[:, column], "1" => 1, "-1" => -1))
    end

    design
end
#+END_SRC

#+RESULTS: define_pb_in_julia
#+begin_example




primes_divisible_offset (generic function with 1 method)
binary_search (generic function with 1 method)

paley (generic function with 1 method)
plackett_burman (generic function with 1 method)


all_equal (generic function with 1 method)

count_repetitions (generic function with 1 method)

can_contract (generic function with 1 method)

find_contractible_columns (generic function with 1 method)



load_R_packages (generic function with 1 method)

pb (generic function with 1 method)

FrF2 (generic function with 1 method)

categorical_to_int (generic function with 1 method)
#+end_example

Now we can just use ~FrF2~'s ~pb~ as if we were on R. It is strange that ~pb~'s
designs of size 16 have some contractible sets of 3 columns, and a contractible
set of 15 columns.

All contractible sets of size 3 contain the ~P~ column, which seem weird. It
becomes even weirder when we see that designs of other sizes do not usualy have
contractible column sets.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
design_size = 16

design = FrF2(design_size, design_size - 1)

design = categorical_to_int(design)

find_contractible_columns(design, 2, 16)
#+END_SRC

#+RESULTS:
#+begin_example
16

16×15 DataFrames.DataFrame
│ Row │ A    │ B    │ C    │ D    │ E    │ F    │ G    │ H    │ J    │ K    │ L    │ M    │ N    │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "-1" │ "-1" │
│ 2   │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │
│ 3   │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │
│ 4   │ "-1" │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │
│ 5   │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │ "1"  │
│ 6   │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "-1" │ "-1" │ "1"  │ "-1" │ "1"  │
│ 7   │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │
│ 8   │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │
│ 9   │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │
│ 10  │ "1"  │ "-1" │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │
│ 11  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │
│ 12  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │
│ 13  │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │
│ 14  │ "-1" │ "1"  │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │
│ 15  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │
│ 16  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │

│ Row │ O    │ P    │
├─────┼──────┼──────┤
│ 1   │ "-1" │ "-1" │
│ 2   │ "1"  │ "1"  │
│ 3   │ "-1" │ "-1" │
│ 4   │ "1"  │ "-1" │
│ 5   │ "1"  │ "1"  │
│ 6   │ "1"  │ "-1" │
│ 7   │ "-1" │ "-1" │
│ 8   │ "-1" │ "-1" │
│ 9   │ "-1" │ "1"  │
│ 10  │ "1"  │ "1"  │
│ 11  │ "-1" │ "1"  │
│ 12  │ "-1" │ "1"  │
│ 13  │ "1"  │ "1"  │
│ 14  │ "1"  │ "-1" │
│ 15  │ "-1" │ "1"  │
│ 16  │ "1"  │ "-1" │

16×15 DataFrames.DataFrame
│ Row │ A  │ B  │ C  │ D  │ E  │ F  │ G  │ H  │ J  │ K  │ L  │ M  │ N  │ O  │ P  │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ 1  │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │
│ 2   │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │
│ 3   │ 1  │ -1 │ 1  │ 1  │ -1 │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │
│ 4   │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │
│ 5   │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │
│ 6   │ -1 │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ 1  │ -1 │
│ 7   │ 1  │ 1  │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │
│ 8   │ 1  │ -1 │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │
│ 9   │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ 1  │ -1 │ 1  │
│ 10  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │
│ 11  │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │
│ 12  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ 1  │ -1 │ -1 │ 1  │
│ 13  │ 1  │ -1 │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │
│ 14  │ -1 │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │
│ 15  │ -1 │ -1 │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │
│ 16  │ -1 │ 1  │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ 1  │ -1 │

Running for 2 columns...
Running for 3 columns...
Can contract this set
Symbol[:A, :B, :E]
Can contract this set
Symbol[:A, :C, :F]
Can contract this set
Symbol[:A, :D, :J]
Can contract this set
Symbol[:A, :G, :H]
Can contract this set
Symbol[:A, :K, :L]
Can contract this set
Symbol[:A, :M, :N]
Can contract this set
Symbol[:A, :O, :P]
Can contract this set
Symbol[:B, :C, :G]
Can contract this set
Symbol[:B, :D, :K]
Can contract this set
Symbol[:B, :F, :H]
Can contract this set
Symbol[:B, :J, :L]
Can contract this set
Symbol[:B, :M, :O]
Can contract this set
Symbol[:B, :N, :P]
Can contract this set
Symbol[:C, :D, :M]
Can contract this set
Symbol[:C, :E, :H]
Can contract this set
Symbol[:C, :J, :N]
Can contract this set
Symbol[:C, :K, :O]
Can contract this set
Symbol[:C, :L, :P]
Can contract this set
Symbol[:D, :E, :L]
Can contract this set
Symbol[:D, :F, :N]
Can contract this set
Symbol[:D, :G, :O]
Can contract this set
Symbol[:D, :H, :P]
Can contract this set
Symbol[:E, :F, :G]
Can contract this set
Symbol[:E, :J, :K]
Can contract this set
Symbol[:E, :M, :P]
Can contract this set
Symbol[:E, :N, :O]
Can contract this set
Symbol[:F, :J, :M]
Can contract this set
Symbol[:F, :K, :P]
Can contract this set
Symbol[:F, :L, :O]
Can contract this set
Symbol[:G, :J, :P]
Can contract this set
Symbol[:G, :K, :M]
Can contract this set
Symbol[:G, :L, :N]
Can contract this set
Symbol[:H, :J, :O]
Can contract this set
Symbol[:H, :K, :N]
Can contract this set
Symbol[:H, :L, :M]
Running for 4 columns...
Running for 5 columns...
Running for 6 columns...
Running for 7 columns...
Can contract this set
Symbol[:A, :B, :C, :E, :F, :G, :H]
Can contract this set
Symbol[:A, :B, :D, :E, :J, :K, :L]
Can contract this set
Symbol[:A, :B, :E, :M, :N, :O, :P]
Can contract this set
Symbol[:A, :C, :D, :F, :J, :M, :N]
Can contract this set
Symbol[:A, :C, :F, :K, :L, :O, :P]
Can contract this set
Symbol[:A, :D, :G, :H, :J, :O, :P]
Can contract this set
Symbol[:A, :G, :H, :K, :L, :M, :N]
Can contract this set
Symbol[:B, :C, :D, :G, :K, :M, :O]
Can contract this set
Symbol[:B, :C, :G, :J, :L, :N, :P]
Can contract this set
Symbol[:B, :D, :F, :H, :K, :N, :P]
Can contract this set
Symbol[:B, :F, :H, :J, :L, :M, :O]
Can contract this set
Symbol[:C, :D, :E, :H, :L, :M, :P]
Can contract this set
Symbol[:C, :E, :H, :J, :K, :N, :O]
Can contract this set
Symbol[:D, :E, :F, :G, :L, :N, :O]
Can contract this set
Symbol[:E, :F, :G, :J, :K, :M, :P]
Running for 8 columns...
Running for 9 columns...
Running for 10 columns...
Running for 11 columns...
Running for 12 columns...
Running for 13 columns...
Running for 14 columns...
Running for 15 columns...
Can contract this set
Symbol[:A, :B, :C, :D, :E, :F, :G, :H, :J, :K, :L, :M, :N, :O, :P]
Running for 16 columns...
Dict{Int64,Any}(Pair{Int64,Any}(14, Dict(:ABCDEFGHJKLMNOP=>3×16 DataFrames.DataFrame
│ Row │ 11-111-1-1-1111-1-1-1-1 │ 11-1-11-1-1-1-1-1-11111 │ 1-111-11-1-11-1-111-1-1 │
├─────┼─────────────────────────┼─────────────────────────┼─────────────────────────┤
│ 1   │ 1                       │ 1                       │ 1                       │
│ 2   │ 1                       │ 2                       │ 3                       │
│ 3   │ 0                       │ 1                       │ 2                       │

│ Row │ -1-11-11-1-1111-1-111-1 │ 111111111111111 │ -1-1-11111-1-1-11-111-1 │ 111-11111-1-1-1-1-1-1-1 │
├─────┼─────────────────────────┼─────────────────┼─────────────────────────┼─────────────────────────┤
│ 1   │ 1                       │ 1               │ 1                       │ 1                       │
│ 2   │ 4                       │ 5               │ 6                       │ 7                       │
│ 3   │ 3                       │ 4               │ 5                       │ 6                       │

│ Row │ 1-1-1-1-1-111-11111-1-1 │ -11-11-11-11-11-1-11-11 │ 1-1-11-1-1111-1-1-1-111 │
├─────┼─────────────────────────┼─────────────────────────┼─────────────────────────┤
│ 1   │ 1                       │ 1                       │ 1                       │
│ 2   │ 8                       │ 9                       │ 10                      │
│ 3   │ 7                       │ 8                       │ 9                       │

│ Row │ -111-1-1-11-11-11-11-11 │ -1-1-1-1111-111-11-1-11 │ 1-11-1-11-1-1-111-1-111 │
├─────┼─────────────────────────┼─────────────────────────┼─────────────────────────┤
│ 1   │ 1                       │ 1                       │ 1                       │
│ 2   │ 11                      │ 12                      │ 13                      │
│ 3   │ 10                      │ 11                      │ 12                      │

│ Row │ -1111-1-11-1-11-11-11-1 │ -1-1111-1-11-1-111-1-11 │ -11-1-1-11-111-111-11-1 │
├─────┼─────────────────────────┼─────────────────────────┼─────────────────────────┤
│ 1   │ 1                       │ 1                       │ 1                       │
│ 2   │ 14                      │ 15                      │ 16                      │
│ 3   │ 13                      │ 14                      │ 15                      │)),Pair{Int64,Any}(2, Dict(:DGO=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ -1-11 │ 111 │ -11-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 5   │ 7     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:CEH=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ 1-1-1 │ 111 │ -1-11 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 3     │ 4   │ 8     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:BJL=>3×4 DataFrames.DataFrame
│ Row │ 111 │ 1-1-1 │ -11-1 │ -1-11 │
├─────┼─────┼───────┼───────┼───────┤
│ 1   │ 4   │ 4     │ 4     │ 4     │
│ 2   │ 1   │ 2     │ 3     │ 6     │
│ 3   │ 0   │ 1     │ 2     │ 3     │,:ACF=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ 111 │ -11-1 │ -1-11 │
├─────┼───────┼─────┼───────┼───────┤
│ 1   │ 4     │ 4   │ 4     │ 4     │
│ 2   │ 1     │ 3   │ 4     │ 6     │
│ 3   │ 0     │ 1   │ 2     │ 3     │,:DFN=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ -1-11 │ 111 │ -11-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 3   │ 7     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:HJO=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 4   │ 7     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:FJM=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 3   │ 6     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:FLO=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 1-1-1 │ 111 │
├─────┼───────┼───────┼───────┼─────┤
│ 1   │ 4     │ 4     │ 4     │ 4   │
│ 2   │ 1     │ 2     │ 3     │ 5   │
│ 3   │ 0     │ 1     │ 2     │ 3   │,:BDK=>3×4 DataFrames.DataFrame
│ Row │ 111 │ 1-1-1 │ -11-1 │ -1-11 │
├─────┼─────┼───────┼───────┼───────┤
│ 1   │ 4   │ 4     │ 4     │ 4     │
│ 2   │ 1   │ 2     │ 3     │ 4     │
│ 3   │ 0   │ 1     │ 2     │ 3     │,:AOP=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ 111 │ -11-1 │ -1-11 │
├─────┼───────┼─────┼───────┼───────┤
│ 1   │ 4     │ 4   │ 4     │ 4     │
│ 2   │ 1     │ 2   │ 4     │ 9     │
│ 3   │ 0     │ 1   │ 2     │ 3     │,:CDM=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 3   │ 4     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:BNP=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ 111 │ -11-1 │ -1-11 │
├─────┼───────┼─────┼───────┼───────┤
│ 1   │ 4     │ 4   │ 4     │ 4     │
│ 2   │ 1     │ 2   │ 3     │ 10    │
│ 3   │ 0     │ 1   │ 2     │ 3     │,:FKP=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 1-1-1 │ 111 │
├─────┼───────┼───────┼───────┼─────┤
│ 1   │ 4     │ 4     │ 4     │ 4   │
│ 2   │ 1     │ 2     │ 3     │ 5   │
│ 3   │ 0     │ 1     │ 2     │ 3   │,:AGH=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ -1-11 │ 111 │ -11-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 4     │ 5   │ 6     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:CJN=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 3   │ 7     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:BCG=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ -11-1 │ 111 │ -1-11 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 3     │ 5   │ 6     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:EJK=>3×4 DataFrames.DataFrame
│ Row │ 111 │ 1-1-1 │ -11-1 │ -1-11 │
├─────┼─────┼───────┼───────┼───────┤
│ 1   │ 4   │ 4     │ 4     │ 4     │
│ 2   │ 1   │ 2     │ 3     │ 8     │
│ 3   │ 0   │ 1     │ 2     │ 3     │,:HKN=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 4   │ 7     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:CLP=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 1-1-1 │ 111 │
├─────┼───────┼───────┼───────┼─────┤
│ 1   │ 4     │ 4     │ 4     │ 4   │
│ 2   │ 1     │ 2     │ 3     │ 5   │
│ 3   │ 0     │ 1     │ 2     │ 3   │,:ABE=>3×4 DataFrames.DataFrame
│ Row │ 111 │ 1-1-1 │ -1-11 │ -11-1 │
├─────┼─────┼───────┼───────┼───────┤
│ 1   │ 4   │ 4     │ 4     │ 4     │
│ 2   │ 1   │ 3     │ 4     │ 9     │
│ 3   │ 0   │ 1     │ 2     │ 3     │,:BFH=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ -11-1 │ -1-11 │ 111 │
├─────┼───────┼───────┼───────┼─────┤
│ 1   │ 4     │ 4     │ 4     │ 4   │
│ 2   │ 1     │ 3     │ 4     │ 5   │
│ 3   │ 0     │ 1     │ 2     │ 3   │,:DHP=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ -1-11 │ -11-1 │ 111 │
├─────┼───────┼───────┼───────┼─────┤
│ 1   │ 4     │ 4     │ 4     │ 4   │
│ 2   │ 1     │ 2     │ 4     │ 5   │
│ 3   │ 0     │ 1     │ 2     │ 3   │,:HLM=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 1-1-1 │ 111 │
├─────┼───────┼───────┼───────┼─────┤
│ 1   │ 4     │ 4     │ 4     │ 4   │
│ 2   │ 1     │ 2     │ 4     │ 5   │
│ 3   │ 0     │ 1     │ 2     │ 3   │,:EMP=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ 111 │ -11-1 │ -1-11 │
├─────┼───────┼─────┼───────┼───────┤
│ 1   │ 4     │ 4   │ 4     │ 4     │
│ 2   │ 1     │ 2   │ 3     │ 9     │
│ 3   │ 0     │ 1   │ 2     │ 3     │,:ADJ=>3×4 DataFrames.DataFrame
│ Row │ 111 │ 1-1-1 │ -1-11 │ -11-1 │
├─────┼─────┼───────┼───────┼───────┤
│ 1   │ 4   │ 4     │ 4     │ 4     │
│ 2   │ 1   │ 2     │ 4     │ 6     │
│ 3   │ 0   │ 1     │ 2     │ 3     │,:EFG=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ -11-1 │ 111 │ -1-11 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 3     │ 5   │ 8     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:AMN=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ 111 │ -1-11 │ -11-1 │
├─────┼───────┼─────┼───────┼───────┤
│ 1   │ 4     │ 4   │ 4     │ 4     │
│ 2   │ 1     │ 2   │ 4     │ 12    │
│ 3   │ 0     │ 1   │ 2     │ 3     │,:DEL=>3×4 DataFrames.DataFrame
│ Row │ 111 │ -11-1 │ 1-1-1 │ -1-11 │
├─────┼─────┼───────┼───────┼───────┤
│ 1   │ 4   │ 4     │ 4     │ 4     │
│ 2   │ 1   │ 2     │ 3     │ 8     │
│ 3   │ 0   │ 1     │ 2     │ 3     │,:AKL=>3×4 DataFrames.DataFrame
│ Row │ 111 │ 1-1-1 │ -11-1 │ -1-11 │
├─────┼─────┼───────┼───────┼───────┤
│ 1   │ 4   │ 4     │ 4     │ 4     │
│ 2   │ 1   │ 2     │ 4     │ 6     │
│ 3   │ 0   │ 1     │ 2     │ 3     │,:BMO=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ 111 │ -11-1 │ -1-11 │
├─────┼───────┼─────┼───────┼───────┤
│ 1   │ 4     │ 4   │ 4     │ 4     │
│ 2   │ 1     │ 2   │ 3     │ 4     │
│ 3   │ 0     │ 1   │ 2     │ 3     │,:GJP=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 5   │ 6     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:CKO=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 1-1-1 │ 111 │
├─────┼───────┼───────┼───────┼─────┤
│ 1   │ 4     │ 4     │ 4     │ 4   │
│ 2   │ 1     │ 2     │ 3     │ 4   │
│ 3   │ 0     │ 1     │ 2     │ 3   │,:GLN=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 5   │ 7     │
│ 3   │ 0     │ 1     │ 2   │ 3     │,:ENO=>3×4 DataFrames.DataFrame
│ Row │ 1-1-1 │ 111 │ -11-1 │ -1-11 │
├─────┼───────┼─────┼───────┼───────┤
│ 1   │ 4     │ 4   │ 4     │ 4     │
│ 2   │ 1     │ 2   │ 3     │ 10    │
│ 3   │ 0     │ 1   │ 2     │ 3     │,:GKM=>3×4 DataFrames.DataFrame
│ Row │ -11-1 │ -1-11 │ 111 │ 1-1-1 │
├─────┼───────┼───────┼─────┼───────┤
│ 1   │ 4     │ 4     │ 4   │ 4     │
│ 2   │ 1     │ 2     │ 5   │ 6     │
│ 3   │ 0     │ 1     │ 2   │ 3     │)),Pair{Int64,Any}(6, Dict(:ABCEFGH=>3×8 DataFrames.DataFrame
│ Row │ 11-11-1-1-1 │ 1-11-11-1-1 │ -1-111-1-11 │ 1111111 │ -1-1-1111-1 │ 1-1-1-1-111 │ -11-1-11-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 3           │ 4           │ 5       │ 6           │ 8           │ 9           │
│ 3   │ 0           │ 1           │ 2           │ 3       │ 4           │ 5           │ 6           │

│ Row │ -111-1-11-1 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 11          │
│ 3   │ 7           │,:ADGHJOP=>3×8 DataFrames.DataFrame
│ Row │ 11-1-11-1-1 │ 1-1-1-1-111 │ -1-1-1111-1 │ 1111111 │ -111-1-11-1 │ 1-111-1-1-1 │ -11-11-1-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 4           │ 5       │ 6           │ 7           │ 9           │
│ 3   │ 0           │ 1           │ 2           │ 3       │ 4           │ 5           │ 6           │

│ Row │ -1-11-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 11          │
│ 3   │ 7           │,:ACFKLOP=>3×8 DataFrames.DataFrame
│ Row │ 1-1-111-1-1 │ 1-1-1-1-111 │ 111-1-1-1-1 │ -11-11-11-1 │ 1111111 │ -1-11-111-1 │ -1-111-1-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 4           │ 5       │ 6           │ 9           │
│ 3   │ 0           │ 1           │ 2           │ 3           │ 4       │ 5           │ 6           │

│ Row │ -11-1-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 11          │
│ 3   │ 7           │,:DEFGLNO=>3×8 DataFrames.DataFrame
│ Row │ 11-1-11-1-1 │ -11-1-1-111 │ 1-11-1-11-1 │ 1111111 │ -1111-1-1-1 │ -1-1-1111-1 │ 1-1-11-1-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 5       │ 7           │ 8           │ 10          │
│ 3   │ 0           │ 1           │ 2           │ 3       │ 4           │ 5           │ 6           │

│ Row │ -1-11-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 13          │
│ 3   │ 7           │,:BCDGKMO=>3×8 DataFrames.DataFrame
│ Row │ 1-11-11-1-1 │ 1-1-1-1-111 │ -111-1-11-1 │ -11-1-11-11 │ 1111111 │ -1-111-1-11 │ 11-11-1-1-1 │
├─────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 4           │ 5       │ 6           │ 7           │
│ 3   │ 0           │ 1           │ 2           │ 3           │ 4       │ 5           │ 6           │

│ Row │ -1-1-1111-1 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 8           │
│ 3   │ 7           │,:BFHJLMO=>3×8 DataFrames.DataFrame
│ Row │ 1-1-111-1-1 │ 1-1-1-1-111 │ -11-11-11-1 │ -1-111-1-11 │ 1111111 │ -11-1-11-11 │ 111-1-1-1-1 │
├─────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 4           │ 5       │ 6           │ 7           │
│ 3   │ 0           │ 1           │ 2           │ 3           │ 4       │ 5           │ 6           │

│ Row │ -1-11-111-1 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 8           │
│ 3   │ 7           │,:EFGJKMP=>3×8 DataFrames.DataFrame
│ Row │ 1-1-111-1-1 │ 1-1-1-1-111 │ -11-11-11-1 │ 1111111 │ 111-1-1-1-1 │ -1-11-111-1 │ -11-1-11-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 5       │ 6           │ 8           │ 9           │
│ 3   │ 0           │ 1           │ 2           │ 3       │ 4           │ 5           │ 6           │

│ Row │ -1-111-1-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 10          │
│ 3   │ 7           │,:ACDFJMN=>3×8 DataFrames.DataFrame
│ Row │ 1-11-11-1-1 │ 1-1-1-1-111 │ 1111111 │ -11-1-11-11 │ -1-111-1-11 │ 11-11-1-1-1 │ -1-1-1111-1 │
├─────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3       │ 4           │ 6           │ 7           │ 12          │
│ 3   │ 0           │ 1           │ 2       │ 3           │ 4           │ 5           │ 6           │

│ Row │ -111-1-11-1 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 14          │
│ 3   │ 7           │,:ABDEJKL=>3×8 DataFrames.DataFrame
│ Row │ 1111111 │ 11-11-1-1-1 │ 1-11-11-1-1 │ -1-1-1111-1 │ -1-111-1-11 │ 1-1-1-1-111 │ -111-1-11-1 │
├─────┼─────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2       │ 2           │ 2           │ 2           │ 2           │ 2           │ 2           │
│ 2   │ 1       │ 2           │ 3           │ 4           │ 6           │ 8           │ 9           │
│ 3   │ 0       │ 1           │ 2           │ 3           │ 4           │ 5           │ 6           │

│ Row │ -11-1-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 11          │
│ 3   │ 7           │,:CEHJKNO=>3×8 DataFrames.DataFrame
│ Row │ -11-111-1-1 │ -11-1-1-111 │ 1-1-11-11-1 │ 1111111 │ 111-1-1-1-1 │ -1-11-111-1 │ -1-111-1-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 4       │ 7           │ 8           │ 10          │
│ 3   │ 0           │ 1           │ 2           │ 3       │ 4           │ 5           │ 6           │

│ Row │ 1-1-1-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 13          │
│ 3   │ 7           │,:BDFHKNP=>3×8 DataFrames.DataFrame
│ Row │ 11-1-11-1-1 │ 1-1-1-1-111 │ -111-1-11-1 │ -1-1-1111-1 │ 1111111 │ 1-111-1-1-1 │ -11-11-1-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 4           │ 5       │ 7           │ 10          │
│ 3   │ 0           │ 1           │ 2           │ 3           │ 4       │ 5           │ 6           │

│ Row │ -1-11-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 12          │
│ 3   │ 7           │,:ABEMNOP=>3×8 DataFrames.DataFrame
│ Row │ 111-1-1-1-1 │ 1111111 │ 1-1-111-1-1 │ -1-11-111-1 │ -11-1-11-11 │ 1-1-1-1-111 │ -1-111-1-11 │
├─────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2       │ 2           │ 2           │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2       │ 3           │ 4           │ 9           │ 10          │ 12          │
│ 3   │ 0           │ 1       │ 2           │ 3           │ 4           │ 5           │ 6           │

│ Row │ -11-11-11-1 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 14          │
│ 3   │ 7           │,:AGHKLMN=>3×8 DataFrames.DataFrame
│ Row │ 1-1-111-1-1 │ 1-1-1-1-111 │ -1-111-1-11 │ 1111111 │ -11-1-11-11 │ 111-1-1-1-1 │ -11-11-11-1 │
├─────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 4           │ 5       │ 6           │ 7           │ 12          │
│ 3   │ 0           │ 1           │ 2           │ 3       │ 4           │ 5           │ 6           │

│ Row │ -1-11-111-1 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 15          │
│ 3   │ 7           │,:BCGJLNP=>3×8 DataFrames.DataFrame
│ Row │ 1-1-111-1-1 │ 1-1-1-1-111 │ -11-11-11-1 │ 1111111 │ -1-11-111-1 │ 111-1-1-1-1 │ -1-111-1-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 5       │ 6           │ 7           │ 10          │
│ 3   │ 0           │ 1           │ 2           │ 3       │ 4           │ 5           │ 6           │

│ Row │ -11-1-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 13          │
│ 3   │ 7           │,:CDEHLMP=>3×8 DataFrames.DataFrame
│ Row │ -111-11-1-1 │ -1-11-1-111 │ 11-1-1-11-1 │ 1-111-1-1-1 │ 1111111 │ -1-1-1111-1 │ -11-11-1-11 │
├─────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┼─────────────┼─────────────┤
│ 1   │ 2           │ 2           │ 2           │ 2           │ 2       │ 2           │ 2           │
│ 2   │ 1           │ 2           │ 3           │ 4           │ 5       │ 8           │ 9           │
│ 3   │ 0           │ 1           │ 2           │ 3           │ 4       │ 5           │ 6           │

│ Row │ 1-1-1-11-11 │
├─────┼─────────────┤
│ 1   │ 2           │
│ 2   │ 11          │
│ 3   │ 7           │)))
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
design_size = 20

design = pb(design_size)

design = categorical_to_int(design)

find_contractible_columns(design, 2, 20)
#+END_SRC

#+RESULTS:
#+begin_example
20

20×19 DataFrames.DataFrame
│ Row │ A    │ B    │ C    │ D    │ E    │ F    │ G    │ H    │ J    │ K    │ L    │ M    │ N    │ O    │ P    │ Q    │ R    │ S    │ T    │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │
│ 2   │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │
│ 3   │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │
│ 4   │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │
│ 5   │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │
│ 6   │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │
│ 7   │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │
│ 8   │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │ "-1" │
│ 9   │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │
│ 10  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │
│ 11  │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │
│ 12  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │
│ 13  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │
│ 14  │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │
│ 15  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │
│ 16  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │
│ 17  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │
│ 18  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │
│ 19  │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │
│ 20  │ "1"  │ "1"  │ "1"  │ "1"  │ "-1" │ "1"  │ "-1" │ "1"  │ "-1" │ "-1" │ "-1" │ "-1" │ "1"  │ "1"  │ "-1" │ "1"  │ "1"  │ "-1" │ "-1" │

20×19 DataFrames.DataFrame
│ Row │ A  │ B  │ C  │ D  │ E  │ F  │ G  │ H  │ J  │ K  │ L  │ M  │ N  │ O  │ P  │ Q  │ R  │ S  │ T  │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┤
│ 1   │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │
│ 2   │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │
│ 3   │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │
│ 4   │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │
│ 5   │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │
│ 6   │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │
│ 7   │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │
│ 8   │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │ -1 │
│ 9   │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │
│ 10  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │
│ 11  │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │
│ 12  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │
│ 13  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │
│ 14  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │
│ 15  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │
│ 16  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │
│ 17  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │
│ 18  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │
│ 19  │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │
│ 20  │ 1  │ 1  │ 1  │ 1  │ -1 │ 1  │ -1 │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ 1  │ -1 │ 1  │ 1  │ -1 │ -1 │

Running for 2 columns...
Running for 3 columns...
Running for 4 columns...
Running for 5 columns...
Running for 6 columns...
Running for 7 columns...
Running for 8 columns...
Running for 9 columns...
Running for 10 columns...
Running for 11 columns...
Running for 12 columns...
Running for 13 columns...
Running for 14 columns...
Running for 15 columns...
Running for 16 columns...
Running for 17 columns...
Running for 18 columns...
Running for 19 columns...
Can contract this set
Symbol[:A, :B, :C, :D, :E, :F, :G, :H, :J, :K, :L, :M, :N, :O, :P, :Q, :R, :S, :T]
Running for 20 columns...
Dict{Int64,Any}(Pair{Int64,Any}(18, Dict(:ABCDEFGHJKLMNOPQRST=>3×20 DataFrames.DataFrame
│ Row │ -111-111-1-11111-11-11-1-1-1 │ -1-1-111-111-1-11111-11-11-1 │ 11-11-11-1-1-1-111-111-1-111 │ 1-11-1-1-1-111-111-1-11111-1 │ 11-111-1-11111-11-11-1-1-1-1 │ -111-1-11111-11-11-1-1-1-111 │
├─────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤
│ 1   │ 1                            │ 1                            │ 1                            │ 1                            │ 1                            │ 1                            │
│ 2   │ 1                            │ 2                            │ 3                            │ 4                            │ 5                            │ 6                            │
│ 3   │ 0                            │ 1                            │ 2                            │ 3                            │ 4                            │ 5                            │

│ Row │ 111-11-11-1-1-1-111-111-1-11 │ -1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1 │ 1-1-1-1-111-111-1-11111-11-1 │ -11-11-1-1-1-111-111-1-11111 │ 11-1-11111-11-11-1-1-1-111-1 │ 1-111-1-11111-11-11-1-1-1-11 │
├─────┼──────────────────────────────┼────────────────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤
│ 1   │ 1                            │ 1                                      │ 1                            │ 1                            │ 1                            │ 1                            │
│ 2   │ 7                            │ 8                                      │ 9                            │ 10                           │ 11                           │ 12                           │
│ 3   │ 6                            │ 7                                      │ 8                            │ 9                            │ 10                           │ 11                           │

│ Row │ -11-1-1-1-111-111-1-11111-11 │ -11111-11-11-1-1-1-111-111-1 │ 1-11-11-1-1-1-111-111-1-1111 │ -1-1-1-111-111-1-11111-11-11 │ 1-1-11111-11-11-1-1-1-111-11 │ -1-11111-11-11-1-1-1-111-111 │
├─────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤
│ 1   │ 1                            │ 1                            │ 1                            │ 1                            │ 1                            │ 1                            │
│ 2   │ 13                           │ 14                           │ 15                           │ 16                           │ 17                           │ 18                           │
│ 3   │ 12                           │ 13                           │ 14                           │ 15                           │ 16                           │ 17                           │

│ Row │ -1-111-111-1-11111-11-11-1-1 │ 1111-11-11-1-1-1-111-111-1-1 │
├─────┼──────────────────────────────┼──────────────────────────────┤
│ 1   │ 1                            │ 1                            │
│ 2   │ 19                           │ 20                           │
│ 3   │ 18                           │ 19                           │)))
#+end_example
**** Checking the Contractive Replacement Method Implementation
From the last steps:

1. Re-implement this checking in R using FrF2's ~pb~

   - I wrapped FrF2 using RCall and ran the checks again
   - Weirdly, some designs have contractible columns,
     especially the design of size 16, but most don't
   - This suggests there is something wrong with my
     implementation of Plackett-Burman designs

2. Try this with different classes of OAs (full factorial?)

   - I still have to try this. (is it worth?)

3. Debug the checking implementation

   - There was indeed something funky going on with the
     comparison of floats and integers, but I fixed it
     and still did not get any contractible sets using
     my Plackett-Burman implementation
*** [2018-02-23 Fri]
**** ~DoE.MIParray~
This technique does not seem to be the best approach for our problem,
since the construction involves solving a mixed integer problem that
dependes on the number of levels. From a note in the documentation:

#+BEGIN_QUOTE
The package is not meant for situations, for which a full factorial design would
be huge; the mixed integer problem to be solved has at least prod(nlevels)
binary or general integer variables and will likely be untractable, if this
number is too large. (For extending an existing designs, since some variables
are fixed, the limit moves out a bit.)
#+END_QUOTE

Therefore, attempting to construct a design for more than a 100 factors with
multiple levels each would not be feasible.

**** Summarizing Strategies for Multi-Level Designs

***** 2-Level Screening with Random Sampling of Levels

In this strategy factors with more than two unordered levels are sampled at two
random levels. This enables the usage of a small design such as the
Plackett-Burman screening design.

Advantages are the small design size and good estimation capability for main
effects. Disadvantages are the incapability of estimating interactions, but
mainly the lack of information regarding the response for levels not selected in
the initial screening.

***** Level Projection, Factor Merging or Contractive Replacement

An initial 2-Level design is used to generated mixed-level designs by reencoding
some columns into a new single column represeting a multi-level factor. The
contractive replacement of Addelman-Kempthorne is a strategy of this kind.

Advantages are also small design size and good estimation capability of main
effects. Additionally, the contractive replacement technique is keeps
orthogonality of designs. Disadvantages are the requirements on the initial
designs. Not all 2-Level designs can be contracted with those methods if we want
to keep orthogonality.

***** Direct Generation

The work from [[file:~/Dropbox/papers/design-of-experiments/ulrike2018algorithm.pdf][Grömping and Fontana]] enables the generation of multi-level
designs with the Generalized Minimum Aberration optimality criterion by
solving mixed integer problems.

Advantages are the direct generation of multi-level designs and the optimality
criteria. Disadvantages are the use of proprietary MIP solvers and the
limitations on the size and shape of the designs that can be generated.

***** Optimal Designs

This strategy consists of generating optimal multi-level designs. I still did not
find any algorithms or papers related to this.

*** [2018-02-26 Mon]
**** Presentation @ POLARIS Day
**Duration:** 15 minutes + questions
***** Objective
We want to succintly present the autotuning problem and various approaches to
tackle it. We also want to present what we did so far, the problems we faced and
how we are trying to solve them using Design of Experiments. We want to briefly
discuss the challenges we are facing now and how we think we can overcome them.
***** Structure
****** Introduction: Our Work with Autotuning
We could start with a description of the autotuning problem in general. The main
difference from previous similar presentations is we should not frame the
autotuning problem as a search problem. It is worth mentioning, however, that
our previous work tackled autotuning from the search perspective. At this point
we can mention our reasons for using experimental design, which will be detailed
later in the presentation. In a few minutes we should be able to give a short
summary of the whole presentation.

We could present a table with related work on different systems and approaches,
to give a sense of the variety of approaches in different problem domains. This
is not strictly necessary if we lack time.

******* Design of Experiments

By quickly justifying our need for a new autotuning approach, we should be able
to move to an introduction to Experimental Design. Explanation of basic concepts
is not necessary, but it is useful to have a description of more or less
uncommon techniques and types of designs that we are looking for, including
multi-level designs and techniques to generate them, and the mixed-effects
model.

****** Case Studies with GPU and FPGA Compiler Parameters

Now we can quickly describe the two settings to which we applied OpenTuner's
approach to autotuning, and to which we are currently applying the Design of
Experiments approach. The GPU experiments can be used as an example where search
can be useful, that is, a setting where compiling and running the code is fast.
We do not need to describe the GPU scenario with as much detail as the FPGA
scenario, since we intend to present more data related to the FPGA experiments.
The FPGA experiments can be used to show more explicitly why we need a
Design-of-Experiments-based approach.

We should discuss the features of the FPGA HLS search space, mainly its
intractable size and the time it takes to compile a single code version. We can
discuss what each different kind of experimental design can help us do. For
example, screening can give useful insight into which parameters have detectable
main effects, but suffers from the difficulty of generating mixed-level
screening designs.

****** Conclusion: Current Challenges and Possible Directions

We could end the presentation with a description of our recent studies on
different Experimental Designs and techniques, such as the ~MIParray~ R package
for generating multi-level designs and the contractive replacement method for
generating multi-level designs from 2-level orthogonal designs.
**** The PUMA Compiler & Simulator
***** Cloning & Running Izzat's PUMA Compiler
The compiler can be found at [[https://bitbucket.org/izzat/dpe][BitBucket]], but Izzat's permission to
access is required.

Compilation runs without problems. All tests from the '.test' binaries ran
without problem, but './test.test' gives an error.

It does generate the '.dpe' files though, so maybe everything is running OK.
From looking at the function listed in the error it does not seem to be a real
runtime error, so maybe it's intended to work this way?

***** Cloning & Running Aayush's PUMA Simulator
The simulator can be found at [[https://github.com/Aayush-Ankit/dpe_emulate][GitHub]], and the latest version of the code is
at the [[https://github.com/Aayush-Ankit/dpe_emulate/tree/br_team_changes][br_team_changes]] branch. Following the latest installing instructions
gives no errors and running the example application goes well.

The configuration an usage are not very well documented though, so it is not
very clear how to use the output of the compiler as input of the simulator.
***** Next Steps and Contributions
It is necessary to understand how PUMAsim is configured and what are the
properties of the search space. It could be the case, from previous
conversations with Aayush, that the search space is entirely composed of
"categorical ordered" factors, that is, integers that can only assume certain
values inside an interval.

Once the search space is defined and the connection between compiler and
simulator is understood a workflow can be elaborated to measure the set of
metrics reported by the simulator. We could use the workloads tested in the
paper but initial experiments with smaller applications could be needed,
depending on the simulator's performance.
*** [2018-02-27 Tue]
**** Presentation @ POLARIS Day: Autotuning Compiler Parameters for FPGA & GPUS: A Design of Experiments Approach
Notes and script for the presentation.
***** Slide 1: Autotuning: Optimizing Program Configuration
The objective here is to introduce autotuning by presenting some of the levels
in which configurations and selection can be made in different scenarios, and
the objetives that these configurations and selections may seek to achieve, or
in most cases, minimize.

There are few objectives listed here because those are the objectives I believe
are common to most areas, and adding domain-specific objectives would increase
the time needed to explain them.

We proceed to present a figure to represent the properties of the sort of design
space generated by the association of the selections and configurations with the
objectives.

***** Slide 3: Autotuning: Multiple Approaches
This slide presents a table of autotuning systems for different problem domains,
using different approaches. The idea is to illustrate the point that the design
spaces are affected by the problem domain and the objective.

This table has a bias toward systems that tackle autotuning as a search problem,
so this should be disclosed and discussed.

Since we discussed the importance of design size and measurement times in the
previous slide, we can use this slide

**** Meeting with the PUMA Team
- Dejan mentions it is 5 weeks to the submission
- Aayush thinks he can finish the implementation in 3 weeks,
  and then training can start
***** Aayush started presenting his slides on traning for PUMA
- The matrix is replicated in 3 crossbars, each with a different
  role in training
- To do training you need at least 2 copies of the hardware, because
  of limitations of the algorithm
- The proposal is to use 3 crossbars
- 32 bit in training, 16 bit precision in inference
- Novelty1: Scalable solution to leverage parallel updates in practical DNNs
- Novelty2: Convolution with non-static kernel for delta_Wn in CNNs (this is
  achieved by outer-product in MLPs)
***** Izzat discusses changes that need to be made to the architecture
- [[https://wiki.illinois.edu/wiki/display/DPE/PUMA%253A+A+Programmable+Ultra-efficient+Memristor-based+Accelerator][Link to the Wiki]] with the list of changes
*** [2018-02-28 Wed]
**** Continue work on Presentation for POLARIS Day
- Apply all changes discussed with Arnaud:
  - Reorganize the presentation of autotuning, configurations and objectives
  - Describe search spaces
  - Present the 3 issues with search spaces
  - Discuss current approaches and issues with them
**** Meeting with Alfredo
- Giuliano is going to start working with the PUMA team soon
- I updated Alfredo with the techniques to generate multilevel designs
  that we are studying
- Write a short e-mail to Dejan and Sai
  - Describe what I have been doing here and how we expect to
    apply it to FPGA autotuning
- Respond to FPGA HPE contract today
**** Meeting with Brice
- Discussed the multiple techniques for generating multi-level designs
  and looked into finding contractable columns using FrF2 and Plackett-Burman
- Looked into directly generating multi-level designs with MIParray and its limitations
- Discussed the presentation so far and what needs to be added:
  - Short term perspective:
    - Be able to generate balanced, orthogonal multi-level designs for large
      numbers of factors, or at least understand what can be done with existing knowledge
  - Long term perspective:
    - Apply balanced, orthogonal multi-level designs to autotuning FPGA HLS for
      industrial-level applications
  - Longer term perspective:
    - The idea of "putting the human back into the loop" of autotuning,
      where least significant factors could be dropped in an iterative way
      by better understanding their impacts in the response
    - Being able to tackle "expensive-to-evaluate" autotuning scenarios
    - Provide an autotuning library to applications
      - We can mention here our idea of providing a shared library for BOAST, generated
        from my Julia code (using something like [[https://github.com/JuliaLang/PackageCompiler.jl][this]])
** March
*** [2018-03-01 Thu]
**** First complete version of the POLARIS Day Presentation
The slides are hosted at [[https://github.com/phrb/presentations/blob/master/polaris_presentation/src/presentation.pdf][GitHub]].
*** [2018-03-02 Fri]
**** Tweak the POLARIS Day Presentation
The slides are hosted at [[https://github.com/phrb/presentations/blob/master/polaris_presentation/src/presentation.pdf][GitHub]].
**** Hacking Tom's ~DOI_to_org~ script
I wanted to attach my pre-existing pdf files to my journal so I can conveniently
anotate papers here. I modified Tom's cool script to fit my use case and opened
a [[https://github.com/Ezibenroc/DOI_to_org/pull/4][pull request]] to his repository.
*** [2018-03-05 Mon]
- Copying the program of the two days to deal with intermitent internet:
**** POLARIS Day I
- 9:30: arrival with some coffee
- 9:45 - 12:15: Short talk session #1.
  1. Nicolas Gast: asymptotic methods for stochastic systems (30')
  2. Pedro Bruel: Auto-tuning compiler parameters for FPGA/GPUs: the DoE approach!
  3. Stephan Plassart: fighting state space explosion (in my own small case! ;)
  4. Bruno Gaujal: Optimization and asymptotic models: benefits and pitfalls (30')
  5. Kimon Antonakopoulos: algorithm for finding 0 in non-monotonous operators
  6. Jean-Marc Vincent: Complexity and performance of parallel sorting algorithms
- 12:30 - 14:00: Lunch
- 14:00 - 16:30: Short talk session #2.
  1. Pan: distributed asychronous optimization with unbounded delays: how slow can we go ?
  2. Tom Cornebize: modeling performance of HPC platforms
  3. Amélie Heliou: distributed routing optimization via game dynamics
  4. Umar Ozeer: resiliency in IoT environments
  5. Benoît Vinot, Takai Eddine Kennouche, and Mouhcine Mendil: context, simulation of smart grid communications (30') https://gitlab.inria.fr/bvinot/polaris_meeting_2018
  6. Baptiste Jonglez: modeling and performance analysis DNS 
  7. Arnaud Legrand: Reproducible Research... pfff, why bother ? https://filesender.renater.fr/?s=download&token=b92ae870-32a3-1eb3-a852-e58bb3dff761
- Coffee break
- 16:45 - 17:45: hackaton, learning session in small groups
  1. My first Debian package
  2. Mon journal en org-mode/Mon article reproductible...
  3. Gérer mes campagnes d'expériences/de simulations
  4. Analyse de données en R moderne
  5. Déployer des frameworks NFV et SDN dans des conteneurs sur Grid5000 et FIT/IOT lab
- Recess
- 20:00 - 21:00 : dinner
- Swimming/spaa, board games, drinking, hackathon or learning session for the workaholics ;)

*** [2018-03-06 Tue]
**** POLARIS Day II
- Breakfast between 8:00 and 9:00
- 8:00 - 12:00: Social break in the morning: hiking, skiing ?
  1. http://montagne.lachainemeteo.com/meteo-alpes-du-nord/station-montagne/previsions-meteo-les-sept-laux-176-5.php
- 12:00 - 13:30: lunch
- 13h30 - 16:00: Short talk session #3
  1. Patrick Loiseau: TBA
  2. Guillaume Huard: Management of exascale machines
  3. Bruno Donassolo: service orchestration in fog/IoT environments
  4. Florence, Vincent, Guillaume, Jean-Marc: MARTO (30')
  5. Stéphane Durand: distributed best response dynamics
  6. Jonatha Anselmi: close-up, impressions about the POLARIS team
- Brainstorm, thoughts, time to catch up with lateness from the previous sessions.
- 17:00: going back
*** [2018-03-07 Wed]
**** Meeting with Arnaud, Brice & Fred
- Take a look at the [[https://github.com/tidyverse/broom][broom]] package to generate clean data for ME plots
- Would be interesting to find a way to control the spreading of interaction confounding between factors, dummy parameters
- Is it possible to try to find "good enough" designs by using heuristics in
  Ulrike's approach?
- Read papers on D-optimality and compare to Ulrike's approach
- Brice mentioned that a benchmark for autotuning which gives the full space of optimizations
  could be interesting, specially if multiple architectures were supported
*** [2018-03-08 Thu]
**** Some References on D-Optimal Designs
The following are some references on D-Optimal designs, including more
theoretical books, an R package, and a bachelor's thesis with an interesting
literature review.

- [[http://www.itl.nist.gov/div898/handbook//pri/section5/pri521.htm][This document]] shows a more simplified explanation with examples of construction
- The following two books are much more theory-intensive and might be useful for a
  deeper understanding:

  - [[https://global.oup.com/academic/product/optimum-experimental-designs-9780198522546?cc=fr&lang=en&#][Optimum Experimental Designs (1992)]]
  - [[https://global.oup.com/academic/product/optimum-experimental-designs-with-sas-9780199296590?lang=en&cc=pl][Optimum Experimental Designs, With SAS (2007)]]

- [[http://www8.cs.umu.se/education/examina/Rapporter/FabianTtriefenbach.pdf][This bachelor's thesis]] implements D-Optimal design construction and has a background review
- This [[https://cran.r-project.org/web/packages/AlgDesign/index.html][R package]] implements D-Optimal construction and provides some more detailed discussion of
  the implementation
- [[file:~/Dropbox/papers/design-of-experiments/cook1980comparison.pdf][Cook's paper]] presents a comparison of different algorithms to generate D-Optimal designs
*** [2018-03-09 Fri]
**** Using the ~AlgDesign~ R package                          :R:DOE:Code:
Let's try to generate a design for 5 factors with 10, 3, 4, 2 and 6 levels.
The ~gen.factorial~ function generates the full factorial design for those
factors, which has 1440 runs. Then, the ~optFederov~ function optimizes the
full factorial by selecting columns that minimize a given criterion and model.

In this case we are using the D-optimality criterion and a simple linear model
on all variables:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

variables <- gen.factorial(c(3, 4, 2, 3, 7))

#variables$X3 = as.factor(variables$X3)
#variables$X4 = as.factor(variables$X4)
#variables$X5 = as.factor(variables$X5)
#variables$X1 = as.factor(variables$X1)
#variables$X1 = as.factor(variables$X1)

design <- optFederov(~., variables, criterion = "D")

design
#+END_SRC

#+RESULTS:
#+begin_example
$D
[1] 2.021612

$A
[1] 0.752572

$Ge
[1] 0.545

$Dea
[1] 0.435

$design
    X1 X2 X3 X4 X5
1   -1 -3 -1 -1 -3
15   1 -3  1 -1 -3
24   1  3  1 -1 -3
51   1 -3 -1  1 -3
58  -1  3 -1  1 -3
70  -1  3  1  1 -3
444  1  3 -1 -1  3
445 -1 -3  1 -1  3
483  1 -3 -1  1  3
493 -1 -3  1  1  3
504  1  3  1  1  3

$rows
 [1]   1  15  24  51  58  70 444 445 483 493 504
#+end_example

We can also get a small design for multi-level factors using
a more complicated model:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
variables <- NULL

variables <- gen.factorial(c(10,3,4,2,6))

design <- NULL

design <- optFederov(~ X1 * X2 + X3 + X4 * X5 + I(X1^2), variables, criterion = "D")

design
#+END_SRC

#+RESULTS:
#+begin_example
$D
[1] 13.83505

$A
[1] 0.6656281

$Ge
[1] 0.691

$Dea
[1] 0.64

$design
     X1 X2 X3 X4 X5
21   -9  1 -3 -1 -5
96    1 -1  3 -1 -5
120   9  1  3 -1 -5
121  -9 -1 -3  1 -5
146   1  1 -3  1 -5
220   9 -1  3  1 -5
231  -9  1  3  1 -5
1205 -1 -1 -3 -1  5
1311 -9  1  3 -1  5
1320  9  1  3 -1  5
1330  9 -1 -3  1  5
1350  9  1 -3  1  5
1411 -9 -1  3  1  5
1435 -1  1  3  1  5

$rows
 [1]   21   96  120  121  146  220  231 1205 1311 1320 1330 1350 1411 1435
#+end_example

Now let's try generating larger designs, with a simple model and
with 25 factors with up to 5 levels:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
variables <- NULL

variables <- gen.factorial(sample(1:5, 25, replace = T))

variables

design <- NULL

design <- optFederov(~. , variables, criterion = "D")


design
#+END_SRC

#+RESULTS:
: Error: cannot allocate vector of size 130.4 Gb
: NULL
: Error in terms.formula(object, data = data) : 
:   '.' in formula and no 'data' argument
: NULL

The current implementation of this approach seems to have certain non-trivial
memory limitations. If the full factorial design would take this much memory --
130.4 Gb! (it varies) -- for a design not that large, maybe the method is not
applicable to our case.

A possible solution to this would be to implement a kind of iterator wrapper for the
full factorial design, that is, a function that receives a design specification, with
factors and levels, and a row number, and returns the computed value of that row. 

**** Generating Arbitrary Rows of Full Factorial Designs
The following snippet generates a specific row of a full factorial design with
given factors with different levels. I will keep this around for the future.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function generate_factorial(variables, run)
    if run > prod(variables)
        return Array{Int, 1}()
    end

    row = Array{Int, 1}(length(variables))

    for j = 1:length(variables)
        row[j] = run % variables[j]
        run = div(run, variables[j])
    end

    row
end

variables = [10, 5, 2, 5]

design = generate_factorial(variables, 66)

#+END_SRC

#+RESULTS:
#+begin_example
generate_factorial (generic function with 2 methods)

4-element Array{Int64,1}:
 10
  5
  2
  5

4-element Array{Int64,1}:
 6
 1
 1
 0
#+end_example
**** Reading Triefenbach's Bachelor Thesis on D-Optimal Designs
The [[http://www8.cs.umu.se/education/examina/Rapporter/FabianTtriefenbach.pdf][thesis]] presents some of the theory behind D-Optimal Designs in a simple way.
It discusses a modification to the model matrix that enables constructing less
model-dependent D-Optimal designs, but does not details why this "Bayesian
modification" helps.

Constructing D-Optimal designs seems to be the most straightforward way of
generating large multi-level designs I have found so far. In theory, it is
possible to generate designs of any number of runs, with any number of factors
with any number of different levels. At first, it seems that this is the best
candidate so far.

In practice, even though the tools from ~AlgDesign~ generate designs for
arbitrary numbers of factors and levels, that implementation does not work for
even slightly larger designs. I believe this happens due to implementation
choices and not "theoretical" or algorithmic limitations.

***** Constructing D-Optimal Designs
A D-Optimal design is a selection from a set of possible experiments that
minimizes some optimality criterion.

For example, imagine we have a full factorial design. We decide that we want
to analyse this design using a "simple linear model", such as =~.=. Therefore,
the *set of possible experiments*, or *model matrix* for this experiment is
obtained by adding a column of ones to the original full factorial design. If we
had interations, quadratic terms, and so on, we would simply compute the
correspondent columns using original columns in the original design.

With the model matrix defined, the criterion of our D-Optimal design could be
minimizing the determinant of the *information matrix*. This new matrix is
defined by multiplying the previously generated model matrix by its inverse.

Now, the hard part is finding a selection of experiments from the *model matrix*
that minimizes the determinant of the *information matrix*. Common algorithms
for this task seem to be pretty straightforward, relying on swapping columns of
an existing matrix with columns in the possible runs and measuring changes in
the determinant. 
*** [2018-03-12 Mon]
**** JSSPP '18 Paper Review for Alfredo                    :PaperReview:
*Paper Title*: Reducing the Human-in-the-Loop Component of the Scheduling of
               Large HTC Workloads
***** Summary
The paper presents a real-world case study on the impact of three important
decisions regarding transfering actions performed by human operators to the
CC-IN2P3 job scheduler, or removing the necessity of those actions.

The paper details the CC-IN2P3 infrastructure, executed workloads and resource
allocation procedure. Then the paper presents and discusses the impact of three
modifications to reduce the reliance on human operators in the scheduling
policy, regarding partitioning of resources, simplifying quota mechanisms and
improving the fair-sharing computation.

The paper is well written and presents valuable insight into decisions and their
impacts in a real-world large HTC scenario. I believe this case study can be
useful for the research community because it helps painting a picture of
important issues and what is being done to overcome them. However, I also
believe that the discussion on this paper would benefit from some data that
showed the impact of the applied changes over the observed time, although I am
not sure if the CC-IN2P3's data sharing policies would restrict that.

***** Minor Corrections
- At the last paragraph of the third page, and at
  the second paragraph of Section 4:
  "transfer some the actions" ~> "transfer some of the actions"

**** Continue Reading Bachelor Thesis on D-Optimal Designs
[[https://www.amazon.com/Experiments-Principles-Applications-Kettaneh-Wold-Johansson/dp/9197373001][This book]] is cited frequently in the [[http://www8.cs.umu.se/education/examina/Rapporter/FabianTtriefenbach.pdf][thesis]].

***** Some Criteria for D-Optimal Designs
- D-Optimal: maximize the determinant of the information matrix ($(X'X)$)
- A-Optimal: minimize the trace of the dispersion matrix ($(X'X)^{-1}$)
- G-Efficiency: measures the "efficiency" of a D-Optimal designs, in comparison to a
  fractional factorial design, using the number of runs, model coefficients
- [[https://en.wikipedia.org/wiki/Condition_number][Condition Number]]: in this case, measures the orthogonality of a design. A condition number of 1
  indicates an orthogonal design. The orthogonality decreases as the condition
  number increases
  
**** Extended D-Optimal Example for 2 Factors with 3 Levels
This is an example extended from the bachelor thesis. The idea is to compute the
D, A and Condition Number criteria for all subsets of design candidates obtained
from a model matrix. The model matrix must be generated from a full factorial
experiment and a formula specifying the model we want to fit.

First, let's import dependencies:

#+NAME: dopt_init_dependencies
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using IterTools, DataFrames, StatsBase
#+END_SRC

#+RESULTS: dopt_init_dependencies

Now, let's define function to generate a full factorial experiment, extract
model variables from a formula and generate a model matrix according to a given
formula. These functions generate model matrices containing interactions between
factors, and including and excluding factors, but not for quadratic or cubic
terms:

#+NAME: dopt_model_matrix
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function generate_full_factorial(factors::Array)
    design = [collect(t) for t in product(factors...)]
    design = vcat([row' for row in design]...)
    design = DataFrame(design)
    println(size(design))
    return design
end

function get_model_variables(formula::DataFrames.Formula)
    variables = Array{Any, 1}()
    push!(variables, DataFrames.Terms(formula).terms...)
    return variables
end

function scale_orthogonal!(design::Array{Float64, 2})
    design_range = (max(design[:,]...) + min(design[:,]...)) / 2

    for i = 1:size(design, 2)
        factor_range = (max(design[:, i]...) - min(design[:, i]...)) / 2
        design[:, i] = (design[:, i] - design_range) / factor_range
    end
    
    return design
end

function generate_model_matrix(formula::DataFrames.Formula, design::DataFrame)
    variables = get_model_variables(formula)
    design = DataFrame(scale_orthogonal!(Array{Float64, 2}(design)))
    new_design = DataFrame(I = ones(size(design, 1)))

    for variable in variables
        if typeof(variable) == Expr && variable.args[1] == :&
            interaction = Symbol(variable.args[2:end]...)
            new_design[interaction] = ones(size(design, 1))

            for s in variable.args[2:end]
                new_design[interaction] .*= design[s]
            end
        else
            new_design[variable] = float(design[variable])
        end
    end

    return new_design
end
#+END_SRC

#+RESULTS: dopt_model_matrix
: generate_full_factorial (generic function with 1 method)
: 
: get_model_variables (generic function with 1 method)
: 
: scale_orthogonal! (generic function with 1 method)
: 
: generate_model_matrix (generic function with 1 method)

Now we define functions computing the D, A and Condition Number optimality
criteria of a given experimental design:

#+NAME: dopt_criteria
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function d_optimality(model_matrix::Array{Float64, 2})
    return det(model_matrix' * model_matrix)
end

function a_optimality(model_matrix::Array{Float64, 2})
    try
        return trace(inv(model_matrix' * model_matrix))
    catch exception
        return 0.0
    end
    
end

function get_prediction_variances(model_matrix::Array{Float64, 2})
    try
        dispersion_matrix = inv(model_matrix' * model_matrix)

        rows = size(dispersion_matrix, 1)

        prediction_variances = [dispersion_matrix[i, :]' * dispersion_matrix *
                                dispersion_matrix[i, :] for i = 1:rows]

        return prediction_variances
    catch exception
        return Inf
    end
end

function v_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)

    if prediction_variances == Inf
        return 0.0
    else
        rows = size(model_matrix, 1)
        return sum(prediction_variances) / rows    
    end
end

function g_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)

    if prediction_variances == Inf
        return 0.0
    else
        return max(prediction_variances...)
    end
end

function g_efficiency(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)

    if prediction_variances == Inf
        return 0.0
    else
        max_variance = max(prediction_variances...)
        
        return 100.0 * (size(model_matrix, 2)/(size(model_matrix, 1) * max_variance))
    end
end

function condition_number(model_matrix::Array{Float64, 2})
    condition_number = cond(model_matrix)
    
    if condition_number == Inf
        return 0.0
    else
        return condition_number
    end
end
#+END_SRC

#+RESULTS: dopt_criteria
#+begin_example
d_optimality (generic function with 1 method)

a_optimality (generic function with 1 method)

get_prediction_variances (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

condition_number (generic function with 1 method)
#+end_example

Now we can define functions to compute all criteria and store them
in a table:

#+NAME: dopt_candidates
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function evaluate_candidates(model_matrix::DataFrame, candidates::Array)
    candidate = Array(model_matrix[candidates[1], :])

    evaluation = DataFrame(Rows = [join(candidates[1], "_")],
                           Length = [length(candidates[1])],
                           D = [d_optimality(candidate)],
                           A = [a_optimality(candidate)],
                           V = [v_optimality(candidate)],
                           G = [g_optimality(candidate)],
                           GE = [g_efficiency(candidate)],
                           CN = [condition_number(candidate)])

    for rows in candidates[2:end]
        candidate = Array(model_matrix[rows, :])
        push!(evaluation, [join(rows, "_"),
                           length(rows),
                           d_optimality(candidate),
                           a_optimality(candidate),
                           v_optimality(candidate),
                           g_optimality(candidate),
                           g_efficiency(candidate),
                           condition_number(candidate)])
    end

    return evaluation
end

function generate_evaluation_table(model_matrix::DataFrame, max_candidates::Int, runs::Int)
    candidates = collect(subsets(1:size(model_matrix, 1), runs))

    if max_candidates != 0
        candidates = candidates[sample(1:length(candidates),
                                       max_candidates,
                                       replace = false)]
    end

    evaluate_candidates(model_matrix, candidates)
end

function generate_evaluation_table(model_matrix::DataFrame, max_candidates::Int)
    all_candidates = subsets(1:size(model_matrix, 1))

    selected_candidates = []

    if max_candidates != 0
        select_probability = 0.005

        while length(selected_candidates) < max_candidates
            for candidate in all_candidates
                if rand() > select_probability || candidate == [] || candidate in selected_candidates
                    continue
                else
                    push!(selected_candidates, candidate)
                    if length(selected_candidates) == max_candidates
                        break
                    end
                end
            end
        end
    else
        selected_candidates = collect(all_candidates)[2:end]
    end

    evaluate_candidates(model_matrix, selected_candidates)
end
#+END_SRC

#+RESULTS: dopt_candidates
: evaluate_candidates (generic function with 1 method)
: 
: generate_evaluation_table (generic function with 2 methods)
: 
: generate_evaluation_table (generic function with 2 methods)

Finally, we define a function that receives a factor specification, in
the form of an array, a formula, and optionally a number of runs, and
computes an optimal criteria table for all candidate designs:

#+NAME: dopt_measure
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function measure_designs(factors::Array, formula::DataFrames.Formula; runs::Int = 0,
                         max_candidates::Int = 0)
    design = generate_full_factorial(factors)
    model_matrix = generate_model_matrix(formula, design)

    if runs != 0
        evaluation_table = generate_evaluation_table(model_matrix, max_candidates, runs)
    else
        evaluation_table = generate_evaluation_table(model_matrix, max_candidates)
    end

    return model_matrix, evaluation_table
end
#+END_SRC

#+RESULTS: dopt_measure
: measure_designs (generic function with 3 methods)

Now we can replicate the results from the thesis:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function run()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 + x2)

    runs = 3

    model_matrix, evaluation_table = measure_designs(factors, formula, runs = runs)

    println(model_matrix)

    println(head(sort(evaluation_table, cols = :D, rev = true), 13))
    println(tail(sort(evaluation_table, cols = :D, rev = true), 13))
end

run()
#+END_SRC

#+RESULTS:
#+begin_example
run (generic function with 1 method)

9×3 DataFrames.DataFrame
│ Row │ I   │ x1   │ x2   │
├─────┼─────┼──────┼──────┤
│ 1   │ 1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0 │ 0.0  │ -1.0 │
│ 3   │ 1.0 │ 1.0  │ -1.0 │
│ 4   │ 1.0 │ -1.0 │ 0.0  │
│ 5   │ 1.0 │ 0.0  │ 0.0  │
│ 6   │ 1.0 │ 1.0  │ 0.0  │
│ 7   │ 1.0 │ -1.0 │ 1.0  │
│ 8   │ 1.0 │ 0.0  │ 1.0  │
│ 9   │ 1.0 │ 1.0  │ 1.0  │
13×8 DataFrames.DataFrame
│ Row │ Rows    │ Length │ D    │ A       │ V         │ G        │ GE      │ CN      │
├─────┼─────────┼────────┼──────┼─────────┼───────────┼──────────┼─────────┼─────────┤
│ 1   │ "1_3_7" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909 │ 2.0     │
│ 2   │ "1_3_8" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0   │ 1.41421 │
│ 3   │ "1_3_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909 │ 2.0     │
│ 4   │ "1_6_7" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0   │ 1.41421 │
│ 5   │ "1_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909 │ 2.0     │
│ 6   │ "2_7_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0   │ 1.41421 │
│ 7   │ "3_4_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0   │ 1.41421 │
│ 8   │ "3_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909 │ 2.0     │
│ 9   │ "1_6_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857 │ 1.73205 │
│ 10  │ "2_4_9" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857 │ 1.73205 │
│ 11  │ "2_6_7" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857 │ 1.73205 │
│ 12  │ "3_4_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857 │ 1.73205 │
│ 13  │ "1_2_7" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438 │ 4.10676 │
13×8 DataFrames.DataFrame
│ Row │ Rows    │ Length │ D   │ A   │ V       │ G    │ GE      │ CN      │
├─────┼─────────┼────────┼─────┼─────┼─────────┼──────┼─────────┼─────────┤
│ 1   │ "4_5_8" │ 3      │ 1.0 │ 5.0 │ 17.6667 │ 21.0 │ 4.7619  │ 3.73205 │
│ 2   │ "5_6_8" │ 3      │ 1.0 │ 5.0 │ 17.6667 │ 21.0 │ 4.7619  │ 3.73205 │
│ 3   │ "5_6_9" │ 3      │ 1.0 │ 5.0 │ 12.6667 │ 19.0 │ 5.26316 │ 4.04892 │
│ 4   │ "5_7_8" │ 3      │ 1.0 │ 5.0 │ 12.6667 │ 19.0 │ 5.26316 │ 4.04892 │
│ 5   │ "5_8_9" │ 3      │ 1.0 │ 5.0 │ 12.6667 │ 19.0 │ 5.26316 │ 4.04892 │
│ 6   │ "1_2_3" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
│ 7   │ "1_4_7" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
│ 8   │ "1_5_9" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
│ 9   │ "2_5_8" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
│ 10  │ "3_5_7" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
│ 11  │ "3_6_9" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
│ 12  │ "4_5_6" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
│ 13  │ "7_8_9" │ 3      │ 0.0 │ Inf │ Inf     │ Inf  │ 0.0     │ Inf     │
#+end_example

We can check for the behaviour of some other metrics. Note that for this model
there are no orthogonal designs, as measured by the Condition Number:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function run()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 + x2)

    runs = 3

    model_matrix, evaluation_table = measure_designs(factors, formula, runs = runs)

    println(sort(evaluation_table, cols = :A))
    println(sort(evaluation_table, cols = :CN))
end

run()
#+END_SRC

#+RESULTS:
#+begin_example
run (generic function with 1 method)

84×8 DataFrames.DataFrame
│ Row │ Rows    │ Length │ D    │ A       │ V         │ G        │ GE       │ CN      │
├─────┼─────────┼────────┼──────┼─────────┼───────────┼──────────┼──────────┼─────────┤
│ 1   │ "1_3_8" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 2   │ "1_6_7" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 3   │ "2_7_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 4   │ "3_4_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 5   │ "1_3_7" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 6   │ "1_3_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 7   │ "1_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 8   │ "3_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 9   │ "1_6_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 10  │ "2_4_9" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 11  │ "2_6_7" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 12  │ "3_4_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 13  │ "2_4_6" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 14  │ "2_4_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 15  │ "2_6_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 16  │ "4_6_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 17  │ "1_2_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 18  │ "1_3_5" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 19  │ "1_5_7" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 20  │ "2_3_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 21  │ "2_7_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 22  │ "2_8_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 23  │ "3_5_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 24  │ "5_7_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 25  │ "1_4_6" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 26  │ "3_4_6" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 27  │ "4_6_7" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 28  │ "4_6_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
⋮
│ 56  │ "5_8_9" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 57  │ "1_2_4" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 58  │ "2_3_6" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 59  │ "4_7_8" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 60  │ "6_8_9" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 61  │ "1_5_6" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 62  │ "1_5_8" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 63  │ "2_5_7" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 64  │ "2_5_9" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 65  │ "3_4_5" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 66  │ "3_5_8" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 67  │ "4_5_9" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 68  │ "5_6_7" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 69  │ "1_2_6" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 70  │ "1_4_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 71  │ "2_3_4" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 72  │ "2_4_7" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 73  │ "2_6_9" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 74  │ "3_6_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 75  │ "4_8_9" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 76  │ "6_7_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 77  │ "1_2_3" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 78  │ "1_4_7" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 79  │ "1_5_9" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 80  │ "2_5_8" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 81  │ "3_5_7" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 82  │ "3_6_9" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 83  │ "4_5_6" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 84  │ "7_8_9" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
84×8 DataFrames.DataFrame
│ Row │ Rows    │ Length │ D    │ A       │ V         │ G        │ GE       │ CN      │
├─────┼─────────┼────────┼──────┼─────────┼───────────┼──────────┼──────────┼─────────┤
│ 1   │ "1_3_8" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 2   │ "1_6_7" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 3   │ "3_4_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 4   │ "2_7_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 5   │ "2_4_9" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 6   │ "2_6_7" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 7   │ "1_6_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 8   │ "3_4_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 9   │ "1_3_7" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 10  │ "1_3_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 11  │ "1_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 12  │ "3_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 13  │ "2_4_6" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 14  │ "2_4_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 15  │ "2_6_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 16  │ "4_6_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 17  │ "2_3_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 18  │ "2_7_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 19  │ "4_6_7" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 20  │ "4_6_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 21  │ "1_2_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 22  │ "1_3_5" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 23  │ "1_4_6" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 24  │ "1_5_7" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 25  │ "2_8_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 26  │ "3_4_6" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 27  │ "3_5_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 28  │ "5_7_9" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
⋮
│ 56  │ "3_6_7" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 57  │ "1_5_6" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 58  │ "3_4_5" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 59  │ "1_5_8" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 60  │ "3_5_8" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 61  │ "5_6_7" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 62  │ "2_5_7" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 63  │ "2_5_9" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 64  │ "4_5_9" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 65  │ "2_3_6" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 66  │ "1_2_4" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 67  │ "4_7_8" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 68  │ "6_8_9" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 69  │ "6_7_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 70  │ "2_4_7" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 71  │ "2_6_9" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 72  │ "4_8_9" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 73  │ "1_2_6" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 74  │ "1_4_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 75  │ "3_6_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 76  │ "2_3_4" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 77  │ "1_2_3" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 78  │ "1_4_7" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 79  │ "1_5_9" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 80  │ "2_5_8" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 81  │ "3_5_7" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 82  │ "3_6_9" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 83  │ "4_5_6" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
│ 84  │ "7_8_9" │ 3      │ 0.0  │ Inf     │ Inf       │ Inf      │ 0.0      │ Inf     │
#+end_example

Let's compute the metrics for all designs without run length limitation.
We now get the best determinant possible (all runs), but also some non-trivial
orthogonal designs:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function run()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 + x2)

    model_matrix, evaluation_table = measure_designs(factors, formula)

    println(sort(evaluation_table, cols = :D, rev = true))
    println(sort(evaluation_table, cols = :A))
    println(sort(evaluation_table, cols = :CN))
    println(sort(evaluation_table, cols = (:D, :CN), rev = (true, false)))
end

run()
#+END_SRC

#+RESULTS:
#+begin_example
run (generic function with 1 method)

511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D     │ A        │ V          │ G          │ GE      │ CN      │
├─────┼─────────────────────┼────────┼───────┼──────────┼────────────┼────────────┼─────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 324.0 │ 0.444444 │ 0.00118122 │ 0.00462963 │ 7200.0  │ 1.22474 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 288.0 │ 0.458333 │ 0.00140155 │ 0.00462963 │ 8100.0  │ 1.1547  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 5   │ "1_2_3_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 6   │ "1_3_4_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 7   │ "1_2_3_4_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 8   │ "1_2_3_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 9   │ "1_2_3_4_6_7_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 10  │ "1_3_4_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 11  │ "1_2_3_4_5_6_7_8"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 12  │ "1_2_3_4_5_6_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 13  │ "1_2_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 14  │ "2_3_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 15  │ "1_3_4_5_6_7_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 16  │ "1_2_3_5_7_8_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 17  │ "1_2_3_4_5_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 18  │ "1_2_3_5_6_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 19  │ "1_3_4_5_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 20  │ "1_3_5_6_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 21  │ "1_2_3_4_6_7_8"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 22  │ "1_2_3_4_6_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 23  │ "1_2_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 24  │ "2_3_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 25  │ "1_3_4_6_7_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 26  │ "1_2_3_7_8_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 27  │ "1_2_3_4_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
│ 28  │ "1_2_3_6_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
⋮
│ 483 │ "1_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 484 │ "2_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 485 │ "3_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 486 │ "4_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 487 │ "1_4_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 488 │ "5_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 489 │ "3_5_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 490 │ "6_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 491 │ "8"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 492 │ "1_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 493 │ "2_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 494 │ "3_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 495 │ "4_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 496 │ "5_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.61803 │
│ 497 │ "2_5_8"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 498 │ "6_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 499 │ "7_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 500 │ "9"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 501 │ "1_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 502 │ "2_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 503 │ "3_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 504 │ "4_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 505 │ "5_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 506 │ "1_5_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 507 │ "6_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 508 │ "3_6_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 509 │ "7_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 510 │ "8_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 511 │ "7_8_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D     │ A        │ V          │ G          │ GE      │ CN      │
├─────┼─────────────────────┼────────┼───────┼──────────┼────────────┼────────────┼─────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 324.0 │ 0.444444 │ 0.00118122 │ 0.00462963 │ 7200.0  │ 1.22474 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 288.0 │ 0.458333 │ 0.00140155 │ 0.00462963 │ 8100.0  │ 1.1547  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 4   │ "1_3_4_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 5   │ "1_2_3_4_5_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 6   │ "1_2_3_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 7   │ "1_2_3_4_6_7_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 8   │ "1_2_3_4_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 9   │ "1_2_3_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 10  │ "1_3_4_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 11  │ "1_3_4_5_6_7_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 12  │ "1_2_3_5_7_8_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 13  │ "1_2_3_4_5_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 14  │ "1_2_3_5_6_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 15  │ "1_3_4_5_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 16  │ "1_3_5_6_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 17  │ "1_2_3_4_5_6_7_8"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 18  │ "1_2_3_4_5_6_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 19  │ "1_2_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 20  │ "2_3_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 21  │ "1_3_4_6_7_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 22  │ "1_2_3_7_8_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 23  │ "1_2_3_4_6_7_8"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 24  │ "1_2_3_4_6_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 25  │ "1_2_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 26  │ "2_3_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 27  │ "1_2_3_4_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
│ 28  │ "1_2_3_6_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
⋮
│ 483 │ "1_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 484 │ "2_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 485 │ "3_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 486 │ "4_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 487 │ "1_4_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 488 │ "5_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 489 │ "3_5_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 490 │ "6_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 491 │ "8"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 492 │ "1_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 493 │ "2_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 494 │ "3_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 495 │ "4_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 496 │ "5_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.61803 │
│ 497 │ "2_5_8"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 498 │ "6_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 499 │ "7_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 500 │ "9"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 501 │ "1_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 502 │ "2_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 503 │ "3_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 504 │ "4_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 505 │ "5_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 506 │ "1_5_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 507 │ "6_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 508 │ "3_6_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 509 │ "7_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 510 │ "8_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 511 │ "7_8_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D     │ A        │ V          │ G          │ GE       │ CN      │
├─────┼─────────────────────┼────────┼───────┼──────────┼────────────┼────────────┼──────────┼─────────┤
│ 1   │ "1"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 2   │ "2"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 3   │ "3"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 4   │ "4"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 5   │ "5"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 6   │ "6"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 7   │ "7"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 8   │ "8"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 9   │ "9"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 10  │ "1_3_7_9"           │ 4      │ 64.0  │ 0.75     │ 0.0117188  │ 0.015625   │ 4800.0   │ 1.0     │
│ 11  │ "4_6"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 12  │ "2_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.0     │
│ 13  │ "1_3_5_7_9"         │ 5      │ 80.0  │ 0.7      │ 0.00785    │ 0.015625   │ 3840.0   │ 1.11803 │
│ 14  │ "1_2_3_4_6_7_8_9"   │ 8      │ 288.0 │ 0.458333 │ 0.00140155 │ 0.00462963 │ 8100.0   │ 1.1547  │
│ 15  │ "2_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 16  │ "6_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 17  │ "2_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 18  │ "4_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 19  │ "1_3_4_7_9"         │ 5      │ 96.0  │ 0.666667 │ 0.00717593 │ 0.015625   │ 3840.0   │ 1.22474 │
│ 20  │ "1_3_6_7_9"         │ 5      │ 96.0  │ 0.666667 │ 0.00717593 │ 0.015625   │ 3840.0   │ 1.22474 │
│ 21  │ "1_3_4_6_7_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0   │ 1.22474 │
│ 22  │ "1_3_7_8_9"         │ 5      │ 96.0  │ 0.666667 │ 0.00717593 │ 0.015625   │ 3840.0   │ 1.22474 │
│ 23  │ "3_4"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 24  │ "1_6"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 25  │ "1_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 26  │ "3_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ 1.22474 │
│ 27  │ "1_2_3_7_9"         │ 5      │ 96.0  │ 0.666667 │ 0.00717593 │ 0.015625   │ 3840.0   │ 1.22474 │
│ 28  │ "1_2_3_4_5_6_7_8_9" │ 9      │ 324.0 │ 0.444444 │ 0.00118122 │ 0.00462963 │ 7200.0   │ 1.22474 │
⋮
│ 483 │ "6_7_8_9"           │ 4      │ 6.0   │ 3.83333  │ 9.41551    │ 19.5787    │ 3.83069  │ 4.73872 │
│ 484 │ "3_4_5"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 485 │ "1_5_6"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 486 │ "1_5_8"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 487 │ "3_5_8"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 488 │ "5_6_7"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 489 │ "2_5_7"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 490 │ "2_5_9"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 491 │ "4_5_9"             │ 3      │ 1.0   │ 9.0      │ 190.0      │ 406.0      │ 0.246305 │ 5.41147 │
│ 492 │ "2_3_6"             │ 3      │ 1.0   │ 7.0      │ 66.3333    │ 99.0       │ 1.0101   │ 5.82843 │
│ 493 │ "1_2_4"             │ 3      │ 1.0   │ 7.0      │ 66.3333    │ 99.0       │ 1.0101   │ 5.82843 │
│ 494 │ "4_7_8"             │ 3      │ 1.0   │ 7.0      │ 66.3333    │ 99.0       │ 1.0101   │ 5.82843 │
│ 495 │ "6_8_9"             │ 3      │ 1.0   │ 7.0      │ 66.3333    │ 99.0       │ 1.0101   │ 5.82843 │
│ 496 │ "6_7_8"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 497 │ "2_4_7"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 498 │ "2_6_9"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 499 │ "4_8_9"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 500 │ "1_2_6"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 501 │ "1_4_8"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 502 │ "3_6_8"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 503 │ "2_3_4"             │ 3      │ 1.0   │ 11.0     │ 367.667    │ 630.0      │ 0.15873  │ 6.97535 │
│ 504 │ "1_2_3"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
│ 505 │ "4_5_6"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
│ 506 │ "1_4_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
│ 507 │ "3_5_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
│ 508 │ "2_5_8"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
│ 509 │ "1_5_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
│ 510 │ "3_6_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
│ 511 │ "7_8_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0      │ Inf     │
511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D     │ A        │ V          │ G          │ GE      │ CN      │
├─────┼─────────────────────┼────────┼───────┼──────────┼────────────┼────────────┼─────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 324.0 │ 0.444444 │ 0.00118122 │ 0.00462963 │ 7200.0  │ 1.22474 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 288.0 │ 0.458333 │ 0.00140155 │ 0.00462963 │ 8100.0  │ 1.1547  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 5   │ "1_2_3_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 6   │ "1_3_4_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 7   │ "1_2_3_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 8   │ "1_2_3_4_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 9   │ "1_3_4_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 10  │ "1_2_3_4_6_7_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 11  │ "1_2_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 12  │ "1_2_3_4_5_6_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 13  │ "2_3_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 14  │ "1_2_3_4_5_6_7_8"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 15  │ "1_3_4_5_6_7_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 16  │ "1_2_3_5_7_8_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 17  │ "1_2_3_5_6_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 18  │ "1_3_5_6_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 19  │ "1_2_3_4_5_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 20  │ "1_3_4_5_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 21  │ "1_2_3_4_6_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 22  │ "1_2_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 23  │ "2_3_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 24  │ "1_2_3_4_6_7_8"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 25  │ "1_3_4_6_7_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 26  │ "1_2_3_7_8_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 27  │ "1_2_3_4_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
│ 28  │ "1_2_3_6_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
⋮
│ 483 │ "1_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 484 │ "2_4"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 485 │ "2_6"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 486 │ "4_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 487 │ "6_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 488 │ "1_5"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 489 │ "3_5"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 490 │ "5_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 491 │ "5_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 492 │ "2_5"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.61803 │
│ 493 │ "4_5"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.61803 │
│ 494 │ "5_6"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.61803 │
│ 495 │ "5_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.61803 │
│ 496 │ "2_3"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 497 │ "4_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 498 │ "6_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 499 │ "8_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 500 │ "1_2"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 501 │ "1_4"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 502 │ "3_6"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 503 │ "7_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 504 │ "1_2_3"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 505 │ "4_5_6"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 506 │ "1_4_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 507 │ "3_5_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 508 │ "2_5_8"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 509 │ "1_5_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 510 │ "3_6_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 511 │ "7_8_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
#+end_example

We can add the interaction term and do the same analysis:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function run()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 * x2)

    model_matrix, evaluation_table = measure_designs(factors, formula)

    println(sort(evaluation_table, cols = :D, rev = true))
    println(sort(evaluation_table, cols = :A))
    println(sort(evaluation_table, cols = :CN))
    println(sort(evaluation_table, cols = (:D, :CN), rev = (true, false)))
end

run()
#+END_SRC

#+RESULTS:
#+begin_example
run (generic function with 1 method)

511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D      │ A        │ V          │ G        │ GE      │
├─────┼─────────────────────┼────────┼────────┼──────────┼────────────┼──────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 1296.0 │ 0.694444 │ 0.00291733 │ 0.015625 │ 2844.44 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 1152.0 │ 0.708333 │ 0.00335467 │ 0.015625 │ 3200.0  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 5   │ "1_2_3_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 6   │ "1_3_4_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 7   │ "1_2_3_4_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 8   │ "1_2_3_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 9   │ "1_2_3_4_6_7_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 10  │ "1_3_4_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 11  │ "1_3_4_5_6_7_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 12  │ "1_2_3_5_7_8_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 13  │ "1_2_3_4_5_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 14  │ "1_2_3_5_6_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 15  │ "1_3_4_5_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 16  │ "1_3_5_6_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 17  │ "1_3_4_6_7_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 18  │ "1_2_3_7_8_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 19  │ "1_2_3_4_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 20  │ "1_2_3_6_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 21  │ "1_3_4_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 22  │ "1_3_6_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 23  │ "1_2_3_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 24  │ "1_3_4_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 25  │ "1_3_5_6_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 26  │ "1_3_5_7_8_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 27  │ "1_2_3_4_5_6_7_8"   │ 8      │ 396.0  │ 1.12121  │ 0.0336248  │ 0.152454 │ 327.967 │
│ 28  │ "1_2_3_4_5_6_8_9"   │ 8      │ 396.0  │ 1.12121  │ 0.0336248  │ 0.152454 │ 327.967 │
⋮
│ 483 │ "3_4_5_6_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 484 │ "7_9"               │ 2      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 485 │ "1_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 486 │ "2_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 487 │ "3_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 488 │ "4_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 489 │ "1_4_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 490 │ "5_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 491 │ "2_5_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 492 │ "6_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 493 │ "3_6_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 494 │ "8_9"               │ 2      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 495 │ "1_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 496 │ "2_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 497 │ "3_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 498 │ "1_4_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 499 │ "5_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 500 │ "2_5_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 501 │ "3_6_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 502 │ "7_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 503 │ "1_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 504 │ "2_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 505 │ "3_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 506 │ "4_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 507 │ "1_4_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 508 │ "5_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 509 │ "2_5_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 510 │ "6_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 511 │ "3_6_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │

│ Row │ CN         │
├─────┼────────────┤
│ 1   │ 1.5        │
│ 2   │ 1.41421    │
│ 3   │ 1.44073    │
│ 4   │ 1.44073    │
│ 5   │ 1.44073    │
│ 6   │ 1.44073    │
│ 7   │ 1.36145    │
│ 8   │ 1.36145    │
│ 9   │ 1.36145    │
│ 10  │ 1.36145    │
│ 11  │ 1.32288    │
│ 12  │ 1.32288    │
│ 13  │ 1.39033    │
│ 14  │ 1.39033    │
│ 15  │ 1.39033    │
│ 16  │ 1.39033    │
│ 17  │ 1.22474    │
│ 18  │ 1.22474    │
│ 19  │ 1.32288    │
│ 20  │ 1.32288    │
│ 21  │ 1.32288    │
│ 22  │ 1.32288    │
│ 23  │ 1.28628    │
│ 24  │ 1.28628    │
│ 25  │ 1.28628    │
│ 26  │ 1.28628    │
│ 27  │ 2.32133    │
│ 28  │ 2.32133    │
⋮
│ 483 │ 3.78664e16 │
│ 484 │ 1.0        │
│ 485 │ 1.0        │
│ 486 │ 1.41421    │
│ 487 │ 1.0        │
│ 488 │ 2.61803    │
│ 489 │ 8.44731e16 │
│ 490 │ 3.2255     │
│ 491 │ 4.08063e16 │
│ 492 │ 2.61803    │
│ 493 │ Inf        │
│ 494 │ 2.61803    │
│ 495 │ 2.61803    │
│ 496 │ 2.61803    │
│ 497 │ 2.61803    │
│ 498 │ 8.31037e16 │
│ 499 │ 3.99215    │
│ 500 │ 5.27693e18 │
│ 501 │ 7.39829e16 │
│ 502 │ 2.41689e16 │
│ 503 │ 3.95624e16 │
│ 504 │ Inf        │
│ 505 │ 8.05709e16 │
│ 506 │ 3.69914e16 │
│ 507 │ 2.274e16   │
│ 508 │ Inf        │
│ 509 │ 2.17225e16 │
│ 510 │ 3.69914e16 │
│ 511 │ 2.274e16   │
511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D      │ A        │ V          │ G        │ GE      │
├─────┼─────────────────────┼────────┼────────┼──────────┼────────────┼──────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 1296.0 │ 0.694444 │ 0.00291733 │ 0.015625 │ 2844.44 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 1152.0 │ 0.708333 │ 0.00335467 │ 0.015625 │ 3200.0  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 5   │ "1_2_3_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 6   │ "1_3_4_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 7   │ "1_2_3_4_6_7_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 8   │ "1_2_3_4_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 9   │ "1_2_3_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 10  │ "1_3_4_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 11  │ "1_3_4_5_6_7_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 12  │ "1_2_3_5_7_8_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 13  │ "1_2_3_4_5_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 14  │ "1_2_3_5_6_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 15  │ "1_3_4_5_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 16  │ "1_3_5_6_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 17  │ "1_3_4_6_7_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 18  │ "1_2_3_7_8_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 19  │ "1_2_3_4_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 20  │ "1_2_3_6_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 21  │ "1_3_4_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 22  │ "1_3_6_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 23  │ "1_3_4_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 24  │ "1_3_5_6_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 25  │ "1_2_3_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 26  │ "1_3_5_7_8_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 27  │ "1_2_3_7_9"         │ 5      │ 384.0  │ 0.916667 │ 0.0103009  │ 0.015625 │ 5120.0  │
│ 28  │ "1_3_4_7_9"         │ 5      │ 384.0  │ 0.916667 │ 0.0103009  │ 0.015625 │ 5120.0  │
⋮
│ 483 │ "3_4_5_6_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 484 │ "7_9"               │ 2      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 485 │ "1_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 486 │ "2_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 487 │ "3_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 488 │ "4_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 489 │ "1_4_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 490 │ "5_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 491 │ "2_5_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 492 │ "6_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 493 │ "3_6_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 494 │ "8_9"               │ 2      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 495 │ "1_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 496 │ "2_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 497 │ "3_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 498 │ "1_4_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 499 │ "5_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 500 │ "2_5_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 501 │ "3_6_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 502 │ "7_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 503 │ "1_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 504 │ "2_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 505 │ "3_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 506 │ "4_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 507 │ "1_4_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 508 │ "5_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 509 │ "2_5_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 510 │ "6_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 511 │ "3_6_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │

│ Row │ CN         │
├─────┼────────────┤
│ 1   │ 1.5        │
│ 2   │ 1.41421    │
│ 3   │ 1.44073    │
│ 4   │ 1.44073    │
│ 5   │ 1.44073    │
│ 6   │ 1.44073    │
│ 7   │ 1.36145    │
│ 8   │ 1.36145    │
│ 9   │ 1.36145    │
│ 10  │ 1.36145    │
│ 11  │ 1.32288    │
│ 12  │ 1.32288    │
│ 13  │ 1.39033    │
│ 14  │ 1.39033    │
│ 15  │ 1.39033    │
│ 16  │ 1.39033    │
│ 17  │ 1.22474    │
│ 18  │ 1.22474    │
│ 19  │ 1.32288    │
│ 20  │ 1.32288    │
│ 21  │ 1.32288    │
│ 22  │ 1.32288    │
│ 23  │ 1.28628    │
│ 24  │ 1.28628    │
│ 25  │ 1.28628    │
│ 26  │ 1.28628    │
│ 27  │ 1.22474    │
│ 28  │ 1.22474    │
⋮
│ 483 │ 3.78664e16 │
│ 484 │ 1.0        │
│ 485 │ 1.0        │
│ 486 │ 1.41421    │
│ 487 │ 1.0        │
│ 488 │ 2.61803    │
│ 489 │ 8.44731e16 │
│ 490 │ 3.2255     │
│ 491 │ 4.08063e16 │
│ 492 │ 2.61803    │
│ 493 │ Inf        │
│ 494 │ 2.61803    │
│ 495 │ 2.61803    │
│ 496 │ 2.61803    │
│ 497 │ 2.61803    │
│ 498 │ 8.31037e16 │
│ 499 │ 3.99215    │
│ 500 │ 5.27693e18 │
│ 501 │ 7.39829e16 │
│ 502 │ 2.41689e16 │
│ 503 │ 3.95624e16 │
│ 504 │ Inf        │
│ 505 │ 8.05709e16 │
│ 506 │ 3.69914e16 │
│ 507 │ 2.274e16   │
│ 508 │ Inf        │
│ 509 │ 2.17225e16 │
│ 510 │ 3.69914e16 │
│ 511 │ 2.274e16   │
511×8 DataFrames.DataFrame
│ Row │ Rows          │ Length │ D     │ A        │ V          │ G        │ GE      │ CN         │
├─────┼───────────────┼────────┼───────┼──────────┼────────────┼──────────┼─────────┼────────────┤
│ 1   │ "1"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 2   │ "2"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 3   │ "3"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 4   │ "4"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 5   │ "5"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 6   │ "6"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 7   │ "7"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 8   │ "1_7"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 9   │ "8"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 10  │ "9"           │ 1      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 11  │ "3_9"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 12  │ "1_7_9"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 13  │ "1_3"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 14  │ "3_7"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 15  │ "1_3_7"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 16  │ "1_9"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 17  │ "1_3_9"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 18  │ "7_9"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 19  │ "3_7_9"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 20  │ "1_3_7_9"     │ 4      │ 256.0 │ 1.0      │ 0.015625   │ 0.015625 │ 6400.0  │ 1.0        │
│ 21  │ "4_6"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 22  │ "2_8"         │ 2      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.0        │
│ 23  │ "1_3_5_7_9"   │ 5      │ 320.0 │ 0.95     │ 0.010975   │ 0.015625 │ 5120.0  │ 1.11803    │
│ 24  │ "1_3_7_8_9"   │ 5      │ 384.0 │ 0.916667 │ 0.0103009  │ 0.015625 │ 5120.0  │ 1.22474    │
│ 25  │ "1_2_3_7_8_9" │ 6      │ 576.0 │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │ 1.22474    │
│ 26  │ "1_3_4_7_9"   │ 5      │ 384.0 │ 0.916667 │ 0.0103009  │ 0.015625 │ 5120.0  │ 1.22474    │
│ 27  │ "1_3_6_7_9"   │ 5      │ 384.0 │ 0.916667 │ 0.0103009  │ 0.015625 │ 5120.0  │ 1.22474    │
│ 28  │ "1_3_4_6_7_9" │ 6      │ 576.0 │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │ 1.22474    │
⋮
│ 483 │ "1_3_6_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 7.14319e16 │
│ 484 │ "3_6_8_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 7.39829e16 │
│ 485 │ "3_4_5_6"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 7.73239e16 │
│ 486 │ "3_7_8_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 8.05709e16 │
│ 487 │ "1_4_8_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 8.31037e16 │
│ 488 │ "1_4_7_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 8.44731e16 │
│ 489 │ "3_6_7_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.16345e17 │
│ 490 │ "2_3_5_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 3.01987e17 │
│ 491 │ "1_4_5_6"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 1.93313e18 │
│ 492 │ "2_5_8_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 5.27693e18 │
│ 493 │ "2_5_7_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ 5.27693e18 │
│ 494 │ "1_2_3_6"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 495 │ "4_5_6"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 496 │ "2_4_5_6"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 497 │ "1_4_7"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 498 │ "1_5_6_7"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 499 │ "2_5_8"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 500 │ "1_3_5_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 501 │ "2_4_5_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 502 │ "2_4_6_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 503 │ "2_5_6_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 504 │ "4_5_6_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 505 │ "2_4_5_6_8"   │ 5      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 506 │ "1_4_7_8"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 507 │ "3_6_9"       │ 3      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 508 │ "4_5_6_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 509 │ "3_6_7_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 510 │ "2_7_8_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
│ 511 │ "5_7_8_9"     │ 4      │ 0.0   │ Inf      │ Inf        │ Inf      │ 0.0     │ Inf        │
511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D      │ A        │ V          │ G        │ GE      │
├─────┼─────────────────────┼────────┼────────┼──────────┼────────────┼──────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 1296.0 │ 0.694444 │ 0.00291733 │ 0.015625 │ 2844.44 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 1152.0 │ 0.708333 │ 0.00335467 │ 0.015625 │ 3200.0  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 5   │ "1_3_4_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 6   │ "1_2_3_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 7   │ "1_2_3_4_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 8   │ "1_2_3_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 9   │ "1_3_4_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 10  │ "1_2_3_4_6_7_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 11  │ "1_3_4_5_6_7_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 12  │ "1_2_3_5_7_8_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 13  │ "1_2_3_5_6_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 14  │ "1_3_4_5_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 15  │ "1_2_3_4_5_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 16  │ "1_3_5_6_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 17  │ "1_2_3_7_8_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 18  │ "1_3_4_6_7_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 19  │ "1_2_3_4_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 20  │ "1_2_3_6_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 21  │ "1_3_4_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 22  │ "1_3_6_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 23  │ "1_3_4_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 24  │ "1_3_5_6_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 25  │ "1_2_3_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 26  │ "1_3_5_7_8_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 27  │ "2_3_4_5_6_7_8_9"   │ 8      │ 396.0  │ 1.12121  │ 0.0336248  │ 0.152454 │ 327.967 │
│ 28  │ "1_2_3_4_5_6_7_8"   │ 8      │ 396.0  │ 1.12121  │ 0.0336248  │ 0.152454 │ 327.967 │
⋮
│ 483 │ "1_3_6_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 484 │ "3_6_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 485 │ "3_4_5_6"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 486 │ "3_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 487 │ "1_4_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 488 │ "1_4_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 489 │ "3_6_7_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 490 │ "2_3_5_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 491 │ "1_4_5_6"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 492 │ "2_5_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 493 │ "2_5_7_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 494 │ "1_2_3_6"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 495 │ "4_5_6"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 496 │ "2_4_5_6"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 497 │ "1_4_7"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 498 │ "1_5_6_7"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 499 │ "2_5_8"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 500 │ "1_3_5_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 501 │ "2_4_5_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 502 │ "2_4_6_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 503 │ "2_5_6_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 504 │ "4_5_6_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 505 │ "2_4_5_6_8"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 506 │ "1_4_7_8"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 507 │ "3_6_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 508 │ "4_5_6_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 509 │ "3_6_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 510 │ "2_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 511 │ "5_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │

│ Row │ CN         │
├─────┼────────────┤
│ 1   │ 1.5        │
│ 2   │ 1.41421    │
│ 3   │ 1.44073    │
│ 4   │ 1.44073    │
│ 5   │ 1.44073    │
│ 6   │ 1.44073    │
│ 7   │ 1.36145    │
│ 8   │ 1.36145    │
│ 9   │ 1.36145    │
│ 10  │ 1.36145    │
│ 11  │ 1.32288    │
│ 12  │ 1.32288    │
│ 13  │ 1.39033    │
│ 14  │ 1.39033    │
│ 15  │ 1.39033    │
│ 16  │ 1.39033    │
│ 17  │ 1.22474    │
│ 18  │ 1.22474    │
│ 19  │ 1.32288    │
│ 20  │ 1.32288    │
│ 21  │ 1.32288    │
│ 22  │ 1.32288    │
│ 23  │ 1.28628    │
│ 24  │ 1.28628    │
│ 25  │ 1.28628    │
│ 26  │ 1.28628    │
│ 27  │ 2.32133    │
│ 28  │ 2.32133    │
⋮
│ 483 │ 7.14319e16 │
│ 484 │ 7.39829e16 │
│ 485 │ 7.73239e16 │
│ 486 │ 8.05709e16 │
│ 487 │ 8.31037e16 │
│ 488 │ 8.44731e16 │
│ 489 │ 1.16345e17 │
│ 490 │ 3.01987e17 │
│ 491 │ 1.93313e18 │
│ 492 │ 5.27693e18 │
│ 493 │ 5.27693e18 │
│ 494 │ Inf        │
│ 495 │ Inf        │
│ 496 │ Inf        │
│ 497 │ Inf        │
│ 498 │ Inf        │
│ 499 │ Inf        │
│ 500 │ Inf        │
│ 501 │ Inf        │
│ 502 │ Inf        │
│ 503 │ Inf        │
│ 504 │ Inf        │
│ 505 │ Inf        │
│ 506 │ Inf        │
│ 507 │ Inf        │
│ 508 │ Inf        │
│ 509 │ Inf        │
│ 510 │ Inf        │
│ 511 │ Inf        │
#+end_example
*** [2018-03-13 Tue]
**** Snippet for Julia ~StatPlots~ and ~DataFrames~         :Code:DataVis:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
# Pkg.add("StatPlots")
using StatPlots # Required for the DataFrame user recipe
# Now let's create the DataFrame
using DataFrames
df = DataFrame(a = 1:10, b = 10*rand(10), c = 10 * rand(10))
# Plot the DataFrame by declaring the points by the column names
# Plots to the browser using Plotly
plotly()
@df df plot(:a, [:b :c]) # x = :a, y = [:b :c]. Notice this is two columns!
#+END_SRC

#+RESULTS:
#+begin_example




10×3 DataFrames.DataFrame
│ Row │ a  │ b        │ c       │
├─────┼────┼──────────┼─────────┤
│ 1   │ 1  │ 1.32664  │ 1.37275 │
│ 2   │ 2  │ 8.15358  │ 4.28207 │
│ 3   │ 3  │ 0.495911 │ 6.04895 │
│ 4   │ 4  │ 3.56895  │ 6.82187 │
│ 5   │ 5  │ 5.48842  │ 6.4951  │
│ 6   │ 6  │ 5.79609  │ 3.6355  │
│ 7   │ 7  │ 1.91739  │ 9.80091 │
│ 8   │ 8  │ 7.87744  │ 2.77681 │
│ 9   │ 9  │ 2.55099  │ 4.29005 │
│ 10  │ 10 │ 8.73615  │ 6.17215 │


Plots.PlotlyBackend()
Created new window in existing browser session.
#+end_example

**** Continue Studying D-Optimal Designs
First, run the init block:

#+NAME: dopt_init_block
#+HEADER: :results output :session *Julia* :noweb yes
#+BEGIN_SRC julia
using StatPlots
<<dopt_init_dependencies>>
<<dopt_model_matrix>>
<<dopt_criteria>>
<<dopt_candidates>>
<<dopt_measure>>
#+END_SRC

#+RESULTS: dopt_init_block
#+begin_example


generate_full_factorial (generic function with 1 method)

get_model_variables (generic function with 1 method)

generate_model_matrix (generic function with 1 method)
d_optimality (generic function with 1 method)

a_optimality (generic function with 1 method)

get_prediction_variances (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

condition_number (generic function with 1 method)
evaluate_candidates (generic function with 1 method)

generate_evaluation_table (generic function with 2 methods)

generate_evaluation_table (generic function with 2 methods)
measure_designs (generic function with 1 method)
#+end_example

I implemented all the optimality criteria listed in the [[http://www8.cs.umu.se/education/examina/Rapporter/FabianTtriefenbach.pdf][bachelor thesis]] and
plotted how each criterion behaves for the simple example, with two factors with
3 levels each. This code block will open a tab in your browser to show the graph.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function run()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 + x2)

    model_matrix, evaluation_table = measure_designs(factors, formula)

    sort!(evaluation_table, cols = :D, rev = true)

    return evaluation_table
end

evaluation_table = run()

plot_size = 1:div(size(evaluation_table, 1), 1)

plotly()
@df evaluation_table[plot_size, :] plot(plot_size, [:D :V :G :Length :A :CN])
#+END_SRC

#+RESULTS:
#+begin_example
run (generic function with 1 method)

511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D     │ A        │ V          │ G          │ GE      │ CN      │
├─────┼─────────────────────┼────────┼───────┼──────────┼────────────┼────────────┼─────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 324.0 │ 0.444444 │ 0.00118122 │ 0.00462963 │ 7200.0  │ 1.22474 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 288.0 │ 0.458333 │ 0.00140155 │ 0.00462963 │ 8100.0  │ 1.1547  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 5   │ "1_2_3_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 6   │ "1_3_4_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 7   │ "1_2_3_4_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 8   │ "1_2_3_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 9   │ "1_2_3_4_6_7_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 10  │ "1_3_4_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 11  │ "1_2_3_4_5_6_7_8"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 12  │ "1_2_3_4_5_6_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 13  │ "1_2_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 14  │ "2_3_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 15  │ "1_3_4_5_6_7_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 16  │ "1_2_3_5_7_8_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 17  │ "1_2_3_4_5_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 18  │ "1_2_3_5_6_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 19  │ "1_3_4_5_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 20  │ "1_3_5_6_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 21  │ "1_2_3_4_6_7_8"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 22  │ "1_2_3_4_6_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 23  │ "1_2_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 24  │ "2_3_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
⋮
│ 487 │ "1_4_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 488 │ "5_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 489 │ "3_5_7"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 490 │ "6_7"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 491 │ "8"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 492 │ "1_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 493 │ "2_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 494 │ "3_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 495 │ "4_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 496 │ "5_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.61803 │
│ 497 │ "2_5_8"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 498 │ "6_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.73205 │
│ 499 │ "7_8"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 500 │ "9"                 │ 1      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.0     │
│ 501 │ "1_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 502 │ "2_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 503 │ "3_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 504 │ "4_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.22474 │
│ 505 │ "5_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 2.41421 │
│ 506 │ "1_5_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 507 │ "6_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 508 │ "3_6_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │
│ 509 │ "7_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 1.41421 │
│ 510 │ "8_9"               │ 2      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ 3.2255  │
│ 511 │ "7_8_9"             │ 3      │ 0.0   │ Inf      │ Inf        │ Inf        │ 0.0     │ Inf     │

1:511

Plots.PlotlyBackend()
WARNING: No strict ticks found
WARNING: No strict ticks found
Created new window in existing browser session.
#+end_example

We can look at the G-Efficiency separately, but still ordered by values of
D-Optimality:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table[plot_size, :] plot(plot_size, :GE)
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: Created new window in existing browser session.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_size = 1:div(size(evaluation_table, 1), 2)
plotly()
@df evaluation_table[plot_size, :] plot(plot_size, [:V :G :Length :A :CN])
#+END_SRC

#+RESULTS:
: 1:255
: Plots.PlotlyBackend()
: Created new window in existing browser session.

We can look at this graph using the interaction model instead of the
linear model:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function run()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 * x2)

    model_matrix, evaluation_table = measure_designs(factors, formula)

    sort!(evaluation_table, cols = :D, rev = true)

    return evaluation_table
end

evaluation_table = run()

plot_size = 1:div(size(evaluation_table, 1), 2)

plotly()
@df evaluation_table[plot_size, :] plot(plot_size, [:D :V :G :Length :A :CN])
#+END_SRC

#+RESULTS:
#+begin_example
run (generic function with 1 method)

511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D      │ A        │ V          │ G        │ GE      │
├─────┼─────────────────────┼────────┼────────┼──────────┼────────────┼──────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 1296.0 │ 0.694444 │ 0.00291733 │ 0.015625 │ 2844.44 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 1152.0 │ 0.708333 │ 0.00335467 │ 0.015625 │ 3200.0  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 5   │ "1_2_3_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 6   │ "1_3_4_5_6_7_8_9"   │ 8      │ 936.0  │ 0.75     │ 0.00395633 │ 0.015625 │ 3200.0  │
│ 7   │ "1_2_3_4_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 8   │ "1_2_3_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 9   │ "1_2_3_4_6_7_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 10  │ "1_3_4_6_7_8_9"     │ 7      │ 816.0  │ 0.769608 │ 0.00472539 │ 0.015625 │ 3657.14 │
│ 11  │ "1_3_4_5_6_7_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 12  │ "1_2_3_5_7_8_9"     │ 7      │ 672.0  │ 0.809524 │ 0.00554215 │ 0.015625 │ 3657.14 │
│ 13  │ "1_2_3_4_5_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 14  │ "1_2_3_5_6_7_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 15  │ "1_3_4_5_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 16  │ "1_3_5_6_7_8_9"     │ 7      │ 660.0  │ 0.813636 │ 0.00552161 │ 0.015625 │ 3657.14 │
│ 17  │ "1_3_4_6_7_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 18  │ "1_2_3_7_8_9"       │ 6      │ 576.0  │ 0.833333 │ 0.00675154 │ 0.015625 │ 4266.67 │
│ 19  │ "1_2_3_4_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 20  │ "1_2_3_6_7_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 21  │ "1_3_4_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 22  │ "1_3_6_7_8_9"       │ 6      │ 560.0  │ 0.842857 │ 0.00702758 │ 0.015625 │ 4266.67 │
│ 23  │ "1_2_3_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 24  │ "1_3_4_5_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 25  │ "1_3_5_6_7_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 26  │ "1_3_5_7_8_9"       │ 6      │ 464.0  │ 0.87931  │ 0.00776413 │ 0.015625 │ 4266.67 │
│ 27  │ "1_2_3_4_5_6_7_8"   │ 8      │ 396.0  │ 1.12121  │ 0.0336248  │ 0.152454 │ 327.967 │
│ 28  │ "1_2_3_4_5_6_8_9"   │ 8      │ 396.0  │ 1.12121  │ 0.0336248  │ 0.152454 │ 327.967 │
⋮
│ 483 │ "3_4_5_6_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 484 │ "7_9"               │ 2      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 485 │ "1_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 486 │ "2_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 487 │ "3_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 488 │ "4_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 489 │ "1_4_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 490 │ "5_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 491 │ "2_5_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 492 │ "6_7_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 493 │ "3_6_7_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 494 │ "8_9"               │ 2      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 495 │ "1_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 496 │ "2_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 497 │ "3_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 498 │ "1_4_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 499 │ "5_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 500 │ "2_5_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 501 │ "3_6_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 502 │ "7_8_9"             │ 3      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 503 │ "1_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 504 │ "2_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 505 │ "3_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 506 │ "4_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 507 │ "1_4_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 508 │ "5_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 509 │ "2_5_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 510 │ "6_7_8_9"           │ 4      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │
│ 511 │ "3_6_7_8_9"         │ 5      │ 0.0    │ Inf      │ Inf        │ Inf      │ 0.0     │

│ Row │ CN         │
├─────┼────────────┤
│ 1   │ 1.5        │
│ 2   │ 1.41421    │
│ 3   │ 1.44073    │
│ 4   │ 1.44073    │
│ 5   │ 1.44073    │
│ 6   │ 1.44073    │
│ 7   │ 1.36145    │
│ 8   │ 1.36145    │
│ 9   │ 1.36145    │
│ 10  │ 1.36145    │
│ 11  │ 1.32288    │
│ 12  │ 1.32288    │
│ 13  │ 1.39033    │
│ 14  │ 1.39033    │
│ 15  │ 1.39033    │
│ 16  │ 1.39033    │
│ 17  │ 1.22474    │
│ 18  │ 1.22474    │
│ 19  │ 1.32288    │
│ 20  │ 1.32288    │
│ 21  │ 1.32288    │
│ 22  │ 1.32288    │
│ 23  │ 1.28628    │
│ 24  │ 1.28628    │
│ 25  │ 1.28628    │
│ 26  │ 1.28628    │
│ 27  │ 2.32133    │
│ 28  │ 2.32133    │
⋮
│ 483 │ 3.78664e16 │
│ 484 │ 1.0        │
│ 485 │ 1.0        │
│ 486 │ 1.41421    │
│ 487 │ 1.0        │
│ 488 │ 2.61803    │
│ 489 │ 8.44731e16 │
│ 490 │ 3.2255     │
│ 491 │ 4.08063e16 │
│ 492 │ 2.61803    │
│ 493 │ Inf        │
│ 494 │ 2.61803    │
│ 495 │ 2.61803    │
│ 496 │ 2.61803    │
│ 497 │ 2.61803    │
│ 498 │ 8.31037e16 │
│ 499 │ 3.99215    │
│ 500 │ 5.27693e18 │
│ 501 │ 7.39829e16 │
│ 502 │ 2.41689e16 │
│ 503 │ 3.95624e16 │
│ 504 │ Inf        │
│ 505 │ 8.05709e16 │
│ 506 │ 3.69914e16 │
│ 507 │ 2.274e16   │
│ 508 │ Inf        │
│ 509 │ 2.17225e16 │
│ 510 │ 3.69914e16 │
│ 511 │ 2.274e16   │

1:255

Plots.PlotlyBackend()
Created new window in existing browser session.
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table[plot_size, :] plot(plot_size, :GE)
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: Created new window in existing browser session.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table[plot_size, :] plot(plot_size, [:V :G :Length :A :CN])
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: Created new window in existing browser session.

We can also look at the linear model for more factors and mixed levels, but we
must reduce the number of runs we target, since this is an exhaustive
exploration of all designs and crashed my machine a couple times because it used
all my memory.

I implemented a sampling strategy so we can look at a speficic number
ofexperiments selected at random from all possible experiments, with all run
numbers. We can now cheaply look at a sample of those experiments.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function run()
    factors = [[-2, 2], [-2, 2], [-2, 0, 2], [-2, -1, 0, 1, 2]]
    formula = @formula(y ~ x1 + x2 + x3 + x4)

    runs = 5
    samples = 2000
    model_matrix, evaluation_table = measure_designs(factors, formula, max_candidates = samples)

    sort!(evaluation_table, cols = :D, rev = true)

    return evaluation_table
end

evaluation_table = run()

plot_size = 1:round(Int, size(evaluation_table, 1) / 1.05)

println(plot_size)

plotly()
@df evaluation_table[plot_size, :] plot(plot_size, [:D :V :G :Length :A :CN])
#+END_SRC

#+RESULTS:
#+begin_example
run (generic function with 1 method)

2000×8 DataFrames.DataFrame
│ Row  │ Rows                                      │ Length │ D            │ A           │ V           │
├──────┼───────────────────────────────────────────┼────────┼──────────────┼─────────────┼─────────────┤
│ 1    │ "1_2_3_4_5_6_7_9_10_11_12_13_15_16_17_19" │ 16     │ 7.12704e6    │ 1.58571     │ 0.216774    │
│ 2    │ "1_2_3_4_5_6_7_8_9_10_12_13_14_15_17_18"  │ 16     │ 6.02112e6    │ 1.60669     │ 0.223606    │
│ 3    │ "1_3_4_5_6_8_9_10_11_12_13_14_16_17_19"   │ 15     │ 5.44666e6    │ 1.57064     │ 0.222209    │
│ 4    │ "1_2_3_4_5_7_8_10_11_12_13_14_16_17_18"   │ 15     │ 4.82406e6    │ 1.67326     │ 0.269736    │
│ 5    │ "1_2_3_4_5_7_8_9_10_11_12_13_14_15_17"    │ 15     │ 4.74726e6    │ 2.03171     │ 0.499976    │
│ 6    │ "1_2_3_4_5_10_11_12_13_14_15_16_17_18"    │ 14     │ 4.66125e6    │ 1.41436     │ 0.16831     │
│ 7    │ "1_2_3_4_5_9_10_12_13_14_15_16_17_19"     │ 14     │ 4.37453e6    │ 1.4201      │ 0.169441    │
│ 8    │ "1_2_3_5_6_7_8_9_10_11_12_14_15_17_19"    │ 15     │ 4.35712e6    │ 1.76507     │ 0.318508    │
│ 9    │ "1_2_5_6_7_8_9_10_11_12_14_15_16_17_19"   │ 15     │ 4.33254e6    │ 1.80454     │ 0.34248     │
│ 10   │ "1_2_3_4_5_6_7_8_9_11_12_13_14_15_16"     │ 15     │ 4.1943e6     │ 2.15723     │ 0.599821    │
│ 11   │ "1_2_3_7_8_9_10_12_13_14_15_16_17_19"     │ 14     │ 4.18611e6    │ 1.48532     │ 0.196465    │
│ 12   │ "1_3_4_5_9_10_11_12_13_14_15_16_17_18"    │ 14     │ 4.11238e6    │ 1.66103     │ 0.281605    │
│ 13   │ "1_2_3_5_7_9_10_12_13_14_15_16_17_19"     │ 14     │ 3.87891e6    │ 1.47446     │ 0.19057     │
│ 14   │ "2_3_4_5_8_10_11_12_13_14_15_16_17_19"    │ 14     │ 3.82362e6    │ 1.6179      │ 0.257629    │
│ 15   │ "1_2_3_5_6_10_11_12_13_14_15_16_17_19"    │ 14     │ 3.76627e6    │ 1.52318     │ 0.211337    │
│ 16   │ "1_2_3_4_5_7_9_12_13_14_15_16_17_18"      │ 14     │ 3.61882e6    │ 1.44114     │ 0.174806    │
│ 17   │ "1_2_3_4_5_6_8_9_10_11_13_14_16_19"       │ 14     │ 3.5881e6     │ 1.8488      │ 0.39278     │
│ 18   │ "1_2_4_5_7_8_9_10_12_13_14_15_16_19"      │ 14     │ 3.50618e6    │ 1.88493     │ 0.418363    │
│ 19   │ "1_3_4_6_7_8_9_10_11_12_14_15_17_19"      │ 14     │ 3.44678e6    │ 1.84676     │ 0.391738    │
│ 20   │ "1_2_3_4_5_6_8_10_12_14_15_16_17_19"      │ 14     │ 3.34234e6    │ 1.52658     │ 0.209685    │
│ 21   │ "1_2_3_4_5_6_7_10_11_12_13_14_15_16"      │ 14     │ 3.30957e6    │ 2.18054     │ 0.660682    │
│ 22   │ "1_2_3_4_5_6_8_10_11_12_14_15_16_19"      │ 14     │ 3.30138e6    │ 1.99341     │ 0.497429    │
│ 23   │ "1_4_6_7_8_9_10_11_13_14_15_16_17_18"     │ 14     │ 3.28499e6    │ 1.76596     │ 0.339105    │
│ 24   │ "1_2_3_4_6_7_8_9_11_12_15_16_17_19"       │ 14     │ 3.16006e6    │ 1.87447     │ 0.40822     │
⋮
│ 1976 │ "3_7_9_14_16_18"                          │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1977 │ "5_6_17_18"                               │ 4      │ 0.0          │ Inf         │ Inf         │
│ 1978 │ "5_6_9_14_17_18"                          │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1979 │ "8_10_15_17_18"                           │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1980 │ "5_6_9_19"                                │ 4      │ 0.0          │ Inf         │ Inf         │
│ 1981 │ "1_6_9_10_19"                             │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1982 │ "1_5_7_9_11_19"                           │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1983 │ "6_7_14_19"                               │ 4      │ 0.0          │ Inf         │ Inf         │
│ 1984 │ "6_8_9_11_14_19"                          │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1985 │ "3_5_7_15_19"                             │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1986 │ "3_12_16_19"                              │ 4      │ 0.0          │ Inf         │ Inf         │
│ 1987 │ "2_9_17_19"                               │ 4      │ 0.0          │ Inf         │ Inf         │
│ 1988 │ "3_5_7_9_11_17_19"                        │ 7      │ 0.0          │ Inf         │ Inf         │
│ 1989 │ "7_9_13_17_19"                            │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1990 │ "5_9_13_15_17_19"                         │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1991 │ "1_3_5_9_13_15_17_19"                     │ 8      │ 0.0          │ Inf         │ Inf         │
│ 1992 │ "6_7_10_11_14_18_19"                      │ 7      │ 0.0          │ Inf         │ Inf         │
│ 1993 │ "5_11_17_18"                              │ 4      │ -5.68434e-14 │ -1.01331e16 │ -2.60116e47 │
│ 1994 │ "7_8_13_17"                               │ 4      │ -1.36424e-12 │ -2.48636e15 │ -3.84267e45 │
│ 1995 │ "3_8_14_17"                               │ 4      │ -5.45697e-12 │ -2.48636e15 │ -3.84267e45 │
│ 1996 │ "9_11_16_17_19"                           │ 5      │ -5.45697e-12 │ -2.67401e15 │ -3.82402e45 │
│ 1997 │ "2_12_13_17_19"                           │ 5      │ -1.09139e-11 │ -2.48636e15 │ -3.07414e45 │
│ 1998 │ "2_8_11_13_16"                            │ 5      │ -1.45519e-11 │ -3.02586e15 │ -5.54083e45 │
│ 1999 │ "4_6_7_9_13"                              │ 5      │ -5.82077e-11 │ -1.43376e15 │ -5.89471e44 │
│ 2000 │ "2_3_7_10_11_16"                          │ 6      │ -8.73115e-11 │ -1.44256e15 │ -5.00322e44 │

│ Row  │ G           │ GE           │ CN         │
├──────┼─────────────┼──────────────┼────────────┤
│ 1    │ 2.66557     │ 11.7236      │ 10.9289    │
│ 2    │ 2.76446     │ 11.3042      │ 10.9927    │
│ 3    │ 2.52749     │ 13.1883      │ 10.4507    │
│ 4    │ 3.08679     │ 10.7987      │ 10.3391    │
│ 5    │ 5.80338     │ 5.74378      │ 12.1198    │
│ 6    │ 1.77896     │ 20.076       │ 9.50178    │
│ 7    │ 1.78759     │ 19.9791      │ 9.81331    │
│ 8    │ 3.6748      │ 9.07079      │ 11.1641    │
│ 9    │ 3.84789     │ 8.66276      │ 10.7166    │
│ 10   │ 7.01411     │ 4.75233      │ 12.1994    │
│ 11   │ 2.06445     │ 17.2997      │ 9.62377    │
│ 12   │ 2.92757     │ 12.1993      │ 10.5296    │
│ 13   │ 2.0001      │ 17.8563      │ 10.2096    │
│ 14   │ 2.68604     │ 13.2963      │ 10.0188    │
│ 15   │ 2.21175     │ 16.1475      │ 9.9539     │
│ 16   │ 1.85919     │ 19.2096      │ 9.96728    │
│ 17   │ 4.24934     │ 8.40467      │ 11.0831    │
│ 18   │ 4.45347     │ 8.01943      │ 10.7408    │
│ 19   │ 4.18753     │ 8.52873      │ 11.2827    │
│ 20   │ 2.23234     │ 15.9986      │ 9.93737    │
│ 21   │ 7.19226     │ 4.96565      │ 11.94      │
│ 22   │ 5.39761     │ 6.61669      │ 11.4763    │
│ 23   │ 3.53984     │ 10.0892      │ 10.0059    │
│ 24   │ 4.43573     │ 8.05149      │ 11.5174    │
⋮
│ 1976 │ Inf         │ 0.0          │ 5.7745e16  │
│ 1977 │ Inf         │ 0.0          │ 1.52896e16 │
│ 1978 │ Inf         │ 0.0          │ 3.40001e16 │
│ 1979 │ Inf         │ 0.0          │ 5.4215e16  │
│ 1980 │ Inf         │ 0.0          │ 4.29141    │
│ 1981 │ Inf         │ 0.0          │ 1.55187e16 │
│ 1982 │ Inf         │ 0.0          │ 2.29024e16 │
│ 1983 │ Inf         │ 0.0          │ 17.3143    │
│ 1984 │ Inf         │ 0.0          │ 9.79321e15 │
│ 1985 │ Inf         │ 0.0          │ 2.09632e17 │
│ 1986 │ Inf         │ 0.0          │ 7.17096    │
│ 1987 │ Inf         │ 0.0          │ 3.93227    │
│ 1988 │ Inf         │ 0.0          │ 5.68426e16 │
│ 1989 │ Inf         │ 0.0          │ 1.25795e17 │
│ 1990 │ Inf         │ 0.0          │ 3.02304e16 │
│ 1991 │ Inf         │ 0.0          │ 2.52072e16 │
│ 1992 │ Inf         │ 0.0          │ 1.44934e16 │
│ 1993 │ -1.58769e15 │ -7.87305e-14 │ 10.8796    │
│ 1994 │ -9.27713e11 │ -1.3474e-10  │ 4.03769    │
│ 1995 │ 0.000244141 │ 512000.0     │ 2.69825    │
│ 1996 │ -7.892e12   │ -1.26711e-11 │ 4.25726e16 │
│ 1997 │ 0.00927734  │ 10778.9      │ 2.20616e16 │
│ 1998 │ -3.22141e44 │ -3.10423e-43 │ 1.52895e17 │
│ 1999 │ -9.04096e42 │ -1.10608e-41 │ 2.27781e16 │
│ 2000 │ -1.67772e11 │ -4.96705e-10 │ 1.85383e16 │

1:1905

1:1905

Plots.PlotlyBackend()
Created new window in existing browser session.
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table[plot_size, :] plot(plot_size, :GE)
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: Created new window in existing browser session.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
sort!(evaluation_table, cols = :CN)
@df evaluation_table[plot_size, :] plot(plot_size, [:Length :CN])
#+END_SRC

#+RESULTS:
#+begin_example
Plots.PlotlyBackend()
2000×8 DataFrames.DataFrame
│ Row  │ Rows                         │ Length │ D            │ A           │ V           │
├──────┼──────────────────────────────┼────────┼──────────────┼─────────────┼─────────────┤
│ 1    │ "1_6_7_9"                    │ 4      │ 0.0          │ Inf         │ Inf         │
│ 2    │ "3_8_14_17"                  │ 4      │ -5.45697e-12 │ -2.48636e15 │ -3.84267e45 │
│ 3    │ "6_11_13_15"                 │ 4      │ 0.0          │ Inf         │ Inf         │
│ 4    │ "3_8_16"                     │ 3      │ 0.0          │ Inf         │ Inf         │
│ 5    │ "4_7_14_15"                  │ 4      │ 0.0          │ Inf         │ Inf         │
│ 6    │ "2_9_17_19"                  │ 4      │ 0.0          │ Inf         │ Inf         │
│ 7    │ "7_8_13_17"                  │ 4      │ -1.36424e-12 │ -2.48636e15 │ -3.84267e45 │
│ 8    │ "5_6_9_19"                   │ 4      │ 0.0          │ Inf         │ Inf         │
│ 9    │ "1_8_14_18"                  │ 4      │ 0.0          │ Inf         │ Inf         │
│ 10   │ "6_7_12_14"                  │ 4      │ 0.0          │ Inf         │ Inf         │
│ 11   │ "2_4_6"                      │ 3      │ 0.0          │ Inf         │ Inf         │
│ 12   │ "3_4_8"                      │ 3      │ 0.0          │ Inf         │ Inf         │
│ 13   │ "5_8_11_12"                  │ 4      │ 0.0          │ Inf         │ Inf         │
│ 14   │ "6_8_9_12"                   │ 4      │ 0.0          │ Inf         │ Inf         │
│ 15   │ "10_15_16_17"                │ 4      │ 0.0          │ Inf         │ Inf         │
│ 16   │ "3_12_16_19"                 │ 4      │ 0.0          │ Inf         │ Inf         │
│ 17   │ "2_3_5_6_15_16_17_18"        │ 8      │ 32768.0      │ 2.60156     │ 0.787795    │
│ 18   │ "2_3_6_15_16_17_18"          │ 7      │ 16384.0      │ 2.79687     │ 1.07424     │
│ 19   │ "2_3_6_9_13_15_16_17_18"     │ 9      │ 222208.0     │ 2.08929     │ 0.722927    │
│ 20   │ "1_4_8_9_10_13_15_18_19"     │ 9      │ 372736.0     │ 2.2057      │ 0.964161    │
│ 21   │ "1_2_3_5_7_8_10_14_16_17_19" │ 11     │ 921600.0     │ 1.77        │ 0.401278    │
│ 22   │ "1_2_4_9_13_15_16_17_18"     │ 9      │ 254976.0     │ 1.85291     │ 0.48301     │
│ 23   │ "1_2_3_10_11_12_14_16_17_19" │ 10     │ 970752.0     │ 1.86498     │ 0.536048    │
│ 24   │ "1_3_6_8_11_15_16_17_18"     │ 9      │ 360448.0     │ 2.01278     │ 0.713146    │
⋮
│ 1976 │ "1_2_6_13_14_18"             │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1977 │ "1_2_6_7_10_11_12"           │ 7      │ 0.0          │ Inf         │ Inf         │
│ 1978 │ "5_9_13_15_17_19"            │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1979 │ "2_3_13_14_15_16"            │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1980 │ "2_3_4_6_8_9"                │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1981 │ "5_6_9_14_17_18"             │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1982 │ "6_8_12_13_15_17"            │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1983 │ "2_3_5_7_8_9_11"             │ 7      │ 0.0          │ Inf         │ Inf         │
│ 1984 │ "4_5_6_15_18"                │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1985 │ "9_11_16_17_19"              │ 5      │ -5.45697e-12 │ -2.67401e15 │ -3.82402e45 │
│ 1986 │ "1_2_3_4_6_7_9"              │ 7      │ 0.0          │ Inf         │ Inf         │
│ 1987 │ "1_5_9_13_16_17"             │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1988 │ "1_4_5_10_11"                │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1989 │ "2_3_5_7_8_10"               │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1990 │ "8_10_15_17_18"              │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1991 │ "3_5_7_9_11_17_19"           │ 7      │ 0.0          │ Inf         │ Inf         │
│ 1992 │ "3_7_9_14_16_18"             │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1993 │ "1_3_4_5_6_10_11"            │ 7      │ 0.0          │ Inf         │ Inf         │
│ 1994 │ "4_6_9_16_18"                │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1995 │ "1_2_8_9_12"                 │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1996 │ "7_9_13_17_19"               │ 5      │ 0.0          │ Inf         │ Inf         │
│ 1997 │ "3_6_7_11_15_18"             │ 6      │ 0.0          │ Inf         │ Inf         │
│ 1998 │ "2_8_11_13_16"               │ 5      │ -1.45519e-11 │ -3.02586e15 │ -5.54083e45 │
│ 1999 │ "3_5_7_15_19"                │ 5      │ 0.0          │ Inf         │ Inf         │
│ 2000 │ "2_6_7_8_12"                 │ 5      │ 0.0          │ Inf         │ Inf         │

│ Row  │ G           │ GE           │ CN         │
├──────┼─────────────┼──────────────┼────────────┤
│ 1    │ Inf         │ 0.0          │ 2.43545    │
│ 2    │ 0.000244141 │ 512000.0     │ 2.69825    │
│ 3    │ Inf         │ 0.0          │ 2.79577    │
│ 4    │ Inf         │ 0.0          │ 3.57194    │
│ 5    │ Inf         │ 0.0          │ 3.91539    │
│ 6    │ Inf         │ 0.0          │ 3.93227    │
│ 7    │ -9.27713e11 │ -1.3474e-10  │ 4.03769    │
│ 8    │ Inf         │ 0.0          │ 4.29141    │
│ 9    │ Inf         │ 0.0          │ 4.37243    │
│ 10   │ Inf         │ 0.0          │ 4.59434    │
│ 11   │ Inf         │ 0.0          │ 4.79844    │
│ 12   │ Inf         │ 0.0          │ 4.79844    │
│ 13   │ Inf         │ 0.0          │ 4.9584     │
│ 14   │ Inf         │ 0.0          │ 5.47418    │
│ 15   │ Inf         │ 0.0          │ 5.97557    │
│ 16   │ Inf         │ 0.0          │ 7.17096    │
│ 17   │ 4.50956     │ 13.8594      │ 8.82552    │
│ 18   │ 5.0634      │ 14.1068      │ 8.98975    │
│ 19   │ 4.92085     │ 11.2898      │ 9.17738    │
│ 20   │ 6.43219     │ 8.63712      │ 9.29409    │
│ 21   │ 3.37291     │ 13.4764      │ 9.29735    │
│ 22   │ 3.222       │ 17.2425      │ 9.30371    │
│ 23   │ 4.01815     │ 12.4436      │ 9.37889    │
│ 24   │ 4.79796     │ 11.579       │ 9.37951    │
⋮
│ 1976 │ Inf         │ 0.0          │ 2.60327e16 │
│ 1977 │ Inf         │ 0.0          │ 2.92644e16 │
│ 1978 │ Inf         │ 0.0          │ 3.02304e16 │
│ 1979 │ Inf         │ 0.0          │ 3.16604e16 │
│ 1980 │ Inf         │ 0.0          │ 3.17777e16 │
│ 1981 │ Inf         │ 0.0          │ 3.40001e16 │
│ 1982 │ Inf         │ 0.0          │ 3.50386e16 │
│ 1983 │ Inf         │ 0.0          │ 4.09543e16 │
│ 1984 │ Inf         │ 0.0          │ 4.2402e16  │
│ 1985 │ -7.892e12   │ -1.26711e-11 │ 4.25726e16 │
│ 1986 │ Inf         │ 0.0          │ 4.69405e16 │
│ 1987 │ Inf         │ 0.0          │ 4.71807e16 │
│ 1988 │ Inf         │ 0.0          │ 4.75443e16 │
│ 1989 │ Inf         │ 0.0          │ 4.94414e16 │
│ 1990 │ Inf         │ 0.0          │ 5.4215e16  │
│ 1991 │ Inf         │ 0.0          │ 5.68426e16 │
│ 1992 │ Inf         │ 0.0          │ 5.7745e16  │
│ 1993 │ Inf         │ 0.0          │ 6.20513e16 │
│ 1994 │ Inf         │ 0.0          │ 9.87195e16 │
│ 1995 │ Inf         │ 0.0          │ 1.08607e17 │
│ 1996 │ Inf         │ 0.0          │ 1.25795e17 │
│ 1997 │ Inf         │ 0.0          │ 1.44349e17 │
│ 1998 │ -3.22141e44 │ -3.10423e-43 │ 1.52895e17 │
│ 1999 │ Inf         │ 0.0          │ 2.09632e17 │
│ 2000 │ Inf         │ 0.0          │ 3.21639e17 │
Created new window in existing browser session.
#+end_example

*** [2018-03-14 Wed]
**** D-Optimal Design Examples
***** Setup
#+CALL: dopt_init_block()

#+RESULTS:
#+begin_example


generate_full_factorial (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)
d_optimality (generic function with 1 method)

a_optimality (generic function with 1 method)

get_prediction_variances (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

condition_number (generic function with 1 method)
evaluate_candidates (generic function with 1 method)

generate_evaluation_table (generic function with 1 method)

generate_evaluation_table (generic function with 2 methods)
measure_designs (generic function with 1 method)
#+end_example

***** 2 3-Level Factors with Linear Model
Consider an experimental design with 3 experiments, for 2 factors with 3 levels
each, that considers that a simple linear model will be fit.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function main()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 + x2)

    runs = 3
    model_matrix, evaluation_table = measure_designs(factors, formula, runs = 3)

    sort!(evaluation_table, cols = :D, rev = true)

    return evaluation_table
end

evaluation_table = main()

plotly()
@df evaluation_table plot(1:size(evaluation_table, 1), [:D :Length :A :CN])
#+END_SRC

#+RESULTS:
#+begin_example
main (generic function with 1 method)

84×8 DataFrames.DataFrame
│ Row │ Rows    │ Length │ D    │ A       │ V         │ G        │ GE       │ CN      │
├─────┼─────────┼────────┼──────┼─────────┼───────────┼──────────┼──────────┼─────────┤
│ 1   │ "1_3_7" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 2   │ "1_3_8" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 3   │ "1_3_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 4   │ "1_6_7" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 5   │ "1_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 6   │ "2_7_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 7   │ "3_4_9" │ 3      │ 16.0 │ 1.25    │ 0.0885417 │ 0.125    │ 800.0    │ 1.41421 │
│ 8   │ "3_7_9" │ 3      │ 16.0 │ 1.5     │ 0.34375   │ 0.34375  │ 290.909  │ 2.0     │
│ 9   │ "1_6_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 10  │ "2_4_9" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 11  │ "2_6_7" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 12  │ "3_4_8" │ 3      │ 9.0  │ 1.66667 │ 0.358025  │ 0.518519 │ 192.857  │ 1.73205 │
│ 13  │ "1_2_7" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 14  │ "1_2_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 15  │ "1_3_4" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 16  │ "1_3_5" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 17  │ "1_3_6" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 18  │ "1_4_6" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 19  │ "1_4_9" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 20  │ "1_5_7" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 7.375    │ 13.5593  │ 3.2255  │
│ 21  │ "1_6_9" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 22  │ "1_7_8" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 23  │ "2_3_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
│ 24  │ "2_3_9" │ 3      │ 4.0  │ 4.0     │ 13.5833   │ 22.25    │ 4.49438  │ 4.10676 │
│ 25  │ "2_4_6" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 26  │ "2_4_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 27  │ "2_6_8" │ 3      │ 4.0  │ 2.5     │ 1.70833   │ 4.25     │ 23.5294  │ 2.41421 │
│ 28  │ "2_7_8" │ 3      │ 4.0  │ 3.0     │ 4.0       │ 10.25    │ 9.7561   │ 3.2255  │
⋮
│ 56  │ "3_4_5" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 57  │ "3_5_8" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 58  │ "3_6_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 59  │ "4_5_9" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 60  │ "4_7_8" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 61  │ "4_8_9" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 62  │ "5_6_7" │ 3      │ 1.0  │ 9.0     │ 190.0     │ 406.0    │ 0.246305 │ 5.41147 │
│ 63  │ "6_7_8" │ 3      │ 1.0  │ 11.0    │ 367.667   │ 630.0    │ 0.15873  │ 6.97535 │
│ 64  │ "6_8_9" │ 3      │ 1.0  │ 7.0     │ 66.3333   │ 99.0     │ 1.0101   │ 5.82843 │
│ 65  │ "1_2_5" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 66  │ "1_4_5" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 67  │ "2_3_5" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 68  │ "2_4_5" │ 3      │ 1.0  │ 5.0     │ 17.6667   │ 21.0     │ 4.7619   │ 3.73205 │
│ 69  │ "2_5_6" │ 3      │ 1.0  │ 5.0     │ 17.6667   │ 21.0     │ 4.7619   │ 3.73205 │
│ 70  │ "3_5_6" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 71  │ "4_5_7" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 72  │ "4_5_8" │ 3      │ 1.0  │ 5.0     │ 17.6667   │ 21.0     │ 4.7619   │ 3.73205 │
│ 73  │ "5_6_8" │ 3      │ 1.0  │ 5.0     │ 17.6667   │ 21.0     │ 4.7619   │ 3.73205 │
│ 74  │ "5_6_9" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 75  │ "5_7_8" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 76  │ "5_8_9" │ 3      │ 1.0  │ 5.0     │ 12.6667   │ 19.0     │ 5.26316  │ 4.04892 │
│ 77  │ "1_2_3" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │
│ 78  │ "1_4_7" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │
│ 79  │ "1_5_9" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │
│ 80  │ "2_5_8" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │
│ 81  │ "3_5_7" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │
│ 82  │ "3_6_9" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │
│ 83  │ "4_5_6" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │
│ 84  │ "7_8_9" │ 3      │ 0.0  │ 0.0     │ 0.0       │ 0.0      │ 0.0      │ 0.0     │

Plots.PlotlyBackend()
Created new window in existing browser session.
#+end_example

We can look at G-Efficiency, V- and G-Optimality separately, but still ordered
by values of D-Optimality:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table plot(1:size(evaluation_table, 1), [:GE :V :G])
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: Created new window in existing browser session.

We can extend this example and look at runs with all sizes. Since this search
space is relatively small we can measure all possible subsets of the full
factorial design.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function main()
    factors = [[-1, 0, 1], [-1, 0, 1]]
    formula = @formula(y ~ x1 + x2)

    model_matrix, evaluation_table = measure_designs(factors, formula)

    sort!(evaluation_table, cols = :D, rev = true)

    return evaluation_table
end

evaluation_table = main()

plotly()
@df evaluation_table plot(1:size(evaluation_table, 1), [:D :Length :A :CN])
#+END_SRC

#+RESULTS:
#+begin_example
main (generic function with 1 method)

511×8 DataFrames.DataFrame
│ Row │ Rows                │ Length │ D     │ A        │ V          │ G          │ GE      │ CN      │
├─────┼─────────────────────┼────────┼───────┼──────────┼────────────┼────────────┼─────────┼─────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9" │ 9      │ 324.0 │ 0.444444 │ 0.00118122 │ 0.00462963 │ 7200.0  │ 1.22474 │
│ 2   │ "1_2_3_4_6_7_8_9"   │ 8      │ 288.0 │ 0.458333 │ 0.00140155 │ 0.00462963 │ 8100.0  │ 1.1547  │
│ 3   │ "1_2_3_4_5_6_7_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 4   │ "1_2_3_4_5_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 5   │ "1_2_3_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 6   │ "1_3_4_5_6_7_8_9"   │ 8      │ 234.0 │ 0.5      │ 0.00200321 │ 0.00898532 │ 4173.48 │ 1.32951 │
│ 7   │ "1_2_3_4_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 8   │ "1_2_3_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 9   │ "1_2_3_4_6_7_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 10  │ "1_3_4_6_7_8_9"     │ 7      │ 204.0 │ 0.519608 │ 0.00249325 │ 0.00921026 │ 4653.2  │ 1.27153 │
│ 11  │ "1_2_3_4_5_6_7_8"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 12  │ "1_2_3_4_5_6_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 13  │ "1_2_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 14  │ "2_3_4_5_6_7_8_9"   │ 8      │ 180.0 │ 0.566667 │ 0.0035787  │ 0.012537   │ 2991.14 │ 1.54266 │
│ 15  │ "1_3_4_5_6_7_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 16  │ "1_2_3_5_7_8_9"     │ 7      │ 168.0 │ 0.559524 │ 0.00331001 │ 0.015625   │ 2742.86 │ 1.32288 │
│ 17  │ "1_2_3_4_5_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 18  │ "1_2_3_5_6_7_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 19  │ "1_3_4_5_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 20  │ "1_3_5_6_7_8_9"     │ 7      │ 165.0 │ 0.563636 │ 0.00328947 │ 0.00930094 │ 4607.83 │ 1.34598 │
│ 21  │ "1_2_3_4_6_7_8"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 22  │ "1_2_3_4_6_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 23  │ "1_2_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 24  │ "2_3_4_6_7_8_9"     │ 7      │ 156.0 │ 0.589744 │ 0.0045059  │ 0.0130966  │ 3272.4  │ 1.48294 │
│ 25  │ "1_3_4_6_7_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 26  │ "1_2_3_7_8_9"       │ 6      │ 144.0 │ 0.583333 │ 0.00414738 │ 0.015625   │ 3200.0  │ 1.22474 │
│ 27  │ "1_2_3_4_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
│ 28  │ "1_2_3_6_7_9"       │ 6      │ 140.0 │ 0.592857 │ 0.00442341 │ 0.00969424 │ 5157.7  │ 1.32288 │
⋮
│ 483 │ "1_7"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.41421 │
│ 484 │ "2_7"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.22474 │
│ 485 │ "3_7"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.41421 │
│ 486 │ "4_7"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 3.2255  │
│ 487 │ "1_4_7"             │ 3      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 0.0     │
│ 488 │ "5_7"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 2.41421 │
│ 489 │ "3_5_7"             │ 3      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 0.0     │
│ 490 │ "6_7"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.22474 │
│ 491 │ "8"                 │ 1      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.0     │
│ 492 │ "1_8"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.22474 │
│ 493 │ "2_8"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.0     │
│ 494 │ "3_8"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.22474 │
│ 495 │ "4_8"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.73205 │
│ 496 │ "5_8"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 2.61803 │
│ 497 │ "2_5_8"             │ 3      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 0.0     │
│ 498 │ "6_8"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.73205 │
│ 499 │ "7_8"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 3.2255  │
│ 500 │ "9"                 │ 1      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.0     │
│ 501 │ "1_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.41421 │
│ 502 │ "2_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.22474 │
│ 503 │ "3_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.41421 │
│ 504 │ "4_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.22474 │
│ 505 │ "5_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 2.41421 │
│ 506 │ "1_5_9"             │ 3      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 0.0     │
│ 507 │ "6_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 3.2255  │
│ 508 │ "3_6_9"             │ 3      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 0.0     │
│ 509 │ "7_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 1.41421 │
│ 510 │ "8_9"               │ 2      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 3.2255  │
│ 511 │ "7_8_9"             │ 3      │ 0.0   │ 0.0      │ 0.0        │ 0.0        │ 0.0     │ 0.0     │

Plots.PlotlyBackend()
Created new window in existing browser session.
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table plot(1:size(evaluation_table, 1), [:Length :A :CN])
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: WARNING: No strict ticks found
: WARNING: No strict ticks found
: Created new window in existing browser session.

We can look at G-Efficiency, V- and G-Optimality separately, but still ordered
by values of D-Optimality:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table plot(1:size(evaluation_table, 1), [:GE :Length])
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: Created new window in existing browser session.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()
@df evaluation_table plot(1:size(evaluation_table, 1), [:V :G :Length])
#+END_SRC

#+RESULTS:
: Plots.PlotlyBackend()
: Created new window in existing browser session.

***** 100 Mixed-Level Factors with Linear Model (Not possible yet!)
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function build_linear_formula(factors::Int)
    linear_formula = Expr(:call)
    linear_formula.args = vcat(:+, [Symbol("x", i) for i = 1:factors])
    return Formula(:Y, linear_formula)
end

function main()
    levels = rand(2:3, 4)
    factors = [collect(1:l) for l in levels]

    #factors = [[-1,0,1], [-1,0,1], [-1,0,1], [-1,0,1]]

    formula = build_linear_formula(length(factors))

    println(factors)

    max_candidates = 500
    model_matrix, evaluation_table = measure_designs(factors, formula, max_candidates = max_candidates)

    sort!(evaluation_table, cols = :D, rev = true)

    return evaluation_table
end

evaluation_table = main()

plot_size = 1:round(Int, size(evaluation_table, 1) / 1.4)

plotly()

@df evaluation_table[plot_size, :] plot(plot_size, [:D :Length :A :V :G :GE])
#+END_SRC

#+RESULTS:
#+begin_example
build_linear_formula (generic function with 1 method)

main (generic function with 1 method)

Array{Int64,1}[[1, 2], [1, 2, 3], [1, 2], [1, 2]]
(24, 4)
500×8 DataFrames.DataFrame
│ Row │ Rows                               │ Length │ D            │ A           │ V           │
├─────┼────────────────────────────────────┼────────┼──────────────┼─────────────┼─────────────┤
│ 1   │ "1_2_3_4_5_6_7_8_9_10_11_13_14_17" │ 14     │ 174336.0     │ 1.36454     │ 0.0979397   │
│ 2   │ "1_2_4_5_6_7_8_9_11_12_14_15_16"   │ 13     │ 127040.0     │ 1.28161     │ 0.0772013   │
│ 3   │ "2_3_4_5_6_7_8_10_11_12_13_14_16"  │ 13     │ 109568.0     │ 1.35339     │ 0.0939071   │
│ 4   │ "2_3_4_5_6_7_10_11_12_13_14_15_16" │ 13     │ 107264.0     │ 1.32249     │ 0.0798161   │
│ 5   │ "1_2_3_4_5_6_8_9_10_12_14_15_17"   │ 13     │ 102912.0     │ 1.26959     │ 0.0665349   │
│ 6   │ "2_3_4_5_6_7_8_11_12_13_14_17"     │ 12     │ 98048.0      │ 1.5452      │ 0.171308    │
│ 7   │ "1_2_3_5_6_7_8_9_10_11_12_15_17"   │ 13     │ 88128.0      │ 1.69608     │ 0.213146    │
│ 8   │ "1_3_6_7_8_9_10_11_12_13_14_17"    │ 12     │ 84480.0      │ 1.4322      │ 0.120074    │
│ 9   │ "1_2_4_6_7_9_10_11_12_13_14_17"    │ 12     │ 80768.0      │ 1.71434     │ 0.243879    │
│ 10  │ "1_2_3_5_6_7_8_9_11_14_15_17"      │ 12     │ 76160.0      │ 1.6166      │ 0.183458    │
│ 11  │ "1_4_6_7_8_9_11_12_13_14_15_16"    │ 12     │ 73216.0      │ 1.53409     │ 0.149217    │
│ 12  │ "1_3_4_6_7_8_9_11_12_13_15_16"     │ 12     │ 66560.0      │ 1.51442     │ 0.133049    │
│ 13  │ "1_2_3_6_7_8_9_10_12_14_15_16"     │ 12     │ 66176.0      │ 1.3293      │ 0.079109    │
│ 14  │ "1_2_4_5_6_8_9_12_13_14_17"        │ 11     │ 61952.0      │ 1.53461     │ 0.16361     │
│ 15  │ "1_2_4_5_6_7_8_10_13_14_15_16"     │ 12     │ 61952.0      │ 1.61364     │ 0.180039    │
│ 16  │ "1_2_5_6_9_10_11_12_13_14_17"      │ 11     │ 61440.0      │ 1.51562     │ 0.149568    │
│ 17  │ "1_2_3_4_6_7_8_9_12_13_15_16"      │ 12     │ 60544.0      │ 1.52167     │ 0.130525    │
│ 18  │ "1_3_6_7_8_9_10_11_12_13_15_17"    │ 12     │ 56448.0      │ 1.73724     │ 0.225139    │
│ 19  │ "2_4_5_6_7_8_11_12_13_15_16"       │ 11     │ 54528.0      │ 1.80927     │ 0.311347    │
│ 20  │ "1_3_5_6_7_8_9_11_13_14_17"        │ 11     │ 52992.0      │ 1.70713     │ 0.234918    │
│ 21  │ "1_2_3_4_6_7_8_9_10_11_13_14"      │ 12     │ 51968.0      │ 1.8202      │ 0.270993    │
│ 22  │ "2_3_4_5_6_7_8_9_10_12_15_16"      │ 12     │ 51968.0      │ 1.56435     │ 0.147597    │
│ 23  │ "1_2_5_6_9_10_11_13_14_15_17"      │ 11     │ 51456.0      │ 1.73881     │ 0.248425    │
│ 24  │ "1_2_3_4_5_6_9_11_12_13_15_16"     │ 12     │ 50688.0      │ 1.69981     │ 0.189336    │
⋮
│ 476 │ "2_4_10_12_13_15"                  │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 477 │ "3_5_10_12_13_15"                  │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 478 │ "1_2_3_6_14_15"                    │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 479 │ "1_3_6_13_14_15"                   │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 480 │ "1_3_4_5_6_13_14_15"               │ 8      │ 0.0          │ 0.0         │ 0.0         │
│ 481 │ "1_2_4_16"                         │ 4      │ 0.0          │ 0.0         │ 0.0         │
│ 482 │ "4_5_12_16"                        │ 4      │ 0.0          │ 0.0         │ 0.0         │
│ 483 │ "8_9_10_13_16"                     │ 5      │ 0.0          │ 0.0         │ 0.0         │
│ 484 │ "4_6_9_14_16"                      │ 5      │ 0.0          │ 0.0         │ 0.0         │
│ 485 │ "4_6_7_11_14_16"                   │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 486 │ "1_2_3_4_6_13_14_16"               │ 8      │ 0.0          │ 0.0         │ 0.0         │
│ 487 │ "7_9_10_13_14_16"                  │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 488 │ "1_2_13_17"                        │ 4      │ 0.0          │ 0.0         │ 0.0         │
│ 489 │ "2_3_5_6_14_17"                    │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 490 │ "1_2_3_4_5_6_14_17"                │ 8      │ 0.0          │ 0.0         │ 0.0         │
│ 491 │ "2_3_4_6_13_14_17"                 │ 7      │ 0.0          │ 0.0         │ 0.0         │
│ 492 │ "1_2_15_17"                        │ 4      │ 0.0          │ 0.0         │ 0.0         │
│ 493 │ "6_8_15_17"                        │ 4      │ 0.0          │ 0.0         │ 0.0         │
│ 494 │ "3_5_8_10_12_15_17"                │ 7      │ 0.0          │ 0.0         │ 0.0         │
│ 495 │ "1_8_10_13_15_17"                  │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 496 │ "5_7_11_13_15_17"                  │ 6      │ 0.0          │ 0.0         │ 0.0         │
│ 497 │ "2_3_4_6_13_14_15_17"              │ 8      │ 0.0          │ 0.0         │ 0.0         │
│ 498 │ "1_10_12_14"                       │ 4      │ -2.84217e-14 │ -3.94065e15 │ -1.52983e46 │
│ 499 │ "9_10_11_15_16"                    │ 5      │ -5.68434e-14 │ -6.7554e15  │ -6.16571e46 │
│ 500 │ "6_8_12_15_17"                     │ 5      │ -2.84217e-13 │ -3.3777e15  │ -7.70714e45 │

│ Row │ G           │ GE           │ CN         │
├─────┼─────────────┼──────────────┼────────────┤
│ 1   │ 1.16827     │ 30.5703      │ 10.3444    │
│ 2   │ 0.841723    │ 45.6938      │ 8.96415    │
│ 3   │ 0.994764    │ 38.664       │ 9.06919    │
│ 4   │ 0.860334    │ 44.7054      │ 8.97038    │
│ 5   │ 0.732751    │ 52.4892      │ 9.07315    │
│ 6   │ 1.72977     │ 24.0879      │ 9.91538    │
│ 7   │ 2.35263     │ 16.3483      │ 11.2742    │
│ 8   │ 1.17794     │ 35.3724      │ 9.09225    │
│ 9   │ 2.4406      │ 17.0723      │ 10.0845    │
│ 10  │ 1.89188     │ 22.024       │ 10.6515    │
│ 11  │ 1.46084     │ 28.5223      │ 8.97519    │
│ 12  │ 1.34224     │ 31.0426      │ 9.48025    │
│ 13  │ 0.775021    │ 53.762       │ 8.30956    │
│ 14  │ 1.52873     │ 29.7336      │ 9.33012    │
│ 15  │ 1.77668     │ 23.4519      │ 9.85045    │
│ 16  │ 1.38634     │ 32.7874      │ 9.10946    │
│ 17  │ 1.3248      │ 31.4513      │ 9.52488    │
│ 18  │ 2.26689     │ 18.3806      │ 10.3673    │
│ 19  │ 2.84357     │ 15.985       │ 9.878      │
│ 20  │ 2.20014     │ 20.6599      │ 10.5508    │
│ 21  │ 2.72524     │ 15.2892      │ 10.8518    │
│ 22  │ 1.47635     │ 28.2227      │ 9.52096    │
│ 23  │ 2.33044     │ 19.5047      │ 10.1973    │
│ 24  │ 1.94489     │ 21.4237      │ 10.7267    │
⋮
│ 476 │ 0.0         │ 0.0          │ 2.81839e16 │
│ 477 │ 0.0         │ 0.0          │ 4.27721e16 │
│ 478 │ 0.0         │ 0.0          │ 2.20138e16 │
│ 479 │ 0.0         │ 0.0          │ 2.07159e16 │
│ 480 │ 0.0         │ 0.0          │ 6.12597e16 │
│ 481 │ 0.0         │ 0.0          │ 8.62508    │
│ 482 │ 0.0         │ 0.0          │ 7.07444    │
│ 483 │ 0.0         │ 0.0          │ 4.00817e16 │
│ 484 │ 0.0         │ 0.0          │ 0.0        │
│ 485 │ 0.0         │ 0.0          │ 3.31362e16 │
│ 486 │ 0.0         │ 0.0          │ 4.48713e16 │
│ 487 │ 0.0         │ 0.0          │ 1.54192e16 │
│ 488 │ 0.0         │ 0.0          │ 6.50818    │
│ 489 │ 0.0         │ 0.0          │ 2.4104e16  │
│ 490 │ 0.0         │ 0.0          │ 2.88515e16 │
│ 491 │ 0.0         │ 0.0          │ 3.86407e16 │
│ 492 │ 0.0         │ 0.0          │ 10.904     │
│ 493 │ 0.0         │ 0.0          │ 11.6097    │
│ 494 │ 0.0         │ 0.0          │ 4.73131e16 │
│ 495 │ 0.0         │ 0.0          │ 1.54028e17 │
│ 496 │ 0.0         │ 0.0          │ 1.35152e17 │
│ 497 │ 0.0         │ 0.0          │ 4.14767e16 │
│ 498 │ -6.89614e15 │ -1.81261e-14 │ 7.62441    │
│ 499 │ -1.58769e15 │ -6.29844e-14 │ 2.01455e16 │
│ 500 │ -1.70292e14 │ -5.87225e-13 │ 2.4495e16  │

1:357

Plots.PlotlyBackend()

Created new window in existing browser session.
#+end_example
*** [2018-03-15 Thu]
**** Sampling Tools for Large D-Optimal Designs
The following script is able to unformly sample the space of all subsets of rows
for full factorial designs with more than a 100 factors. It performs parallel
sampling of rows of a design but not parallel whole design generation yet. It is
feasible with these tools to sample very large design spaces in a short time.

We can change values in the ~main~ function to explore different designs and
regions of designs. To use more processes, run the following block:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
addprocs(2)
#+END_SRC

#+RESULTS:
: ESS
: 2-element Array{Int64,1}:
:  2
:  3

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using IterTools, DataFrames, StatsBase, StatPlots

function build_linear_formula(factors::Int)
    linear_formula = Expr(:call)
    linear_formula.args = vcat(:+, [Symbol("x", i) for i = 1:factors])
    return Formula(:Y, linear_formula)
end

function get_model_variables(formula::DataFrames.Formula)
    variables = Array{Any, 1}()
    push!(variables, DataFrames.Terms(formula).terms...)
    return variables
end

function scale_orthogonal!(design::Array{Float64, 2},
                           factors::Array{T, 1}) where T<: Any
    design_range = (max(design[:,]...) + min(design[:,]...)) / 2

    for i = 1:size(design, 2)
        factor_range = (max(factors[i]...) - min(factors[i]...)) / 2
        design[:, i] = (design[:, i] - design_range) / factor_range
    end

    return design
end

function generate_model_matrix(formula::DataFrames.Formula,
                               design::Array{Float64, 2},
                               factors::Array{T, 1}) where T <: Any
    variables  = get_model_variables(formula)

    design     = DataFrame(scale_orthogonal!(design, factors))
    new_design = DataFrame(I = ones(size(design, 1)))

    for variable in variables
        if typeof(variable) == Expr && variable.args[1] == :&
            interaction             = Symbol(variable.args[2:end]...)
            new_design[interaction] = ones(size(design, 1))

            for s in variable.args[2:end]
                new_design[interaction] .*= design[s]
            end
        else
            new_design[variable] = float(design[variable])
        end
    end

    return new_design
end


function get_prediction_variances(model_matrix::Array{Float64, 2})
    information_matrix = model_matrix' * model_matrix

    if det(information_matrix) != 0.0
        dispersion_matrix = inv(information_matrix)
        rows              = size(dispersion_matrix, 1)

        prediction_variances = [dispersion_matrix[i, :]' * dispersion_matrix *
                                dispersion_matrix[i, :] for i = 1:rows]

        return prediction_variances
    else
        return 0.0
    end
end

function d_optimality(model_matrix::Array{Float64, 2})
    det_information_matrix = det(model_matrix' * model_matrix)

    if det_information_matrix < 0.0
        return 0.0
    else
        return ^(det_information_matrix, 1 / size(model_matrix, 2))
    end
end

function a_optimality(model_matrix::Array{Float64, 2})
    information_matrix = model_matrix' * model_matrix

    if det(information_matrix) != 0.0
        return trace(inv(information_matrix)) / size(model_matrix, 2)
    else
        return 0.0
    end

end

function v_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    rows                 = size(model_matrix, 1)

    return sum(prediction_variances) / rows
end

function g_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    return max(prediction_variances...)
end

function g_efficiency(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    max_variance         = max(prediction_variances...)

    g_e = size(model_matrix, 2) / max_variance

    if g_e == Inf
        return 0.0
    else
        return g_e
    end
end

function d_efficiency_lower_bound(model_matrix::Array{Float64, 2})
    g_e   = g_efficiency(model_matrix)
    d_elb = exp(1 - (1 / g_e))

    if d_elb == Inf
        return 0.0
    else
        return d_elb
    end
end

function condition_number(model_matrix::Array{Float64, 2})
    condition_number = cond(model_matrix)

    if condition_number == Inf
        return 0.0
    else
        return condition_number
    end
end

@everywhere begin
    function sample_full_factorial(factors::Array{T, 1}) where T <: Any
        return Array{Float64, 1}([rand(i) for i in factors])
    end

    function check_repeated_row(subset::SharedArray{Float64, 2}, row::Array{Float64, 1})
        for j = 1:size(subset, 1)
            if subset[j, :] == row
                return true
            end
        end

        return false
    end

    function full_factorial_subset(factors::Array{T, 1}, experiments::Int) where T <: Any
        subset = fill!(SharedArray{Float64, 2}(experiments, size(factors, 1)), 0.0)

        @sync @parallel for i = 1:experiments
            sample_row = sample_full_factorial(factors)

            while check_repeated_row(subset, sample_row)
                sample_row = sample_full_factorial(factors)
            end

            subset[i, :] = sample_row
        end

        return subset
    end
end

function generate_designs(factors::Array{T, 1},
                          formula::DataFrames.Formula,
                          sample_range::UnitRange{Int},
                          designs::Int) where T <: Any
    println("> Factors: ", factors)

    full_factorial_size = prod(length, factors)
    full_factorial_subsets = 2.0 ^ full_factorial_size

    println("> Full Factorial Size: ", full_factorial_size)
    println("> Total Subsets: ", full_factorial_subsets)
    println("> Range of Design Sizes: ", sample_range)
    println("> Number of Design to Sample: ", designs)

    if designs > full_factorial_subsets
        println("> Requested too many designs, using ",
                full_factorial_subsets, " instead")

        designs = full_factorial_subsets
    end

    if sample_range.stop > full_factorial_size
        println("> Requested too many maximum experiments, using ",
                full_factorial_size, " instead")
        sample_range = sample_range.start:full_factorial_size
    end

    evaluation = DataFrame(Length = [],
                           D      = [],
                           log10D = [],
                           DELB   = [],
                           A      = [],
                           V      = [],
                           G      = [],
                           CN     = [],
                           log2CN = [],
                           GE     = [])


    for i in 1:designs
        samples      = rand(sample_range)
        subset       = full_factorial_subset(factors, samples)
        model_matrix = generate_model_matrix(formula, Array{Float64, 2}(subset), factors)
        candidate    = Array(model_matrix)

        d_opt = d_optimality(candidate)
        c_n   = condition_number(candidate)

        push!(evaluation, [size(candidate, 1),
                           d_opt,
                           log(10, abs(d_opt)),
                           d_efficiency_lower_bound(candidate),
                           a_optimality(candidate),
                           v_optimality(candidate),
                           g_optimality(candidate),
                           c_n,
                           log(2, abs(c_n)),
                           g_efficiency(candidate)])
    end

    return evaluation
end

function main()
    factors = [Array{Float64, 1}(1:3) for i = 1:4]

    formula = build_linear_formula(length(factors))
    #formula = @formula(y ~ x1 + x2 + x3)

    sample_range = (length(factors) - 1):(length(factors) + 12)
    designs = 1000

    run_time = @elapsed sampling_subset = generate_designs(factors,
                                                           formula,
                                                           sample_range,
                                                           designs)

    println("> Elapsed Time: ", run_time, " seconds")

    sort!(sampling_subset, cols = :D, rev = true)

    println(sampling_subset)

    plotly()

    ymax = max(sampling_subset[:Length]..., sampling_subset[:D]...)

    @df sampling_subset plot(1:size(sampling_subset, 1),
                             [:D :DELB :log2CN :Length],
                             ylims = (-1, ymax + 2))
end

main()
#+END_SRC

#+RESULTS:
#+begin_example


build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

main (generic function with 1 method)

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 3:16
Number of Design to Sample: 1000
Elapsed Time: 11.188393545 seconds
1000×10 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB    │ A           │ V           │ G           │ CN         │
├──────┼────────┼─────────┼─────────┼─────────┼─────────────┼─────────────┼─────────────┼────────────┤
│ 1    │ 16.0   │ 12.293  │ 1.08966 │ 2.71704 │ 0.0897175   │ 0.000396268 │ 0.00229005  │ 1.86499    │
│ 2    │ 15.0   │ 11.9636 │ 1.07786 │ 2.7176  │ 0.0878764   │ 0.00029384  │ 0.00124747  │ 1.61157    │
│ 3    │ 16.0   │ 11.7633 │ 1.07053 │ 2.71615 │ 0.0979578   │ 0.00059445  │ 0.00391766  │ 2.13255    │
│ 4    │ 16.0   │ 11.615  │ 1.06502 │ 2.71702 │ 0.0955656   │ 0.000469018 │ 0.0023253   │ 1.91024    │
│ 5    │ 16.0   │ 11.5907 │ 1.06411 │ 2.71633 │ 0.0949263   │ 0.000466495 │ 0.00359985  │ 1.85611    │
│ 6    │ 16.0   │ 11.5188 │ 1.06141 │ 2.71744 │ 0.0947689   │ 0.000407718 │ 0.00154444  │ 1.8452     │
│ 7    │ 16.0   │ 11.4722 │ 1.05965 │ 2.71691 │ 0.0953421   │ 0.000461105 │ 0.00251849  │ 1.8162     │
│ 8    │ 16.0   │ 11.2997 │ 1.05307 │ 2.71746 │ 0.093474    │ 0.000330476 │ 0.00151177  │ 1.62589    │
│ 9    │ 16.0   │ 11.2703 │ 1.05193 │ 2.71699 │ 0.0955981   │ 0.00038521  │ 0.00236818  │ 1.71547    │
│ 10   │ 16.0   │ 11.2247 │ 1.05018 │ 2.71493 │ 0.101495    │ 0.000721892 │ 0.00617478  │ 2.00033    │
│ 11   │ 16.0   │ 11.2046 │ 1.0494  │ 2.71694 │ 0.0985322   │ 0.000472292 │ 0.00246126  │ 1.83623    │
│ 12   │ 16.0   │ 11.1976 │ 1.04913 │ 2.71375 │ 0.108248    │ 0.00112457  │ 0.00834572  │ 2.40079    │
│ 13   │ 16.0   │ 11.1958 │ 1.04905 │ 2.71676 │ 0.0965481   │ 0.000443966 │ 0.00280521  │ 1.73032    │
│ 14   │ 16.0   │ 11.155  │ 1.04747 │ 2.71719 │ 0.099472    │ 0.000477137 │ 0.0020054   │ 2.03884    │
│ 15   │ 16.0   │ 11.1436 │ 1.04702 │ 2.717   │ 0.0956133   │ 0.000396745 │ 0.00235374  │ 1.6407     │
│ 16   │ 16.0   │ 11.0166 │ 1.04205 │ 2.7163  │ 0.0996943   │ 0.000503004 │ 0.00365117  │ 1.71681    │
│ 17   │ 16.0   │ 10.9662 │ 1.04006 │ 2.7148  │ 0.110945    │ 0.00117475  │ 0.00640735  │ 2.3353     │
│ 18   │ 15.0   │ 10.9385 │ 1.03896 │ 2.71687 │ 0.0974968   │ 0.000455769 │ 0.00260611  │ 1.71577    │
│ 19   │ 16.0   │ 10.9326 │ 1.03872 │ 2.717   │ 0.102052    │ 0.000545984 │ 0.00235039  │ 1.87373    │
│ 20   │ 15.0   │ 10.9014 │ 1.03748 │ 2.71645 │ 0.102273    │ 0.000664088 │ 0.00336333  │ 1.9923     │
│ 21   │ 16.0   │ 10.8897 │ 1.03702 │ 2.71611 │ 0.1097      │ 0.000874836 │ 0.00399988  │ 2.13328    │
│ 22   │ 16.0   │ 10.8491 │ 1.03539 │ 2.71496 │ 0.109059    │ 0.00092972  │ 0.00611631  │ 2.26763    │
│ 23   │ 16.0   │ 10.801  │ 1.03347 │ 2.7144  │ 0.108729    │ 0.000927781 │ 0.0071503   │ 2.25412    │
│ 24   │ 16.0   │ 10.7995 │ 1.0334  │ 2.71433 │ 0.106775    │ 0.000903888 │ 0.00728064  │ 2.02265    │
⋮
│ 976  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.24103    │
│ 977  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.72938    │
│ 978  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ -2.92734e15 │ -7.83916e47 │ -4.02008e46 │ 3.1006     │
│ 979  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.64575    │
│ 980  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.52114    │
│ 981  │ 5.0    │ 0.0     │ -Inf    │ 0.0     │ -7.72046e14 │ -1.15045e46 │ -2.13297e14 │ 2.40961e16 │
│ 982  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 6.78073    │
│ 983  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ -9.0072e14  │ -2.2836e46  │ -1.1418e46  │ 3.6587     │
│ 984  │ 5.0    │ 0.0     │ -Inf    │ 0.0     │ -1.35108e15 │ -6.16571e46 │ -1.1259e15  │ 0.0        │
│ 985  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 9.46036    │
│ 986  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 1.73596    │
│ 987  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.77034    │
│ 988  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.53263    │
│ 989  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.26091    │
│ 990  │ 5.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 1.58811e16 │
│ 991  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ -9.0072e15  │ -2.2836e49  │ -7.81875e16 │ 2.93352    │
│ 992  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 7.86548    │
│ 993  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.18614    │
│ 994  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 9.41792    │
│ 995  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.11847    │
│ 996  │ 5.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 1.98175e16 │
│ 997  │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.68694    │
│ 998  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 1.84501    │
│ 999  │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.63912    │
│ 1000 │ 3.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.99568    │

│ Row  │ log2CN   │ GE           │
├──────┼──────────┼──────────────┤
│ 1    │ 0.89917  │ 2183.36      │
│ 2    │ 0.688469 │ 4008.1       │
│ 3    │ 1.09258  │ 1276.27      │
│ 4    │ 0.933752 │ 2150.26      │
│ 5    │ 0.892286 │ 1388.95      │
│ 6    │ 0.883781 │ 3237.42      │
│ 7    │ 0.860925 │ 1985.32      │
│ 8    │ 0.701231 │ 3307.39      │
│ 9    │ 0.778608 │ 2111.33      │
│ 10   │ 1.00024  │ 809.746      │
│ 11   │ 0.876744 │ 2031.48      │
│ 12   │ 1.26351  │ 599.11       │
│ 13   │ 0.791038 │ 1782.4       │
│ 14   │ 1.02775  │ 2493.27      │
│ 15   │ 0.714308 │ 2124.28      │
│ 16   │ 0.779727 │ 1369.42      │
│ 17   │ 1.22361  │ 780.353      │
│ 18   │ 0.778857 │ 1918.57      │
│ 19   │ 0.905911 │ 2127.3       │
│ 20   │ 0.994438 │ 1486.62      │
│ 21   │ 1.09307  │ 1250.04      │
│ 22   │ 1.18118  │ 817.486      │
│ 23   │ 1.17256  │ 699.271      │
│ 24   │ 1.01624  │ 686.753      │
⋮
│ 976  │ 2.08441  │ 0.0          │
│ 977  │ 1.44857  │ 0.0          │
│ 978  │ 1.63255  │ -1.24376e-46 │
│ 979  │ 1.40368  │ 0.0          │
│ 980  │ 2.17669  │ 0.0          │
│ 981  │ 54.4196  │ -2.34415e-14 │
│ 982  │ 2.76144  │ 0.0          │
│ 983  │ 1.87133  │ -4.37906e-46 │
│ 984  │ -Inf     │ -4.44089e-15 │
│ 985  │ 3.2419   │ 0.0          │
│ 986  │ 0.795732 │ 0.0          │
│ 987  │ 2.25409  │ 0.0          │
│ 988  │ 1.34064  │ 0.0          │
│ 989  │ 1.1769   │ 0.0          │
│ 990  │ 53.8182  │ 0.0          │
│ 991  │ 1.55263  │ -6.39488e-17 │
│ 992  │ 2.97553  │ 0.0          │
│ 993  │ 1.67181  │ 0.0          │
│ 994  │ 3.23541  │ 0.0          │
│ 995  │ 2.35571  │ 0.0          │
│ 996  │ 54.1376  │ 0.0          │
│ 997  │ 1.88242  │ 0.0          │
│ 998  │ 0.883626 │ 0.0          │
│ 999  │ 1.40006  │ 0.0          │
│ 1000 │ 1.99844  │ 0.0          │
Created new window in existing browser session.
#+end_example

With these tools we can then explore more regions of a small design space, what
happens when we increase the design space, and what is the behaviour for
multi-level designs.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function main()
    factors = [Array{Float64, 1}(1:3) for i = 1:4]

    formula = build_linear_formula(length(factors))
    #formula = @formula(y ~ x1 * x2)

    sample_range = (length(factors) + 1):(prod(length, factors))
    designs = 1000

    run_time = @elapsed sampling_subset = generate_designs(factors,
                                                           formula,
                                                           sample_range,
                                                           designs)

    println("> Elapsed Time: ", run_time, " seconds")

    sort!(sampling_subset, cols = :D, rev = true)

    return sampling_subset
end

sampling_subset = main()
#+END_SRC

#+RESULTS:
#+begin_example
main (generic function with 1 method)

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 5:81
Number of Design to Sample: 1000
Elapsed Time: 2.752771991 seconds
1000×10 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D       │ DELB         │ A           │ V           │ G           │
├──────┼────────┼─────────┼──────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
│ 1    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 2    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 3    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 4    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 5    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 6    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 7    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 8    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 9    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 10   │ 81.0   │ 58.3266 │ 1.76587      │ 2.71828      │ 0.0173634   │ 3.42456e-7  │ 6.73926e-6  │
│ 11   │ 81.0   │ 58.2844 │ 1.76555      │ 2.71828      │ 0.01739     │ 3.45825e-7  │ 6.77112e-6  │
│ 12   │ 79.0   │ 58.2334 │ 1.76517      │ 2.71828      │ 0.0173676   │ 3.49659e-7  │ 6.73867e-6  │
│ 13   │ 80.0   │ 58.145  │ 1.76451      │ 2.71828      │ 0.0174163   │ 3.5021e-7   │ 7.17738e-6  │
│ 14   │ 81.0   │ 58.0963 │ 1.76415      │ 2.71828      │ 0.0174408   │ 3.4783e-7   │ 6.75521e-6  │
│ 15   │ 80.0   │ 57.9713 │ 1.76321      │ 2.71828      │ 0.0174603   │ 3.51765e-7  │ 6.7394e-6   │
│ 16   │ 80.0   │ 57.9713 │ 1.76321      │ 2.71828      │ 0.0174603   │ 3.51765e-7  │ 6.7394e-6   │
│ 17   │ 80.0   │ 57.9713 │ 1.76321      │ 2.71828      │ 0.0174603   │ 3.51765e-7  │ 6.7394e-6   │
│ 18   │ 80.0   │ 57.9553 │ 1.76309      │ 2.71828      │ 0.0174706   │ 3.53111e-7  │ 7.14216e-6  │
│ 19   │ 80.0   │ 57.9298 │ 1.7629       │ 2.71828      │ 0.0174864   │ 3.55071e-7  │ 7.15854e-6  │
│ 20   │ 81.0   │ 57.8748 │ 1.76249      │ 2.71828      │ 0.0175148   │ 3.53096e-7  │ 6.77106e-6  │
│ 21   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
│ 22   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
│ 23   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
│ 24   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
⋮
│ 976  │ 7.0    │ 2.62231 │ 0.418684     │ 0.0071549    │ 1.0         │ 5.56682     │ 29.6998     │
│ 977  │ 6.0    │ 2.48099 │ 0.394626     │ 0.118988     │ 0.891489    │ 5.02169     │ 15.6436     │
│ 978  │ 6.0    │ 2.44848 │ 0.388897     │ 1.7122e-7    │ 1.23182     │ 23.8764     │ 82.9016     │
│ 979  │ 7.0    │ 2.39621 │ 0.379525     │ 0.636535     │ 0.878481    │ 2.4323      │ 7.25858     │
│ 980  │ 5.0    │ 2.2974  │ 0.361236     │ 0.00541409   │ 1.05        │ 9.35625     │ 31.0938     │
│ 981  │ 6.0    │ 2.2974  │ 0.361236     │ 5.02353e-10  │ 1.4625      │ 40.9921     │ 112.059     │
│ 982  │ 5.0    │ 2.2974  │ 0.361236     │ 0.110113     │ 0.95        │ 7.8875      │ 16.0313     │
│ 983  │ 6.0    │ 2.22064 │ 0.346479     │ 0.0776699    │ 0.92963     │ 5.76074     │ 17.7764     │
│ 984  │ 5.0    │ 2.04767 │ 0.311261     │ 0.0688431    │ 0.933333    │ 6.13704     │ 18.3796     │
│ 985  │ 6.0    │ 2.0     │ 0.30103      │ 9.25079e-261 │ 3.6625      │ 875.899     │ 2998.75     │
│ 986  │ 5.0    │ 1.90365 │ 0.279588     │ 0.0229142    │ 1.08        │ 9.0192      │ 23.88       │
│ 987  │ 5.0    │ 1.7411  │ 0.240824     │ 2.91288e-34  │ 2.2         │ 173.163     │ 391.094     │
│ 988  │ 5.0    │ 1.7411  │ 0.240824     │ 7.17463e-124 │ 3.4         │ 766.075     │ 1422.75     │
│ 989  │ 6.0    │ 1.51572 │ 0.180618     │ 2.25987e-44  │ 2.45        │ 184.909     │ 507.492     │
│ 990  │ 5.0    │ 1.31951 │ 0.120412     │ 0.0          │ 9.0         │ 16118.4     │ 40658.7     │
│ 991  │ 5.0    │ 1.31951 │ 0.120412     │ 0.0          │ 4.6         │ 1686.85     │ 4099.75     │
│ 992  │ 5.0    │ 1.31951 │ 0.120412     │ 0.0          │ 5.9         │ 4220.53     │ 10237.0     │
│ 993  │ 5.0    │ 1.0     │ 3.85731e-16  │ 0.0          │ 27.0        │ 475932.0    │ 1.60288e6   │
│ 994  │ 5.0    │ 1.0     │ -4.82164e-17 │ 4.43138e-73  │ 3.4         │ 371.8       │ 838.0       │
│ 995  │ 6.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 996  │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 997  │ 8.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 998  │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ -1.20096e15 │ -4.33038e46 │ -6.41179e15 │
│ 999  │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 1000 │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │

│ Row  │ CN         │ log2CN   │ GE           │
├──────┼────────────┼──────────┼──────────────┤
│ 1    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 2    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 3    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 4    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 5    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 6    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 7    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 8    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 9    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 10   │ 1.24974    │ 0.321623 │ 7.41922e5    │
│ 11   │ 1.27354    │ 0.348847 │ 738430.0     │
│ 12   │ 1.23342    │ 0.302664 │ 7.41987e5    │
│ 13   │ 1.25761    │ 0.330685 │ 6.96633e5    │
│ 14   │ 1.26052    │ 0.334021 │ 7.4017e5     │
│ 15   │ 1.24175    │ 0.312375 │ 7.41906e5    │
│ 16   │ 1.24175    │ 0.312375 │ 7.41906e5    │
│ 17   │ 1.24175    │ 0.312375 │ 7.41906e5    │
│ 18   │ 1.25192    │ 0.324141 │ 7.00068e5    │
│ 19   │ 1.26113    │ 0.334714 │ 6.98466e5    │
│ 20   │ 1.27195    │ 0.347043 │ 7.38437e5    │
│ 21   │ 1.25452    │ 0.32714  │ 740160.0     │
│ 22   │ 1.25452    │ 0.32714  │ 740160.0     │
│ 23   │ 1.25452    │ 0.32714  │ 740160.0     │
│ 24   │ 1.25452    │ 0.32714  │ 740160.0     │
⋮
│ 976  │ 6.00167    │ 2.58536  │ 0.168351     │
│ 977  │ 6.12464    │ 2.61462  │ 0.319619     │
│ 978  │ 6.13256    │ 2.61649  │ 0.0603125    │
│ 979  │ 5.33275    │ 2.41488  │ 0.68884      │
│ 980  │ 6.17304    │ 2.62598  │ 0.160804     │
│ 981  │ 7.36163    │ 2.88003  │ 0.0446195    │
│ 982  │ 5.57398    │ 2.47871  │ 0.311891     │
│ 983  │ 5.65455    │ 2.49941  │ 0.281271     │
│ 984  │ 5.7534     │ 2.52441  │ 0.27204      │
│ 985  │ 13.076     │ 3.70885  │ 0.00166736   │
│ 986  │ 6.12527    │ 2.61477  │ 0.20938      │
│ 987  │ 9.44203    │ 3.2391   │ 0.0127847    │
│ 988  │ 12.5386    │ 3.64831  │ 0.00351432   │
│ 989  │ 9.49011    │ 3.24643  │ 0.00985237   │
│ 990  │ 20.2142    │ 4.3373   │ 0.000122975  │
│ 991  │ 12.8878    │ 3.68793  │ 0.00121959   │
│ 992  │ 16.0716    │ 4.00645  │ 0.000488424  │
│ 993  │ 32.5392    │ 5.02411  │ 3.11938e-6   │
│ 994  │ 10.468     │ 3.38791  │ 0.00596659   │
│ 995  │ 1.22611e16 │ 53.4449  │ 0.0          │
│ 996  │ 3.02145e17 │ 58.068   │ 0.0          │
│ 997  │ 3.26156e16 │ 54.8564  │ 0.0          │
│ 998  │ 1.11104e17 │ 56.6247  │ -7.79813e-16 │
│ 999  │ 5.56152e16 │ 55.6263  │ 0.0          │
│ 1000 │ 2.03482e16 │ 54.1758  │ 0.0          │
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()

#unique_samples = unique(sampling_subset, :DELB)
unique_samples = sampling_subset

ymax = max(unique_samples[:Length]..., unique_samples[:D]...)

@df unique_samples plot(1:size(unique_samples, 1),
                        [:D :DELB :Length],
                        ylims = (-1, ymax + 2))
#+END_SRC

#+RESULTS:
#+begin_example
Plots.PlotlyBackend()


1000×10 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D       │ DELB         │ A           │ V           │ G           │
├──────┼────────┼─────────┼──────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
│ 1    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 2    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 3    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 4    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 5    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 6    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 7    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 8    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 9    │ 81.0   │ 58.5615 │ 1.76761      │ 2.71828      │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │
│ 10   │ 81.0   │ 58.3266 │ 1.76587      │ 2.71828      │ 0.0173634   │ 3.42456e-7  │ 6.73926e-6  │
│ 11   │ 81.0   │ 58.2844 │ 1.76555      │ 2.71828      │ 0.01739     │ 3.45825e-7  │ 6.77112e-6  │
│ 12   │ 79.0   │ 58.2334 │ 1.76517      │ 2.71828      │ 0.0173676   │ 3.49659e-7  │ 6.73867e-6  │
│ 13   │ 80.0   │ 58.145  │ 1.76451      │ 2.71828      │ 0.0174163   │ 3.5021e-7   │ 7.17738e-6  │
│ 14   │ 81.0   │ 58.0963 │ 1.76415      │ 2.71828      │ 0.0174408   │ 3.4783e-7   │ 6.75521e-6  │
│ 15   │ 80.0   │ 57.9713 │ 1.76321      │ 2.71828      │ 0.0174603   │ 3.51765e-7  │ 6.7394e-6   │
│ 16   │ 80.0   │ 57.9713 │ 1.76321      │ 2.71828      │ 0.0174603   │ 3.51765e-7  │ 6.7394e-6   │
│ 17   │ 80.0   │ 57.9713 │ 1.76321      │ 2.71828      │ 0.0174603   │ 3.51765e-7  │ 6.7394e-6   │
│ 18   │ 80.0   │ 57.9553 │ 1.76309      │ 2.71828      │ 0.0174706   │ 3.53111e-7  │ 7.14216e-6  │
│ 19   │ 80.0   │ 57.9298 │ 1.7629       │ 2.71828      │ 0.0174864   │ 3.55071e-7  │ 7.15854e-6  │
│ 20   │ 81.0   │ 57.8748 │ 1.76249      │ 2.71828      │ 0.0175148   │ 3.53096e-7  │ 6.77106e-6  │
│ 21   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
│ 22   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
│ 23   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
│ 24   │ 80.0   │ 57.7437 │ 1.7615       │ 2.71828      │ 0.0175374   │ 3.57276e-7  │ 6.7553e-6   │
⋮
│ 976  │ 7.0    │ 2.62231 │ 0.418684     │ 0.0071549    │ 1.0         │ 5.56682     │ 29.6998     │
│ 977  │ 6.0    │ 2.48099 │ 0.394626     │ 0.118988     │ 0.891489    │ 5.02169     │ 15.6436     │
│ 978  │ 6.0    │ 2.44848 │ 0.388897     │ 1.7122e-7    │ 1.23182     │ 23.8764     │ 82.9016     │
│ 979  │ 7.0    │ 2.39621 │ 0.379525     │ 0.636535     │ 0.878481    │ 2.4323      │ 7.25858     │
│ 980  │ 5.0    │ 2.2974  │ 0.361236     │ 0.00541409   │ 1.05        │ 9.35625     │ 31.0938     │
│ 981  │ 6.0    │ 2.2974  │ 0.361236     │ 5.02353e-10  │ 1.4625      │ 40.9921     │ 112.059     │
│ 982  │ 5.0    │ 2.2974  │ 0.361236     │ 0.110113     │ 0.95        │ 7.8875      │ 16.0313     │
│ 983  │ 6.0    │ 2.22064 │ 0.346479     │ 0.0776699    │ 0.92963     │ 5.76074     │ 17.7764     │
│ 984  │ 5.0    │ 2.04767 │ 0.311261     │ 0.0688431    │ 0.933333    │ 6.13704     │ 18.3796     │
│ 985  │ 6.0    │ 2.0     │ 0.30103      │ 9.25079e-261 │ 3.6625      │ 875.899     │ 2998.75     │
│ 986  │ 5.0    │ 1.90365 │ 0.279588     │ 0.0229142    │ 1.08        │ 9.0192      │ 23.88       │
│ 987  │ 5.0    │ 1.7411  │ 0.240824     │ 2.91288e-34  │ 2.2         │ 173.163     │ 391.094     │
│ 988  │ 5.0    │ 1.7411  │ 0.240824     │ 7.17463e-124 │ 3.4         │ 766.075     │ 1422.75     │
│ 989  │ 6.0    │ 1.51572 │ 0.180618     │ 2.25987e-44  │ 2.45        │ 184.909     │ 507.492     │
│ 990  │ 5.0    │ 1.31951 │ 0.120412     │ 0.0          │ 9.0         │ 16118.4     │ 40658.7     │
│ 991  │ 5.0    │ 1.31951 │ 0.120412     │ 0.0          │ 4.6         │ 1686.85     │ 4099.75     │
│ 992  │ 5.0    │ 1.31951 │ 0.120412     │ 0.0          │ 5.9         │ 4220.53     │ 10237.0     │
│ 993  │ 5.0    │ 1.0     │ 3.85731e-16  │ 0.0          │ 27.0        │ 475932.0    │ 1.60288e6   │
│ 994  │ 5.0    │ 1.0     │ -4.82164e-17 │ 4.43138e-73  │ 3.4         │ 371.8       │ 838.0       │
│ 995  │ 6.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 996  │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 997  │ 8.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 998  │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ -1.20096e15 │ -4.33038e46 │ -6.41179e15 │
│ 999  │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │
│ 1000 │ 5.0    │ 0.0     │ -Inf         │ 0.0          │ 0.0         │ 0.0         │ 0.0         │

│ Row  │ CN         │ log2CN   │ GE           │
├──────┼────────────┼──────────┼──────────────┤
│ 1    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 2    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 3    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 4    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 5    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 6    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 7    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 8    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 9    │ 1.22474    │ 0.292481 │ 787320.0     │
│ 10   │ 1.24974    │ 0.321623 │ 7.41922e5    │
│ 11   │ 1.27354    │ 0.348847 │ 738430.0     │
│ 12   │ 1.23342    │ 0.302664 │ 7.41987e5    │
│ 13   │ 1.25761    │ 0.330685 │ 6.96633e5    │
│ 14   │ 1.26052    │ 0.334021 │ 7.4017e5     │
│ 15   │ 1.24175    │ 0.312375 │ 7.41906e5    │
│ 16   │ 1.24175    │ 0.312375 │ 7.41906e5    │
│ 17   │ 1.24175    │ 0.312375 │ 7.41906e5    │
│ 18   │ 1.25192    │ 0.324141 │ 7.00068e5    │
│ 19   │ 1.26113    │ 0.334714 │ 6.98466e5    │
│ 20   │ 1.27195    │ 0.347043 │ 7.38437e5    │
│ 21   │ 1.25452    │ 0.32714  │ 740160.0     │
│ 22   │ 1.25452    │ 0.32714  │ 740160.0     │
│ 23   │ 1.25452    │ 0.32714  │ 740160.0     │
│ 24   │ 1.25452    │ 0.32714  │ 740160.0     │
⋮
│ 976  │ 6.00167    │ 2.58536  │ 0.168351     │
│ 977  │ 6.12464    │ 2.61462  │ 0.319619     │
│ 978  │ 6.13256    │ 2.61649  │ 0.0603125    │
│ 979  │ 5.33275    │ 2.41488  │ 0.68884      │
│ 980  │ 6.17304    │ 2.62598  │ 0.160804     │
│ 981  │ 7.36163    │ 2.88003  │ 0.0446195    │
│ 982  │ 5.57398    │ 2.47871  │ 0.311891     │
│ 983  │ 5.65455    │ 2.49941  │ 0.281271     │
│ 984  │ 5.7534     │ 2.52441  │ 0.27204      │
│ 985  │ 13.076     │ 3.70885  │ 0.00166736   │
│ 986  │ 6.12527    │ 2.61477  │ 0.20938      │
│ 987  │ 9.44203    │ 3.2391   │ 0.0127847    │
│ 988  │ 12.5386    │ 3.64831  │ 0.00351432   │
│ 989  │ 9.49011    │ 3.24643  │ 0.00985237   │
│ 990  │ 20.2142    │ 4.3373   │ 0.000122975  │
│ 991  │ 12.8878    │ 3.68793  │ 0.00121959   │
│ 992  │ 16.0716    │ 4.00645  │ 0.000488424  │
│ 993  │ 32.5392    │ 5.02411  │ 3.11938e-6   │
│ 994  │ 10.468     │ 3.38791  │ 0.00596659   │
│ 995  │ 1.22611e16 │ 53.4449  │ 0.0          │
│ 996  │ 3.02145e17 │ 58.068   │ 0.0          │
│ 997  │ 3.26156e16 │ 54.8564  │ 0.0          │
│ 998  │ 1.11104e17 │ 56.6247  │ -7.79813e-16 │
│ 999  │ 5.56152e16 │ 55.6263  │ 0.0          │
│ 1000 │ 2.03482e16 │ 54.1758  │ 0.0          │

81.0

Created new window in existing browser session.
#+end_example
**** Defining D-Optimal Design Utilities                  :Stats:DOE:Code:
#+NAME: init_dopt_utils
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
if length(workers()) > 1
    rmprocs.(workers())
end

addprocs(2)

using IterTools, DataFrames, StatsBase, StatPlots

function build_linear_formula(factors::Int)
    linear_formula = Expr(:call)
    linear_formula.args = vcat(:+, [Symbol("x", i) for i = 1:factors])
    return Formula(:Y, linear_formula)
end

function get_model_variables(formula::DataFrames.Formula)
    variables = Array{Any, 1}()
    push!(variables, DataFrames.Terms(formula).terms...)
    return variables
end

function scale_orthogonal!(design::Array{Float64, 2},
                           factors::Array{T, 1}) where T <: Any
    design_range = (max(design[:,]...) + min(design[:,]...)) / 2

    for i = 1:size(design, 2)
        factor_range = (max(factors[i]...) - min(factors[i]...)) / 2
        design[:, i] = (design[:, i] - design_range) / factor_range
    end

    return design
end

function scale_box_encoding!(design::Array{Float64, 2},
                             factors::Array{T, 1}) where T <: Any
    for i = 1:size(design, 2)
        factor_mean = mean(design[:, i])
        design[:, i] = (design[:, i] .- factor_mean) /
                       sqrt((sum((design[:, i] .- factor_mean) .^ 2)) / 4.0)
    end

    return design
end

function generate_model_matrix(formula::DataFrames.Formula,
                               design::Array{Float64, 2},
                               factors::Array{T, 1};
                               scale::Function = scale_orthogonal!) where T <: Any
    variables  = get_model_variables(formula)

    design     = DataFrame(scale(design, factors))
    new_design = DataFrame(I = ones(size(design, 1)))

    for variable in variables
        if typeof(variable) == Expr && variable.args[1] == :&
            interaction             = Symbol(variable.args[2:end]...)
            new_design[interaction] = ones(size(design, 1))

            for s in variable.args[2:end]
                new_design[interaction] .*= design[s]
            end
        else
            new_design[variable] = float(design[variable])
        end
    end

    return new_design
end


function get_prediction_variances(model_matrix::Array{Float64, 2})
    information_matrix = model_matrix' * model_matrix

    if det(information_matrix) != 0.0
        dispersion_matrix = inv(information_matrix)
        rows              = size(dispersion_matrix, 1)

        prediction_variances = [dispersion_matrix[i, :]' * dispersion_matrix *
                                dispersion_matrix[i, :] for i = 1:rows]

        return prediction_variances
    else
        return 0.0
    end
end

function d_optimality(model_matrix::Array{Float64, 2})
    det_information_matrix = det(model_matrix' * model_matrix)

    if det_information_matrix < 0.0
        return 0.0
    else
        return ^(det_information_matrix, 1 / size(model_matrix, 2))
    end
end

function d_efficiency_lower_bound(model_matrix::Array{Float64, 2})
    return d_optimality(model_matrix) / size(model_matrix, 1)
end

function a_optimality(model_matrix::Array{Float64, 2})
    information_matrix = model_matrix' * model_matrix

    if det(information_matrix) != 0.0
        return trace(inv(information_matrix)) / size(model_matrix, 2)
    else
        return 0.0
    end

end

function v_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    rows                 = size(model_matrix, 1)

    return sum(prediction_variances) / rows
end

function g_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    return max(prediction_variances...)
end

function g_efficiency(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    max_variance         = max(prediction_variances...)

    g_e = size(model_matrix, 2) / max_variance

    if g_e == Inf
        return 0.0
    else
        return g_e
    end
end

function d_efficiency_lower_bound_algdesign(model_matrix::Array{Float64, 2})
    g_e   = g_efficiency(model_matrix)
    d_elb = exp(1 - (1 / g_e))

    if d_elb == Inf
        return 0.0
    else
        return d_elb
    end
end

function condition_number(model_matrix::Array{Float64, 2})
    condition_number = cond(model_matrix)

    if condition_number == Inf
        return 0.0
    else
        return condition_number
    end
end

@everywhere begin
    function sample_full_factorial(factors::Array{T, 1}) where T <: Any
        return Array{Float64, 1}([rand(i) for i in factors])
    end

    function check_repeated_row(subset::SharedArray{Float64, 2}, row::Array{Float64, 1})
        for j = 1:size(subset, 1)
            if subset[j, :] == row
                return true
            end
        end

        return false
    end

    function full_factorial_subset(factors::Array{T, 1}, experiments::Int) where T <: Any
        subset = fill!(SharedArray{Float64, 2}(experiments, size(factors, 1)), 0.0)

        @sync @parallel for i = 1:experiments
            sample_row = sample_full_factorial(factors)

            while check_repeated_row(subset, sample_row)
                sample_row = sample_full_factorial(factors)
            end

            subset[i, :] = sample_row
        end

        return subset
    end
end

function generate_designs(factors::Array{T, 1},
                          formula::DataFrames.Formula,
                          sample_range::UnitRange{Int},
                          designs::Int;
                          check_bounds::Bool = true,
                          scale::Function = scale_orthogonal!) where T <: Any
    println("> Factors: ", factors)

    full_factorial_size = prod(length, factors)
    full_factorial_subsets = 2.0 ^ full_factorial_size

    println("> Full Factorial Size: ", full_factorial_size)
    println("> Total Subsets: ", full_factorial_subsets)
    println("> Range of Design Sizes: ", sample_range)
    println("> Number of Design to Sample: ", designs)

    if check_bounds
        if designs > full_factorial_subsets
            println("> Requested too many designs, using ",
                    full_factorial_subsets, " instead")

            designs = full_factorial_subsets
        end

        if sample_range.stop > full_factorial_size
            println("> Requested too many maximum experiments, using ",
                    full_factorial_size, " instead")
            sample_range = sample_range.start:full_factorial_size
        end

        if sample_range.start == sample_range.stop
            println("> Total Subsets for Fixed Size ", sample_range.start, ": ",
                    factorial(float(full_factorial_size)) /
                    (factorial(float(full_factorial_size - sample_range.start)) *
                    factorial(float(sample_range.start))))
        end
    else
        println("> WARNING: Skipping bounds check!")
    end

    evaluation = DataFrame(Length  = [],
                           D       = [],
                           log10D  = [],
                           DELB    = [],
                           DELB_ad = [],
                           A       = [],
                           V       = [],
                           G       = [],
                           CN      = [],
                           log2CN  = [],
                           GE      = [])


    for i in 1:designs
        samples      = rand(sample_range)
        subset       = full_factorial_subset(factors, samples)
        model_matrix = generate_model_matrix(formula, Array{Float64, 2}(subset), factors,
                                             scale = scale)
        candidate    = Array(model_matrix)

        d_opt = d_optimality(candidate)
        c_n   = condition_number(candidate)

        push!(evaluation, [size(candidate, 1),
                           d_opt,
                           log(10, abs(d_opt)),
                           d_efficiency_lower_bound(candidate),
                           d_efficiency_lower_bound_algdesign(candidate),
                           a_optimality(candidate),
                           v_optimality(candidate),
                           g_optimality(candidate),
                           c_n,
                           log(2, abs(c_n)),
                           g_efficiency(candidate)])
    end

    return evaluation
end

function sample_subset(factors,
                       sample_range,
                       designs;
                       check_bounds = true,
                       scale = scale_orthogonal!)
    formula = build_linear_formula(length(factors))
    #formula = @formula(y ~ x1 + x2 + x3)

    run_time = @elapsed sampling_subset = generate_designs(factors,
                                                           formula,
                                                           sample_range,
                                                           designs,
                                                           check_bounds = check_bounds,
                                                           scale = scale)
    println("> Elapsed Time: ", run_time, " seconds")

    sort!(sampling_subset, cols = :D, rev = true)

    return sampling_subset
end
#+END_SRC

#+RESULTS: init_dopt_utils
#+begin_example
2-element Array{Task,1}:
 Task (done) @0x00007f8ff81702b0
 Task (done) @0x00007f8ff8170550

2-element Array{Int64,1}:
 16
 17



build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

scale_box_encoding! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound_algdesign (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

sample_subset (generic function with 1 method)
#+end_example

*** [2018-03-16 Fri]
**** Some Links Related to D-Efficiency Measures
- https://stats.stackexchange.com/questions/266405/optimum-approximate-theory-d-optimal-design
- https://stackoverflow.com/questions/29176456/calculate-d-efficiency-of-an-experimental-desgin-in-r
- https://support.sas.com/documentation/cdl/en/qcug/63922/HTML/default/viewer.htm#qcug_optex_a0000000394.htm
**** Exploring Designs of ~k~ 3-Level Factors, Defining Plotting Functions :Stats:DOE:Code:
Setup:
#+CALL: init_dopt_utils()

#+RESULTS:
#+begin_example


2-element Array{Int64,1}:
 2
 3



build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

sample_subset (generic function with 1 method)
#+end_example

First lets set $k = 4$ and look at 6000 designs, sampled uniformly, of size $n =
5, \dots, 81$, because 81 is the number of lines in the full factorial design:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plotly()

sampling_subset = sample_subset([Array{Float64, 1}(1:3) for i = 1:4],
                                4:(3 ^ 4), 6000)

ymax = max(sampling_subset[:Length]..., sampling_subset[:D]...)

@df sampling_subset plot(1:size(sampling_subset, 1),
                         [:D :DELB :Length],
                         ylims = (-1, ymax + 2))
end

main()
#+END_SRC

#+RESULTS:
#+begin_example
Plots.PlotlyBackend()

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 4:81
Number of Design to Sample: 6000
Elapsed Time: 16.380334653 seconds
6000×10 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB    │ A           │ V           │ G           │ CN         │
├──────┼────────┼─────────┼─────────┼─────────┼─────────────┼─────────────┼─────────────┼────────────┤
│ 1    │ 81.0   │ 59.5779 │ 1.77509 │ 2.71828 │ 0.0169857   │ 3.20029e-7  │ 6.11524e-6  │ 1.2456     │
│ 2    │ 81.0   │ 59.1448 │ 1.77192 │ 2.71828 │ 0.0171191   │ 3.28313e-7  │ 6.43411e-6  │ 1.24546    │
│ 3    │ 81.0   │ 58.9838 │ 1.77073 │ 2.71828 │ 0.0171543   │ 3.28972e-7  │ 6.35066e-6  │ 1.22535    │
│ 4    │ 81.0   │ 58.9656 │ 1.7706  │ 2.71828 │ 0.0171645   │ 3.30033e-7  │ 6.40153e-6  │ 1.2355     │
│ 5    │ 81.0   │ 58.7702 │ 1.76916 │ 2.71828 │ 0.0172205   │ 3.33075e-7  │ 6.36335e-6  │ 1.23222    │
│ 6    │ 81.0   │ 58.7385 │ 1.76892 │ 2.71828 │ 0.0172386   │ 3.35063e-7  │ 6.73932e-6  │ 1.24881    │
│ 7    │ 81.0   │ 58.7199 │ 1.76879 │ 2.71828 │ 0.0172508   │ 3.36696e-7  │ 6.49329e-6  │ 1.26085    │
│ 8    │ 81.0   │ 58.7093 │ 1.76871 │ 2.71828 │ 0.0172564   │ 3.37202e-7  │ 6.4663e-6   │ 1.26276    │
│ 9    │ 80.0   │ 58.6962 │ 1.76861 │ 2.71828 │ 0.0172718   │ 3.44716e-7  │ 7.30897e-6  │ 1.28254    │
│ 10   │ 81.0   │ 58.6398 │ 1.76819 │ 2.71828 │ 0.0173021   │ 3.43375e-7  │ 6.67348e-6  │ 1.28786    │
│ 11   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 12   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 13   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 14   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 15   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 16   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 17   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 18   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 19   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 20   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 21   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 22   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 23   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
│ 24   │ 81.0   │ 58.5615 │ 1.76761 │ 2.71828 │ 0.017284    │ 3.36843e-7  │ 6.35066e-6  │ 1.22474    │
⋮
│ 5976 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.58319    │
│ 5977 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 9.89898    │
│ 5978 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.24603    │
│ 5979 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.63437    │
│ 5980 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ -9.90792e15 │ -3.03947e49 │ -1.10526e49 │ 4.12302    │
│ 5981 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.34764    │
│ 5982 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.90215    │
│ 5983 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 0.0        │
│ 5984 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.65399    │
│ 5985 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.59476    │
│ 5986 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ -1.95156e15 │ -2.32271e47 │ -3.57341e46 │ 5.06948    │
│ 5987 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.61986    │
│ 5988 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.48011e16 │
│ 5989 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.58799    │
│ 5990 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.6107e16  │
│ 5991 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 10.0473    │
│ 5992 │ 5.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.9321e16  │
│ 5993 │ 5.0    │ 0.0     │ -Inf    │ 0.0     │ -9.90792e14 │ -2.43157e46 │ -5.5263e45  │ 2.5863e16  │
│ 5994 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ -1.57626e15 │ -1.22386e47 │ -2.27995e16 │ 8.85263    │
│ 5995 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.17605    │
│ 5996 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.82143    │
│ 5997 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 6.47401    │
│ 5998 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.80425    │
│ 5999 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.04892    │
│ 6000 │ 4.0    │ 0.0     │ -Inf    │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.84145    │

│ Row  │ log2CN   │ GE           │
├──────┼──────────┼──────────────┤
│ 1    │ 0.316838 │ 8.17629e5    │
│ 2    │ 0.316683 │ 7.77109e5    │
│ 3    │ 0.293191 │ 787320.0     │
│ 4    │ 0.305097 │ 7.81063e5    │
│ 5    │ 0.301264 │ 7.8575e5     │
│ 6    │ 0.320554 │ 7.41915e5    │
│ 7    │ 0.334394 │ 770026.0     │
│ 8    │ 0.336584 │ 7.73239e5    │
│ 9    │ 0.359006 │ 6.8409e5     │
│ 10   │ 0.364974 │ 7.49234e5    │
│ 11   │ 0.292481 │ 787320.0     │
│ 12   │ 0.292481 │ 787320.0     │
│ 13   │ 0.292481 │ 787320.0     │
│ 14   │ 0.292481 │ 787320.0     │
│ 15   │ 0.292481 │ 787320.0     │
│ 16   │ 0.292481 │ 787320.0     │
│ 17   │ 0.292481 │ 787320.0     │
│ 18   │ 0.292481 │ 787320.0     │
│ 19   │ 0.292481 │ 787320.0     │
│ 20   │ 0.292481 │ 787320.0     │
│ 21   │ 0.292481 │ 787320.0     │
│ 22   │ 0.292481 │ 787320.0     │
│ 23   │ 0.292481 │ 787320.0     │
│ 24   │ 0.292481 │ 787320.0     │
⋮
│ 5976 │ 2.19635  │ 0.0          │
│ 5977 │ 3.30728  │ 0.0          │
│ 5978 │ 1.69868  │ 0.0          │
│ 5979 │ 1.8617   │ 0.0          │
│ 5980 │ 2.0437   │ -4.52382e-49 │
│ 5981 │ 2.4189   │ 0.0          │
│ 5982 │ 1.96427  │ 0.0          │
│ 5983 │ -Inf     │ 0.0          │
│ 5984 │ 2.49927  │ 0.0          │
│ 5985 │ 2.48408  │ 0.0          │
│ 5986 │ 2.34184  │ -1.39923e-46 │
│ 5987 │ 1.85593  │ 0.0          │
│ 5988 │ 54.95    │ 0.0          │
│ 5989 │ 2.48233  │ 0.0          │
│ 5990 │ 55.0031  │ 0.0          │
│ 5991 │ 3.32874  │ 0.0          │
│ 5992 │ 55.7194  │ 0.0          │
│ 5993 │ 54.5217  │ -9.04764e-46 │
│ 5994 │ 3.14611  │ -2.19303e-16 │
│ 5995 │ 2.06214  │ 0.0          │
│ 5996 │ 2.26946  │ 0.0          │
│ 5997 │ 2.69466  │ 0.0          │
│ 5998 │ 1.92761  │ 0.0          │
│ 5999 │ 2.01754  │ 0.0          │
│ 6000 │ 2.54633  │ 0.0          │

81.0

Created new window in existing browser session.
ERROR: syntax: unexpected "end"

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 7:7
Number of Design to Sample: 6000
Elapsed Time: 14.636229211 seconds
6000×10 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D   │ DELB        │ A        │ V         │ G         │ CN      │
├──────┼────────┼─────────┼──────────┼─────────────┼──────────┼───────────┼───────────┼─────────┤
│ 1    │ 7.0    │ 3.71015 │ 0.569391 │ 2.26194     │ 0.469132 │ 0.471703  │ 0.918887  │ 4.14921 │
│ 2    │ 7.0    │ 4.41159 │ 0.644595 │ 2.57831     │ 0.29599  │ 0.0634219 │ 0.264335  │ 2.61463 │
│ 3    │ 7.0    │ 2.96977 │ 0.472722 │ 1.76764     │ 0.568831 │ 0.612933  │ 2.15178   │ 4.01495 │
│ 4    │ 7.0    │ 2.99256 │ 0.476042 │ 0.378066    │ 0.783333 │ 3.49828   │ 9.86343   │ 5.89734 │
│ 5    │ 7.0    │ 2.77312 │ 0.442969 │ 0.00217337  │ 1.05122  │ 9.53771   │ 35.6574   │ 7.55191 │
│ 6    │ 7.0    │ 4.81496 │ 0.682593 │ 2.55753     │ 0.300155 │ 0.0983869 │ 0.30479   │ 3.23071 │
│ 7    │ 7.0    │ 3.49837 │ 0.543866 │ 1.38908     │ 0.578626 │ 1.31195   │ 3.3568    │ 4.97713 │
│ 8    │ 7.0    │ 2.23685 │ 0.349638 │ 2.13924e-95 │ 2.72143  │ 291.781   │ 1094.93   │ 10.694  │
│ 9    │ 7.0    │ 3.56397 │ 0.551934 │ 2.33041     │ 0.415652 │ 0.237686  │ 0.769779  │ 3.24095 │
│ 10   │ 7.0    │ 1.98734 │ 0.298272 │ 0.00166444  │ 1.33548  │ 11.9356   │ 36.9913   │ 7.99485 │
│ 11   │ 7.0    │ 3.91182 │ 0.592379 │ 2.58136     │ 0.338865 │ 0.0905907 │ 0.258427  │ 3.26439 │
│ 12   │ 7.0    │ 3.59323 │ 0.555485 │ 2.42142     │ 0.379633 │ 0.147427  │ 0.578239  │ 2.95053 │
│ 13   │ 7.0    │ 2.99256 │ 0.476042 │ 0.0878678   │ 0.82     │ 3.90354   │ 17.1596   │ 6.45833 │
│ 14   │ 7.0    │ 3.22895 │ 0.509061 │ 2.51885     │ 0.408547 │ 0.152375  │ 0.380991  │ 3.02142 │
│ 15   │ 7.0    │ 3.02906 │ 0.481308 │ 0.864237    │ 0.664314 │ 1.57271   │ 5.72954   │ 5.38955 │
│ 16   │ 7.0    │ 4.03982 │ 0.606362 │ 2.50327     │ 0.341264 │ 0.130365  │ 0.412008  │ 2.81584 │
│ 17   │ 7.0    │ 4.26788 │ 0.630213 │ 2.43952     │ 0.368644 │ 0.199997  │ 0.541     │ 3.79911 │
│ 18   │ 7.0    │ 2.91922 │ 0.465267 │ 2.08548     │ 0.566038 │ 0.553552  │ 1.32499   │ 3.5452  │
│ 19   │ 7.0    │ 3.99687 │ 0.60172  │ 2.48876     │ 0.37098  │ 0.164747  │ 0.441082  │ 3.61417 │
│ 20   │ 7.0    │ 2.90532 │ 0.463194 │ 1.19725     │ 0.603865 │ 0.914735  │ 4.09988   │ 3.83423 │
│ 21   │ 7.0    │ 3.51948 │ 0.546479 │ 2.01387     │ 0.453333 │ 0.454614  │ 1.49972   │ 3.27209 │
│ 22   │ 7.0    │ 2.55085 │ 0.406685 │ 1.67954     │ 0.674074 │ 0.78871   │ 2.40741   │ 5.07723 │
│ 23   │ 7.0    │ 2.92744 │ 0.466488 │ 0.00180576  │ 1.08     │ 13.2222   │ 36.5839   │ 7.57112 │
│ 24   │ 7.0    │ 2.40225 │ 0.380618 │ 7.39178e-18 │ 1.905    │ 91.3853   │ 202.231   │ 9.68657 │
⋮
│ 5976 │ 7.0    │ 3.10369 │ 0.491878 │ 0.0725215   │ 0.841667 │ 4.85719   │ 18.1194   │ 5.97508 │
│ 5977 │ 7.0    │ 3.32597 │ 0.521919 │ 2.43529     │ 0.441769 │ 0.225683  │ 0.549671  │ 2.98013 │
│ 5978 │ 7.0    │ 2.47034 │ 0.392758 │ 0.000279978 │ 1.06087  │ 10.5973   │ 45.904    │ 6.01642 │
│ 5979 │ 7.0    │ 3.55399 │ 0.550717 │ 2.45407     │ 0.407407 │ 0.193843  │ 0.511267  │ 3.25485 │
│ 5980 │ 7.0    │ 3.08405 │ 0.489121 │ 0.134168    │ 0.805018 │ 4.69214   │ 15.0433   │ 5.91091 │
│ 5981 │ 7.0    │ 4.8045  │ 0.681648 │ 2.67903     │ 0.27625  │ 0.0431327 │ 0.0727266 │ 2.70279 │
│ 5982 │ 7.0    │ 3.72377 │ 0.570983 │ 2.3832      │ 0.416201 │ 0.256466  │ 0.657774  │ 3.47699 │
│ 5983 │ 7.0    │ 2.47034 │ 0.392758 │ 0.00990943  │ 1.13913  │ 10.293    │ 28.0713   │ 7.19305 │
│ 5984 │ 7.0    │ 3.9487  │ 0.596454 │ 2.6028      │ 0.329167 │ 0.0735643 │ 0.217059  │ 2.67643 │
│ 5985 │ 7.0    │ 4.8045  │ 0.681648 │ 2.52759     │ 0.3025   │ 0.110299  │ 0.363672  │ 2.93241 │
│ 5986 │ 7.0    │ 3.9487  │ 0.596454 │ 2.61086     │ 0.35     │ 0.102567  │ 0.201595  │ 3.3192  │
│ 5987 │ 7.0    │ 3.2875  │ 0.516866 │ 0.153346    │ 0.833333 │ 5.14426   │ 14.3753   │ 6.86011 │
│ 5988 │ 7.0    │ 4.15876 │ 0.618964 │ 2.32972     │ 0.38328  │ 0.243195  │ 0.771269  │ 3.87085 │
│ 5989 │ 7.0    │ 3.25252 │ 0.51222  │ 0.615513    │ 0.641758 │ 1.70111   │ 7.4265    │ 5.89004 │
│ 5990 │ 7.0    │ 2.65127 │ 0.423454 │ 3.93894e-5  │ 1.34809  │ 27.6974   │ 55.7101   │ 8.61454 │
│ 5991 │ 7.0    │ 3.60397 │ 0.556781 │ 2.13167     │ 0.453289 │ 0.399689  │ 1.21547   │ 3.83115 │
│ 5992 │ 7.0    │ 2.7313  │ 0.436369 │ 0.736778    │ 0.739474 │ 2.27122   │ 6.52735   │ 5.5991  │
│ 5993 │ 7.0    │ 3.41432 │ 0.533304 │ 2.35188     │ 0.446552 │ 0.273072  │ 0.723935  │ 3.25511 │
│ 5994 │ 7.0    │ 4.56571 │ 0.659508 │ 2.65626     │ 0.258871 │ 0.0314611 │ 0.115407  │ 2.14641 │
│ 5995 │ 7.0    │ 2.99006 │ 0.47568  │ 0.749421    │ 0.583264 │ 1.03974   │ 6.44227   │ 4.37752 │
│ 5996 │ 7.0    │ 2.40225 │ 0.380618 │ 3.19181e-21 │ 1.81     │ 72.1814   │ 240.969   │ 8.70548 │
│ 5997 │ 7.0    │ 2.84991 │ 0.454832 │ 2.05409     │ 0.52766  │ 0.412208  │ 1.40084   │ 3.79462 │
│ 5998 │ 7.0    │ 1.82056 │ 0.260206 │ 1.38832e-7  │ 1.6      │ 24.4786   │ 83.95     │ 9.11166 │
│ 5999 │ 7.0    │ 3.25252 │ 0.51222  │ 0.758542    │ 0.645055 │ 1.81406   │ 6.38178   │ 4.95205 │
│ 6000 │ 7.0    │ 3.09502 │ 0.490664 │ 0.633959    │ 0.690141 │ 2.16314   │ 7.27886   │ 4.95905 │

│ Row  │ log2CN  │ GE         │
├──────┼─────────┼────────────┤
│ 1    │ 2.05284 │ 5.44137    │
│ 2    │ 1.38661 │ 18.9154    │
│ 3    │ 2.00538 │ 2.32366    │
│ 4    │ 2.56006 │ 0.506923   │
│ 5    │ 2.91684 │ 0.140223   │
│ 6    │ 1.69185 │ 16.4047    │
│ 7    │ 2.31532 │ 1.48951    │
│ 8    │ 3.41873 │ 0.00456652 │
│ 9    │ 1.69642 │ 6.49537    │
│ 10   │ 2.99907 │ 0.135167   │
│ 11   │ 1.70681 │ 19.3478    │
│ 12   │ 1.56097 │ 8.64694    │
│ 13   │ 2.69116 │ 0.291382   │
│ 14   │ 1.59523 │ 13.1237    │
│ 15   │ 2.43017 │ 0.87267    │
│ 16   │ 1.49357 │ 12.1357    │
│ 17   │ 1.92566 │ 9.24214    │
│ 18   │ 1.82587 │ 3.7736     │
│ 19   │ 1.85367 │ 11.3358    │
│ 20   │ 1.93894 │ 1.21955    │
│ 21   │ 1.71021 │ 3.33396    │
│ 22   │ 2.34404 │ 2.07692    │
│ 23   │ 2.92051 │ 0.136672   │
│ 24   │ 3.27599 │ 0.0247242  │
⋮
│ 5976 │ 2.57896 │ 0.275948   │
│ 5977 │ 1.57537 │ 9.09635    │
│ 5978 │ 2.58891 │ 0.108923   │
│ 5979 │ 1.70259 │ 9.77963    │
│ 5980 │ 2.56338 │ 0.332374   │
│ 5981 │ 1.43445 │ 68.7507    │
│ 5982 │ 1.79784 │ 7.60139    │
│ 5983 │ 2.8466  │ 0.178118   │
│ 5984 │ 1.42031 │ 23.0352    │
│ 5985 │ 1.55209 │ 13.7487    │
│ 5986 │ 1.73083 │ 24.8022    │
│ 5987 │ 2.77823 │ 0.347819   │
│ 5988 │ 1.95265 │ 6.48283    │
│ 5989 │ 2.55828 │ 0.673265   │
│ 5990 │ 3.10677 │ 0.0897504  │
│ 5991 │ 1.93778 │ 4.11362    │
│ 5992 │ 2.4852  │ 0.766008   │
│ 5993 │ 1.7027  │ 6.9067     │
│ 5994 │ 1.10193 │ 43.3251    │
│ 5995 │ 2.13012 │ 0.776124   │
│ 5996 │ 3.12192 │ 0.0207496  │
│ 5997 │ 1.92396 │ 3.56928    │
│ 5998 │ 3.18771 │ 0.0595593  │
│ 5999 │ 2.30803 │ 0.78348    │
│ 6000 │ 2.31006 │ 0.686921   │
#+end_example

This does not tell us much, because it is expected that the value of ~D~
increases as we increase the number of experiments, with the full factorial
design having the largest determinant.

Now, let's look at 6000 designs sampled uniformly of a fixed size. We will
start with a fixed size $n = 5$:

#+HEADER: :results output :session *Julia*
#+NAME: define_sample_subsets
#+BEGIN_SRC julia

function sample_subsets(factors::Array,
                        ranges::Array{UnitRange{Int}, 1},
                        designs::Int;
                        check_bounds::Bool = true,
                        scale::Function = scale_orthogonal!)
    sampled_subsets = []

    for subset = 1:length(ranges)
        label = " "

        if ranges[subset].start == ranges[subset].stop
            label = string(ranges[subset].start, " Experiments")
        else
            label = string(ranges[subset].start, " to ",
                          ranges[subset].stop, " Experiments")
        end

        label = string(label, ", ", length(factors[subset]), " Factors")

        sampled_subset = sample_subset(factors[subset],
                                       ranges[subset],
                                       designs,
                                       check_bounds = check_bounds,
                                       scale = scale)

        push!(sampled_subsets,
              (sampled_subset,
              max(sampled_subset[:Length]..., sampled_subset[:D]...),
              label))
    end

    return sampled_subsets
end
#+END_SRC

#+RESULTS: define_sample_subsets
: 
: sample_subsets (generic function with 1 method)

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
ranges = [4:4, 5:5, 6:6, 12:12, 24:24, 48:48, 4:3 ^ 4]
factors = [[Array{Float64, 1}(1:3) for i = 1:4] for k in 1:length(ranges)]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs)

#+END_SRC

#+RESULTS:
#+begin_example
7-element Array{UnitRange{Int64},1}:
 4:4  
 5:5  
 6:6  
 12:12
 24:24
 48:48
 4:81
7-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
8000

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 4:4
Number of Design to Sample: 8000
Total Subsets for Fixed Size 4: 1.66374e6
Elapsed Time: 25.994533929 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 5:5
Number of Design to Sample: 8000
Total Subsets for Fixed Size 5: 2.5621596e7
Elapsed Time: 19.355303769 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 6:6
Number of Design to Sample: 8000
Total Subsets for Fixed Size 6: 3.24540216e8
Elapsed Time: 19.913667749 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 12:12
Number of Design to Sample: 8000
Total Subsets for Fixed Size 12: 7.072432018469998e13
Elapsed Time: 28.599820736 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 24:24
Number of Design to Sample: 8000
Total Subsets for Fixed Size 24: 2.305491245366683e20
Elapsed Time: 23.668345779 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 48:48
Number of Design to Sample: 8000
Total Subsets for Fixed Size 48: 5.3779686508403226e22
Elapsed Time: 25.814670427 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 4:81
Number of Design to Sample: 8000
Elapsed Time: 24.010280802 seconds
7-element Array{Any,1}:
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D          │ log10D   │ DELB        │ DELB_ad │ A           │ V           │ G           │ CN      │ log2CN   │ GE           │
├──────┼────────┼────────────┼──────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┼─────────┼──────────┼──────────────┤
│ 1    │ 4.0    │ 0.00245301 │ -2.6103  │ 0.000613254 │ 0.0     │ 5.6295e14   │ 5.57519e45  │ 8.9203e45   │ 1.58114 │ 0.660964 │ 5.60519e-46  │
│ 2    │ 4.0    │ 0.00234595 │ -2.62968 │ 0.000586487 │ 0.0     │ 7.8813e14   │ 1.52983e46  │ 2.18547e46  │ 1.87083 │ 0.903677 │ 2.28783e-46  │
│ 3    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.35829 │ 1.23774  │ 2.18953e-46  │
│ 4    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 1.80144e15  │ 1.82688e47  │ 3.65375e47  │ 1.41421 │ 0.5      │ 1.36846e-47  │
│ 5    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.35829 │ 1.23774  │ 2.18953e-46  │
│ 6    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.61313 │ 1.38578  │ 2.18953e-46  │
│ 7    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.0     │ 1.0      │ 2.18953e-46  │
│ 8    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.35829 │ 1.23774  │ 2.18953e-46  │
⋮
│ 7992 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.08286 │ 1.62427  │ 0.0          │
│ 7993 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ -4.56794e15 │ -2.97859e48 │ -1.67808e47 │ 1.89611 │ 0.92304  │ -2.9796e-47  │
│ 7994 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 10.1655 │ 3.34561  │ 0.0          │
│ 7995 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.2226  │ 2.38477  │ 0.0          │
│ 7996 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.82075 │ 1.93386  │ 0.0          │
│ 7997 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ -4.88962e15 │ -3.65322e48 │ -7.69099e46 │ 1.67601 │ 0.745033 │ -6.50111e-47 │
│ 7998 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.72779 │ 2.24117  │ 0.0          │
│ 7999 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 7.59902 │ 2.92581  │ 0.0          │
│ 8000 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.7512  │ 1.46006  │ 0.0          │, 4.0, "4 Experiments, 4 Factors")
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D   │ DELB     │ DELB_ad │ A           │ V           │ G           │ CN         │ log2CN  │ GE           │
├──────┼────────┼─────────┼──────────┼──────────┼─────────┼─────────────┼─────────────┼─────────────┼────────────┼─────────┼──────────────┤
│ 1    │ 5.0    │ 3.79196 │ 0.578863 │ 0.758391 │ 2.45889 │ 0.357143    │ 0.207416    │ 0.501458    │ 2.64575    │ 1.40368 │ 9.97093      │
│ 2    │ 5.0    │ 3.79196 │ 0.578863 │ 0.758391 │ 2.6382  │ 0.314286    │ 0.0735423   │ 0.149521    │ 2.24698    │ 1.16799 │ 33.4401      │
│ 3    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.6365  │ 0.344444    │ 0.0906207   │ 0.152735    │ 2.50285    │ 1.32357 │ 32.7365      │
│ 4    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.51005 │ 0.361111    │ 0.1439      │ 0.398491    │ 2.55461    │ 1.35311 │ 12.5473      │
│ 5    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.46958 │ 0.372222    │ 0.202936    │ 0.479767    │ 2.89955    │ 1.53583 │ 10.4217      │
│ 6    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.10022 │ 0.411111    │ 0.38684     │ 1.28978     │ 3.42943    │ 1.77797 │ 3.87663      │
│ 7    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.31888 │ 0.422222    │ 0.374348    │ 0.794582    │ 3.26095    │ 1.70529 │ 6.29262      │
│ 8    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.41001 │ 0.366667    │ 0.208102    │ 0.601852    │ 2.44949    │ 1.29248 │ 8.30769      │
⋮
│ 7992 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ -2.40192e15 │ -3.4643e47  │ -6.53856e14 │ 2.06063e16 │ 54.1939 │ -7.64694e-15 │
│ 7993 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.21412e16 │ 54.2976 │ 0.0          │
│ 7994 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.73194e16 │ 55.6699 │ 0.0          │
│ 7995 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 9.5904e15  │ 53.0905 │ 0.0          │
│ 7996 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.2308e16  │ 54.8427 │ 0.0          │
│ 7997 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.21559e16 │ 55.2266 │ 0.0          │
│ 7998 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.51173e16 │ 54.4795 │ 0.0          │
│ 7999 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.45743e16 │ 54.448  │ 0.0          │
│ 8000 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ -6.0048e14  │ -5.41297e45 │ -1.02165e15 │ 1.97243e16 │ 54.1308 │ -4.89404e-15 │, 5.0, "5 Experiments, 4 Factors")                                                                            
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D   │ DELB     │ DELB_ad │ A        │ V         │ G         │ CN         │ log2CN   │ GE      │
├──────┼────────┼─────────┼──────────┼──────────┼─────────┼──────────┼───────────┼───────────┼────────────┼──────────┼─────────┤
│ 1    │ 6.0    │ 5.06334 │ 0.704437 │ 0.843889 │ 2.70838 │ 0.211538 │ 0.011535  │ 0.0182422 │ 1.6652     │ 0.735691 │ 274.09  │
│ 2    │ 6.0    │ 4.89138 │ 0.689432 │ 0.81523  │ 2.70299 │ 0.218571 │ 0.0127567 │ 0.0282    │ 1.61803    │ 0.694242 │ 177.305 │
│ 3    │ 6.0    │ 4.67789 │ 0.67005  │ 0.779648 │ 2.67893 │ 0.239286 │ 0.020728  │ 0.0729068 │ 2.01153    │ 1.0083   │ 68.5807 │
│ 4    │ 6.0    │ 4.67789 │ 0.67005  │ 0.779648 │ 2.62597 │ 0.278571 │ 0.0697567 │ 0.17275   │ 2.62332    │ 1.39139  │ 28.9436 │
│ 5    │ 6.0    │ 4.55461 │ 0.658451 │ 0.759102 │ 2.67526 │ 0.258163 │ 0.0342173 │ 0.0797614 │ 2.21044    │ 1.14433  │ 62.6869 │
│ 6    │ 6.0    │ 4.47371 │ 0.650668 │ 0.745618 │ 2.65384 │ 0.282143 │ 0.0575285 │ 0.119955  │ 2.58276    │ 1.36891  │ 41.6823 │
│ 7    │ 6.0    │ 4.47371 │ 0.650668 │ 0.745618 │ 2.63359 │ 0.275893 │ 0.0490768 │ 0.158252  │ 2.66414    │ 1.41367  │ 31.5953 │
│ 8    │ 6.0    │ 4.47371 │ 0.650668 │ 0.745618 │ 2.67018 │ 0.273214 │ 0.0392202 │ 0.0892743 │ 2.36813    │ 1.24375  │ 56.0071 │
⋮
│ 7992 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 2.01455e16 │ 54.1613  │ 0.0     │
│ 7993 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 2.24258e17 │ 57.6379  │ 0.0     │
│ 7994 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 1.67958e16 │ 53.899   │ 0.0     │
│ 7995 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 5.04496e16 │ 55.4857  │ 0.0     │
│ 7996 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 1.53698e16 │ 53.771   │ 0.0     │
│ 7997 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 4.98215e16 │ 55.4676  │ 0.0     │
│ 7998 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 2.24737e17 │ 57.641   │ 0.0     │
│ 7999 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 1.64166e16 │ 53.866   │ 0.0     │
│ 8000 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 1.17645e16 │ 53.3853  │ 0.0     │, 6.0, "6 Experiments, 4 Factors")                                                                                                                                                                                                                                                                                             
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D   │ DELB     │ DELB_ad   │ A        │ V           │ G          │ CN      │ log2CN   │ GE       │
├──────┼────────┼─────────┼──────────┼──────────┼───────────┼──────────┼─────────────┼────────────┼─────────┼──────────┼──────────┤
│ 1    │ 12.0   │ 9.89523 │ 0.995426 │ 0.824602 │ 2.71718   │ 0.106259 │ 0.000658287 │ 0.00202157 │ 1.5969  │ 0.675274 │ 2473.33  │
│ 2    │ 12.0   │ 9.86585 │ 0.994134 │ 0.822154 │ 2.71706   │ 0.107012 │ 0.000690751 │ 0.00224507 │ 1.62124 │ 0.697093 │ 2227.1   │
│ 3    │ 12.0   │ 9.6468  │ 0.984383 │ 0.8039   │ 2.7167    │ 0.112171 │ 0.000891592 │ 0.0029156  │ 1.72468 │ 0.786325 │ 1714.92  │
│ 4    │ 12.0   │ 9.64069 │ 0.984108 │ 0.803391 │ 2.71486   │ 0.114945 │ 0.00125217  │ 0.00629819 │ 1.808   │ 0.854394 │ 793.879  │
│ 5    │ 12.0   │ 9.58471 │ 0.981579 │ 0.798726 │ 2.71616   │ 0.11323  │ 0.000909331 │ 0.00389594 │ 1.75787 │ 0.813831 │ 1283.39  │
│ 6    │ 12.0   │ 9.58163 │ 0.981439 │ 0.798469 │ 2.71671   │ 0.111461 │ 0.00082699  │ 0.0028877  │ 1.66745 │ 0.737647 │ 1731.48  │
│ 7    │ 12.0   │ 9.57269 │ 0.981034 │ 0.797724 │ 2.71615   │ 0.115899 │ 0.00108443  │ 0.00392426 │ 1.91731 │ 0.939087 │ 1274.13  │
│ 8    │ 12.0   │ 9.55893 │ 0.980409 │ 0.796578 │ 2.71618   │ 0.11254  │ 0.000909439 │ 0.00385958 │ 1.69326 │ 0.759801 │ 1295.48  │
⋮
│ 7992 │ 12.0   │ 4.67621 │ 0.669894 │ 0.389684 │ 1.38312   │ 0.436047 │ 0.301211    │ 3.37827    │ 4.82606 │ 2.27085  │ 1.48005  │
│ 7993 │ 12.0   │ 4.55461 │ 0.658451 │ 0.379551 │ 1.93942   │ 0.422755 │ 0.289109    │ 1.68805    │ 4.81267 │ 2.26684  │ 2.962    │
│ 7994 │ 12.0   │ 4.50327 │ 0.653528 │ 0.375273 │ 2.35546   │ 0.381533 │ 0.141949    │ 0.716321   │ 4.12525 │ 2.04448  │ 6.98011  │
│ 7995 │ 12.0   │ 4.49644 │ 0.652869 │ 0.374704 │ 0.477542  │ 0.638194 │ 1.4256      │ 8.69551    │ 6.53621 │ 2.70845  │ 0.575009 │
│ 7996 │ 12.0   │ 4.48661 │ 0.651919 │ 0.373885 │ 2.35527   │ 0.419472 │ 0.152817    │ 0.716722   │ 4.78365 │ 2.25811  │ 6.97621  │
│ 7997 │ 12.0   │ 4.41843 │ 0.645268 │ 0.368203 │ 1.13893   │ 0.556651 │ 0.874101    │ 4.34956    │ 5.76434 │ 2.52716  │ 1.14954  │
│ 7998 │ 12.0   │ 4.40364 │ 0.643812 │ 0.36697  │ 2.3038    │ 0.399275 │ 0.121124    │ 0.82719    │ 3.88753 │ 1.95885  │ 6.04456  │
│ 7999 │ 12.0   │ 4.31621 │ 0.635102 │ 0.359684 │ 2.25309   │ 0.439653 │ 0.223467    │ 0.938477   │ 5.59143 │ 2.48322  │ 5.32778  │
│ 8000 │ 12.0   │ 4.13714 │ 0.616701 │ 0.344762 │ 0.0618494 │ 0.779868 │ 2.87646     │ 18.9153    │ 6.66262 │ 2.73609  │ 0.264337 │, 12.0, "12 Experiments, 4 Factors")                                                                                                                                                                                                                                  
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB     │ DELB_ad │ A         │ V           │ G           │ CN      │ log2CN   │ GE      │
├──────┼────────┼─────────┼─────────┼──────────┼─────────┼───────────┼─────────────┼─────────────┼─────────┼──────────┼─────────┤
│ 1    │ 24.0   │ 19.694  │ 1.29433 │ 0.820583 │ 2.71809 │ 0.0539153 │ 4.60388e-5  │ 0.000357117 │ 1.57265 │ 0.653198 │ 14001.0 │
│ 2    │ 24.0   │ 19.2386 │ 1.28417 │ 0.801609 │ 2.71807 │ 0.0546082 │ 4.43071e-5  │ 0.000393313 │ 1.54272 │ 0.625472 │ 12712.5 │
│ 3    │ 24.0   │ 19.2353 │ 1.2841  │ 0.801473 │ 2.71804 │ 0.0550763 │ 5.04791e-5  │ 0.000435768 │ 1.57222 │ 0.652807 │ 11474.0 │
│ 4    │ 24.0   │ 19.2096 │ 1.28352 │ 0.800399 │ 2.71808 │ 0.0538589 │ 4.05673e-5  │ 0.000375182 │ 1.43047 │ 0.516488 │ 13326.9 │
│ 5    │ 24.0   │ 19.0969 │ 1.28096 │ 0.795703 │ 2.71815 │ 0.0537407 │ 3.73944e-5  │ 0.000246502 │ 1.37584 │ 0.460309 │ 20283.8 │
│ 6    │ 24.0   │ 19.0919 │ 1.28085 │ 0.795497 │ 2.71811 │ 0.0549588 │ 4.55683e-5  │ 0.000309472 │ 1.58777 │ 0.667001 │ 16156.5 │
│ 7    │ 24.0   │ 19.0529 │ 1.27996 │ 0.793872 │ 2.71802 │ 0.0564102 │ 5.97076e-5  │ 0.000488988 │ 1.64295 │ 0.716286 │ 10225.2 │
│ 8    │ 24.0   │ 18.9727 │ 1.27813 │ 0.790528 │ 2.71812 │ 0.0553924 │ 4.5226e-5   │ 0.000305926 │ 1.56822 │ 0.649124 │ 16343.8 │
⋮
│ 7992 │ 24.0   │ 13.1884 │ 1.12019 │ 0.549517 │ 2.71279 │ 0.101914  │ 0.000788625 │ 0.0101165   │ 2.74483 │ 1.45672  │ 494.242 │
│ 7993 │ 24.0   │ 13.1747 │ 1.11974 │ 0.548946 │ 2.71676 │ 0.0921516 │ 0.000352066 │ 0.00280791  │ 2.38231 │ 1.25236  │ 1780.69 │
│ 7994 │ 24.0   │ 13.1425 │ 1.11868 │ 0.547603 │ 2.71602 │ 0.0909092 │ 0.000405276 │ 0.00415702  │ 2.36293 │ 1.24058  │ 1202.78 │
│ 7995 │ 24.0   │ 13.125  │ 1.1181  │ 0.546875 │ 2.70863 │ 0.108137  │ 0.0014026   │ 0.0177798   │ 2.94365 │ 1.55761  │ 281.218 │
│ 7996 │ 24.0   │ 13.0681 │ 1.11621 │ 0.544503 │ 2.71556 │ 0.0953962 │ 0.000519818 │ 0.00500775  │ 2.46023 │ 1.29879  │ 998.453 │
│ 7997 │ 24.0   │ 13.0461 │ 1.11548 │ 0.543587 │ 2.71645 │ 0.0928069 │ 0.000363531 │ 0.00337838  │ 2.22575 │ 1.15429  │ 1480.0  │
│ 7998 │ 24.0   │ 13.0239 │ 1.11474 │ 0.542664 │ 2.71731 │ 0.0861386 │ 0.00020544  │ 0.00179027  │ 2.06263 │ 1.04448  │ 2792.87 │
│ 7999 │ 24.0   │ 13.0125 │ 1.11436 │ 0.542188 │ 2.70554 │ 0.119564  │ 0.00241187  │ 0.0234917   │ 3.15604 │ 1.65812  │ 212.841 │
│ 8000 │ 24.0   │ 12.9625 │ 1.11269 │ 0.540102 │ 2.71647 │ 0.0932692 │ 0.000429988 │ 0.00332519  │ 2.52302 │ 1.33515  │ 1503.67 │, 24.0, "24 Experiments, 4 Factors")                                                                                                                                                                                                                                                                        
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB     │ DELB_ad │ A         │ V          │ G           │ CN      │ log2CN   │ GE        │
├──────┼────────┼─────────┼─────────┼──────────┼─────────┼───────────┼────────────┼─────────────┼─────────┼──────────┼───────────┤
│ 1    │ 48.0   │ 37.745  │ 1.57686 │ 0.786354 │ 2.71827 │ 0.0269284 │ 2.21896e-6 │ 2.71861e-5  │ 1.30118 │ 0.379822 │ 1.83918e5 │
│ 2    │ 48.0   │ 37.4609 │ 1.57358 │ 0.780435 │ 2.71826 │ 0.0270843 │ 2.2571e-6  │ 3.38503e-5  │ 1.29667 │ 0.374814 │ 1.47709e5 │
│ 3    │ 48.0   │ 37.4215 │ 1.57312 │ 0.779615 │ 2.71827 │ 0.0271122 │ 2.2429e-6  │ 2.89131e-5  │ 1.28529 │ 0.362098 │ 1.72932e5 │
│ 4    │ 48.0   │ 37.3496 │ 1.57229 │ 0.778117 │ 2.71827 │ 0.0271993 │ 2.27097e-6 │ 2.98309e-5  │ 1.29632 │ 0.374418 │ 1.67612e5 │
│ 5    │ 48.0   │ 37.328  │ 1.57204 │ 0.777668 │ 2.71826 │ 0.0274012 │ 2.42412e-6 │ 3.19017e-5  │ 1.33771 │ 0.419769 │ 1.56731e5 │
│ 6    │ 48.0   │ 37.2888 │ 1.57158 │ 0.77685  │ 2.71827 │ 0.0272869 │ 2.31284e-6 │ 2.70059e-5  │ 1.31919 │ 0.399647 │ 1.85144e5 │
│ 7    │ 48.0   │ 37.2412 │ 1.57102 │ 0.775859 │ 2.71827 │ 0.027242  │ 2.28053e-6 │ 2.89107e-5  │ 1.26846 │ 0.343079 │ 1.72947e5 │
│ 8    │ 48.0   │ 37.2023 │ 1.57057 │ 0.775048 │ 2.71827 │ 0.0272704 │ 2.27149e-6 │ 2.926e-5    │ 1.28399 │ 0.360634 │ 170882.0  │
⋮
│ 7992 │ 48.0   │ 31.1677 │ 1.4937  │ 0.649326 │ 2.71825 │ 0.0337382 │ 5.23301e-6 │ 6.61779e-5  │ 1.60678 │ 0.684175 │ 75553.9   │
│ 7993 │ 48.0   │ 31.1044 │ 1.49282 │ 0.648008 │ 2.71825 │ 0.0336662 │ 4.90364e-6 │ 6.1135e-5   │ 1.59033 │ 0.669325 │ 81786.2   │
│ 7994 │ 48.0   │ 31.0277 │ 1.49175 │ 0.646411 │ 2.71823 │ 0.0348734 │ 7.14436e-6 │ 0.000103532 │ 1.74711 │ 0.804972 │ 48294.3   │
│ 7995 │ 48.0   │ 30.9659 │ 1.49088 │ 0.645122 │ 2.71819 │ 0.0350613 │ 7.46851e-6 │ 0.00017025  │ 1.78412 │ 0.835209 │ 29368.6   │
│ 7996 │ 48.0   │ 30.8759 │ 1.48962 │ 0.643247 │ 2.7182  │ 0.0353326 │ 7.87713e-6 │ 0.00014271  │ 1.78802 │ 0.838365 │ 35036.2   │
│ 7997 │ 48.0   │ 30.7886 │ 1.48839 │ 0.64143  │ 2.71824 │ 0.0336673 │ 4.77466e-6 │ 7.55988e-5  │ 1.50266 │ 0.587516 │ 66138.6   │
│ 7998 │ 48.0   │ 30.7457 │ 1.48778 │ 0.640534 │ 2.71825 │ 0.0337386 │ 4.78484e-6 │ 6.01508e-5  │ 1.46296 │ 0.548889 │ 83124.4   │
│ 7999 │ 48.0   │ 30.6231 │ 1.48605 │ 0.637981 │ 2.71824 │ 0.0340865 │ 5.21475e-6 │ 8.0905e-5   │ 1.57639 │ 0.656622 │ 61800.9   │
│ 8000 │ 48.0   │ 29.7554 │ 1.47357 │ 0.619905 │ 2.71823 │ 0.0363745 │ 7.12688e-6 │ 0.000102762 │ 1.71253 │ 0.776132 │ 48656.3   │, 48.0, "48 Experiments, 4 Factors")                                                                                                                                                                                                                                                     
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB     │ DELB_ad │ A         │ V          │ G          │ CN      │ log2CN   │ GE        │
├──────┼────────┼─────────┼─────────┼──────────┼─────────┼───────────┼────────────┼────────────┼─────────┼──────────┼───────────┤
│ 1    │ 81.0   │ 59.153  │ 1.77198 │ 0.730284 │ 2.71828 │ 0.017114  │ 3.27705e-7 │ 6.37698e-6 │ 1.25155 │ 0.323719 │ 7.8407e5  │
│ 2    │ 81.0   │ 58.8997 │ 1.77011 │ 0.727157 │ 2.71828 │ 0.0172054 │ 3.35177e-7 │ 6.53491e-6 │ 1.27662 │ 0.352327 │ 7.65122e5 │
│ 3    │ 81.0   │ 58.7662 │ 1.76913 │ 0.725509 │ 2.71828 │ 0.0172229 │ 3.33385e-7 │ 6.36336e-6 │ 1.23668 │ 0.306471 │ 7.85748e5 │
│ 4    │ 81.0   │ 58.7451 │ 1.76897 │ 0.725248 │ 2.71828 │ 0.0172339 │ 3.34375e-7 │ 6.39045e-6 │ 1.2402  │ 0.31057  │ 782417.0  │
│ 5    │ 81.0   │ 58.7385 │ 1.76892 │ 0.725166 │ 2.71828 │ 0.0172386 │ 3.35063e-7 │ 6.73932e-6 │ 1.24881 │ 0.320554 │ 7.41915e5 │
│ 6    │ 81.0   │ 58.7385 │ 1.76892 │ 0.725166 │ 2.71828 │ 0.0172386 │ 3.35063e-7 │ 6.73932e-6 │ 1.24881 │ 0.320554 │ 7.41915e5 │
│ 7    │ 81.0   │ 58.7075 │ 1.76869 │ 0.724784 │ 2.71828 │ 0.0172546 │ 3.36457e-7 │ 6.73848e-6 │ 1.25265 │ 0.324986 │ 7.42008e5 │
│ 8    │ 81.0   │ 58.5615 │ 1.76761 │ 0.722981 │ 2.71828 │ 0.017284  │ 3.36843e-7 │ 6.35066e-6 │ 1.22474 │ 0.292481 │ 787320.0  │
⋮
│ 7992 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 11.2846 │ 3.49629  │ 0.0       │
│ 7993 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 5.2962  │ 2.40496  │ 0.0       │
│ 7994 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 2.92399 │ 1.54794  │ 0.0       │
│ 7995 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 4.04892 │ 2.01754  │ 0.0       │
│ 7996 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 9.95124 │ 3.31488  │ 0.0       │
│ 7997 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 3.16866 │ 1.66387  │ 0.0       │
│ 7998 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 3.58512 │ 1.84202  │ 0.0       │
│ 7999 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 6.27532 │ 2.64969  │ 0.0       │
│ 8000 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0       │ 0.0        │ 0.0        │ 11.5212 │ 3.52622  │ 0.0       │, 81.0, "4 to 81 Experiments, 4 Factors")
#+end_example

#+HEADER: :results output :session *Julia*
#+NAME: define_plot_subsets
#+BEGIN_SRC julia

function plot_subsets(sampled_subsets; columns = [:D, :DELB, :Length])
    upscale = 2
    small_font = Plots.font("sans-serif", 10.0 * upscale)
    large_font = Plots.font("sans-serif", 14.0 * upscale)
    default(titlefont  = large_font,
            guidefont  = large_font,
            tickfont   = small_font,
            legendfont = small_font)
    default(size = (896 * upscale, 504 * upscale))
    default(dpi = 300)

    plotly()

    subplots = []

    for subset in sampled_subsets
        push!(subplots,
              histogram(Array(subset[1][:D]), labels = "D",
                        title = subset[3]),
              plot(Array(subset[1][columns]),
                  ylims = (-1, subset[2] + 2),
                  labels = reshape(columns, (1, length(columns))),
                  title = subset[3],
                  linestyle = :solid,
                  linealpha=1.0,
                  linewidth=1.5 * upscale)
        )
    end

    plot(subplots...,
        layout = (length(sampled_subsets), 2)
    )
end
#+END_SRC

#+RESULTS: define_plot_subsets
: 
: plot_subsets (generic function with 1 method)


#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
*** [2018-03-19 Mon]
**** Understanding D-Efficiency
I've found conflicting definitions for the D-Efficiency criteria.

***** In the ~AlgDesign~ Package
The first definition is from the ~AlgDesign~ [[https://cran.r-project.org/web/packages/AlgDesign/AlgDesign.pdf][R package]]:

\begin{equation}
  D_{elb} = exp(1 - 1 / G_e)
\end{equation}

Where $G_e$ is given by:

\begin{equation}
  G_e = k / max(x\prime{}(X\prime{}X)x, \forall x \in X))
\end{equation}

Where $k$ is the number of of column in the model matrix $X$, and each $x$ is a
row in $X$ that describes an experiment.

I was not able to find a paper or book describing or explaining this criteria.

***** From DETMAX, SAS, and Castillo's Book                     :ATTACH:
:PROPERTIES:
:Attachments: castillo2007process.pdf
:ID:       21aa2891-9cc8-4e49-8f75-ad668b71ea93
:END:

Mitchell's [[https://www.tandfonline.com/doi/abs/10.1080/00401706.1974.10489176][second paper on the DETMAX algorithm]] and Castillo's book (Process
Optimization: A Statistical Approach, annexed to this section) present a
different criteria for D-Efficiency:

\begin{equation}
  D_{elb} = det(X\prime{}X)^(1/k) / N
\end{equation}

Where $X$ is the model matrix, $k$ is its number of columns and $N$ its number
of rows.

Castillo mentions that this is a lower bound on the D-Efficiency of a design,
more specifically, from section 5.7.2, page 152 of Castillo's book, this version
of D-Efficiency "[...] is a measure of D-optimality with respect to a
hypothetical orthogonal design (which would be D-optimal)[...]".

***** From Fedorov's Theory of Optimal Designs                   :ATTACH:
:PROPERTIES:
:Attachments: fedorov1972theory.pdf
:ID:       1c941f7d-bd93-40ab-a1a5-4033eab52841
:END:

**** Plotting Sampled Design Spaces
***** Setup

#+CALL: init_dopt_utils()

#+RESULTS:
#+begin_example
2-element Array{Task,1}:
 Task (done) @0x00007f8ff8d49cf0
 Task (done) @0x00007f8ff8d4a230

2-element Array{Int64,1}:
 12
 13



build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

scale_box_encoding! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound_algdesign (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

sample_subset (generic function with 1 method)
#+end_example

#+CALL: define_sample_subsets()

#+RESULTS:
: 
: sample_subsets (generic function with 1 method)

#+CALL: define_plot_subsets()

#+RESULTS:
: 
: plot_subsets (generic function with 1 method)

***** Diferent Design Sizes for 4 Factors with 3 Levels :ATTACH:
:PROPERTIES:
:Attachments: juliaQnFYS8.html
:ID:       d73b9756-a310-42b0-8ea7-07bd55442b47
:COMMENT: Results using AlgDesign D-Efficiency
:END:

First generate the data:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
ranges = [4:4, 5:5, 6:6, 12:12, 24:24, 48:48, 4:3 ^ 4]
factors = [[Array{Float64, 1}(1:3) for i = 1:4] for k in 1:length(ranges)]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs)
#+END_SRC

#+RESULTS:
#+begin_example
7-element Array{UnitRange{Int64},1}:
 4:4  
 5:5  
 6:6  
 12:12
 24:24
 48:48
 4:81
7-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
8000

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 4:4
Number of Design to Sample: 8000
Total Subsets for Fixed Size 4: 1.66374e6
Elapsed Time: 25.085653298 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 5:5
Number of Design to Sample: 8000
Total Subsets for Fixed Size 5: 2.5621596e7
Elapsed Time: 27.456596866 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 6:6
Number of Design to Sample: 8000
Total Subsets for Fixed Size 6: 3.24540216e8
Elapsed Time: 26.287435567 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 12:12
Number of Design to Sample: 8000
Total Subsets for Fixed Size 12: 7.072432018469998e13
Elapsed Time: 19.628260152 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 24:24
Number of Design to Sample: 8000
Total Subsets for Fixed Size 24: 2.305491245366683e20
Elapsed Time: 24.860763947 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 48:48
Number of Design to Sample: 8000
Total Subsets for Fixed Size 48: 5.3779686508403226e22
Elapsed Time: 21.819339209 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 4:81
Number of Design to Sample: 8000
Elapsed Time: 26.607143599 seconds
7-element Array{Any,1}:
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D          │ log10D   │ DELB        │ DELB_ad │ A           │ V           │ G           │ CN      │ log2CN   │ GE           │
├──────┼────────┼────────────┼──────────┼─────────────┼─────────┼─────────────┼─────────────┼─────────────┼─────────┼──────────┼──────────────┤
│ 1    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.61313 │ 1.38578  │ 2.18953e-46  │
│ 2    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.35829 │ 1.23774  │ 2.18953e-46  │
│ 3    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 1.23849e15  │ 5.93646e46  │ 9.7142e46   │ 1.83609 │ 0.876633 │ 5.1471e-47   │
│ 4    │ 4.0    │ 0.00224355 │ -2.64906 │ 0.000560888 │ 0.0     │ 9.0072e14   │ 2.2836e46   │ 2.2836e46   │ 2.35829 │ 1.23774  │ 2.18953e-46  │
│ 5    │ 4.0    │ 0.00221478 │ -2.65467 │ 0.000553695 │ 0.0     │ 7.8813e14   │ 1.52983e46  │ 2.91396e46  │ 1.87083 │ 0.903677 │ 1.71588e-46  │
│ 6    │ 4.0    │ 0.00213547 │ -2.67051 │ 0.000533868 │ 0.0     │ 9.45756e14  │ 2.64355e46  │ 5.03533e46  │ 1.87083 │ 0.903677 │ 9.92984e-47  │
│ 7    │ 4.0    │ 0.00204226 │ -2.68989 │ 0.000510566 │ 0.0     │ 1.57626e15  │ 1.22386e47  │ 1.74838e47  │ 1.87083 │ 0.903677 │ 2.85979e-47  │
│ 8    │ 4.0    │ 0.00199968 │ -2.69904 │ 0.00049992  │ 0.0     │ 1.30104e15  │ 6.88211e46  │ 1.90582e47  │ 1.58978 │ 0.668832 │ 2.62355e-47  │
⋮
│ 7992 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.57654 │ 2.19426  │ 0.0          │
│ 7993 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ -1.1259e15  │ -4.46015e46 │ -2.37875e46 │ 6.20274 │ 2.63291  │ -2.10195e-46 │
│ 7994 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 9.22109 │ 3.20494  │ 0.0          │
│ 7995 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 10.4046 │ 3.37915  │ 0.0          │
│ 7996 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 6.99543 │ 2.80641  │ 0.0          │
│ 7997 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 5.48066 │ 2.45435  │ 0.0          │
│ 7998 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 7.30669 │ 2.86922  │ 0.0          │
│ 7999 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 6.09629 │ 2.60793  │ 0.0          │
│ 8000 │ 4.0    │ 0.0        │ -Inf     │ 0.0         │ 0.0     │ -1.80144e15 │ -1.82688e47 │ -5.06655e15 │ 4.75216 │ 2.24858  │ -9.86865e-16 │, 4.0, "4 Experiments, 4 Factors")
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D   │ DELB     │ DELB_ad │ A           │ V           │ G         │ CN         │ log2CN   │ GE      │
├──────┼────────┼─────────┼──────────┼──────────┼─────────┼─────────────┼─────────────┼───────────┼────────────┼──────────┼─────────┤
│ 1    │ 5.0    │ 4.19296 │ 0.622521 │ 0.838593 │ 2.70406 │ 0.25        │ 0.0197917   │ 0.0262346 │ 1.41421    │ 0.5      │ 190.588 │
│ 2    │ 5.0    │ 4.19296 │ 0.622521 │ 0.838593 │ 2.67914 │ 0.265432    │ 0.0349384   │ 0.0725123 │ 1.9663     │ 0.975486 │ 68.9538 │
│ 3    │ 5.0    │ 3.79196 │ 0.578863 │ 0.758391 │ 2.65117 │ 0.314286    │ 0.0735423   │ 0.125     │ 2.24698    │ 1.16799  │ 40.0    │
│ 4    │ 5.0    │ 3.79196 │ 0.578863 │ 0.758391 │ 2.60349 │ 0.3         │ 0.0593112   │ 0.215743  │ 2.101      │ 1.07108  │ 23.1757 │
│ 5    │ 5.0    │ 3.6812  │ 0.565989 │ 0.73624  │ 2.66809 │ 0.311243    │ 0.0543955   │ 0.0931911 │ 1.90355    │ 0.92869  │ 53.6532 │
│ 6    │ 5.0    │ 3.6812  │ 0.565989 │ 0.73624  │ 2.6509  │ 0.32426     │ 0.0712132   │ 0.125497  │ 2.35135    │ 1.23349  │ 39.8416 │
│ 7    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.58423 │ 0.351389    │ 0.143041    │ 0.252869  │ 2.48497    │ 1.31323  │ 19.7731 │
│ 8    │ 5.0    │ 3.5652  │ 0.552084 │ 0.713041 │ 2.29977 │ 0.422222    │ 0.446571    │ 0.835959  │ 3.32274    │ 1.73237  │ 5.98116 │
⋮
│ 7992 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0       │ 1.11648e17 │ 56.6317  │ 0.0     │
│ 7993 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0       │ 2.04278e18 │ 60.8252  │ 0.0     │
│ 7994 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 2.64544 │ -9.0072e14  │ -1.82688e46 │ 0.135815  │ 1.16944e17 │ 56.6986  │ 36.8149 │
│ 7995 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0       │ 1.31931e16 │ 53.5506  │ 0.0     │
│ 7996 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0       │ 3.58669e16 │ 54.9935  │ 0.0     │
│ 7997 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0       │ 3.6728e16  │ 55.0277  │ 0.0     │
│ 7998 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0       │ 2.1241e17  │ 57.5596  │ 0.0     │
│ 7999 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 1.66252 │ -9.0072e14  │ -1.82688e46 │ 2.45833   │ 7.26422e16 │ 56.0117  │ 2.0339  │
│ 8000 │ 5.0    │ 0.0     │ -Inf     │ 0.0      │ 1.96403 │ -2.70216e15 │ -4.93257e47 │ 1.625     │ 4.488e16   │ 55.3169  │ 3.07692 │, 5.0, "5 Experiments, 4 Factors")                                                                                                                                                                                              
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D   │ DELB     │ DELB_ad │ A        │ V         │ G         │ CN         │ log2CN   │ GE      │
├──────┼────────┼─────────┼──────────┼──────────┼─────────┼──────────┼───────────┼───────────┼────────────┼──────────┼─────────┤
│ 1    │ 6.0    │ 5.27803 │ 0.722472 │ 0.879672 │ 2.69502 │ 0.225    │ 0.0244141 │ 0.0429688 │ 2.0        │ 1.0      │ 116.364 │
│ 2    │ 6.0    │ 4.81645 │ 0.682727 │ 0.802742 │ 2.6835  │ 0.25     │ 0.03424   │ 0.0643861 │ 2.24966    │ 1.1697   │ 77.6565 │
│ 3    │ 6.0    │ 4.8045  │ 0.681648 │ 0.80075  │ 2.67118 │ 0.25     │ 0.0333333 │ 0.0874023 │ 2.30237    │ 1.20312  │ 57.2067 │
│ 4    │ 6.0    │ 4.75546 │ 0.677193 │ 0.792577 │ 2.62745 │ 0.276316 │ 0.0673738 │ 0.169923  │ 2.78347    │ 1.47688  │ 29.4251 │
│ 5    │ 6.0    │ 4.74288 │ 0.676042 │ 0.79048  │ 2.7064  │ 0.223333 │ 0.0130424 │ 0.0219125 │ 1.61803    │ 0.694242 │ 228.18  │
│ 6    │ 6.0    │ 4.69118 │ 0.671282 │ 0.781863 │ 2.70178 │ 0.226761 │ 0.0132243 │ 0.030437  │ 1.64304    │ 0.716363 │ 164.274 │
│ 7    │ 6.0    │ 4.67789 │ 0.67005  │ 0.779648 │ 2.69976 │ 0.229286 │ 0.014953  │ 0.0341938 │ 1.75893    │ 0.814698 │ 146.225 │
│ 8    │ 6.0    │ 4.67789 │ 0.67005  │ 0.779648 │ 2.62597 │ 0.278571 │ 0.0697567 │ 0.17275   │ 2.62332    │ 1.39139  │ 28.9436 │
⋮
│ 7992 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 0.0        │ -Inf     │ 0.0     │
│ 7993 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 8.67373e15 │ 52.9456  │ 0.0     │
│ 7994 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 1.14532e16 │ 53.3466  │ 0.0     │
│ 7995 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 0.0        │ -Inf     │ 0.0     │
│ 7996 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 1.59974e16 │ 53.8287  │ 0.0     │
│ 7997 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 3.20109e16 │ 54.8294  │ 0.0     │
│ 7998 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 0.0        │ -Inf     │ 0.0     │
│ 7999 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 1.34144e17 │ 56.8966  │ 0.0     │
│ 8000 │ 6.0    │ 0.0     │ -Inf     │ 0.0      │ 0.0     │ 0.0      │ 0.0       │ 0.0       │ 9.2952e15  │ 53.0454  │ 0.0     │, 6.0, "6 Experiments, 4 Factors")                                                                                                                                                                                                                                                                                             
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D   │ DELB     │ DELB_ad  │ A        │ V           │ G          │ CN      │ log2CN   │ GE       │
├──────┼────────┼─────────┼──────────┼──────────┼──────────┼──────────┼─────────────┼────────────┼─────────┼──────────┼──────────┤
│ 1    │ 12.0   │ 9.95984 │ 0.998252 │ 0.829987 │ 2.71698  │ 0.105118 │ 0.000629461 │ 0.00240111 │ 1.50757 │ 0.59223  │ 2082.37  │
│ 2    │ 12.0   │ 9.88083 │ 0.994794 │ 0.823403 │ 2.71704  │ 0.108029 │ 0.000713441 │ 0.00229021 │ 1.67556 │ 0.744647 │ 2183.21  │
│ 3    │ 12.0   │ 9.62881 │ 0.983572 │ 0.802401 │ 2.71655  │ 0.110782 │ 0.000833983 │ 0.00318217 │ 1.64104 │ 0.714611 │ 1571.25  │
│ 4    │ 12.0   │ 9.61775 │ 0.983074 │ 0.801479 │ 2.71689  │ 0.11091  │ 0.00082801  │ 0.00255426 │ 1.64787 │ 0.7206   │ 1957.51  │
│ 5    │ 12.0   │ 9.59922 │ 0.982236 │ 0.799935 │ 2.7161   │ 0.113074 │ 0.000921889 │ 0.00400649 │ 1.78999 │ 0.839949 │ 1247.98  │
│ 6    │ 12.0   │ 9.57112 │ 0.980963 │ 0.797593 │ 2.71665  │ 0.111166 │ 0.000796168 │ 0.00299675 │ 1.72958 │ 0.790419 │ 1668.48  │
│ 7    │ 12.0   │ 9.5595  │ 0.980435 │ 0.796625 │ 2.71699  │ 0.111304 │ 0.000776125 │ 0.00238244 │ 1.62762 │ 0.70276  │ 2098.69  │
│ 8    │ 12.0   │ 9.5549  │ 0.980226 │ 0.796242 │ 2.71622  │ 0.116303 │ 0.00106856  │ 0.00379641 │ 1.82166 │ 0.865253 │ 1317.04  │
⋮
│ 7992 │ 12.0   │ 4.72054 │ 0.673992 │ 0.393378 │ 2.11592  │ 0.424659 │ 0.269522    │ 1.25256    │ 5.5126  │ 2.46273  │ 3.99181  │
│ 7993 │ 12.0   │ 4.71893 │ 0.673843 │ 0.393244 │ 0.533166 │ 0.587179 │ 1.0582      │ 8.14462    │ 6.13513 │ 2.61709  │ 0.613903 │
│ 7994 │ 12.0   │ 4.70513 │ 0.672572 │ 0.392094 │ 2.64882  │ 0.289419 │ 0.0286196   │ 0.129432   │ 3.29841 │ 1.72177  │ 38.6304  │
│ 7995 │ 12.0   │ 4.692   │ 0.671358 │ 0.391    │ 0.943469 │ 0.523131 │ 0.696569    │ 5.29096    │ 5.92696 │ 2.56729  │ 0.945008 │
│ 7996 │ 12.0   │ 4.67454 │ 0.669739 │ 0.389545 │ 2.63031  │ 0.305914 │ 0.0358146   │ 0.164489   │ 3.39205 │ 1.76216  │ 30.3972  │
│ 7997 │ 12.0   │ 4.6517  │ 0.667612 │ 0.387642 │ 2.56344  │ 0.332507 │ 0.0655125   │ 0.293242   │ 4.11623 │ 2.04132  │ 17.0508  │
│ 7998 │ 12.0   │ 4.51296 │ 0.654461 │ 0.37608  │ 1.56799  │ 0.509936 │ 0.526202    │ 2.75101    │ 6.30535 │ 2.65658  │ 1.81751  │
│ 7999 │ 12.0   │ 4.37563 │ 0.641041 │ 0.364636 │ 0.032024 │ 0.765337 │ 3.00925     │ 22.2063    │ 6.99268 │ 2.80584  │ 0.225161 │
│ 8000 │ 12.0   │ 4.05769 │ 0.608279 │ 0.338141 │ 0.429948 │ 0.684545 │ 1.2845      │ 9.22045    │ 6.7692  │ 2.75899  │ 0.542273 │, 12.0, "12 Experiments, 4 Factors")                                                                                                                                                                                                                                                     
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB     │ DELB_ad │ A         │ V           │ G           │ CN      │ log2CN   │ GE      │
├──────┼────────┼─────────┼─────────┼──────────┼─────────┼───────────┼─────────────┼─────────────┼─────────┼──────────┼─────────┤
│ 1    │ 24.0   │ 20.1975 │ 1.3053  │ 0.841562 │ 2.71817 │ 0.0509725 │ 3.23477e-5  │ 0.000196523 │ 1.39301 │ 0.478201 │ 25442.3 │
│ 2    │ 24.0   │ 19.7826 │ 1.29628 │ 0.824276 │ 2.71817 │ 0.0515257 │ 3.14278e-5  │ 0.000203117 │ 1.3459  │ 0.428575 │ 24616.3 │
│ 3    │ 24.0   │ 19.516  │ 1.29039 │ 0.813167 │ 2.71817 │ 0.052491  │ 3.43767e-5  │ 0.000198679 │ 1.33067 │ 0.412151 │ 25166.2 │
│ 4    │ 24.0   │ 19.2871 │ 1.28527 │ 0.803629 │ 2.71813 │ 0.0539386 │ 4.16585e-5  │ 0.000274465 │ 1.45757 │ 0.543563 │ 18217.2 │
│ 5    │ 24.0   │ 19.2693 │ 1.28487 │ 0.802886 │ 2.71813 │ 0.0532873 │ 3.6401e-5   │ 0.000287001 │ 1.39451 │ 0.479756 │ 17421.5 │
│ 6    │ 24.0   │ 19.1468 │ 1.2821  │ 0.797785 │ 2.71817 │ 0.0533625 │ 3.5301e-5   │ 0.000197724 │ 1.3589  │ 0.442438 │ 25287.8 │
│ 7    │ 24.0   │ 19.0995 │ 1.28102 │ 0.795812 │ 2.71814 │ 0.0542548 │ 4.03232e-5  │ 0.00026978  │ 1.45146 │ 0.5375   │ 18533.6 │
│ 8    │ 24.0   │ 19.0845 │ 1.28068 │ 0.795187 │ 2.7181  │ 0.0544765 │ 4.23357e-5  │ 0.000328759 │ 1.44649 │ 0.532555 │ 15208.7 │
⋮
│ 7992 │ 24.0   │ 13.2693 │ 1.12285 │ 0.552887 │ 2.71311 │ 0.103386  │ 0.00093339  │ 0.00952187  │ 2.88105 │ 1.52659  │ 525.107 │
│ 7993 │ 24.0   │ 13.2371 │ 1.12179 │ 0.551547 │ 2.71549 │ 0.09127   │ 0.000398334 │ 0.00514644  │ 2.56478 │ 1.35884  │ 971.545 │
│ 7994 │ 24.0   │ 13.1914 │ 1.12029 │ 0.54964  │ 2.71602 │ 0.0920093 │ 0.000395333 │ 0.00416614  │ 2.43544 │ 1.28418  │ 1200.15 │
│ 7995 │ 24.0   │ 13.1611 │ 1.11929 │ 0.548379 │ 2.7166  │ 0.0911218 │ 0.000334618 │ 0.00309275  │ 2.15407 │ 1.10706  │ 1616.69 │
│ 7996 │ 24.0   │ 13.156  │ 1.11912 │ 0.548167 │ 2.7166  │ 0.0918211 │ 0.000396878 │ 0.0030864   │ 2.38734 │ 1.2554   │ 1620.01 │
│ 7997 │ 24.0   │ 13.1218 │ 1.11799 │ 0.546742 │ 2.71627 │ 0.0923957 │ 0.000350501 │ 0.00369311  │ 2.32952 │ 1.22003  │ 1353.87 │
│ 7998 │ 24.0   │ 12.9209 │ 1.11129 │ 0.538371 │ 2.71731 │ 0.0877323 │ 0.0002531   │ 0.00179444  │ 2.03171 │ 1.0227   │ 2786.38 │
│ 7999 │ 24.0   │ 12.8483 │ 1.10885 │ 0.535348 │ 2.71523 │ 0.10005   │ 0.000583221 │ 0.0056144   │ 2.54478 │ 1.34754  │ 890.567 │
│ 8000 │ 24.0   │ 12.7262 │ 1.1047  │ 0.530258 │ 2.71705 │ 0.0882164 │ 0.000240918 │ 0.00227251  │ 2.06223 │ 1.04421  │ 2200.21 │, 24.0, "24 Experiments, 4 Factors")                                                                                                                                                                                                                                                                        
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB     │ DELB_ad │ A         │ V          │ G           │ CN      │ log2CN   │ GE        │
├──────┼────────┼─────────┼─────────┼──────────┼─────────┼───────────┼────────────┼─────────────┼─────────┼──────────┼───────────┤
│ 1    │ 48.0   │ 37.5308 │ 1.57439 │ 0.781892 │ 2.71827 │ 0.0271118 │ 2.28786e-6 │ 2.67741e-5  │ 1.29634 │ 0.374448 │ 1.86748e5 │
│ 2    │ 48.0   │ 37.4812 │ 1.57381 │ 0.780859 │ 2.71827 │ 0.0271942 │ 2.34276e-6 │ 3.01065e-5  │ 1.34775 │ 0.430555 │ 1.66077e5 │
│ 3    │ 48.0   │ 37.3337 │ 1.5721  │ 0.777786 │ 2.71827 │ 0.0272192 │ 2.27786e-6 │ 2.72556e-5  │ 1.29464 │ 0.372554 │ 1.83449e5 │
│ 4    │ 48.0   │ 37.1884 │ 1.57041 │ 0.774759 │ 2.71827 │ 0.0273155 │ 2.31245e-6 │ 2.70468e-5  │ 1.27443 │ 0.349852 │ 1.84865e5 │
│ 5    │ 48.0   │ 37.1816 │ 1.57033 │ 0.774617 │ 2.71827 │ 0.0274472 │ 2.39227e-6 │ 3.02547e-5  │ 1.32681 │ 0.407962 │ 1.65264e5 │
│ 6    │ 48.0   │ 37.1769 │ 1.57027 │ 0.774519 │ 2.71826 │ 0.0273526 │ 2.35354e-6 │ 3.24092e-5  │ 1.32556 │ 0.406601 │ 1.54277e5 │
│ 7    │ 48.0   │ 37.1657 │ 1.57014 │ 0.774285 │ 2.71827 │ 0.0275016 │ 2.45226e-6 │ 3.07164e-5  │ 1.37441 │ 0.458808 │ 1.6278e5  │
│ 8    │ 48.0   │ 37.0708 │ 1.56903 │ 0.772308 │ 2.71826 │ 0.027469  │ 2.37421e-6 │ 3.13268e-5  │ 1.33563 │ 0.417524 │ 1.59608e5 │
⋮
│ 7992 │ 48.0   │ 31.0011 │ 1.49138 │ 0.645856 │ 2.71824 │ 0.0338436 │ 5.14156e-6 │ 7.47944e-5  │ 1.55508 │ 0.636987 │ 66850.0   │
│ 7993 │ 48.0   │ 30.9905 │ 1.49123 │ 0.645636 │ 2.7182  │ 0.0352731 │ 7.27944e-6 │ 0.000155581 │ 1.86422 │ 0.898576 │ 32137.5   │
│ 7994 │ 48.0   │ 30.7939 │ 1.48846 │ 0.64154  │ 2.71821 │ 0.0353266 │ 7.40207e-6 │ 0.000140487 │ 1.74611 │ 0.804141 │ 35590.6   │
│ 7995 │ 48.0   │ 30.7547 │ 1.48791 │ 0.640723 │ 2.71825 │ 0.0338749 │ 4.89885e-6 │ 6.04462e-5  │ 1.49979 │ 0.584757 │ 82718.2   │
│ 7996 │ 48.0   │ 30.7029 │ 1.48718 │ 0.639643 │ 2.71822 │ 0.0349102 │ 6.24131e-6 │ 0.000108787 │ 1.72519 │ 0.786759 │ 45961.3   │
│ 7997 │ 48.0   │ 30.6935 │ 1.48705 │ 0.639448 │ 2.71823 │ 0.0346187 │ 5.92402e-6 │ 9.20171e-5  │ 1.62098 │ 0.696864 │ 54337.8   │
│ 7998 │ 48.0   │ 30.6542 │ 1.48649 │ 0.63863  │ 2.7182  │ 0.0354325 │ 7.46453e-6 │ 0.000156233 │ 1.76383 │ 0.818709 │ 32003.5   │
│ 7999 │ 48.0   │ 30.6111 │ 1.48588 │ 0.637731 │ 2.71824 │ 0.0343243 │ 5.48057e-6 │ 7.30547e-5  │ 1.60639 │ 0.683818 │ 68441.9   │
│ 8000 │ 48.0   │ 30.6048 │ 1.48579 │ 0.6376   │ 2.71821 │ 0.0350214 │ 6.51189e-6 │ 0.000131526 │ 1.77182 │ 0.825231 │ 38015.4   │, 48.0, "48 Experiments, 4 Factors")                                                                                                                                                                                                                                                     
 (8000×11 DataFrames.DataFrame
│ Row  │ Length │ D       │ log10D  │ DELB     │ DELB_ad │ A           │ V           │ G           │ CN         │ log2CN   │ GE           │
├──────┼────────┼─────────┼─────────┼──────────┼─────────┼─────────────┼─────────────┼─────────────┼────────────┼──────────┼──────────────┤
│ 1    │ 81.0   │ 58.9669 │ 1.77061 │ 0.727986 │ 2.71828 │ 0.0171642   │ 3.30095e-7  │ 6.72438e-6  │ 1.23789    │ 0.307884 │ 7.43563e5    │
│ 2    │ 81.0   │ 58.9656 │ 1.7706  │ 0.72797  │ 2.71828 │ 0.0171645   │ 3.30033e-7  │ 6.40153e-6  │ 1.2355     │ 0.305097 │ 7.81063e5    │
│ 3    │ 81.0   │ 58.9564 │ 1.77053 │ 0.727857 │ 2.71828 │ 0.0171696   │ 3.30566e-7  │ 6.40163e-6  │ 1.23954    │ 0.30981  │ 7.81051e5    │
│ 4    │ 81.0   │ 58.7662 │ 1.76913 │ 0.725509 │ 2.71828 │ 0.0172229   │ 3.33385e-7  │ 6.36336e-6  │ 1.23668    │ 0.306471 │ 7.85748e5    │
│ 5    │ 81.0   │ 58.7623 │ 1.7691  │ 0.72546  │ 2.71828 │ 0.0172254   │ 3.33695e-7  │ 6.36337e-6  │ 1.24024    │ 0.310617 │ 7.85747e5    │
│ 6    │ 81.0   │ 58.749  │ 1.769   │ 0.725297 │ 2.71828 │ 0.0172331   │ 3.34564e-7  │ 6.73836e-6  │ 1.24696    │ 0.318415 │ 7.4202e5     │
│ 7    │ 81.0   │ 58.7398 │ 1.76893 │ 0.725183 │ 2.71828 │ 0.0172384   │ 3.35126e-7  │ 6.4416e-6   │ 1.2504     │ 0.322392 │ 7.76205e5    │
│ 8    │ 81.0   │ 58.7199 │ 1.76879 │ 0.724938 │ 2.71828 │ 0.0172508   │ 3.36696e-7  │ 6.49329e-6  │ 1.26085    │ 0.334394 │ 770026.0     │
⋮
│ 7992 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.85031    │ 1.51112  │ 0.0          │
│ 7993 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ -1.80144e15 │ -1.82688e47 │ -3.60288e15 │ 3.91029    │ 1.96727  │ -1.38778e-15 │
│ 7994 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 7.41088    │ 2.88964  │ 0.0          │
│ 7995 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 2.95399    │ 1.56266  │ 0.0          │
│ 7996 │ 5.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 6.02167e16 │ 55.741   │ 0.0          │
│ 7997 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 3.04283    │ 1.60541  │ 0.0          │
│ 7998 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 6.90705    │ 2.78807  │ 0.0          │
│ 7999 │ 4.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 9.60634    │ 3.26399  │ 0.0          │
│ 8000 │ 5.0    │ 0.0     │ -Inf    │ 0.0      │ 0.0     │ 0.0         │ 0.0         │ 0.0         │ 4.00311e16 │ 55.152   │ 0.0          │, 81.0, "4 to 81 Experiments, 4 Factors")
#+end_example

Now plot it:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
***** Same Design Sizes for Doubling Factors of 3 Levels :ATTACH:
:PROPERTIES:
:Attachments: juliaFgA9gI.html
:ID:       717505a4-d2fe-423b-81d3-95022f35e914
:END:

First generate the data:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = [[Array{Float64, 1}(1:3) for i = 1:k] for k in [4, 8, 16, 32, 64, 128]]
ranges = [5:5, 9:9, 17:17, 33:33, 65:65, 129:129]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs, check_bounds = false)
#+END_SRC

#+RESULTS:
#+begin_example
6-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                                                                                                   
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                               
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                       
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
6-element Array{UnitRange{Int64},1}:
 5:5    
 9:9    
 17:17  
 33:33  
 65:65  
 129:129
8000

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 5:5
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Total Subsets for Fixed Size 5: 2.5621596e7
Elapsed Time: 20.745976317 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 6561
Total Subsets: Inf
Range of Design Sizes: 9:9
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Total Subsets for Fixed Size 9: NaN
Elapsed Time: 27.669072319 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 43046721
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Total Subsets for Fixed Size 17: NaN
Elapsed Time: 40.721783303 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 1853020188851841
Total Subsets: Inf
Range of Design Sizes: 33:33
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Total Subsets for Fixed Size 33: NaN
Elapsed Time: 66.794823804 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 8733086111712066817
Total Subsets: Inf
Range of Design Sizes: 65:65
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Total Subsets for Fixed Size 65: NaN
Elapsed Time: 133.264120582 seconds
Factors: Array{Float64,1}
Full Factorial Size: -9204772141784466943
Total Subsets: 0.0
Range of Design Sizes: 129:129
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
ERROR: DomainError:
Stacktrace:
 [1] nan_dom_err at ./math.jl:300 [inlined]
 [2] gamma(::Float64) at ./special/gamma.jl:3
 [3] #generate_designs#111(::Bool, ::Function, ::Array{Array{Float64,1},1}, ::DataFrames.Formula, ::UnitRange{Int64}, ::Int64) at ./none:34
 [4] (::#kw##generate_designs)(::Array{Any,1}, ::#generate_designs, ::Array{Array{Float64,1},1}, ::DataFrames.Formula, ::UnitRange{Int64}, ::Int64) at ./<missing>:0
 [5] macro expansion at ./util.jl:293 [inlined]
 [6] #sample_subset#112(::Bool, ::Function, ::Array{Array{Float64,1},1}, ::UnitRange{Int64}, ::Int64) at ./none:5
 [7] (::#kw##sample_subset)(::Array{Any,1}, ::#sample_subset, ::Array{Array{Float64,1},1}, ::UnitRange{Int64}, ::Int64) at ./<missing>:0
 [8] #sample_subsets#118(::Bool, ::Function, ::Array{Array{Array{Float64,1},1},1}, ::Array{UnitRange{Int64},1}, ::Int64) at ./none:19
 [9] (::#kw##sample_subsets)(::Array{Any,1}, ::#sample_subsets, ::Array{Array{Array{Float64,1},1},1}, ::Array{UnitRange{Int64},1}, ::Int64) at ./<missing>:0
#+end_example

Now plot it:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
**** Encoding Factors in ~AlgDesign~
Reading the code for ~optFederov~ we can see it calls the ~model.matrix~
function from the ~stats~ package. As Arnaud mentioned, this function
add columns encoding the levels of model factors that are "cast" to R factors.

If we print the model matrix before and after casting a column to factor, we can
see that the algorithm appears to create the new columns by encoding the levels
of the previous factor.

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

variables <- gen.factorial(c(2, 4, 2))

variables

m_matrix <- model.matrix(~., variables)

m_matrix
#+END_SRC

#+RESULTS:
#+begin_example
   X1 X2 X3
1  -1 -3 -1
2   1 -3 -1
3  -1 -1 -1
4   1 -1 -1
5  -1  1 -1
6   1  1 -1
7  -1  3 -1
8   1  3 -1
9  -1 -3  1
10  1 -3  1
11 -1 -1  1
12  1 -1  1
13 -1  1  1
14  1  1  1
15 -1  3  1
16  1  3  1
   (Intercept) X1 X2 X3
1            1 -1 -3 -1
2            1  1 -3 -1
3            1 -1 -1 -1
4            1  1 -1 -1
5            1 -1  1 -1
6            1  1  1 -1
7            1 -1  3 -1
8            1  1  3 -1
9            1 -1 -3  1
10           1  1 -3  1
11           1 -1 -1  1
12           1  1 -1  1
13           1 -1  1  1
14           1  1  1  1
15           1 -1  3  1
16           1  1  3  1
attr(,"assign")
[1] 0 1 2 3
#+end_example

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
variables <- gen.factorial(c(2, 6, 2))

variables$X2 = as.factor(variables$X2)

str(variables)

m_matrix <- model.matrix(~., variables)

m_matrix

design <- optFederov(~., variables, criterion = "D")

design
#+END_SRC

#+RESULTS:
#+begin_example
'data.frame':	24 obs. of  3 variables:
 $ X1: num  -1 1 -1 1 -1 1 -1 1 -1 1 ...
 $ X2: Factor w/ 6 levels "-5","-3","-1",..: 1 1 2 2 3 3 4 4 5 5 ...
 $ X3: num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
   (Intercept) X1 X2-3 X2-1 X21 X23 X25 X3
1            1 -1    0    0   0   0   0 -1
2            1  1    0    0   0   0   0 -1
3            1 -1    1    0   0   0   0 -1
4            1  1    1    0   0   0   0 -1
5            1 -1    0    1   0   0   0 -1
6            1  1    0    1   0   0   0 -1
7            1 -1    0    0   1   0   0 -1
8            1  1    0    0   1   0   0 -1
9            1 -1    0    0   0   1   0 -1
10           1  1    0    0   0   1   0 -1
11           1 -1    0    0   0   0   1 -1
12           1  1    0    0   0   0   1 -1
13           1 -1    0    0   0   0   0  1
14           1  1    0    0   0   0   0  1
15           1 -1    1    0   0   0   0  1
16           1  1    1    0   0   0   0  1
17           1 -1    0    1   0   0   0  1
18           1  1    0    1   0   0   0  1
19           1 -1    0    0   1   0   0  1
20           1  1    0    0   1   0   0  1
21           1 -1    0    0   0   1   0  1
22           1  1    0    0   0   1   0  1
23           1 -1    0    0   0   0   1  1
24           1  1    0    0   0   0   1  1
attr(,"assign")
[1] 0 1 2 2 2 2 2 3
attr(,"contrasts")
attr(,"contrasts")$X2
[1] "contr.treatment"
$D
[1] 0.2566584

$A
[1] 8.951042

$Ge
[1] 0.923

$Dea
[1] 0.92

$design
   X1 X2 X3
1  -1 -5 -1
3  -1 -3 -1
6   1 -1 -1
7  -1  1 -1
8   1  1 -1
10  1  3 -1
11 -1  5 -1
14  1 -5  1
16  1 -3  1
17 -1 -1  1
19 -1  1  1
21 -1  3  1
24  1  5  1

$rows
 [1]  1  3  6  7  8 10 11 14 16 17 19 21 24
#+end_example
*** [2018-03-20 Tue]
**** Analysing Data from GPU Autotuning Screening Experiments @ pilipili2
First make sure you have the data:

#+CALL: update_screening_experiment()

#+RESULTS:
: Already up to date.

***** For the ~gaussian~ application
Now we load the screening experiment and the results:

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/5_replications_pilipili2/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+HEADER: :results output :session *R*
#+BEGIN_SRC R

ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

# Uncomment to generate well-formatted figure:
#
#names(ordered_results)
#
#names(ordered_results) <- c("prl", "nad", "ufm", "ftz", "psq", "gpa", "opt", "rdc",
#                            "prd", "aee", "fmd", "flc", "opl", "fsc", "mrc", "dummy1",
#                            "dummy2", "dummy3", "dummy4", "response")

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq F value Pr(>F)  
X.Xnvlink...preserve.relocs                1  0.231  0.2308   1.002 0.3198  
X..no.align.double                         1  0.011  0.0107   0.047 0.8295  
X..use_fast_math                           1  0.741  0.7407   3.216 0.0767 .
X..ftz.                                    1  0.925  0.9254   4.018 0.0484 *
X..prec.sqrt.                              1  0.091  0.0912   0.396 0.5310  
X..gpu.architecture.                       1  0.010  0.0102   0.044 0.8341  
X..optimize.                               1  0.085  0.0851   0.370 0.5450  
X..relocatable.device.code.                1  0.385  0.3850   1.671 0.1998  
X..prec.div.                               1  0.030  0.0302   0.131 0.7183  
X.Xptxas...allow.expensive.optimizations.  1  0.033  0.0332   0.144 0.7053  
X.Xptxas...fmad.                           1  0.232  0.2318   1.007 0.3188  
X.Xptxas...force.load.cache.               1  0.026  0.0260   0.113 0.7376  
X.Xptxas...opt.level.                      1  0.148  0.1482   0.643 0.4249  
X.Xptxas...force.store.cache.              1  0.035  0.0348   0.151 0.6983  
X.Xptxas...maxrregcount.                   1  0.233  0.2326   1.010 0.3179  
dummy1                                     1  0.014  0.0142   0.061 0.8048  
dummy2                                     1  0.452  0.4520   1.962 0.1651  
dummy3                                     1  0.000  0.0000   0.000 0.9962  
dummy4                                     1  0.000  0.0004   0.002 0.9661  
Residuals                                 80 18.426  0.2303                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
    Min      1Q  Median      3Q     Max 
-0.6275 -0.3654 -0.1308  0.4178  0.9479 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    7.2001058  0.1919671  37.507
X.Xnvlink...preserve.relocson                 -0.0960802  0.0959835  -1.001
X..no.align.doubleon                           0.0207325  0.0959835   0.216
X..use_fast_mathon                             0.1721226  0.0959835   1.793
X..ftz.true                                    0.1923987  0.0959835   2.004
X..prec.sqrt.true                              0.0603991  0.0959835   0.629
X..gpu.architecture.sm_35                     -0.0201635  0.0959835  -0.210
X..optimize.3                                 -0.0583478  0.0959835  -0.608
X..relocatable.device.code.true                0.1240937  0.0959835   1.293
X..prec.div.true                               0.0347441  0.0959835   0.362
X.Xptxas...allow.expensive.optimizations.true -0.0364304  0.0959835  -0.380
X.Xptxas...fmad.true                          -0.0962950  0.0959835  -1.003
X.Xptxas...force.load.cache.lu                 0.0322716  0.0959835   0.336
X.Xptxas...opt.level.3                         0.0769818  0.0959835   0.802
X.Xptxas...force.store.cache.cs               -0.0373331  0.0959835  -0.389
X.Xptxas...maxrregcount.63                     0.0964608  0.0959835   1.005
dummy1                                        -0.0119014  0.0479918  -0.248
dummy2                                        -0.0672310  0.0479918  -1.401
dummy3                                        -0.0002274  0.0479918  -0.005
dummy4                                        -0.0020432  0.0479918  -0.043
                                              Pr(>|t|)    
(Intercept)                                     <2e-16 ***
X.Xnvlink...preserve.relocson                   0.3198    
X..no.align.doubleon                            0.8295    
X..use_fast_mathon                              0.0767 .  
X..ftz.true                                     0.0484 *  
X..prec.sqrt.true                               0.5310    
X..gpu.architecture.sm_35                       0.8341    
X..optimize.3                                   0.5450    
X..relocatable.device.code.true                 0.1998    
X..prec.div.true                                0.7183    
X.Xptxas...allow.expensive.optimizations.true   0.7053    
X.Xptxas...fmad.true                            0.3188    
X.Xptxas...force.load.cache.lu                  0.7376    
X.Xptxas...opt.level.3                          0.4249    
X.Xptxas...force.store.cache.cs                 0.6983    
X.Xptxas...maxrregcount.63                      0.3179    
dummy1                                          0.8048    
dummy2                                          0.1651    
dummy3                                          0.9962    
dummy4                                          0.9661    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.4799 on 80 degrees of freedom
Multiple R-squared:  0.1666,	Adjusted R-squared:  -0.03137 
F-statistic: 0.8415 on 19 and 80 DF,  p-value: 0.6526
#+end_example


Use this header to generate a well-formatted figure:
##+begin_src R :results output graphics :file "main_effects_gpu.png" :exports both :width 1280 :height 800 :session *R* 

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 

# Uncomment to generate well-formatted figure:
#
#names(reg)
#MEPlot(reg, main = "Main Effects Plot of CUDA Compilation Flags for Execution Time", pch = 20,
#       lwd = 3, cex.xax = 1.7, cex.yax = 2, cex.title = 2, cex.main = 1.8, cex.lab = 1.5, abbrev = 2)
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-4228QeL/figure4228-mG.png]]


#+HEADER: :results output :session *R*
#+BEGIN_SRC R
reg = aov(data = ordered_results, response ~ X..use_fast_math + X..ftz. + dummy1 + dummy2 + dummy3 + dummy4)

summary.aov(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                 Df Sum Sq Mean Sq F value Pr(>F)  
X..use_fast_math  1  0.741  0.7407   3.448 0.0665 .
X..ftz.           1  0.925  0.9254   4.309 0.0407 *
dummy1            1  0.014  0.0142   0.066 0.7979  
dummy2            1  0.452  0.4520   2.104 0.1502  
dummy3            1  0.000  0.0000   0.000 0.9961  
dummy4            1  0.000  0.0004   0.002 0.9649  
Residuals        93 19.975  0.2148                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example

#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-4228QeL/figure4228epL.png]]

***** For the ~heartwall~ application
Now we load the screening experiment and the results:

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(dplyr)
library(tidyr)
library(GGally)
library(FrF2)

experiment_dir <- "autotuning_screening_experiment/data/heartwall/5_replications_pilipili2/"

factors_file <- paste(experiment_dir, "factors.csv", sep = "")
results_file <- paste(experiment_dir, "results.csv", sep = "")
screening_file <- paste(experiment_dir, "screening_design.csv", sep = "")

factors <- as.data.frame(read.csv(factors_file, header = TRUE, sep = ","))
results <- as.data.frame(read.csv(results_file, header = TRUE, sep = ","))
screening <- as.data.frame(read.csv(screening_file, header = TRUE, sep = ","))
#+END_SRC

#+RESULTS:

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
n <- c(make.names(trimws(factors$name, which = c("left"))),
       "response")

ordered_results <- as.data.frame(results[n])
#+END_SRC

#+RESULTS:

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+HEADER: :results output :session *R*
#+BEGIN_SRC R

ordered_results$X..optimize. = as.factor(ordered_results$X..optimize.)
ordered_results$X.Xptxas...opt.level. = as.factor(ordered_results$X.Xptxas...opt.level.)
ordered_results$X.Xptxas...maxrregcount. = as.factor(ordered_results$X.Xptxas...maxrregcount.)

# Uncomment to generate well-formatted figure:
#
#names(ordered_results)
#
#names(ordered_results) <- c("prl", "nad", "ufm", "ftz", "psq", "gpa", "opt", "rdc",
#                            "prd", "aee", "fmd", "flc", "opl", "fsc", "mrc", "dummy1",
#                            "dummy2", "dummy3", "dummy4", "response")

reg = aov(data = ordered_results, response ~ .)

summary.aov(reg)

summary.lm(reg)
#+END_SRC

#+RESULTS:
#+begin_example
                                          Df Sum Sq Mean Sq F value Pr(>F)  
X.Xnvlink...preserve.relocs                1  0.355  0.3554   1.446 0.2327  
X..no.align.double                         1  0.075  0.0750   0.305 0.5823  
X..use_fast_math                           1  0.014  0.0137   0.056 0.8138  
X..ftz.                                    1  0.009  0.0089   0.036 0.8494  
X..prec.sqrt.                              1  0.002  0.0022   0.009 0.9247  
X..gpu.architecture.                       1  0.026  0.0262   0.107 0.7449  
X..optimize.                               1  0.023  0.0232   0.094 0.7596  
X..relocatable.device.code.                1  0.074  0.0744   0.303 0.5838  
X..prec.div.                               1  0.078  0.0781   0.318 0.5746  
X.Xptxas...allow.expensive.optimizations.  1  0.047  0.0468   0.190 0.6637  
X.Xptxas...fmad.                           1  0.136  0.1363   0.555 0.4586  
X.Xptxas...force.load.cache.               1  0.002  0.0020   0.008 0.9284  
X.Xptxas...opt.level.                      1  0.229  0.2293   0.933 0.3369  
X.Xptxas...force.store.cache.              1  0.000  0.0000   0.000 0.9937  
X.Xptxas...maxrregcount.                   1  0.816  0.8157   3.320 0.0722 .
dummy1                                     1  0.052  0.0520   0.212 0.6467  
dummy2                                     1  0.115  0.1152   0.469 0.4954  
dummy3                                     1  0.059  0.0590   0.240 0.6255  
dummy4                                     1  0.026  0.0263   0.107 0.7446  
Residuals                                 80 19.657  0.2457                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Call:
aov.default(formula = response ~ ., data = ordered_results)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.89188 -0.36292 -0.08145  0.38425  0.82665 

Coefficients:
                                                Estimate Std. Error t value
(Intercept)                                    5.7976352  0.1982784  29.240
X.Xnvlink...preserve.relocson                  0.1192312  0.0991392   1.203
X..no.align.doubleon                           0.0547575  0.0991392   0.552
X..use_fast_mathon                            -0.0234325  0.0991392  -0.236
X..ftz.true                                   -0.0188877  0.0991392  -0.191
X..prec.sqrt.true                              0.0094024  0.0991392   0.095
X..gpu.architecture.sm_35                     -0.0323639  0.0991392  -0.326
X..optimize.3                                  0.0304444  0.0991392   0.307
X..relocatable.device.code.true               -0.0545401  0.0991392  -0.550
X..prec.div.true                              -0.0558776  0.0991392  -0.564
X.Xptxas...allow.expensive.optimizations.true -0.0432625  0.0991392  -0.436
X.Xptxas...fmad.true                          -0.0738426  0.0991392  -0.745
X.Xptxas...force.load.cache.lu                -0.0089347  0.0991392  -0.090
X.Xptxas...opt.level.3                         0.0957802  0.0991392   0.966
X.Xptxas...force.store.cache.cs               -0.0007899  0.0991392  -0.008
X.Xptxas...maxrregcount.63                     0.1806279  0.0991392   1.822
dummy1                                        -0.0228072  0.0495696  -0.460
dummy2                                        -0.0339454  0.0495696  -0.685
dummy3                                        -0.0242876  0.0495696  -0.490
dummy4                                         0.0162064  0.0495696   0.327
                                              Pr(>|t|)    
(Intercept)                                     <2e-16 ***
X.Xnvlink...preserve.relocson                   0.2327    
X..no.align.doubleon                            0.5823    
X..use_fast_mathon                              0.8138    
X..ftz.true                                     0.8494    
X..prec.sqrt.true                               0.9247    
X..gpu.architecture.sm_35                       0.7449    
X..optimize.3                                   0.7596    
X..relocatable.device.code.true                 0.5838    
X..prec.div.true                                0.5746    
X.Xptxas...allow.expensive.optimizations.true   0.6637    
X.Xptxas...fmad.true                            0.4586    
X.Xptxas...force.load.cache.lu                  0.9284    
X.Xptxas...opt.level.3                          0.3369    
X.Xptxas...force.store.cache.cs                 0.9937    
X.Xptxas...maxrregcount.63                      0.0722 .  
dummy1                                          0.6467    
dummy2                                          0.4954    
dummy3                                          0.6255    
dummy4                                          0.7446    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.4957 on 80 degrees of freedom
Multiple R-squared:  0.09816,	Adjusted R-squared:  -0.116 
F-statistic: 0.4583 on 19 and 80 DF,  p-value: 0.9715
#+end_example

Use this header to generate a well-formatted figure:
##+begin_src R :results output graphics :file "main_effects_gpu.png" :exports both :width 1280 :height 800 :session *R* 

#+HEADER: :tangle autotuning_screening_experiment/src/screening/main_effects.r
#+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 1600 :height 800 :session *R* 

# Uncomment to generate well-formatted figure:
#
#names(reg)
#MEPlot(reg, main = "Main Effects Plot of CUDA Compilation Flags for Execution Time", pch = 20,
#       lwd = 3, cex.xax = 1.7, cex.yax = 2, cex.title = 2, cex.main = 1.8, cex.lab = 1.5, abbrev = 2)
MEPlot(reg)
#+end_src

#+RESULTS:
[[file:/tmp/babel-4228QeL/figure4228xVM.png]]

**** Tweaking D-Optimal Utilities                         :Stats:DOE:Code:
#+NAME: init_complete_dopt_utils
#+HEADER: :tangle doe_utils/doptimal_designs.jl
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
max_workers = 2

if length(workers()) != max_workers
    rmprocs.(workers())
    addprocs(2)
end

using IterTools, DataFrames, StatsBase, StatPlots

function build_linear_formula(factors::Int)
    linear_formula = Expr(:call)
    linear_formula.args = vcat(:+, [Symbol("x", i) for i = 1:factors])
    return Formula(:Y, linear_formula)
end

function get_model_variables(formula::DataFrames.Formula)
    variables = Array{Any, 1}()
    push!(variables, DataFrames.Terms(formula).terms...)
    return variables
end

function scale_orthogonal!(design::Array{Float64, 2},
                           factors::Array{T, 1}) where T <: Any
    design_range = (max(design[:,]...) + min(design[:,]...)) / 2

    for i = 1:size(design, 2)
        factor_range = (max(factors[i]...) - min(factors[i]...)) / 2
        design[:, i] = (design[:, i] - design_range) / factor_range
    end

    return design
end

function scale_box_encoding!(design::Array{Float64, 2},
                             factors::Array{T, 1}) where T <: Any
    for i = 1:size(design, 2)
        factor_mean = mean(factors[i])
        denominator = sqrt((sum((design[:, i] .- factor_mean) .^ 2.0)) / 4.0)

        numerator = design[:, i] .- factor_mean

        if !iszero(denominator) && !iszero(numerator)
            numerator ./= denominator
        end

        design[:, i] = numerator
    end

    return design
end

function generate_model_matrix(formula::DataFrames.Formula,
                               design::Array{Float64, 2},
                               factors::Array{T, 1};
                               scale::Function = scale_orthogonal!) where T <: Any
    variables  = get_model_variables(formula)

    design     = DataFrame(scale(design, factors))
    new_design = DataFrame(I = ones(size(design, 1)))

    for variable in variables
        if typeof(variable) == Expr && variable.args[1] == :&
            interaction             = Symbol(variable.args[2:end]...)
            new_design[interaction] = ones(size(design, 1))

            for s in variable.args[2:end]
                new_design[interaction] .*= design[s]
            end
        else
            new_design[variable] = float(design[variable])
        end
    end

    return new_design
end


function get_prediction_variances(model_matrix::Array{Float64, 2})
    information_matrix = model_matrix' * model_matrix

    if det(information_matrix) != 0.0
        dispersion_matrix = inv(information_matrix)
        rows              = size(dispersion_matrix, 1)

        prediction_variances = [dispersion_matrix[i, :]' * dispersion_matrix *
                                dispersion_matrix[i, :] for i = 1:rows]

        return prediction_variances
    else
        return 0.0
    end
end

function d_optimality(model_matrix::Array{Float64, 2})
    det_information_matrix = det(model_matrix' * model_matrix)

    if det_information_matrix < 0.0
        return 0.0
    else
        return ^(det_information_matrix, 1 / size(model_matrix, 2))
    end
end

function d_efficiency_lower_bound(model_matrix::Array{Float64, 2})
    return d_optimality(model_matrix) / size(model_matrix, 1)
end

function a_optimality(model_matrix::Array{Float64, 2})
    information_matrix = model_matrix' * model_matrix

    if det(information_matrix) != 0.0
        return trace(inv(information_matrix)) / size(model_matrix, 2)
    else
        return 0.0
    end

end

function v_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    rows                 = size(model_matrix, 1)

    return sum(prediction_variances) / rows
end

function g_optimality(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    return max(prediction_variances...)
end

function g_efficiency(model_matrix::Array{Float64, 2})
    prediction_variances = get_prediction_variances(model_matrix)
    max_variance         = max(prediction_variances...)

    g_e = size(model_matrix, 2) / max_variance

    if g_e == Inf
        return 0.0
    else
        return g_e
    end
end

function d_efficiency_lower_bound_algdesign(model_matrix::Array{Float64, 2})
    g_e   = g_efficiency(model_matrix)
    d_elb = exp(1 - (1 / g_e))

    if d_elb == Inf
        return 0.0
    else
        return d_elb
    end
end

function condition_number(model_matrix::Array{Float64, 2})
    condition_number = cond(model_matrix)

    if condition_number == Inf
        return 0.0
    else
        return condition_number
    end
end

@everywhere begin
    function sample_full_factorial(factors::Array{T, 1}) where T <: Any
        return Array{Float64, 1}([rand(i) for i in factors])
    end

    function check_repeated_row(subset::SharedArray{Float64, 2}, row::Array{Float64, 1})
        for j = 1:size(subset, 1)
            if subset[j, :] == row
                return true
            end
        end

        return false
    end

    function full_factorial_subset(factors::Array{T, 1}, experiments::Int) where T <: Any
        subset = fill!(SharedArray{Float64, 2}(experiments, size(factors, 1)), 0.0)

        @sync @parallel for i = 1:experiments
            sample_row = sample_full_factorial(factors)

            while check_repeated_row(subset, sample_row)
                sample_row = sample_full_factorial(factors)
            end

            subset[i, :] = sample_row
        end

        return subset
    end
end

function generate_designs(factors::Array{T, 1},
                          formula::DataFrames.Formula,
                          sample_range::UnitRange{Int},
                          designs::Int;
                          check_bounds::Bool = true,
                          scale::Function = scale_orthogonal!,
                          compute_all_metrics::Bool = false) where T <: Any
    println("> Factors: ", factors)

    full_factorial_size = prod(length, factors)
    full_factorial_subsets = 2.0 ^ full_factorial_size

    println("> Full Factorial Size: ", full_factorial_size)
    println("> Total Subsets: ", full_factorial_subsets)
    println("> Range of Design Sizes: ", sample_range)
    println("> Number of Design to Sample: ", designs)

    if check_bounds
        if designs > full_factorial_subsets
            println("> Requested too many designs, using ",
                    full_factorial_subsets, " instead")

            designs = full_factorial_subsets
        end

        if sample_range.stop > full_factorial_size
            println("> Requested too many maximum experiments, using ",
                    full_factorial_size, " instead")
            sample_range = sample_range.start:full_factorial_size
        end

        if sample_range.start == sample_range.stop
            println("> Total Subsets for Fixed Size ", sample_range.start, ": ",
                    factorial(float(full_factorial_size)) /
                    (factorial(float(full_factorial_size - sample_range.start)) *
                    factorial(float(sample_range.start))))
        end
    else
        println("> WARNING: Skipping bounds check!")
    end

    if compute_all_metrics
        evaluation = DataFrame(
                               Length  = [],
                               D       = [],
                               DELB    = [],
                               DELB_ad = [],
                               A       = [],
                               V       = [],
                               G       = [],
                               CN      = [],
                               GE      = [],
                               log2CN  = [],
                               log10D  = []
                              )
    else
        evaluation = DataFrame(
                               Length  = [],
                               D       = [],
                               DELB    = [],
                               DELB_ad = []
                              )
    end


    for i in 1:designs
        samples      = rand(sample_range)
        subset       = full_factorial_subset(factors, samples)
        model_matrix = generate_model_matrix(formula, Array{Float64, 2}(subset), factors,
                                             scale = scale)
        candidate    = Array(model_matrix)

        if compute_all_metrics
            d_opt = d_optimality(candidate)
            c_n   = condition_number(candidate)

            push!(evaluation, [
                               size(candidate, 1),
                               d_opt,
                               d_efficiency_lower_bound(candidate),
                               d_efficiency_lower_bound_algdesign(candidate),
                               a_optimality(candidate),
                               v_optimality(candidate),
                               g_optimality(candidate),
                               c_n,
                               g_efficiency(candidate),
                               log(2, abs(c_n)),
                               log(10, abs(d_opt))
                              ]
                 )
        else
            push!(evaluation, [
                               size(candidate, 1),
                               d_optimality(candidate),
                               d_efficiency_lower_bound(candidate),
                               d_efficiency_lower_bound_algdesign(candidate)
                              ]
                 )
        end
    end

    return evaluation
end

function sample_subset(factors,
                       sample_range,
                       designs;
                       check_bounds = true,
                       scale = scale_orthogonal!)
    formula = build_linear_formula(length(factors))
    #formula = @formula(y ~ x1 + x2 + x3)

    run_time = @elapsed sampling_subset = generate_designs(factors,
                                                           formula,
                                                           sample_range,
                                                           designs,
                                                           check_bounds = check_bounds,
                                                           scale = scale)
    println("> Elapsed Time: ", run_time, " seconds")

    sort!(sampling_subset, cols = :D, rev = true)

    return sampling_subset
end

function sample_subsets(factors::Array,
                        ranges::Array{UnitRange{Int}, 1},
                        designs::Int;
                        check_bounds::Bool = true,
                        scale::Function = scale_orthogonal!,
                        compute_all_metrics::Bool = false)
    sampled_subsets = []

    for subset = 1:length(ranges)
        label = " "

        if ranges[subset].start == ranges[subset].stop
            label = string(ranges[subset].start, " Experiments")
        else
            label = string(ranges[subset].start, " to ",
                          ranges[subset].stop, " Experiments")
        end

        label = string(label, ", ", length(factors[subset]), " Factors")

        sampled_subset = sample_subset(factors[subset],
                                       ranges[subset],
                                       designs,
                                       check_bounds = check_bounds,
                                       scale = scale)

        push!(
              sampled_subsets,
              (sampled_subset,
              max(sampled_subset[:D]...),
              label)
             )
    end

    return sampled_subsets
end

function check_zero(x, tol = 1e-4)
    return isapprox(x, 0.0, atol = tol) ? 0.0 : x
end

function plot_subsets(sampled_subsets; columns = [:D, :DELB, :Length])
    upscale = 2
    small_font = Plots.font("sans-serif", 10.0 * upscale)
    large_font = Plots.font("sans-serif", 14.0 * upscale)
    default(titlefont  = large_font,
            guidefont  = large_font,
            tickfont   = small_font,
            legendfont = small_font)
    default(size = (896 * upscale, 504 * upscale))
    default(dpi = 300)

    plotly()

    subplots = []

    for subset in sampled_subsets
        for column in columns
            subset[1][column] = check_zero.(subset[1][column])
        end

        push!(subplots,
              histogram(Array(subset[1][:D]), labels = "Designs",
                        title = string("D-Optimality for ", subset[3]),
                        color = :lightblue),
              histogram(Array(subset[1][:DELB]), labels = "Designs",
                        title = string("D-Efficiency for ", subset[3]),
                        color = :darkorange),
              plot(Array(subset[1][columns]),
                  ylims = (-1, subset[2] + 2),
                  labels = reshape(columns, (1, length(columns))),
                  title = subset[3],
                  linestyle = :solid,
                  linealpha=1.0,
                  linewidth=1.5 * upscale)
        )
    end

    plot(subplots...,
        layout = (length(sampled_subsets), 3)
    )
end
#+END_SRC

#+RESULTS: init_complete_dopt_utils
#+begin_example
2





build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

scale_box_encoding! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound_algdesign (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

sample_subset (generic function with 1 method)

sample_subsets (generic function with 1 method)

check_zero (generic function with 2 methods)

plot_subsets (generic function with 1 method)
#+end_example

**** Plotting Sampled Design Spaces using Box Encoding
***** Setup

#+CALL: init_complete_dopt_utils()

#+RESULTS:
#+begin_example
ESS
2

WARNING: rmprocs: process 1 not removed
2-element Array{Int64,1}:
 2
 3

INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/DataFrames.ji for module DataFrames.
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/PlotThemes.ji for module PlotThemes.
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/Plots.ji for module Plots.
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/Distributions.ji for module Distributions.
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/TableTraits.ji for module TableTraits.
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/IterableTables.ji for module IterableTables.
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/TableTraitsUtils.ji for module TableTraitsUtils.
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/KernelDensity.ji for module KernelDensity.

build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

scale_box_encoding! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound_algdesign (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

sample_subset (generic function with 1 method)

sample_subsets (generic function with 1 method)

check_zero (generic function with 2 methods)

plot_subsets (generic function with 1 method)
#+end_example

***** Diferent Design Sizes for 4 Factors with 3 Levels :ATTACH:
:PROPERTIES:
:Attachments: juliaA5HUNi.html
:ID:       4994e109-0fda-4475-a069-5de5153aae55
:END:

First generate the data:

#+HEADER: :tangle doe_utils/dopt_example.jl
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
ranges = [4:4, 5:5, 6:6, 12:12, 16:16]
factors = [[Array{Float64, 1}(1:2) for i = 1:k] for k in 1:length(ranges)]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs, scale = scale_box_encoding!)
#+END_SRC

#+RESULTS:
#+begin_example
6-element Array{UnitRange{Int64},1}:
 4:4  
 5:5  
 6:6  
 12:12
 16:16
 4:16
6-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0]]                                                            
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0]]                                                
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]                                    
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]                        
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]            
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
8000

 Factors: Array{Float64,1}[[1.0, 2.0]]
Full Factorial Size: 2
Total Subsets: 4.0
Range of Design Sizes: 4:4
Number of Design to Sample: 8000
Requested too many designs, using 4.0 instead
Requested too many maximum experiments, using 2 instead
ERROR: ArgumentError: range must be non-empty
Stacktrace:
 [1] Base.Random.RangeGenerator(::UnitRange{Int64}) at ./random.jl:578
 [2] #generate_designs#14(::Bool, ::Function, ::Bool, ::Function, ::Array{Array{Float64,1},1}, ::DataFrames.Formula, ::UnitRange{Int64}, ::Int64) at ./none:67
 [3] (::#kw##generate_designs)(::Array{Any,1}, ::#generate_designs, ::Array{Array{Float64,1},1}, ::DataFrames.Formula, ::UnitRange{Int64}, ::Int64) at ./<missing>:0
 [4] macro expansion at ./util.jl:293 [inlined]
 [5] #sample_subset#15(::Bool, ::Function, ::Function, ::Array{Array{Float64,1},1}, ::UnitRange{Int64}, ::Int64) at ./none:9
 [6] (::#kw##sample_subset)(::Array{Any,1}, ::#sample_subset, ::Array{Array{Float64,1},1}, ::UnitRange{Int64}, ::Int64) at ./<missing>:0
 [7] #sample_subsets#16(::Bool, ::Function, ::Bool, ::Function, ::Array{Array{Array{Float64,1},1},1}, ::Array{UnitRange{Int64},1}, ::Int64) at ./none:21
 [8] (::#kw##sample_subsets)(::Array{Any,1}, ::#sample_subsets, ::Array{Array{Array{Float64,1},1},1}, ::Array{UnitRange{Int64},1}, ::Int64) at ./<missing>:0
#+end_example

Now plot it:

#+HEADER: :tangle doe_utils/dopt_example.jl
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/JSON.ji for module JSON.
: Created new window in existing browser session.

***** Same Design Sizes (1+) for Doubling Factors of 3 Levels    :ATTACH:
:PROPERTIES:
:Attachments: julia1TxxnZ.html
:ID:       cdfe3118-7265-4f22-8111-1c78978351ec
:END:

First generate the data:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = [[Array{Float64, 1}(1:3) for i = 1:k] for k in [4, 8, 16, 32, 64, 128]]
ranges = [5:5, 9:9, 17:17, 33:33, 65:65, 129:129]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs, check_bounds = false, scale = scale_box_encoding!)
#+END_SRC

#+RESULTS:
#+begin_example
6-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                                                                                                   
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                               
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                       
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
6-element Array{UnitRange{Int64},1}:
 5:5    
 9:9    
 17:17  
 33:33  
 65:65  
 129:129
8000

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 5:5
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.156007195 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 6561
Total Subsets: Inf
Range of Design Sizes: 9:9
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.485969755 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 43046721
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 24.662136622 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 1853020188851841
Total Subsets: Inf
Range of Design Sizes: 33:33
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 52.163174043 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 8733086111712066817
Total Subsets: Inf
Range of Design Sizes: 65:65
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 105.338661345 seconds
Factors: Array{Float64,1}
Full Factorial Size: -9204772141784466943
Total Subsets: 0.0
Range of Design Sizes: 129:129
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 332.871937929 seconds
6-element Array{Any,1}:
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB     │ DELB_ad │
├──────┼────────┼─────────┼──────────┼─────────┤
│ 1    │ 5.0    │ 3.82541 │ 0.765082 │ 2.68742 │
│ 2    │ 5.0    │ 3.82541 │ 0.765082 │ 2.68154 │
│ 3    │ 5.0    │ 3.77635 │ 0.75527  │ 2.68122 │
│ 4    │ 5.0    │ 3.72902 │ 0.745805 │ 2.64501 │
│ 5    │ 5.0    │ 3.72792 │ 0.745584 │ 2.63501 │
│ 6    │ 5.0    │ 3.69456 │ 0.738912 │ 2.67171 │
│ 7    │ 5.0    │ 3.68843 │ 0.737686 │ 2.67742 │
│ 8    │ 5.0    │ 3.68843 │ 0.737686 │ 2.65986 │
⋮
│ 7992 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7993 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7994 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7995 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7996 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7997 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7998 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7999 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │
│ 8000 │ 5.0    │ 0.0     │ 0.0      │ 0.0     │, 3.82541, "5 Experiments, 4 Factors")                                                                                                                                       
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB     │ DELB_ad │
├──────┼────────┼─────────┼──────────┼─────────┤
│ 1    │ 9.0    │ 3.32213 │ 0.369125 │ 1.93535 │
│ 2    │ 9.0    │ 3.28824 │ 0.36536  │ 2.49982 │
│ 3    │ 9.0    │ 3.25887 │ 0.362097 │ 2.55362 │
│ 4    │ 9.0    │ 3.23816 │ 0.359796 │ 2.51669 │
│ 5    │ 9.0    │ 3.15471 │ 0.350523 │ 1.93573 │
│ 6    │ 9.0    │ 3.15454 │ 0.350505 │ 1.99592 │
│ 7    │ 9.0    │ 3.12109 │ 0.346788 │ 2.21678 │
│ 8    │ 9.0    │ 3.06219 │ 0.340243 │ 2.09818 │
⋮
│ 7992 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7993 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7994 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7995 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7996 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7997 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7998 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7999 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │
│ 8000 │ 9.0    │ 0.0     │ 0.0      │ 0.0     │, 3.32213, "9 Experiments, 8 Factors")                                                                                                                                       
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D        │ DELB      │ DELB_ad     │
├──────┼────────┼──────────┼───────────┼─────────────┤
│ 1    │ 17.0   │ 2.57792  │ 0.151642  │ 0.522245    │
│ 2    │ 17.0   │ 2.57395  │ 0.151409  │ 0.176037    │
│ 3    │ 17.0   │ 2.45688  │ 0.144523  │ 0.00766289  │
│ 4    │ 17.0   │ 2.41069  │ 0.141805  │ 0.108959    │
│ 5    │ 17.0   │ 2.40941  │ 0.14173   │ 9.68835e-44 │
│ 6    │ 17.0   │ 2.40837  │ 0.141669  │ 5.71932e-9  │
│ 7    │ 17.0   │ 2.39903  │ 0.14112   │ 8.45729e-11 │
│ 8    │ 17.0   │ 2.37015  │ 0.139421  │ 0.00132419  │
⋮
│ 7992 │ 17.0   │ 0.708477 │ 0.0416751 │ 0.0         │
│ 7993 │ 17.0   │ 0.695884 │ 0.0409344 │ 0.0         │
│ 7994 │ 17.0   │ 0.682802 │ 0.0401648 │ 0.0         │
│ 7995 │ 17.0   │ 0.663247 │ 0.0390145 │ 0.0         │
│ 7996 │ 17.0   │ 0.65676  │ 0.038633  │ 0.0         │
│ 7997 │ 17.0   │ 0.6195   │ 0.0364412 │ 0.0         │
│ 7998 │ 17.0   │ 0.550805 │ 0.0324003 │ 0.0         │
│ 7999 │ 17.0   │ 0.521328 │ 0.0306664 │ 0.0         │
│ 8000 │ 17.0   │ 0.0      │ 0.0       │ 0.0         │, 2.57792, "17 Experiments, 16 Factors")                   
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D        │ DELB      │ DELB_ad      │
├──────┼────────┼──────────┼───────────┼──────────────┤
│ 1    │ 33.0   │ 1.98785  │ 0.0602379 │ 0.0          │
│ 2    │ 33.0   │ 1.96954  │ 0.0596829 │ 0.0          │
│ 3    │ 33.0   │ 1.96705  │ 0.0596076 │ 1.79349e-302 │
│ 4    │ 33.0   │ 1.96434  │ 0.0595254 │ 0.0          │
│ 5    │ 33.0   │ 1.95398  │ 0.0592115 │ 0.0          │
│ 6    │ 33.0   │ 1.95261  │ 0.0591699 │ 3.98284e-146 │
│ 7    │ 33.0   │ 1.9498   │ 0.0590849 │ 0.0          │
│ 8    │ 33.0   │ 1.93949  │ 0.0587724 │ 0.0          │
⋮
│ 7992 │ 33.0   │ 0.985942 │ 0.029877  │ 0.0          │
│ 7993 │ 33.0   │ 0.969928 │ 0.0293918 │ 0.0          │
│ 7994 │ 33.0   │ 0.96217  │ 0.0291567 │ 0.0          │
│ 7995 │ 33.0   │ 0.954241 │ 0.0289164 │ 0.0          │
│ 7996 │ 33.0   │ 0.950715 │ 0.0288095 │ 0.0          │
│ 7997 │ 33.0   │ 0.935113 │ 0.0283368 │ 0.0          │
│ 7998 │ 33.0   │ 0.886161 │ 0.0268534 │ 0.0          │
│ 7999 │ 33.0   │ 0.863901 │ 0.0261788 │ 0.0          │
│ 8000 │ 33.0   │ 0.854212 │ 0.0258852 │ 0.0          │, 1.98785, "33 Experiments, 32 Factors")
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad │
├──────┼────────┼─────────┼───────────┼─────────┤
│ 1    │ 65.0   │ 1.78776 │ 0.0275041 │ 0.0     │
│ 2    │ 65.0   │ 1.77218 │ 0.0272643 │ 0.0     │
│ 3    │ 65.0   │ 1.75495 │ 0.0269992 │ 0.0     │
│ 4    │ 65.0   │ 1.74281 │ 0.0268125 │ 0.0     │
│ 5    │ 65.0   │ 1.74175 │ 0.0267962 │ 0.0     │
│ 6    │ 65.0   │ 1.73785 │ 0.0267362 │ 0.0     │
│ 7    │ 65.0   │ 1.72813 │ 0.0265867 │ 0.0     │
│ 8    │ 65.0   │ 1.72715 │ 0.0265716 │ 0.0     │
⋮
│ 7992 │ 65.0   │ 1.2131  │ 0.0186631 │ 0.0     │
│ 7993 │ 65.0   │ 1.21253 │ 0.0186543 │ 0.0     │
│ 7994 │ 65.0   │ 1.21155 │ 0.0186392 │ 0.0     │
│ 7995 │ 65.0   │ 1.209   │ 0.0186001 │ 0.0     │
│ 7996 │ 65.0   │ 1.20788 │ 0.0185827 │ 0.0     │
│ 7997 │ 65.0   │ 1.20385 │ 0.0185207 │ 0.0     │
│ 7998 │ 65.0   │ 1.20154 │ 0.0184853 │ 0.0     │
│ 7999 │ 65.0   │ 1.19486 │ 0.0183825 │ 0.0     │
│ 8000 │ 65.0   │ 1.18394 │ 0.0182145 │ 0.0     │, 1.78776, "65 Experiments, 64 Factors")                                                                                                                  
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB       │ DELB_ad │
├──────┼────────┼─────────┼────────────┼─────────┤
│ 1    │ 129.0  │ 1.6342  │ 0.0126682  │ 0.0     │
│ 2    │ 129.0  │ 1.62795 │ 0.0126198  │ 0.0     │
│ 3    │ 129.0  │ 1.62562 │ 0.0126017  │ 0.0     │
│ 4    │ 129.0  │ 1.61395 │ 0.0125113  │ 0.0     │
│ 5    │ 129.0  │ 1.61371 │ 0.0125094  │ 0.0     │
│ 6    │ 129.0  │ 1.61345 │ 0.0125074  │ 0.0     │
│ 7    │ 129.0  │ 1.61343 │ 0.0125072  │ 0.0     │
│ 8    │ 129.0  │ 1.61306 │ 0.0125043  │ 0.0     │
⋮
│ 7992 │ 129.0  │ 1.34243 │ 0.0104064  │ 0.0     │
│ 7993 │ 129.0  │ 1.34183 │ 0.0104018  │ 0.0     │
│ 7994 │ 129.0  │ 1.33994 │ 0.0103871  │ 0.0     │
│ 7995 │ 129.0  │ 1.32888 │ 0.0103014  │ 0.0     │
│ 7996 │ 129.0  │ 1.32692 │ 0.0102862  │ 0.0     │
│ 7997 │ 129.0  │ 1.32357 │ 0.0102602  │ 0.0     │
│ 7998 │ 129.0  │ 1.31649 │ 0.0102054  │ 0.0     │
│ 7999 │ 129.0  │ 1.30786 │ 0.0101385  │ 0.0     │
│ 8000 │ 129.0  │ 1.26179 │ 0.00978135 │ 0.0     │, 1.6342, "129 Experiments, 128 Factors")
#+end_example

Now plot it:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
***** Same Design Sizes (2+) for Doubling Factors of 3 Levels :ATTACH:
:PROPERTIES:
:Attachments: juliafWvmgx.html
:ID:       107f8aee-a5e4-4615-b271-410344cd485d
:END:
First generate the data:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = [[Array{Float64, 1}(1:3) for i = 1:k] for k in [4, 8, 16, 32, 64, 128]]
ranges = [6:6, 10:10, 18:18, 34:34, 66:66, 130:130]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs, check_bounds = false, scale = scale_box_encoding!)
#+END_SRC

#+RESULTS:
#+begin_example
6-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                                                                                                   
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                               
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                       
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
6-element Array{UnitRange{Int64},1}:
 6:6    
 10:10  
 18:18  
 34:34  
 66:66  
 130:130
8000

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 6:6
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.96501795 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 6561
Total Subsets: Inf
Range of Design Sizes: 10:10
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.537919641 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 43046721
Total Subsets: Inf
Range of Design Sizes: 18:18
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 22.628683055 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 1853020188851841
Total Subsets: Inf
Range of Design Sizes: 34:34
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 46.956157673 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 8733086111712066817
Total Subsets: Inf
Range of Design Sizes: 66:66
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 82.687643301 seconds
Factors: Array{Float64,1}
Full Factorial Size: -9204772141784466943
Total Subsets: 0.0
Range of Design Sizes: 130:130
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 320.591771633 seconds
6-element Array{Any,1}:
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB     │ DELB_ad │
├──────┼────────┼─────────┼──────────┼─────────┤
│ 1    │ 6.0    │ 4.12524 │ 0.68754  │ 2.70166 │
│ 2    │ 6.0    │ 4.09535 │ 0.682558 │ 2.69485 │
│ 3    │ 6.0    │ 4.08263 │ 0.680438 │ 2.6997  │
│ 4    │ 6.0    │ 4.08263 │ 0.680438 │ 2.6997  │
│ 5    │ 6.0    │ 4.06871 │ 0.678118 │ 2.69143 │
│ 6    │ 6.0    │ 4.05513 │ 0.675854 │ 2.69419 │
│ 7    │ 6.0    │ 4.05197 │ 0.675328 │ 2.69009 │
│ 8    │ 6.0    │ 4.02956 │ 0.671593 │ 2.69319 │
⋮
│ 7992 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7993 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7994 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7995 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7996 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7997 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7998 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 7999 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │
│ 8000 │ 6.0    │ 0.0     │ 0.0      │ 0.0     │, 4.12524, "6 Experiments, 4 Factors")                                                                                                                    
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB     │ DELB_ad │
├──────┼────────┼─────────┼──────────┼─────────┤
│ 1    │ 10.0   │ 3.56045 │ 0.356045 │ 2.54793 │
│ 2    │ 10.0   │ 3.51902 │ 0.351902 │ 2.56664 │
│ 3    │ 10.0   │ 3.40111 │ 0.340111 │ 2.42457 │
│ 4    │ 10.0   │ 3.37478 │ 0.337478 │ 2.50445 │
│ 5    │ 10.0   │ 3.35874 │ 0.335874 │ 2.27273 │
│ 6    │ 10.0   │ 3.35049 │ 0.335049 │ 2.42259 │
│ 7    │ 10.0   │ 3.32045 │ 0.332045 │ 2.32819 │
│ 8    │ 10.0   │ 3.31571 │ 0.331571 │ 2.02083 │
⋮
│ 7992 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7993 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7994 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7995 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7996 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7997 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7998 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7999 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │
│ 8000 │ 10.0   │ 0.0     │ 0.0      │ 0.0     │, 3.56045, "10 Experiments, 8 Factors")                                                                                                                   
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad     │
├──────┼────────┼─────────┼───────────┼─────────────┤
│ 1    │ 18.0   │ 2.67844 │ 0.148802  │ 0.666479    │
│ 2    │ 18.0   │ 2.63268 │ 0.14626   │ 2.76604e-5  │
│ 3    │ 18.0   │ 2.62654 │ 0.145919  │ 0.0208342   │
│ 4    │ 18.0   │ 2.62249 │ 0.145694  │ 0.282913    │
│ 5    │ 18.0   │ 2.60519 │ 0.144733  │ 0.0353378   │
│ 6    │ 18.0   │ 2.60215 │ 0.144564  │ 0.175347    │
│ 7    │ 18.0   │ 2.58183 │ 0.143435  │ 0.311107    │
│ 8    │ 18.0   │ 2.57129 │ 0.14285   │ 0.000154723 │
⋮
│ 7992 │ 18.0   │ 1.14885 │ 0.0638248 │ 0.0         │
│ 7993 │ 18.0   │ 1.14574 │ 0.0636523 │ 0.0         │
│ 7994 │ 18.0   │ 1.14111 │ 0.063395  │ 0.0         │
│ 7995 │ 18.0   │ 1.13674 │ 0.0631523 │ 0.0         │
│ 7996 │ 18.0   │ 1.13626 │ 0.0631258 │ 0.0         │
│ 7997 │ 18.0   │ 1.13481 │ 0.063045  │ 0.0         │
│ 7998 │ 18.0   │ 1.1293  │ 0.0627391 │ 0.0         │
│ 7999 │ 18.0   │ 1.05159 │ 0.0584217 │ 0.0         │
│ 8000 │ 18.0   │ 1.04852 │ 0.0582512 │ 0.0         │, 2.67844, "18 Experiments, 16 Factors")                   
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad     │
├──────┼────────┼─────────┼───────────┼─────────────┤
│ 1    │ 34.0   │ 2.20642 │ 0.0648948 │ 8.02759e-5  │
│ 2    │ 34.0   │ 2.15332 │ 0.063333  │ 2.30165e-53 │
│ 3    │ 34.0   │ 2.14827 │ 0.0631845 │ 1.76615e-29 │
│ 4    │ 34.0   │ 2.13963 │ 0.0629302 │ 1.63496e-17 │
│ 5    │ 34.0   │ 2.11674 │ 0.0622571 │ 2.20361e-24 │
│ 6    │ 34.0   │ 2.10889 │ 0.0620261 │ 5.69036e-34 │
│ 7    │ 34.0   │ 2.10418 │ 0.0618877 │ 7.6328e-17  │
│ 8    │ 34.0   │ 2.09746 │ 0.06169   │ 5.03418e-60 │
⋮
│ 7992 │ 34.0   │ 1.32709 │ 0.039032  │ 0.0         │
│ 7993 │ 34.0   │ 1.32143 │ 0.0388655 │ 0.0         │
│ 7994 │ 34.0   │ 1.30839 │ 0.0384821 │ 0.0         │
│ 7995 │ 34.0   │ 1.29623 │ 0.0381245 │ 0.0         │
│ 7996 │ 34.0   │ 1.29565 │ 0.0381074 │ 0.0         │
│ 7997 │ 34.0   │ 1.27533 │ 0.0375098 │ 0.0         │
│ 7998 │ 34.0   │ 1.27344 │ 0.0374542 │ 0.0         │
│ 7999 │ 34.0   │ 1.25631 │ 0.0369502 │ 0.0         │
│ 8000 │ 34.0   │ 1.22084 │ 0.0359072 │ 0.0         │, 2.20642, "34 Experiments, 32 Factors")                   
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad      │
├──────┼────────┼─────────┼───────────┼──────────────┤
│ 1    │ 66.0   │ 1.86995 │ 0.0283326 │ 0.0          │
│ 2    │ 66.0   │ 1.82608 │ 0.0276679 │ 1.02034e-259 │
│ 3    │ 66.0   │ 1.82295 │ 0.0276204 │ 0.0          │
│ 4    │ 66.0   │ 1.81208 │ 0.0274558 │ 0.0          │
│ 5    │ 66.0   │ 1.81086 │ 0.0274373 │ 0.0          │
│ 6    │ 66.0   │ 1.81017 │ 0.0274268 │ 0.0          │
│ 7    │ 66.0   │ 1.80892 │ 0.0274078 │ 0.0          │
│ 8    │ 66.0   │ 1.80792 │ 0.0273927 │ 0.0          │
⋮
│ 7992 │ 66.0   │ 1.40505 │ 0.0212886 │ 0.0          │
│ 7993 │ 66.0   │ 1.40196 │ 0.0212418 │ 0.0          │
│ 7994 │ 66.0   │ 1.40177 │ 0.021239  │ 0.0          │
│ 7995 │ 66.0   │ 1.40173 │ 0.0212384 │ 0.0          │
│ 7996 │ 66.0   │ 1.40096 │ 0.0212266 │ 0.0          │
│ 7997 │ 66.0   │ 1.39677 │ 0.0211631 │ 0.0          │
│ 7998 │ 66.0   │ 1.39211 │ 0.0210925 │ 0.0          │
│ 7999 │ 66.0   │ 1.38975 │ 0.0210567 │ 0.0          │
│ 8000 │ 66.0   │ 1.36831 │ 0.020732  │ 0.0          │, 1.86995, "66 Experiments, 64 Factors")
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad │
├──────┼────────┼─────────┼───────────┼─────────┤
│ 1    │ 130.0  │ 1.69248 │ 0.0130191 │ 0.0     │
│ 2    │ 130.0  │ 1.67286 │ 0.0128681 │ 0.0     │
│ 3    │ 130.0  │ 1.67226 │ 0.0128636 │ 0.0     │
│ 4    │ 130.0  │ 1.66763 │ 0.0128279 │ 0.0     │
│ 5    │ 130.0  │ 1.66141 │ 0.0127801 │ 0.0     │
│ 6    │ 130.0  │ 1.66126 │ 0.0127789 │ 0.0     │
│ 7    │ 130.0  │ 1.65935 │ 0.0127642 │ 0.0     │
│ 8    │ 130.0  │ 1.65714 │ 0.0127472 │ 0.0     │
⋮
│ 7992 │ 130.0  │ 1.4404  │ 0.01108   │ 0.0     │
│ 7993 │ 130.0  │ 1.43759 │ 0.0110584 │ 0.0     │
│ 7994 │ 130.0  │ 1.43643 │ 0.0110495 │ 0.0     │
│ 7995 │ 130.0  │ 1.43525 │ 0.0110404 │ 0.0     │
│ 7996 │ 130.0  │ 1.43447 │ 0.0110344 │ 0.0     │
│ 7997 │ 130.0  │ 1.43352 │ 0.0110271 │ 0.0     │
│ 7998 │ 130.0  │ 1.43157 │ 0.011012  │ 0.0     │
│ 7999 │ 130.0  │ 1.43089 │ 0.0110069 │ 0.0     │
│ 8000 │ 130.0  │ 1.41786 │ 0.0109066 │ 0.0     │, 1.69248, "130 Experiments, 128 Factors")
#+end_example

Now plot it:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
**** Understanding D-Efficiency: The Box and Draper Encoding      :ATTACH:
:PROPERTIES:
:Attachments: box2007response.pdf
:ID:       c8cb30f5-a404-4ea8-bb9e-90bd726c00a0
:END:

Box and Draper's 2007 edition of "Response Surfaces, Mixtures and Ridge
Analyses" is a very clear book which explains the encoding used in the
computation of the D-Efficiency metric used in the DETMAX paper and Castillo's
book (See attachment in [[From DETMAX, SAS, and Castillo's Book]]). I am currently
reading Chapter 14, Variance Optimal Designs, where the book describes D-Optimal
designs and the encoding used. The intuition is that this metric compares
*** [2018-03-21 Wed]
**** Plotting Sampled Design Spaces using Box Encoding
***** Setup

#+CALL: init_complete_dopt_utils()

#+RESULTS:
#+begin_example
ESS
2

WARNING: rmprocs: process 1 not removed
2-element Array{Int64,1}:
 2
 3



build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

scale_box_encoding! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound_algdesign (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

sample_subset (generic function with 1 method)

sample_subsets (generic function with 1 method)

plot_subsets (generic function with 1 method)
#+end_example

***** Small Design Size Range for Doubling Factors of 3 Levels   :ATTACH:
:PROPERTIES:
:Attachments: juliaFXVyzp.html
:ID:       19c45af4-b519-4004-a2cd-750ec2f8674b
:END:
First generate the data:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = [[Array{Float64, 1}(1:3) for i = 1:k] for k in [4, 8, 16, 32, 64, 128]]
ranges = [3:4, 7:8, 15:16, 31:32, 63:64, 127:128]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs, check_bounds = false, scale = scale_box_encoding!)
#+END_SRC

#+RESULTS:
#+begin_example
6-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                                                                                                   
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                                                                                                                                                               
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]                                                                       
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
 Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]  …  [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
6-element Array{UnitRange{Int64},1}:
 3:4    
 7:8    
 15:16  
 31:32  
 63:64  
 127:128
8000

 Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 81
Total Subsets: 2.4178516392292583e24
Range of Design Sizes: 3:4
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 22.063759066 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 6561
Total Subsets: Inf
Range of Design Sizes: 7:8
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 28.95967704 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 43046721
Total Subsets: Inf
Range of Design Sizes: 15:16
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 31.549008469 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 1853020188851841
Total Subsets: Inf
Range of Design Sizes: 31:32
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 116.887742509 seconds
Factors: Array{Float64,1}[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
Full Factorial Size: 8733086111712066817
Total Subsets: Inf
Range of Design Sizes: 63:64
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 90.534607636 seconds
Factors: Array{Float64,1}
Full Factorial Size: -9204772141784466943
Total Subsets: 0.0
Range of Design Sizes: 127:128
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 356.311093631 seconds
6-element Array{Any,1}:
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB        │ DELB_ad │
├──────┼────────┼────────────┼─────────────┼─────────┤
│ 1    │ 4.0    │ 0.00279486 │ 0.000698715 │ 0.0     │
│ 2    │ 4.0    │ 0.00275217 │ 0.000688043 │ 0.0     │
│ 3    │ 4.0    │ 0.00274107 │ 0.000685268 │ 0.0     │
│ 4    │ 4.0    │ 0.00266624 │ 0.00066656  │ 0.0     │
│ 5    │ 4.0    │ 0.00263859 │ 0.000659648 │ 0.0     │
│ 6    │ 4.0    │ 0.00257716 │ 0.000644291 │ 0.0     │
│ 7    │ 4.0    │ 0.00257716 │ 0.000644291 │ 0.0     │
│ 8    │ 4.0    │ 0.00257716 │ 0.000644291 │ 0.0     │
⋮
│ 7992 │ 4.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7993 │ 3.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7994 │ 4.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7995 │ 3.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7996 │ 3.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7997 │ 3.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7998 │ 4.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7999 │ 3.0    │ 0.0        │ 0.0         │ 0.0     │
│ 8000 │ 3.0    │ 0.0        │ 0.0         │ 0.0     │, 0.00279486, "3 to 4 Experiments, 4 Factors")
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D         │ DELB       │ DELB_ad │
├──────┼────────┼───────────┼────────────┼─────────┤
│ 1    │ 8.0    │ 0.0622641 │ 0.00778301 │ 0.0     │
│ 2    │ 8.0    │ 0.057373  │ 0.00717162 │ 0.0     │
│ 3    │ 8.0    │ 0.0563793 │ 0.00704741 │ 0.0     │
│ 4    │ 8.0    │ 0.0554134 │ 0.00692667 │ 0.0     │
│ 5    │ 8.0    │ 0.0554115 │ 0.00692644 │ 0.0     │
│ 6    │ 8.0    │ 0.0552545 │ 0.00690681 │ 0.0     │
│ 7    │ 8.0    │ 0.0532881 │ 0.00666101 │ 0.0     │
│ 8    │ 8.0    │ 0.0529256 │ 0.0066157  │ 0.0     │
⋮
│ 7992 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 7993 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 7994 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 7995 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 7996 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 7997 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 7998 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 7999 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │
│ 8000 │ 8.0    │ 0.0       │ 0.0        │ 0.0     │, 0.0622641, "7 to 8 Experiments, 8 Factors")                                       
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D        │ DELB      │ DELB_ad │
├──────┼────────┼──────────┼───────────┼─────────┤
│ 1    │ 16.0   │ 0.334199 │ 0.0208874 │ 0.0     │
│ 2    │ 16.0   │ 0.31028  │ 0.0193925 │ 0.0     │
│ 3    │ 16.0   │ 0.307181 │ 0.0191988 │ 0.0     │
│ 4    │ 16.0   │ 0.30578  │ 0.0191113 │ 0.0     │
│ 5    │ 16.0   │ 0.304505 │ 0.0190316 │ 0.0     │
│ 6    │ 16.0   │ 0.30317  │ 0.0189481 │ 0.0     │
│ 7    │ 16.0   │ 0.300263 │ 0.0187664 │ 0.0     │
│ 8    │ 16.0   │ 0.299704 │ 0.0187315 │ 0.0     │
⋮
│ 7992 │ 16.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7993 │ 16.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7994 │ 16.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7995 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7996 │ 16.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7997 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7998 │ 16.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7999 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 8000 │ 16.0   │ 0.0      │ 0.0       │ 0.0     │, 0.334199, "15 to 16 Experiments, 16 Factors")                                                                           
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D        │ DELB      │ DELB_ad │
├──────┼────────┼──────────┼───────────┼─────────┤
│ 1    │ 32.0   │ 0.728215 │ 0.0227567 │ 0.0     │
│ 2    │ 32.0   │ 0.700217 │ 0.0218818 │ 0.0     │
│ 3    │ 32.0   │ 0.697105 │ 0.0217845 │ 0.0     │
│ 4    │ 32.0   │ 0.693766 │ 0.0216802 │ 0.0     │
│ 5    │ 32.0   │ 0.693417 │ 0.0216693 │ 0.0     │
│ 6    │ 32.0   │ 0.69038  │ 0.0215744 │ 0.0     │
│ 7    │ 32.0   │ 0.681144 │ 0.0212857 │ 0.0     │
│ 8    │ 32.0   │ 0.68107  │ 0.0212834 │ 0.0     │
⋮
│ 7992 │ 31.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7993 │ 32.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7994 │ 32.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7995 │ 31.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7996 │ 32.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7997 │ 31.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7998 │ 32.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7999 │ 32.0   │ 0.0      │ 0.0       │ 0.0     │
│ 8000 │ 31.0   │ 0.0      │ 0.0       │ 0.0     │, 0.728215, "31 to 32 Experiments, 32 Factors")                                                                           
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad │
├──────┼────────┼─────────┼───────────┼─────────┤
│ 1    │ 64.0   │ 1.0878  │ 0.0169969 │ 0.0     │
│ 2    │ 64.0   │ 1.07378 │ 0.0167778 │ 0.0     │
│ 3    │ 64.0   │ 1.07345 │ 0.0167726 │ 0.0     │
│ 4    │ 64.0   │ 1.07283 │ 0.0167629 │ 0.0     │
│ 5    │ 64.0   │ 1.07    │ 0.0167188 │ 0.0     │
│ 6    │ 64.0   │ 1.06862 │ 0.0166972 │ 0.0     │
│ 7    │ 64.0   │ 1.06847 │ 0.0166948 │ 0.0     │
│ 8    │ 64.0   │ 1.0677  │ 0.0166828 │ 0.0     │
⋮
│ 7992 │ 63.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7993 │ 64.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7994 │ 63.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7995 │ 63.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7996 │ 63.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7997 │ 63.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7998 │ 63.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7999 │ 64.0   │ 0.0     │ 0.0       │ 0.0     │
│ 8000 │ 63.0   │ 0.0     │ 0.0       │ 0.0     │, 1.0878, "63 to 64 Experiments, 64 Factors")                                                                                                
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB       │ DELB_ad │
├──────┼────────┼─────────┼────────────┼─────────┤
│ 1    │ 128.0  │ 1.23445 │ 0.00964414 │ 0.0     │
│ 2    │ 128.0  │ 1.2335  │ 0.00963676 │ 0.0     │
│ 3    │ 128.0  │ 1.23274 │ 0.00963081 │ 0.0     │
│ 4    │ 128.0  │ 1.2285  │ 0.00959767 │ 0.0     │
│ 5    │ 128.0  │ 1.22761 │ 0.00959074 │ 0.0     │
│ 6    │ 128.0  │ 1.22696 │ 0.00958562 │ 0.0     │
│ 7    │ 128.0  │ 1.2242  │ 0.00956405 │ 0.0     │
│ 8    │ 128.0  │ 1.22323 │ 0.00955645 │ 0.0     │
⋮
│ 7992 │ 127.0  │ 0.0     │ 0.0        │ 0.0     │
│ 7993 │ 128.0  │ 0.0     │ 0.0        │ 0.0     │
│ 7994 │ 128.0  │ 0.0     │ 0.0        │ 0.0     │
│ 7995 │ 128.0  │ 0.0     │ 0.0        │ 0.0     │
│ 7996 │ 128.0  │ 0.0     │ 0.0        │ 0.0     │
│ 7997 │ 128.0  │ 0.0     │ 0.0        │ 0.0     │
│ 7998 │ 128.0  │ 0.0     │ 0.0        │ 0.0     │
│ 7999 │ 128.0  │ 0.0     │ 0.0        │ 0.0     │
│ 8000 │ 127.0  │ 0.0     │ 0.0        │ 0.0     │, 1.23445, "127 to 128 Experiments, 128 Factors")
#+end_example

Now plot it:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
**** Looking at Designs for the NVCC Search Space
***** Setup

#+CALL: init_complete_dopt_utils()

#+RESULTS:
#+begin_example
ESS
2

WARNING: rmprocs: process 1 not removed
2-element Array{Int64,1}:
 2
 3



build_linear_formula (generic function with 1 method)

get_model_variables (generic function with 1 method)

scale_orthogonal! (generic function with 1 method)

scale_box_encoding! (generic function with 1 method)

generate_model_matrix (generic function with 1 method)


get_prediction_variances (generic function with 1 method)

d_optimality (generic function with 1 method)

d_efficiency_lower_bound (generic function with 1 method)

a_optimality (generic function with 1 method)

v_optimality (generic function with 1 method)

g_optimality (generic function with 1 method)

g_efficiency (generic function with 1 method)

d_efficiency_lower_bound_algdesign (generic function with 1 method)

condition_number (generic function with 1 method)



generate_designs (generic function with 1 method)

sample_subset (generic function with 1 method)

sample_subsets (generic function with 1 method)

plot_subsets (generic function with 1 method)
#+end_example

***** Design Size Range for Mixed Level Design                   :ATTACH:
:PROPERTIES:
:Attachments: juliafeQkBY.html
:ID:       19dccc3d-5b65-410e-8370-8e9d57743d55
:END:
First generate the data:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = [
           [
            [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0],
            [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0],
            [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0],
            [1.0, 2.0], collect(1.0:31.0)
           ] for i = 1:4
          ]

ranges = [15:30, 30:60, 60:120, 15:120]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs, check_bounds = false, scale = scale_box_encoding!)
#+END_SRC

#+RESULTS:
#+begin_example
4-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0  …  22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0  …  22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0  …  22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0  …  22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]

4-element Array{UnitRange{Int64},1}:
 15:30 
 30:60 
 60:120
 15:120
8000

 Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]
Full Factorial Size: 4285440
Total Subsets: Inf
Range of Design Sizes: 15:30
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 21.006997277 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]
Full Factorial Size: 4285440
Total Subsets: Inf
Range of Design Sizes: 30:60
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 27.792352671 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]
Full Factorial Size: 4285440
Total Subsets: Inf
Range of Design Sizes: 60:120
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 40.769219205 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0, 3.0], [1.0, 2.0], [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0]]
Full Factorial Size: 4285440
Total Subsets: Inf
Range of Design Sizes: 15:120
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 30.288476354 seconds
4-element Array{Any,1}:
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB     │ DELB_ad │
├──────┼────────┼─────────┼──────────┼─────────┤
│ 1    │ 30.0   │ 3.66794 │ 0.122265 │ 2.63975 │
│ 2    │ 30.0   │ 3.66371 │ 0.122124 │ 2.45252 │
│ 3    │ 28.0   │ 3.64993 │ 0.130355 │ 2.68304 │
│ 4    │ 30.0   │ 3.61975 │ 0.120658 │ 2.58583 │
│ 5    │ 30.0   │ 3.6161  │ 0.120537 │ 2.59963 │
│ 6    │ 30.0   │ 3.61475 │ 0.120492 │ 2.28306 │
│ 7    │ 29.0   │ 3.60522 │ 0.124318 │ 2.61339 │
│ 8    │ 29.0   │ 3.60501 │ 0.124311 │ 2.56805 │
⋮
│ 7992 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7993 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7994 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7995 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7996 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7997 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7998 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 7999 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │
│ 8000 │ 15.0   │ 0.0     │ 0.0      │ 0.0     │, 3.66794, "15 to 30 Experiments, 15 Factors")                                      
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad  │
├──────┼────────┼─────────┼───────────┼──────────┤
│ 1    │ 59.0   │ 4.37291 │ 0.0741171 │ 2.706    │
│ 2    │ 60.0   │ 4.33292 │ 0.0722153 │ 2.70438  │
│ 3    │ 59.0   │ 4.30189 │ 0.0729133 │ 2.70217  │
│ 4    │ 59.0   │ 4.29616 │ 0.0728163 │ 2.6925   │
│ 5    │ 60.0   │ 4.28467 │ 0.0714112 │ 2.69879  │
│ 6    │ 59.0   │ 4.27588 │ 0.0724725 │ 2.7018   │
│ 7    │ 60.0   │ 4.27463 │ 0.0712439 │ 2.7049   │
│ 8    │ 59.0   │ 4.27075 │ 0.0723856 │ 2.69989  │
⋮
│ 7992 │ 31.0   │ 2.98478 │ 0.0962834 │ 1.17788  │
│ 7993 │ 31.0   │ 2.98121 │ 0.096168  │ 1.57957  │
│ 7994 │ 30.0   │ 2.96793 │ 0.0989311 │ 1.71101  │
│ 7995 │ 30.0   │ 2.96772 │ 0.0989239 │ 1.48874  │
│ 7996 │ 30.0   │ 2.96544 │ 0.098848  │ 1.03586  │
│ 7997 │ 30.0   │ 2.94972 │ 0.0983241 │ 0.945145 │
│ 7998 │ 31.0   │ 2.93662 │ 0.0947297 │ 1.87446  │
│ 7999 │ 30.0   │ 2.89234 │ 0.0964114 │ 1.02822  │
│ 8000 │ 30.0   │ 2.88448 │ 0.0961492 │ 0.642474 │, 4.37291, "30 to 60 Experiments, 15 Factors")
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad │
├──────┼────────┼─────────┼───────────┼─────────┤
│ 1    │ 119.0  │ 4.73976 │ 0.0398299 │ 2.71298 │
│ 2    │ 120.0  │ 4.71844 │ 0.0393203 │ 2.71265 │
│ 3    │ 115.0  │ 4.71294 │ 0.0409821 │ 2.71272 │
│ 4    │ 120.0  │ 4.71141 │ 0.0392618 │ 2.71236 │
│ 5    │ 120.0  │ 4.71114 │ 0.0392595 │ 2.71234 │
│ 6    │ 120.0  │ 4.71044 │ 0.0392536 │ 2.71111 │
│ 7    │ 120.0  │ 4.70954 │ 0.0392462 │ 2.71218 │
│ 8    │ 118.0  │ 4.70773 │ 0.0398961 │ 2.71131 │
⋮
│ 7992 │ 60.0   │ 3.96301 │ 0.0660501 │ 2.61167 │
│ 7993 │ 60.0   │ 3.9614  │ 0.0660233 │ 2.67642 │
│ 7994 │ 61.0   │ 3.95922 │ 0.0649052 │ 2.68413 │
│ 7995 │ 60.0   │ 3.95763 │ 0.0659605 │ 2.66032 │
│ 7996 │ 61.0   │ 3.95619 │ 0.0648555 │ 2.67673 │
│ 7997 │ 60.0   │ 3.94494 │ 0.065749  │ 2.64849 │
│ 7998 │ 63.0   │ 3.92502 │ 0.0623019 │ 2.43267 │
│ 7999 │ 60.0   │ 3.91512 │ 0.0652519 │ 2.6399  │
│ 8000 │ 60.0   │ 3.91259 │ 0.0652098 │ 2.66476 │, 4.73976, "60 to 120 Experiments, 15 Factors")                  
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB      │ DELB_ad │
├──────┼────────┼─────────┼───────────┼─────────┤
│ 1    │ 120.0  │ 4.71704 │ 0.0393087 │ 2.71254 │
│ 2    │ 120.0  │ 4.71419 │ 0.0392849 │ 2.7119  │
│ 3    │ 119.0  │ 4.71084 │ 0.0395869 │ 2.71083 │
│ 4    │ 119.0  │ 4.70416 │ 0.0395307 │ 2.71214 │
│ 5    │ 120.0  │ 4.69778 │ 0.0391482 │ 2.71194 │
│ 6    │ 117.0  │ 4.69736 │ 0.0401484 │ 2.71195 │
│ 7    │ 120.0  │ 4.69504 │ 0.0391253 │ 2.71178 │
│ 8    │ 114.0  │ 4.69427 │ 0.0411778 │ 2.71083 │
⋮
│ 7992 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7993 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7994 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7995 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7996 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7997 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7998 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 7999 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │
│ 8000 │ 15.0   │ 0.0     │ 0.0       │ 0.0     │, 4.71704, "15 to 120 Experiments, 15 Factors")
#+end_example

Now plot it:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
***** Design Size Range for 2 Level Design                       :ATTACH:
:PROPERTIES:
:ID:       571714ae-fac9-4e53-abbb-409b2e822d66
:END:
First generate the data:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = [
           [
            [1.0, 2.0] for j = 1:15
           ] for i = 1:10
          ]
#factors = [[Array{Float64, 1}(1:3) for i = 1:k] for k in [4, 8, 16, 32, 64, 128]]
ranges = [4:4, 5:5, 6:6, 7:7, 8:8, 13:13, 14:14, 15:15, 16:16, 17:17]
designs = 8000

sampled_subsets = sample_subsets(factors, ranges, designs, check_bounds = false, scale = scale_box_encoding!)
#+END_SRC

#+RESULTS:
#+begin_example
10-element Array{Array{Array{Float64,1},1},1}:
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
 Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]

10-element Array{UnitRange{Int64},1}:
 4:4  
 5:5  
 6:6  
 7:7  
 8:8  
 13:13
 14:14
 15:15
 16:16
 17:17
8000

 Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 4:4
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 18.990819813 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 5:5
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.313746283 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 6:6
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.569691273 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 7:7
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.829456196 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 8:8
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.677585781 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 20.070915543 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.986090864 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 20.000066346 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 16:16
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 19.808623101 seconds
Factors: Array{Float64,1}[[1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0], [1.0, 2.0]]
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Design to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 20.088880863 seconds
10-element Array{Any,1}:
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D   │ DELB │ DELB_ad │
├──────┼────────┼─────┼──────┼─────────┤
│ 1    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 2    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 3    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 4    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 5    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 6    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 8    │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
⋮
│ 7992 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7993 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7994 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7995 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7996 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7997 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7998 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 7999 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │
│ 8000 │ 4.0    │ 0.0 │ 0.0  │ 0.0     │, 0.0, "4 Experiments, 15 Factors")                                                                                                                                                                                                                                                                                                     
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D           │ DELB        │ DELB_ad │
├──────┼────────┼─────────────┼─────────────┼─────────┤
│ 1    │ 5.0    │ 6.42532e-11 │ 1.28506e-11 │ 0.0     │
│ 2    │ 5.0    │ 5.95221e-11 │ 1.19044e-11 │ 0.0     │
│ 3    │ 5.0    │ 5.76768e-11 │ 1.15354e-11 │ 0.0     │
│ 4    │ 5.0    │ 5.74956e-11 │ 1.14991e-11 │ 0.0     │
│ 5    │ 5.0    │ 5.67133e-11 │ 1.13427e-11 │ 0.0     │
│ 6    │ 5.0    │ 5.60837e-11 │ 1.12167e-11 │ 0.0     │
│ 7    │ 5.0    │ 5.60007e-11 │ 1.12001e-11 │ 0.0     │
│ 8    │ 5.0    │ 5.58981e-11 │ 1.11796e-11 │ 0.0     │
⋮
│ 7992 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7993 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7994 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7995 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7996 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7997 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7998 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7999 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │
│ 8000 │ 5.0    │ 0.0         │ 0.0         │ 0.0     │, 6.42532e-11, "5 Experiments, 15 Factors")
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D           │ DELB        │ DELB_ad │
├──────┼────────┼─────────────┼─────────────┼─────────┤
│ 1    │ 6.0    │ 6.23966e-10 │ 1.03994e-10 │ 0.0     │
│ 2    │ 6.0    │ 5.98721e-10 │ 9.97869e-11 │ 0.0     │
│ 3    │ 6.0    │ 5.89376e-10 │ 9.82294e-11 │ 0.0     │
│ 4    │ 6.0    │ 5.88117e-10 │ 9.80195e-11 │ 0.0     │
│ 5    │ 6.0    │ 5.82588e-10 │ 9.7098e-11  │ 0.0     │
│ 6    │ 6.0    │ 5.71888e-10 │ 9.53146e-11 │ 0.0     │
│ 7    │ 6.0    │ 5.70406e-10 │ 9.50676e-11 │ 0.0     │
│ 8    │ 6.0    │ 5.69304e-10 │ 9.4884e-11  │ 0.0     │
⋮
│ 7992 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7993 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7994 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7995 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7996 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7997 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7998 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 7999 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │
│ 8000 │ 6.0    │ 0.0         │ 0.0         │ 0.0     │, 6.23966e-10, "6 Experiments, 15 Factors")
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB        │ DELB_ad │
├──────┼────────┼────────────┼─────────────┼─────────┤
│ 1    │ 7.0    │ 6.89262e-9 │ 9.8466e-10  │ 0.0     │
│ 2    │ 7.0    │ 6.8259e-9  │ 9.75129e-10 │ 0.0     │
│ 3    │ 7.0    │ 6.80945e-9 │ 9.72779e-10 │ 0.0     │
│ 4    │ 7.0    │ 6.80662e-9 │ 9.72375e-10 │ 0.0     │
│ 5    │ 7.0    │ 6.80339e-9 │ 9.71913e-10 │ 0.0     │
│ 6    │ 7.0    │ 6.75676e-9 │ 9.65251e-10 │ 0.0     │
│ 7    │ 7.0    │ 6.73748e-9 │ 9.62497e-10 │ 0.0     │
│ 8    │ 7.0    │ 6.7267e-9  │ 9.60957e-10 │ 0.0     │
⋮
│ 7992 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7993 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7994 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7995 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7996 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7997 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7998 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 7999 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │
│ 8000 │ 7.0    │ 0.0        │ 0.0         │ 0.0     │, 6.89262e-9, "7 Experiments, 15 Factors")                    
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB       │ DELB_ad │
├──────┼────────┼────────────┼────────────┼─────────┤
│ 1    │ 8.0    │ 5.38427e-8 │ 6.73033e-9 │ 0.0     │
│ 2    │ 8.0    │ 5.10389e-8 │ 6.37986e-9 │ 0.0     │
│ 3    │ 8.0    │ 5.0614e-8  │ 6.32675e-9 │ 0.0     │
│ 4    │ 8.0    │ 5.0521e-8  │ 6.31512e-9 │ 0.0     │
│ 5    │ 8.0    │ 5.04089e-8 │ 6.30112e-9 │ 0.0     │
│ 6    │ 8.0    │ 5.03593e-8 │ 6.29491e-9 │ 0.0     │
│ 7    │ 8.0    │ 5.03455e-8 │ 6.29319e-9 │ 0.0     │
│ 8    │ 8.0    │ 5.01744e-8 │ 6.2718e-9  │ 0.0     │
⋮
│ 7992 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 7993 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 7994 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 7995 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 7996 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 7997 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 7998 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 7999 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │
│ 8000 │ 8.0    │ 0.0        │ 0.0        │ 0.0     │, 5.38427e-8, "8 Experiments, 15 Factors")                                       
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB        │ DELB_ad │
├──────┼────────┼────────────┼─────────────┼─────────┤
│ 1    │ 13.0   │ 0.00500093 │ 0.000384687 │ 0.0     │
│ 2    │ 13.0   │ 0.00497203 │ 0.000382464 │ 0.0     │
│ 3    │ 13.0   │ 0.00496823 │ 0.000382171 │ 0.0     │
│ 4    │ 13.0   │ 0.00491065 │ 0.000377742 │ 0.0     │
│ 5    │ 13.0   │ 0.00490982 │ 0.000377678 │ 0.0     │
│ 6    │ 13.0   │ 0.00488475 │ 0.00037575  │ 0.0     │
│ 7    │ 13.0   │ 0.00483848 │ 0.00037219  │ 0.0     │
│ 8    │ 13.0   │ 0.00481806 │ 0.00037062  │ 0.0     │
⋮
│ 7992 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 7993 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 7994 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 7995 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 7996 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 7997 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 7998 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 7999 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │
│ 8000 │ 13.0   │ 0.0        │ 0.0         │ 0.0     │, 0.00500093, "13 Experiments, 15 Factors")                   
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D         │ DELB       │ DELB_ad │
├──────┼────────┼───────────┼────────────┼─────────┤
│ 1    │ 14.0   │ 0.0388629 │ 0.00277592 │ 0.0     │
│ 2    │ 14.0   │ 0.0386119 │ 0.00275799 │ 0.0     │
│ 3    │ 14.0   │ 0.0383996 │ 0.00274283 │ 0.0     │
│ 4    │ 14.0   │ 0.0374976 │ 0.0026784  │ 0.0     │
│ 5    │ 14.0   │ 0.0372673 │ 0.00266195 │ 0.0     │
│ 6    │ 14.0   │ 0.0371623 │ 0.00265445 │ 0.0     │
│ 7    │ 14.0   │ 0.0370465 │ 0.00264618 │ 0.0     │
│ 8    │ 14.0   │ 0.0368358 │ 0.00263113 │ 0.0     │
⋮
│ 7992 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 7993 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 7994 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 7995 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 7996 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 7997 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 7998 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 7999 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │
│ 8000 │ 14.0   │ 0.0       │ 0.0        │ 0.0     │, 0.0388629, "14 Experiments, 15 Factors")                                                          
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D        │ DELB      │ DELB_ad │
├──────┼────────┼──────────┼───────────┼─────────┤
│ 1    │ 15.0   │ 0.29892  │ 0.019928  │ 0.0     │
│ 2    │ 15.0   │ 0.298482 │ 0.0198988 │ 0.0     │
│ 3    │ 15.0   │ 0.289294 │ 0.0192862 │ 0.0     │
│ 4    │ 15.0   │ 0.285644 │ 0.0190429 │ 0.0     │
│ 5    │ 15.0   │ 0.283076 │ 0.0188717 │ 0.0     │
│ 6    │ 15.0   │ 0.278588 │ 0.0185725 │ 0.0     │
│ 7    │ 15.0   │ 0.277753 │ 0.0185169 │ 0.0     │
│ 8    │ 15.0   │ 0.277585 │ 0.0185057 │ 0.0     │
⋮
│ 7992 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7993 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7994 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7995 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7996 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7997 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7998 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 7999 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │
│ 8000 │ 15.0   │ 0.0      │ 0.0       │ 0.0     │, 0.29892, "15 Experiments, 15 Factors")                                                                                                  
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB     │ DELB_ad     │
├──────┼────────┼─────────┼──────────┼─────────────┤
│ 1    │ 16.0   │ 2.51702 │ 0.157314 │ 0.567517    │
│ 2    │ 16.0   │ 2.46316 │ 0.153947 │ 0.0100429   │
│ 3    │ 16.0   │ 2.41053 │ 0.150658 │ 0.0237709   │
│ 4    │ 16.0   │ 2.39979 │ 0.149987 │ 0.000350092 │
│ 5    │ 16.0   │ 2.37725 │ 0.148578 │ 6.66675e-8  │
│ 6    │ 16.0   │ 2.36899 │ 0.148062 │ 6.30584e-9  │
│ 7    │ 16.0   │ 2.35435 │ 0.147147 │ 0.787154    │
│ 8    │ 16.0   │ 2.3531  │ 0.147069 │ 2.60841e-41 │
⋮
│ 7992 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7993 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7994 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7995 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7996 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7997 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7998 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7999 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │
│ 8000 │ 16.0   │ 0.0     │ 0.0      │ 0.0         │, 2.51702, "16 Experiments, 15 Factors")                                                            
 (8000×4 DataFrames.DataFrame
│ Row  │ Length │ D       │ DELB     │ DELB_ad     │
├──────┼────────┼─────────┼──────────┼─────────────┤
│ 1    │ 17.0   │ 2.76125 │ 0.162427 │ 1.27951     │
│ 2    │ 17.0   │ 2.69638 │ 0.15861  │ 0.275613    │
│ 3    │ 17.0   │ 2.67789 │ 0.157523 │ 0.00770836  │
│ 4    │ 17.0   │ 2.67009 │ 0.157064 │ 0.0951108   │
│ 5    │ 17.0   │ 2.66278 │ 0.156634 │ 0.066035    │
│ 6    │ 17.0   │ 2.6627  │ 0.15663  │ 0.136568    │
│ 7    │ 17.0   │ 2.6569  │ 0.156288 │ 1.10081e-16 │
│ 8    │ 17.0   │ 2.65261 │ 0.156036 │ 0.373918    │
⋮
│ 7992 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7993 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7994 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7995 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7996 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7997 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7998 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 7999 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │
│ 8000 │ 17.0   │ 0.0     │ 0.0      │ 0.0         │, 2.76125, "17 Experiments, 15 Factors")
#+end_example

Now plot it:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
**** Meeting with Brice and Arnaud
- Experiments with real factors
  - 3 Level factors
  - We should see an increase in D-Eff for 2p + 1
*** [2018-03-22 Thu]
**** Moved code to a Julia Package
I've moved all the code developed to study DoE to a Julia package.
That way it is easier to test examples, reuse and maintain what
I wrote in the journal. The code is at [[https://github.com/phrb/ExperimentalDesign.jl][GitHub]].
*** [2018-03-23 Fri]
**** Running Experiments with 2-Level Factors :ATTACH:
:PROPERTIES:
:Attachments: juliaLGby6Y.html julia2ESqX3.html julia9ovkOl.html juliamrKe3d.html julianYd8md.html
:ID:       11766833-1828-4cad-bc4e-b8e147395e48
:END:
*** [2018-03-26 Mon]
**** Review Paper for Alfredo (ISCC '18)
*Title:* An Unikernels Provisioning Architecture for OpenStack
***** Summary
The paper details an implementation of an OpenStack driver for provisioning
unikernel images based on the OSv operating system. The paper discusses the
OpenStack and OSv configurations that enabled the usage of git repositories
containing unikernel code, which enabled improvements in provisioning time of
non-cached unikernel images.

The paper compares the provisioning time of the new driver with OpenStack's
default driver without caching, showing the new driver takes half the time. The
paper also compares the provisioning time of the new driver with OpenStack's
driver when images are cached, showing that the new driver is marginally slower
than OpenStack's default in that situation. The paper does not present a
discussion on why the new approach should be adopted if the comparisons with
OpenStack's cached unikernel images are unfavorable.

***** Minor Corrections
There is an undefined reference at the second column of page 3:
"The GNU Parallel tool[?], [...]"

**** Precision on Determinant Computation :ATTACH:
:PROPERTIES:
:Attachments: julia3dyF5f.html
:ID:       49b09354-abd5-4ffa-adf4-488008d0eccc
:END:

I used big floats in the computation of the determinant of matrices with as many
experiments as 2-Level factors. This solved the problem of non-zero determinants
for this kind of matrix. The cause of that problem seems to have been the
accumulated errors in the computation of the determinants of those matrices.
*** [2018-03-27 Tue]
**** Comparing 2-Level Factor (Numerical) Designs
***** Setup
#+NAME: setup_design_comparison
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, Plots, StatPlots, RCall, DataStructures, DataFrames

struct SampleComparison
    pb_design
    pb_delb
    ranges
    best_sampled_delbs
    federov_design
    federov_delb
end

function get_max_samples(factors, designs = 8000, check_bounds = false)
    best_sampled_delbs = []

    ranges = [i:i for i = (length(keys(factors)) + 1):(length(keys(factors)) + 6)]

    for range in ranges
        design_subset = sample_subset(factors, range, floor(Int, designs),
                                      check_bounds = check_bounds)
        push!(best_sampled_delbs, max(design_subset[:DELB]...))
    end

    return SampleComparison(false, false,
                            ranges, best_sampled_delbs,
                            false, false)
end

function compare_sample_pb(two_level_factors, designs = 8000, check_bounds = false)
    pb_design = float(plackett_burman(two_level_factors))

    pb_factors = OrderedDict([(Symbol(:f, j), [-1., 1.]) for j = 1:two_level_factors])

    pb_design = DataFrame(pb_design)
    rename!(pb_design, zip(names(pb_design), collect(keys(pb_factors))))

    pb_matrix = generate_model_matrix(build_linear_formula(collect(keys(pb_factors))),
                                      pb_design,
                                      pb_factors)

    pb_delb = d_efficiency_lower_bound(pb_matrix)

    best_sampled_delbs = []

    ranges = [i:i for i = (two_level_factors + 1):(min(2 * two_level_factors,
                                                       size(pb_design, 1) + 7))]

    for range in ranges
        design_subset = sample_subset(pb_factors, range, designs, check_bounds = check_bounds)
        push!(best_sampled_delbs, max(design_subset[:DELB]...))
    end
    
    return SampleComparison(pb_design, pb_delb, ranges, best_sampled_delbs, false, false)
end

function compare_sample_pb_federov(two_level_factors, designs = 8000, check_bounds = false)
    factors = OrderedDict([(Symbol(:f, j), [-1., 1.]) for j = 1:two_level_factors])

    federov_designs = []
    federov_delbs = []

    r_output = R"""
    library(AlgDesign)
    federov <- optFederov(~., gen.factorial(rep(2, $two_level_factors)), criterion = "D")
    """

    federov = @rget federov

    start_design = federov[:design]

    for i = (length(keys(factors)) + 1):(size(start_design, 1) + 3)
        r_output = R"""
        library(AlgDesign)
        federov <- optFederov(~., gen.factorial(rep(2, $two_level_factors)), criterion = "D", nTrials = $i)
        """

        federov = @rget federov

        federov_design = federov[:design]
        rename!(federov_design, zip(names(federov_design), collect(keys(factors))))

        model_matrix = generate_model_matrix(build_linear_formula(collect(keys(factors))),
                                            federov_design,
                                            factors)

        federov_delb = d_efficiency_lower_bound(model_matrix)

        println("Computed optFederov for nTrials ", i)
        #println(federov_design)
        println("DELB = ", federov_delb)

        push!(federov_delbs, federov_delb)
        push!(federov_designs, federov_design)
    end

    comparison = compare_sample_pb(two_level_factors, designs, check_bounds)

    return SampleComparison(comparison.pb_design, comparison.pb_delb, comparison.ranges,
                            comparison.best_sampled_delbs, federov_designs, federov_delbs)
end

function compare_sample_federov(two_level_factors::Int, designs = 8000, check_bounds = false)
    factors = OrderedDict([(Symbol(:f, j), [-1., 1.]) for j = 1:two_level_factors])

    federov_designs = []
    federov_delbs = []

    r_output = R"""
    library(AlgDesign)
    federov <- optFederov(~., gen.factorial(rep(2, $two_level_factors)), criterion = "D")
    """

    federov = @rget federov

    start_design = federov[:design]

    for i = (length(keys(factors)) + 1):(size(start_design, 1) + 3)
        r_output = R"""
        library(AlgDesign)
        federov <- optFederov(~., gen.factorial(rep(2, $two_level_factors)), criterion = "D", nTrials = $i)
        """

        federov = @rget federov

        federov_design = federov[:design]
        rename!(federov_design, zip(names(federov_design), collect(keys(factors))))

        model_matrix = generate_model_matrix(build_linear_formula(collect(keys(factors))),
                                            federov_design,
                                            factors)

        federov_delb = d_efficiency_lower_bound(model_matrix)

        println("Computed optFederov for nTrials ", i)
        #println(federov_design)
        println("DELB = ", federov_delb)

        push!(federov_delbs, federov_delb)
        push!(federov_designs, federov_design)
    end

    best_sampled_delbs = []

    ranges = [i:i for i = (two_level_factors + 1):(min(2 * two_level_factors,
                                                       size(federov_design, 1) + 3))]

    for range in ranges
        design_subset = sample_subset(factors, range, floor(Int, designs), check_bounds = check_bounds)
        push!(best_sampled_delbs, max(design_subset[:DELB]...))
    end

    return SampleComparison(false, false, ranges, best_sampled_delbs,
                            federov_designs, federov_delbs)
end

function compare_sample_federov(factors, designs = 8000, check_bounds = false;
                                true_factors = [])
    levels = [length(v) for v in values(factors)]

    federov_designs = []
    federov_delbs = []

    r_output = R"""
    library(AlgDesign)
    federov <- optFederov(~., gen.factorial(c($levels), factors = $true_factors), criterion = "D")
    """

    federov = @rget federov

    start_design = federov[:design]

    for i = (length(keys(factors)) + 1):(size(start_design, 1) + 5)
        federov_design = DataFrame()
        federov_delb = 0.0

        try
            r_output = R"""
            library(AlgDesign)
            federov <- optFederov(~., gen.factorial(c($levels), factors = $true_factors), criterion = "D", nTrials = $i)
            """

            federov = @rget federov

            federov_design = federov[:design]
            rename!(federov_design, zip(names(federov_design), collect(keys(factors))))

            model_matrix = generate_model_matrix(build_linear_formula(collect(keys(factors))),
                                                federov_design,
                                                factors)

            federov_delb = d_efficiency_lower_bound(model_matrix)
        end

        println("Computed optFederov for nTrials ", i)
        #println(federov_design)
        println("DELB = ", federov_delb)
        println("optFederov_D = ", federov[:D])
        println("optFederov_DELB = ", federov[:Dea])

        push!(federov_delbs, federov_delb)
        push!(federov_designs, federov_design)
    end

    best_sampled_delbs = []

    ranges = [i:i for i = (length(keys(factors)) + 1):(size(start_design, 1) + 3)]

    for range in ranges
        design_subset = sample_subset(factors, range, floor(Int, designs),
                                      check_bounds = check_bounds)
        push!(best_sampled_delbs, max(design_subset[:DELB]...))
    end

    return SampleComparison(false, false, ranges, best_sampled_delbs,
                            federov_designs, federov_delbs)
end

function plot_pb_comparison(comparison)
    upscale    = 1.5
    small_font = Plots.font("sans-serif", 10.0 * upscale)
    large_font = Plots.font("sans-serif", 14.0 * upscale)
    default(titlefont  = large_font,
            guidefont  = large_font,
            tickfont   = small_font,
            legendfont = small_font)
    default(size = (896 * upscale, 504 * upscale))
    default(dpi = 300)

    plotly()
    plot([r.start for r in comparison.ranges],
         [float(b) for b in comparison.best_sampled_delbs],
         title = string("D-Efficiency and Experiments for ",
                         size(comparison.pb_design, 2),
                         " 2-Level Factors (Numeric)"),
         seriestype = :scatter,
         shape = :circle,
         markersize = 7,
         ylims = (0.0, 1.05),
         xlims = (comparison.ranges[1].start - 0.05, comparison.ranges[end].stop + 0.05),
         ylabel = "D-Efficiency Lower Bound",
         xlabel = "Experiments",
         label = "Sampled")
    plot!([size(comparison.pb_design, 1)],
          [comparison.pb_delb],
          label = "Plackett-Burman",
          ylims = (0.0, 1.05),
          shape = :circle,
          seriestype = :scatter,
          markersize = 7)
end

function plot_federov_comparison(comparison; pb = true, title = "")
    if pb
        plot_pb_comparison(comparison)
    else
        upscale    = 1.5
        small_font = Plots.font("sans-serif", 10.0 * upscale)
        large_font = Plots.font("sans-serif", 14.0 * upscale)
        default(titlefont  = large_font,
                guidefont  = large_font,
                tickfont   = small_font,
                legendfont = small_font)
        default(size = (896 * upscale, 504 * upscale))
        default(dpi = 300)

        plotly()
        plot([r.start for r in comparison.ranges],
             [float(b) for b in comparison.best_sampled_delbs],
             title = title,
             seriestype = :scatter,
             shape = :circle,
             markersize = 7,
             ylims = (0.0, 1.05),
             xlims = (comparison.ranges[1].start - 0.05, comparison.ranges[end].stop + 0.05),
             ylabel = "D-Efficiency Lower Bound",
             xlabel = "Experiments",
             label = "Sampled")
    end
    plot!([size(design, 1) for design in comparison.federov_design],
          [float(b) for b in comparison.federov_delb],
          label = "optFederov",
          ylims = (0.0, 1.05),
          shape = :circle,
          seriestype = :scatter,
          markersize = 7)
end

function plot_max_samples(comparison; title = "")
    upscale    = 1.5
    small_font = Plots.font("sans-serif", 10.0 * upscale)
    large_font = Plots.font("sans-serif", 14.0 * upscale)
    default(titlefont  = large_font,
            guidefont  = large_font,
            tickfont   = small_font,
            legendfont = small_font)
    default(size = (896 * upscale, 504 * upscale))
    default(dpi = 300)

    plotly()
    plot([r.start for r in comparison.ranges],
          [float(b) for b in comparison.best_sampled_delbs],
          title = title,
          seriestype = :scatter,
          shape = :circle,
          markersize = 7,
          ylims = (0.0, 1.05),
          xlims = (comparison.ranges[1].start - 0.05, comparison.ranges[end].stop + 0.05),
          ylabel = "D-Efficiency Lower Bound",
          xlabel = "Experiments",
          label = "Sampled")
end
#+END_SRC

#+RESULTS: setup_design_comparison
#+begin_example
ESS
INFO: Recompiling stale cache file /home/phrb/.julia/lib/v0.6/ExperimentalDesign.ji for module ExperimentalDesign.



get_max_samples (generic function with 3 methods)

compare_sample_pb (generic function with 3 methods)

compare_sample_pb_federov (generic function with 3 methods)

compare_sample_federov (generic function with 3 methods)

compare_sample_federov (generic function with 6 methods)

plot_pb_comparison (generic function with 1 method)

plot_federov_comparison (generic function with 1 method)

plot_max_samples (generic function with 1 method)
#+end_example

***** Comparing to Plackett-Burman (3 Factors)                   :ATTACH:
:PROPERTIES:
:Attachments: juliagNacRn.html
:ID:       619a13cf-7cef-4d80-8712-271a7ae3b44e
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
# WARNING: optFederov will take a lot of time for the next
# Plackett-Burman design (size 19).
two_level_factors = 3

comparison = compare_sample_pb(two_level_factors, 8000, true)

plot_pb_comparison(comparison)
#+END_SRC

#+RESULTS:
#+begin_example


3

 Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0])
Full Factorial Size: 8
Total Subsets: 256.0
Range of Design Sizes: 4:4
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 4: 70.0
Requested too many designs, using 70.0 instead
Elapsed Time: 0.047150198 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0])
Full Factorial Size: 8
Total Subsets: 256.0
Range of Design Sizes: 5:5
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 5: 56.0
Requested too many designs, using 56.0 instead
Elapsed Time: 0.023937148 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0])
Full Factorial Size: 8
Total Subsets: 256.0
Range of Design Sizes: 6:6
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 6: 28.0
Requested too many designs, using 28.0 instead
Elapsed Time: 0.010208752 seconds
SampleComparison(4×3 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │
├─────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │
│ 2   │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │
│ 4   │ -1.0 │ 1.0  │ -1.0 │, 1.0, UnitRange{Int64}[4:4, 5:5, 6:6], Any[1.0, 0.951366, 0.942809], false, false)

#+end_example
***** Comparing to ~optFederov~ (7 Factors)                      :ATTACH:
:PROPERTIES:
:Attachments: juliaPrhLjU.html
:ID:       d27e94c6-8105-4881-95e9-e96c1230b8a5
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
# WARNING: optFederov will take a lot of time for the next
# Plackett-Burman design (size 19).
two_level_factors = 7

comparison = compare_sample_pb_federov(two_level_factors, 8000, true)

plot_federov_comparison(comparison)
#+END_SRC

#+RESULTS:
#+begin_example


7

Computed optFederov for nTrials 8
DELB = 0.8537382425870722
Computed optFederov for nTrials 9
DELB = 0.9693402068135624
Computed optFederov for nTrials 10
DELB = 0.9513656920021768
Computed optFederov for nTrials 11
DELB = 0.9467908352732439
Computed optFederov for nTrials 12
DELB = 1.0
Computed optFederov for nTrials 13
DELB = 0.9839408409698828
Computed optFederov for nTrials 14
DELB = 0.9739023141149995
Computed optFederov for nTrials 15
DELB = 0.9781376460849827
Computed optFederov for nTrials 16
DELB = 0.9919651383152107
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0])
Full Factorial Size: 128
Total Subsets: 3.402823669209385e38
Range of Design Sizes: 8:8
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 8: 1.4297026524e12
Elapsed Time: 5.15042899 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0])
Full Factorial Size: 128
Total Subsets: 3.402823669209385e38
Range of Design Sizes: 9:9
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 9: 1.9062702032e13
Elapsed Time: 5.937001035 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0])
Full Factorial Size: 128
Total Subsets: 3.402823669209385e38
Range of Design Sizes: 10:10
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 10: 2.2684615418079997e14
Elapsed Time: 6.421870567 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0])
Full Factorial Size: 128
Total Subsets: 3.402823669209385e38
Range of Design Sizes: 11:11
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 11: 2.4334405630304e15
Elapsed Time: 6.290856648 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0])
Full Factorial Size: 128
Total Subsets: 3.402823669209385e38
Range of Design Sizes: 12:12
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 12: 2.37260454895464e16
Elapsed Time: 6.533177306 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0])
Full Factorial Size: 128
Total Subsets: 3.402823669209385e38
Range of Design Sizes: 13:13
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 13: 2.1170932898364483e17
Elapsed Time: 6.692458322 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0])
Full Factorial Size: 128
Total Subsets: 3.402823669209385e38
Range of Design Sizes: 14:14
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 14: 1.739040916651368e18
Elapsed Time: 7.095789714 seconds
SampleComparison(8×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │, 1.0, UnitRange{Int64}[8:8, 9:9, 10:10, 11:11, 12:12, 13:13, 14:14], Any[0.782542, 0.835522, 0.85963, 0.890466, 0.895695, 0.910519, 0.917028], Any[8×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 9×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 10×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │, 11×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 12×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 13×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │, 14×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │, 15×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 16×7 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │], Any[0.853738, 0.96934, 0.951366, 0.946791, 1.0, 0.983941, 0.973902, 0.978138, 0.991965])

Fontconfig warning: "/etc/fonts/fonts.conf", line 5: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/fonts.conf", line 6: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/fonts.conf", line 9: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 34: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'version'
Fontconfig error: Cannot load config file from /etc/fonts/fonts.conf
Created new window in existing browser session.
#+end_example
***** Comparing to ~optFederov~ Designs (11 Factors)            :ATTACH:
:PROPERTIES:
:Attachments: julialEg2mq.html
:ID:       ff7a6c67-8fec-400b-92be-3a3dbeced245
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
# WARNING: optFederov will take a lot of time for the next
# Plackett-Burman design (size 19).
two_level_factors = 11

comparison = compare_sample_pb_federov(two_level_factors)
#+END_SRC

#+RESULTS:
#+begin_example


11

Computed optFederov for nTrials 12
DELB = 0.9999999999999999
Computed optFederov for nTrials 13
DELB = 0.9779659332547339
Computed optFederov for nTrials 14
DELB = 0.9621103271223196
Computed optFederov for nTrials 15
DELB = 0.9538524155158347
Computed optFederov for nTrials 16
DELB = 0.9671682101338345
Computed optFederov for nTrials 17
DELB = 0.9729796440071278
Computed optFederov for nTrials 18
DELB = 0.9735789872316732
Computed optFederov for nTrials 19
DELB = 0.9727789463913687
Computed optFederov for nTrials 20
DELB = 0.9793641899158704
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 12:12
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 8.690470855 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 9.310633193 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 9.748692936 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 10.191342519 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 16:16
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 10.542346126 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 10.976244253 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 18:18
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 11.481893438 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 19:19
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 12.00145532 seconds
SampleComparison(12×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 11  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │, 0.9999999999999999, UnitRange{Int64}[12:12, 13:13, 14:14, 15:15, 16:16, 17:17, 18:18, 19:19], Any[0.6783, 0.710505, 0.746752, 0.776294, 0.782361, 0.793481, 0.816573, 0.820573], Any[12×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │, 13×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 14×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 15×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 16×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 17×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 17  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 18×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 18  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 19×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 15  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 18  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 19  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 20×11 DataFrames.DataFrame
│ Row │ f1   │ f2   │ f3   │ f4   │ f5   │ f6   │ f7   │ f8   │ f9   │ f10  │ f11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 16  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 18  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 19  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 20  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │], Any[1.0, 0.977966, 0.96211, 0.953852, 0.967168, 0.97298, 0.973579, 0.972779, 0.979364])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison)
#+END_SRC

#+RESULTS:
#+begin_example
Fontconfig warning: "/etc/fonts/fonts.conf", line 5: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/fonts.conf", line 6: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/fonts.conf", line 9: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 34: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'version'
Fontconfig error: Cannot load config file from /etc/fonts/fonts.conf
Created new window in existing browser session.
#+end_example

***** Comparing to ~optFederov~ Designs (11 Factors, 32000 samples) :ATTACH:
:PROPERTIES:
:Attachments: julia8nEowR.html
:ID:       826a1362-cebc-4dd8-bad1-324806a3b63c
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
# WARNING: optFederov will take a lot of time for the next
# Plackett-Burman design (size 19).
two_level_factors = 11

comparison = compare_sample_pb_federov(two_level_factors, 32000)
#+END_SRC

#+RESULTS:
#+begin_example


11

Computed optFederov for nTrials 12
12×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9999999999999999
Computed optFederov for nTrials 13
13×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9779659332547339
Computed optFederov for nTrials 14
14×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9621103271223196
Computed optFederov for nTrials 15
15×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9554401937734581
Computed optFederov for nTrials 16
16×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9999999999999999
Computed optFederov for nTrials 17
17×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.97964281879448
Computed optFederov for nTrials 18
18×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 18  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9741090587868838
Computed optFederov for nTrials 19
19×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 18  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 19  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.972250881246144
Computed optFederov for nTrials 20
20×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 17  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 18  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 19  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 20  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.986199181818184
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 12:12
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 22.349565666 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 19.923682483 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 19.407494845 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 20.278845478 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 16:16
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 20.70084234 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 20.948570962 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 18:18
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 21.500065474 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0])
Full Factorial Size: 2048
Total Subsets: Inf
Range of Design Sizes: 19:19
Number of Designs to Sample: 32000
WARNING: Skipping bounds check!
Elapsed Time: 21.814090663 seconds
SampleComparison([1.0 1.0 … 1.0 1.0; 1.0 -1.0 … -1.0 -1.0; … ; -1.0 -1.0 … -1.0 1.0; -1.0 1.0 … 1.0 -1.0], 0.9999999999999999, UnitRange{Int64}[12:12, 13:13, 14:14, 15:15, 16:16, 17:17, 18:18, 19:19], Any[0.718145, 0.730066, 0.739983, 0.776527, 0.787418, 0.870942, 0.853962, 0.829549], Any[12×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 13×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 14×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 15×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 16×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 17×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │, 18×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 18  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 19×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 16  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 17  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 18  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 19  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 20×11 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │ X10  │ X11  │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 10  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 11  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 13  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 14  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 17  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 18  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 19  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
│ 20  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │], Any[1.0, 0.977966, 0.96211, 0.95544, 1.0, 0.979643, 0.974109, 0.972251, 0.986199])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.

***** Comparing Larger Designs to Plackett-Burman                :ATTACH:
:PROPERTIES:
:Attachments: juliaYbr3EH.html
:ID:       6b599d16-2bdf-4bcf-8ef6-72f7dc913f14
:END:
The ~optFederov~ implementation in ~AlgDesign~ was not able to finish generating
a new design for 19 factors in 15 minutes. As we saw before in [[Using the
~AlgDesign~ R package]], we can't generate large designs with ~AlgDesign~ due to
memory limitations, since this implementation needs to generate the full
factorial design before optimizing.

We can still compare the 127 2-Level Factor Plackett-Burman design with our
uniform sampling. The plot shows we got a lot further from the PB design this
time, perhaps because there are many more designs to choose from this time.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
two_level_factors = 127

comparison = compare_sample_pb(two_level_factors)
#+END_SRC

#+RESULTS:
#+begin_example
127

 Factors: DataStructures.OrderedDict(:f1=>[-1.0, 1.0],:f2=>[-1.0, 1.0],:f3=>[-1.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-1.0, 1.0],:f8=>[-1.0, 1.0],:f9=>[-1.0, 1.0],:f10=>[-1.0, 1.0],:f11=>[-1.0, 1.0],:f12=>[-1.0, 1.0],:f13=>[-1.0, 1.0],:f14=>[-1.0, 1.0],:f15=>[-1.0, 1.0],:f16=>[-1.0, 1.0],:f17=>[-1.0, 1.0],:f18=>[-1.0, 1.0],:f19=>[-1.0, 1.0],:f20=>[-1.0, 1.0],:f21=>[-1.0, 1.0],:f22=>[-1.0, 1.0],:f23=>[-1.0, 1.0],:f24=>[-1.0, 1.0],:f25=>[-1.0, 1.0],:f26=>[-1.0, 1.0],:f27=>[-1.0, 1.0],:f28=>[-1.0, 1.0],:f29=>[-1.0, 1.0],:f30=>[-1.0, 1.0],:f31=>[-1.0, 1.0],:f32=>[-1.0, 1.0],:f33=>[-1.0, 1.0],:f34=>[-1.0, 1.0],:f35=>[-1.0, 1.0],:f36=>[-1.0, 1.0],:f37=>[-1.0, 1.0],:f38=>[-1.0, 1.0],:f39=>[-1.0, 1.0],:f40=>[-1.0, 1.0],:f41=>[-1.0, 1.0],:f42=>[-1.0, 1.0],:f43=>[-1.0, 1.0],:f44=>[-1.0, 1.0],:f45=>[-1.0, 1.0],:f46=>[-1.0, 1.0],:f47=>[-1.0, 1.0],:f48=>[-1.0, 1.0],:f49=>[-1.0, 1.0],:f50=>[-1.0, 1.0],:f51=>[-1.0, 1.0],:f52=>[-1.0, 1.0],:f53=>[-1.0, 1.0],:f54=>[-1.0, 1.0],:f55=>[-1.0, 1.0],:f56=>[-1.0, 1.0],:f57=>[-1.0, 1.0],:f58=>[-1.0, 1.0],:f59=>[-1.0, 1.0],:f60=>[-1.0, 1.0],:f61=>[-1.0, 1.0],:f62=>[-1.0, 1.0],:f63=>[-1.0, 1.0],:f64=>[-1.0, 1.0],:f65=>[-1.0, 1.0],:f66=>[-1.0, 1.0],:f67=>[-1.0, 1.0],:f68=>[-1.0, 1.0],:f69=>[-1.0, 1.0],:f70=>[-1.0, 1.0],:f71=>[-1.0, 1.0],:f72=>[-1.0, 1.0],:f73=>[-1.0, 1.0],:f74=>[-1.0, 1.0],:f75=>[-1.0, 1.0],:f76=>[-1.0, 1.0],:f77=>[-1.0, 1.0],:f78=>[-1.0, 1.0],:f79=>[-1.0, 1.0],:f80=>[-1.0, 1.0],:f81=>[-1.0, 1.0],:f82=>[-1.0, 1.0],:f83=>[-1.0, 1.0],:f84=>[-1.0, 1.0],:f85=>[-1.0, 1.0],:f86=>[-1.0, 1.0],:f87=>[-1.0, 1.0],:f88=>[-1.0, 1.0],:f89=>[-1.0, 1.0],:f90=>[-1.0, 1.0],:f91=>[-1.0, 1.0],:f92=>[-1.0, 1.0],:f93=>[-1.0, 1.0],:f94=>[-1.0, 1.0],:f95=>[-1.0, 1.0],:f96=>[-1.0, 1.0],:f97=>[-1.0, 1.0],:f98=>[-1.0, 1.0],:f99=>[-1.0, 1.0],:f100=>[-1.0, 1.0],:f101=>[-1.0, 1.0],:f102=>[-1.0, 1.0],:f103=>[-1.0, 1.0],:f104=>[-1.0, 1.0],:f105=>[-1.0, 1.0],:f106=>[-1.0, 1.0],:f107=>[-1.0, 1.0],:f108=>[-1.0, 1.0],:f109=>[-1.0, 1.0],:f110=>[-1.0, 1.0],:f111=>[-1.0, 1.0],:f112=>[-1.0, 1.0],:f113=>[-1.0, 1.0],:f114=>[-1.0, 1.0],:f115=>[-1.0, 1.0],:f116=>[-1.0, 1.0],:f117=>[-1.0, 1.0],:f118=>[-1.0, 1.0],:f119=>[-1.0, 1.0],:f120=>[-1.0, 1.0],:f121=>[-1.0, 1.0],:f122=>[-1.0, 1.0],:f123=>[-1.0, 1.0],:f124=>[-1.0, 1.0],:f125=>[-1.0, 1.0],:f126=>[-1.0, 1.0],:f127=>[-1.0, 1.0])
Full Factorial Size: 0
Total Subsets: 1.0
Range of Design Sizes: 128:128
Number of Designs to Sample: 8000
ERROR: DomainError:
Stacktrace:
 [1] nan_dom_err at ./math.jl:300 [inlined]
 [2] gamma(::Float64) at ./special/gamma.jl:3
 [3] enforce_bounds(::DataStructures.OrderedDict{Symbol,Array{Float64,1}}, ::UnitRange{Int64}, ::Int64, ::Bool) at /home/phrb/.julia/v0.6/ExperimentalDesign/src/d_optimal.jl:483
 [4] #generate_designs#13(::Bool, ::Function, ::Bool, ::Function, ::DataStructures.OrderedDict{Symbol,Array{Float64,1}}, ::DataFrames.Formula, ::UnitRange{Int64}, ::Int64) at /home/phrb/.julia/v0.6/ExperimentalDesign/src/d_optimal.jl:585
 [5] (::ExperimentalDesign.#kw##generate_designs)(::Array{Any,1}, ::ExperimentalDesign.#generate_designs, ::DataStructures.OrderedDict{Symbol,Array{Float64,1}}, ::DataFrames.Formula, ::UnitRange{Int64}, ::Int64) at ./<missing>:0
 [6] macro expansion at ./util.jl:293 [inlined]
 [7] #sample_subset#14(::Bool, ::Function, ::Function, ::DataStructures.OrderedDict{Symbol,Array{Float64,1}}, ::UnitRange{Int64}, ::Int64) at /home/phrb/.julia/v0.6/ExperimentalDesign/src/d_optimal.jl:614
 [8] compare_sample_pb(::Int64) at ./none:17
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_pb_comparison(comparison)
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
***** Discussion
The uniformly sampled designs get worse as the search space gets larger. We've
seen this before when the D-Efficiency histograms got "shorter" as we increased
the number of 3-Level factors. Since more designs are bad, we are more likely to
sample bad designs.

The Federov algorithm seems to be able to find good designs for relatively small
numbers of factors. The implementation in the ~AlgDesign~ package did not finish
its computation for 19 factors after 15 minutes. I believe this is due to need
of generating the full factorial beforehand and testing all its combinations.

The trend of getting worse design as we increase the number of factors seems
strongest for the 127-factor example. I could not run the Federov algorithm for
this case. Maybe the Federov algorithm got such good results in the previous
cases because it explores exhaustively the full factorial, that is, uses it as
the candidate set for the exchanges. A new implementation that controlled the
size of the candidate set could not achieve results as good.
*** [2018-03-28 Wed]
**** Comparing Mixed-Level Factor Designs (Numerical)
***** Setup
#+CALL: setup_design_comparison()

#+RESULTS:
#+begin_example




compare_sample_pb (generic function with 3 methods)

compare_sample_pb_federov (generic function with 3 methods)

compare_sample_federov (generic function with 6 methods)

compare_sample_federov (generic function with 6 methods)

plot_pb_comparison (generic function with 1 method)

plot_federov_comparison (generic function with 1 method)
#+end_example
***** Comparing to ~optFederov~ Designs (3 2-Level, 3 3-Level) :ATTACH:
:PROPERTIES:
:Attachments: juliapCda4N.html
:ID:       ebea354f-0fee-4074-ac11-9f93aa1b4439
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Float64, 1}}()

for i = 1:3
    factors[Symbol(:f, i)] = [-1., 0., 1.]
end

for i = 4:6
    factors[Symbol(:f, i)] = [-1., 1.]
end

println(factors)

comparison = compare_sample_federov(factors, 16000, false)
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 0 entries





DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])

Computed optFederov for nTrials 7
7×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.8782013454017028
Computed optFederov for nTrials 8
8×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9999999999999999
Computed optFederov for nTrials 9
9×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9724060657957856
Computed optFederov for nTrials 10
10×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9567841965003845
Computed optFederov for nTrials 11
11×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9626594295083751
Computed optFederov for nTrials 12
12×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9999999999999999
Computed optFederov for nTrials 13
13×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9857078839190708
Computed optFederov for nTrials 14
14×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9770162408979399
Computed optFederov for nTrials 15
15×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9824986034095922
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 7:7
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 7.986810272 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 8:8
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.241776764 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 9:9
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.285421734 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 10:10
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.32730774 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 11:11
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.110700663 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 12:12
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 7.997184436 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 13:13
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.146520433 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 14:14
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.291308356 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 15:15
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.527865337 seconds
SampleComparison(false, false, UnitRange{Int64}[7:7, 8:8, 9:9, 10:10, 11:11, 12:12, 13:13, 14:14, 15:15], Any[0.818805, 0.884524, 0.901361, 0.910117, 0.947287, 0.937398, 0.950629, 0.959839, 0.957295], Any[7×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 8×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 9×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │, 10×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 11×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │, 12×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │, 13×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 14×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │, 15×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │], Any[0.878201, 1.0, 0.972406, 0.956784, 0.962659, 1.0, 0.985708, 0.977016, 0.982499])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison, pb = false, title = string("D-Efficiency and Experiments",
                                                               " for 3 2-Level Factors and",
                                                               " 3 3-Level Factors"))
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.

***** Comparing to ~optFederov~ Designs (3 2-Level, 3 3-Level, 3 4-Level) :ATTACH:
:PROPERTIES:
:Attachments: julia1aSFrL.html
:ID:       d8930c0e-d2b9-47f8-9867-cc8da095f737
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Float64, 1}}()

for i = 1:3
    factors[Symbol(:f, i)] = [-1., 0., 1.]
end

for i = 4:6
    factors[Symbol(:f, i)] = [-1., 1.]
end

for i = 7:9
    factors[Symbol(:f, i)] = [-3., -1., 1., 3.]
end

println(factors)

comparison = compare_sample_federov(factors, 16000, false)
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 0 entries







DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])

Computed optFederov for nTrials 10
10×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 7   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.940863218019739
Computed optFederov for nTrials 11
11×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 7   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9324282574449568
Computed optFederov for nTrials 12
12×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9509793927955897
Computed optFederov for nTrials 13
13×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 12  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 13  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9807584017053698
Computed optFederov for nTrials 14
14×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 10  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 11  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 12  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9676125606258837
Computed optFederov for nTrials 15
15×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 14  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9659204434622264
Computed optFederov for nTrials 16
16×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 14  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 15  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9867356183979417
Computed optFederov for nTrials 17
17×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 4   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 10  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 14  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 16  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 17  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9841313436153162
Computed optFederov for nTrials 18
18×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 8   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 9   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 14  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 16  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 17  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 18  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ 3.0  │
DELB = 0.9789497691898829
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 10:10
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.172749158 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 11:11
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.155060316 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 12:12
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.294007342 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.27580255 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.225832308 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 10.53948854 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 16:16
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.399109406 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.325131889 seconds
Factors: DataStructures.OrderedDict(:f1=>[-1.0, 0.0, 1.0],:f2=>[-1.0, 0.0, 1.0],:f3=>[-1.0, 0.0, 1.0],:f4=>[-1.0, 1.0],:f5=>[-1.0, 1.0],:f6=>[-1.0, 1.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 18:18
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.834123212 seconds
SampleComparison(false, false, UnitRange{Int64}[10:10, 11:11, 12:12, 13:13, 14:14, 15:15, 16:16, 17:17, 18:18], Any[0.737588, 0.809439, 0.792134, 0.818033, 0.825466, 0.843389, 0.852471, 0.868747, 0.894033], Any[10×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 4   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 7   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ 3.0  │, 11×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 7   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ 3.0  │, 12×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 4   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 9   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 10  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 12  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ 3.0  │, 13×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 10  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 11  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 12  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 13  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │, 14×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 3   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 8   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 10  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 11  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 12  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 14  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ 3.0  │, 15×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 5   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 8   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 9   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 13  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 14  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ 3.0  │, 16×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 5   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 7   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 9   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 10  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 14  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 15  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 16  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ 3.0  │, 17×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 4   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 7   │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 8   │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 9   │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 10  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 11  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 13  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ 3.0  │
│ 14  │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ 3.0  │
│ 15  │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 16  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 17  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │, 18×9 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │ X9   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -3.0 │ -3.0 │ -3.0 │
│ 2   │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ -3.0 │
│ 3   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ -3.0 │
│ 4   │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 5   │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 3.0  │ -3.0 │ -3.0 │
│ 6   │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 7   │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -3.0 │ 3.0  │ -3.0 │
│ 8   │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ -3.0 │
│ 9   │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 3.0  │ 3.0  │ -3.0 │
│ 10  │ -1.0 │ -1.0 │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -3.0 │ -3.0 │ 3.0  │
│ 11  │ 1.0  │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 12  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ -3.0 │ 3.0  │
│ 13  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 14  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 3.0  │ -3.0 │ 3.0  │
│ 15  │ -1.0 │ 1.0  │ 1.0  │ -1.0 │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 16  │ 1.0  │ -1.0 │ -1.0 │ 1.0  │ 1.0  │ 1.0  │ -3.0 │ 3.0  │ 3.0  │
│ 17  │ -1.0 │ -1.0 │ 1.0  │ -1.0 │ -1.0 │ -1.0 │ 3.0  │ 3.0  │ 3.0  │
│ 18  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ -1.0 │ 1.0  │ 3.0  │ 3.0  │ 3.0  │], Any[0.940863, 0.932428, 0.950979, 0.980758, 0.967613, 0.96592, 0.986736, 0.984131, 0.97895])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison, pb = false, title = string("D-Efficiency and Experiments",
                                                               " for 3 2-Level Factors,",
                                                               " 3 3-Level Factors and",
                                                               " 3 4-Level Factors"))
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.

***** Comparing to ~optFederov~ Designs (3 4-Level, 3 8-Level) :ATTACH:
:PROPERTIES:
:Attachments: juliaKOCQ5j.html
:ID:       24caab1a-a58e-49ff-8b9b-832c95d5476f
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Float64, 1}}()

for i = 1:3
    factors[Symbol(:f, i)] = [-3., -1., 1., 3.]
end

for i = 4:6
    factors[Symbol(:f, i)] = [-7., -5., -3., -1., 1., 3., 5., 7.]
end

println(factors)

comparison = compare_sample_federov(factors, 16000, false)
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 0 entries





DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])

Computed optFederov for nTrials 7
7×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 4   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 7   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.8782013454017028
Computed optFederov for nTrials 8
8×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 4   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 6   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 7   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9999999999999999
Computed optFederov for nTrials 9
9×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 4   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 5   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 6   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 7   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 8   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
│ 9   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9724060657957856
Computed optFederov for nTrials 10
10×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 7   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 9   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 10  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9567841965003845
Computed optFederov for nTrials 11
11×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 9   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 10  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 11  │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9626594295083751
Computed optFederov for nTrials 12
12×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 9   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 10  │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 11  │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
│ 12  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9999999999999999
Computed optFederov for nTrials 13
13×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 9   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 10  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 11  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 12  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
│ 13  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9857078839190708
Computed optFederov for nTrials 14
14×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 3   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 9   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 10  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 11  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 12  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 13  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 14  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9770162408979399
Computed optFederov for nTrials 15
15×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 8   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 9   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 10  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 11  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 12  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 13  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 14  │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 15  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 7.0  │
DELB = 0.9824986034095922
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 7:7
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.149774114 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 8:8
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.165935386 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 9:9
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.22372249 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 10:10
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.333030345 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 11:11
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.459775788 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 12:12
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.541040779 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.32154448 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.270067512 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.465349291 seconds
SampleComparison(false, false, UnitRange{Int64}[7:7, 8:8, 9:9, 10:10, 11:11, 12:12, 13:13, 14:14, 15:15], Any[0.814588, 0.869131, 0.906517, 0.921521, 0.918068, 0.920718, 0.941603, 0.939566, 0.960415], Any[7×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 4   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 7   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │, 8×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 4   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 6   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 7   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 7.0  │, 9×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 4   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 5   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 6   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 7   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 8   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
│ 9   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │, 10×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 7   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 9   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 10  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 7.0  │, 11×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 9   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 10  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 11  │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 7.0  │, 12×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 9   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 10  │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 11  │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
│ 12  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │, 13×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 9   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 10  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 11  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 12  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 7.0  │
│ 13  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │, 14×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 3   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 7.0  │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 9   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 10  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 11  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 12  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 13  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 14  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 7.0  │, 15×6 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -7.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -7.0 │
│ 4   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -7.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -7.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -7.0 │
│ 8   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 7.0  │
│ 9   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 10  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 7.0  │
│ 11  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 7.0  │
│ 12  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 13  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 7.0  │
│ 14  │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 7.0  │
│ 15  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 7.0  │], Any[0.878201, 1.0, 0.972406, 0.956784, 0.962659, 1.0, 0.985708, 0.977016, 0.982499])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison, pb = false, title = string("D-Efficiency and Experiments",
                                                               " for 3 4-Level Factors and",
                                                               " 3 8-Level Factors"))
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.

***** Comparing to ~optFederov~ Designs (3 4-Level, 3 8-Level, 2 3-Level) :ATTACH:
:PROPERTIES:
:Attachments: juliaXmvftq.html
:ID:       3a226ef1-4c83-4692-b2fb-037599e54661
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Float64, 1}}()

for i = 1:3
    factors[Symbol(:f, i)] = [-3., -1., 1., 3.]
end

for i = 4:6
    factors[Symbol(:f, i)] = [-7., -5., -3., -1., 1., 3., 5., 7.]
end

for i = 7:8
    factors[Symbol(:f, i)] = [-1., 0., 1.]
end

println(factors)

comparison = compare_sample_federov(factors, 16000, false)
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 0 entries







DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])

Computed optFederov for nTrials 9
9×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9319833539112609
Computed optFederov for nTrials 10
10×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 10  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9455165939753816
Computed optFederov for nTrials 11
11×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9406062516838208
Computed optFederov for nTrials 12
12×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9999999999999999
Computed optFederov for nTrials 13
13×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9822954250668702
Computed optFederov for nTrials 14
14×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9704029760123662
Computed optFederov for nTrials 15
15×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9730550180262034
Computed optFederov for nTrials 16
16×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9857604614636898
Computed optFederov for nTrials 17
17×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 17  │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │
DELB = 0.9848322396481787
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 9:9
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.91629738 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 10:10
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.312658915 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 11:11
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 11.291727637 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 12:12
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.798561893 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 8.914144557 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.026248166 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.16825026 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 16:16
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.214298632 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f5=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f6=>[-1.0, 0.0, 1.0],:f7=>[-1.0, 0.0, 1.0],:f8=>[-1.0, 0.0, 1.0])
Full Factorial Size: 110592
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 9.349246461 seconds
SampleComparison(false, false, UnitRange{Int64}[9:9, 10:10, 11:11, 12:12, 13:13, 14:14, 15:15, 16:16, 17:17], Any[0.740244, 0.796298, 0.856957, 0.881931, 0.889058, 0.896842, 0.906155, 0.895239, 0.903463], Any[9×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 6   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │, 10×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 9   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 10  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │, 11×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 4   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 7   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 8   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 10  │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │, 12×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 6   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 9   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │, 13×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 8   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ -3.0 │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 11  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 12  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 13  │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │, 14×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 14  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ 1.0  │, 15×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 9   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 11  │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 13  │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 15  │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ 1.0  │, 16×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ -3.0 │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 3.0  │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ 1.0  │, 17×8 DataFrames.DataFrame
│ Row │ X1   │ X2   │ X3   │ X4   │ X5   │ X6   │ X7   │ X8   │
├─────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1   │ 3.0  │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ -1.0 │ -1.0 │ -1.0 │
│ 2   │ -3.0 │ -3.0 │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 3   │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ -7.0 │ 1.0  │ -1.0 │ -1.0 │
│ 4   │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ 7.0  │ 1.0  │ -1.0 │ -1.0 │
│ 5   │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ -7.0 │ -1.0 │ 1.0  │ -1.0 │
│ 6   │ 3.0  │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 7   │ -3.0 │ 3.0  │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ -1.0 │
│ 8   │ -3.0 │ 3.0  │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ 1.0  │ -1.0 │
│ 9   │ 3.0  │ 3.0  │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ -1.0 │ 1.0  │
│ 10  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 11  │ -3.0 │ -3.0 │ 3.0  │ -7.0 │ 7.0  │ -1.0 │ -1.0 │ 1.0  │
│ 12  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ 7.0  │ 1.0  │ -1.0 │ 1.0  │
│ 13  │ -3.0 │ -3.0 │ 3.0  │ 7.0  │ -7.0 │ -1.0 │ 1.0  │ 1.0  │
│ 14  │ 3.0  │ -3.0 │ -3.0 │ 7.0  │ 7.0  │ -1.0 │ 1.0  │ 1.0  │
│ 15  │ -3.0 │ 3.0  │ -3.0 │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 16  │ 3.0  │ 3.0  │ 3.0  │ -7.0 │ -7.0 │ 1.0  │ 1.0  │ 1.0  │
│ 17  │ 3.0  │ -3.0 │ -3.0 │ -7.0 │ 7.0  │ 1.0  │ 1.0  │ 1.0  │], Any[0.931983, 0.945517, 0.940606, 1.0, 0.982295, 0.970403, 0.973055, 0.98576, 0.984832])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
comparison = SampleComparison(false, false,
                              UnitRange{Int64}[9:9, 10:10, 11:11, 12:12, 13:13, 14:14, 15:15, 16:16, 17:17],
                              Any[0.740244, 0.796298, 0.856957, 0.881931, 0.889058, 0.896842, 0.906155, 0.895239, 0.903463],
                              [Array{Float64, 2}(i, 8) for i = 9:17], 
                              Any[0.931983, 0.945517, 0.940606, 1.0, 0.982295, 0.970403, 0.973055, 0.98576, 0.984832])
#+END_SRC

#+RESULTS:
: SampleComparison(false, false, UnitRange{Int64}[9:9, 10:10, 11:11, 12:12, 13:13, 14:14, 15:15, 16:16, 17:17], Any[0.740244, 0.796298, 0.856957, 0.881931, 0.889058, 0.896842, 0.906155, 0.895239, 0.903463], Array{Float64,2}[[6.9257e-310 6.92556e-310 … 0.0 0.0; 6.92574e-310 6.9257e-310 … 3.65609e-322 0.0; … ; -2.08127e-138 6.9257e-310 … 0.0 0.0; -4.01597e-143 6.9257e-310 … 0.0 0.0], [6.92573e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; … ; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310], [6.92571e-310 6.92571e-310 … 6.92571e-310 6.92571e-310; 6.92571e-310 6.92571e-310 … 6.92571e-310 6.92571e-310; … ; 6.92571e-310 6.92571e-310 … 6.92571e-310 6.92573e-310; 6.92571e-310 6.92571e-310 … 6.92571e-310 6.92573e-310], [6.92573e-310 6.92571e-310 … 6.92571e-310 6.92571e-310; 6.92573e-310 6.92571e-310 … 6.92571e-310 6.92571e-310; … ; 6.92571e-310 6.92571e-310 … 6.92571e-310 0.0; 6.92571e-310 6.92571e-310 … 6.92571e-310 -1.18818], [6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; … ; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310], [6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.9257e-310; … ; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.92573e-310; 6.9257e-310 6.9257e-310 … 6.9257e-310 6.92573e-310], [1.17588e-321 7.46039e-322 … 9.48606e-322 1.22528e-321; 9.53547e-322 1.21046e-321 … 8.54734e-322 8.84378e-322; … ; 1.00789e-321 1.18082e-321 … 6.7687e-322 8.59674e-322; 6.62048e-322 1.23022e-321 … 7.31217e-322 8.49793e-322], [4.94066e-324 0.0 … 4.94066e-324 4.94066e-324; 7.23847e-318 0.0 … 4.29561e-318 7.23864e-318; … ; 4.94066e-324 0.0 … 4.94066e-324 4.94066e-324; 4.29581e-318 0.0 … 4.29567e-318 7.23862e-318], [4.94066e-324 7.23983e-318 … 4.94066e-324 7.23912e-318; 7.2392e-318 4.94066e-324 … 7.239e-318 4.94066e-324; … ; 7.23977e-318 4.94066e-324 … 7.23957e-318 0.0; 4.94066e-324 7.23973e-318 … 4.94066e-324 0.0]], Any[0.931983, 0.945517, 0.940606, 1.0, 0.982295, 0.970403, 0.973055, 0.98576, 0.984832])

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison, pb = false, title = string("D-Efficiency and Experiments",
                                                               " for 3 4-Level,",
                                                               " 3 8-Level and",
                                                               " 2 3-Level Factors"))
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.

***** Discussion
The Federov algorithm was not as good in these cases, in comparison to random
sampling of the designs. I did not plot histograms for mixed-level designs, so I
had no intuition for these cases.

**** Plotting Large Mixed-Level Factor Designs (Numerical)
***** Setup
#+CALL: setup_design_comparison()

#+RESULTS:
#+begin_example




get_max_samples (generic function with 3 methods)

compare_sample_pb (generic function with 3 methods)

compare_sample_pb_federov (generic function with 3 methods)

compare_sample_federov (generic function with 6 methods)

compare_sample_federov (generic function with 6 methods)

plot_pb_comparison (generic function with 1 method)

plot_federov_comparison (generic function with 1 method)

plot_max_samples (generic function with 1 method)
#+end_example
***** Plotting 12 4-Level, 12 8-Level, 12 3-Level                :ATTACH:
:PROPERTIES:
:Attachments: juliaZRpVhy.html
:ID:       251e72ef-74f5-4fbd-b3f7-ff719ac69624
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Float64, 1}}()

for i = 1:12
    factors[Symbol(:f, i)] = [-3., -1., 1., 3.]
end

for i = 13:25
    factors[Symbol(:f, i)] = [-7., -5., -3., -1., 1., 3., 5., 7.]
end

for i = 26:38
    factors[Symbol(:f, i)] = [-1., 0., 1.]
end

println(factors)

comparison = get_max_samples(factors, 16000, false)
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 0 entries







DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f14=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f15=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f16=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f17=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f18=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f19=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f20=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f21=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f22=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f23=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f24=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f25=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f26=>[-1.0, 0.0, 1.0],:f27=>[-1.0, 0.0, 1.0],:f28=>[-1.0, 0.0, 1.0],:f29=>[-1.0, 0.0, 1.0],:f30=>[-1.0, 0.0, 1.0],:f31=>[-1.0, 0.0, 1.0],:f32=>[-1.0, 0.0, 1.0],:f33=>[-1.0, 0.0, 1.0],:f34=>[-1.0, 0.0, 1.0],:f35=>[-1.0, 0.0, 1.0],:f36=>[-1.0, 0.0, 1.0],:f37=>[-1.0, 0.0, 1.0],:f38=>[-1.0, 0.0, 1.0])

 Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f14=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f15=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f16=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f17=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f18=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f19=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f20=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f21=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f22=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f23=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f24=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f25=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f26=>[-1.0, 0.0, 1.0],:f27=>[-1.0, 0.0, 1.0],:f28=>[-1.0, 0.0, 1.0],:f29=>[-1.0, 0.0, 1.0],:f30=>[-1.0, 0.0, 1.0],:f31=>[-1.0, 0.0, 1.0],:f32=>[-1.0, 0.0, 1.0],:f33=>[-1.0, 0.0, 1.0],:f34=>[-1.0, 0.0, 1.0],:f35=>[-1.0, 0.0, 1.0],:f36=>[-1.0, 0.0, 1.0],:f37=>[-1.0, 0.0, 1.0],:f38=>[-1.0, 0.0, 1.0])
Full Factorial Size: -9223372036854775808
Total Subsets: 0.0
Range of Design Sizes: 39:39
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 37.005733716 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f14=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f15=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f16=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f17=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f18=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f19=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f20=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f21=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f22=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f23=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f24=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f25=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f26=>[-1.0, 0.0, 1.0],:f27=>[-1.0, 0.0, 1.0],:f28=>[-1.0, 0.0, 1.0],:f29=>[-1.0, 0.0, 1.0],:f30=>[-1.0, 0.0, 1.0],:f31=>[-1.0, 0.0, 1.0],:f32=>[-1.0, 0.0, 1.0],:f33=>[-1.0, 0.0, 1.0],:f34=>[-1.0, 0.0, 1.0],:f35=>[-1.0, 0.0, 1.0],:f36=>[-1.0, 0.0, 1.0],:f37=>[-1.0, 0.0, 1.0],:f38=>[-1.0, 0.0, 1.0])
Full Factorial Size: -9223372036854775808
Total Subsets: 0.0
Range of Design Sizes: 40:40
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 44.203143155 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f14=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f15=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f16=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f17=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f18=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f19=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f20=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f21=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f22=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f23=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f24=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f25=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f26=>[-1.0, 0.0, 1.0],:f27=>[-1.0, 0.0, 1.0],:f28=>[-1.0, 0.0, 1.0],:f29=>[-1.0, 0.0, 1.0],:f30=>[-1.0, 0.0, 1.0],:f31=>[-1.0, 0.0, 1.0],:f32=>[-1.0, 0.0, 1.0],:f33=>[-1.0, 0.0, 1.0],:f34=>[-1.0, 0.0, 1.0],:f35=>[-1.0, 0.0, 1.0],:f36=>[-1.0, 0.0, 1.0],:f37=>[-1.0, 0.0, 1.0],:f38=>[-1.0, 0.0, 1.0])
Full Factorial Size: -9223372036854775808
Total Subsets: 0.0
Range of Design Sizes: 41:41
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 46.337401917 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f14=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f15=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f16=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f17=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f18=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f19=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f20=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f21=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f22=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f23=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f24=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f25=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f26=>[-1.0, 0.0, 1.0],:f27=>[-1.0, 0.0, 1.0],:f28=>[-1.0, 0.0, 1.0],:f29=>[-1.0, 0.0, 1.0],:f30=>[-1.0, 0.0, 1.0],:f31=>[-1.0, 0.0, 1.0],:f32=>[-1.0, 0.0, 1.0],:f33=>[-1.0, 0.0, 1.0],:f34=>[-1.0, 0.0, 1.0],:f35=>[-1.0, 0.0, 1.0],:f36=>[-1.0, 0.0, 1.0],:f37=>[-1.0, 0.0, 1.0],:f38=>[-1.0, 0.0, 1.0])
Full Factorial Size: -9223372036854775808
Total Subsets: 0.0
Range of Design Sizes: 42:42
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 47.751510035 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f14=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f15=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f16=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f17=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f18=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f19=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f20=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f21=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f22=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f23=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f24=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f25=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f26=>[-1.0, 0.0, 1.0],:f27=>[-1.0, 0.0, 1.0],:f28=>[-1.0, 0.0, 1.0],:f29=>[-1.0, 0.0, 1.0],:f30=>[-1.0, 0.0, 1.0],:f31=>[-1.0, 0.0, 1.0],:f32=>[-1.0, 0.0, 1.0],:f33=>[-1.0, 0.0, 1.0],:f34=>[-1.0, 0.0, 1.0],:f35=>[-1.0, 0.0, 1.0],:f36=>[-1.0, 0.0, 1.0],:f37=>[-1.0, 0.0, 1.0],:f38=>[-1.0, 0.0, 1.0])
Full Factorial Size: -9223372036854775808
Total Subsets: 0.0
Range of Design Sizes: 43:43
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 45.447193732 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f14=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f15=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f16=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f17=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f18=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f19=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f20=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f21=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f22=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f23=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f24=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f25=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f26=>[-1.0, 0.0, 1.0],:f27=>[-1.0, 0.0, 1.0],:f28=>[-1.0, 0.0, 1.0],:f29=>[-1.0, 0.0, 1.0],:f30=>[-1.0, 0.0, 1.0],:f31=>[-1.0, 0.0, 1.0],:f32=>[-1.0, 0.0, 1.0],:f33=>[-1.0, 0.0, 1.0],:f34=>[-1.0, 0.0, 1.0],:f35=>[-1.0, 0.0, 1.0],:f36=>[-1.0, 0.0, 1.0],:f37=>[-1.0, 0.0, 1.0],:f38=>[-1.0, 0.0, 1.0])
Full Factorial Size: -9223372036854775808
Total Subsets: 0.0
Range of Design Sizes: 44:44
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 45.690709198 seconds
SampleComparison(false, false, UnitRange{Int64}[39:39, 40:40, 41:41, 42:42, 43:43, 44:44], Any[0.462577, 0.479875, 0.512196, 0.529278, 0.542623, 0.560132], false, false)
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_max_samples(comparison, title = string("D-Efficiency and Experiments",
                                            " for 12 4-Level,",
                                            " 12 8-Level and",
                                            " 12 3-Level Factors"))
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.

***** Plotting 30 4-Level, 30 8-Level, 30 3-Level                :ATTACH:
:PROPERTIES:
:Attachments: juliaMisZRt.html
:ID:       8fc6de72-185e-4788-96fd-fa7005855019
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Float64, 1}}()

for i = 1:30
    factors[Symbol(:f, i)] = [-3., -1., 1., 3.]
end

for i = 31:61
    factors[Symbol(:f, i)] = [-7., -5., -3., -1., 1., 3., 5., 7.]
end

for i = 62:92
    factors[Symbol(:f, i)] = [-1., 0., 1.]
end

println(factors)

comparison = get_max_samples(factors, 16000, false)
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 0 entries







DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-3.0, -1.0, 1.0, 3.0],:f14=>[-3.0, -1.0, 1.0, 3.0],:f15=>[-3.0, -1.0, 1.0, 3.0],:f16=>[-3.0, -1.0, 1.0, 3.0],:f17=>[-3.0, -1.0, 1.0, 3.0],:f18=>[-3.0, -1.0, 1.0, 3.0],:f19=>[-3.0, -1.0, 1.0, 3.0],:f20=>[-3.0, -1.0, 1.0, 3.0],:f21=>[-3.0, -1.0, 1.0, 3.0],:f22=>[-3.0, -1.0, 1.0, 3.0],:f23=>[-3.0, -1.0, 1.0, 3.0],:f24=>[-3.0, -1.0, 1.0, 3.0],:f25=>[-3.0, -1.0, 1.0, 3.0],:f26=>[-3.0, -1.0, 1.0, 3.0],:f27=>[-3.0, -1.0, 1.0, 3.0],:f28=>[-3.0, -1.0, 1.0, 3.0],:f29=>[-3.0, -1.0, 1.0, 3.0],:f30=>[-3.0, -1.0, 1.0, 3.0],:f31=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f32=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f33=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f34=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f35=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f36=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f37=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f38=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f39=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f40=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f41=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f42=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f43=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f44=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f45=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f46=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f47=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f48=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f49=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f50=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f51=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f52=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f53=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f54=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f55=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f56=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f57=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f58=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f59=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f60=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f61=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f62=>[-1.0, 0.0, 1.0],:f63=>[-1.0, 0.0, 1.0],:f64=>[-1.0, 0.0, 1.0],:f65=>[-1.0, 0.0, 1.0],:f66=>[-1.0, 0.0, 1.0],:f67=>[-1.0, 0.0, 1.0],:f68=>[-1.0, 0.0, 1.0],:f69=>[-1.0, 0.0, 1.0],:f70=>[-1.0, 0.0, 1.0],:f71=>[-1.0, 0.0, 1.0],:f72=>[-1.0, 0.0, 1.0],:f73=>[-1.0, 0.0, 1.0],:f74=>[-1.0, 0.0, 1.0],:f75=>[-1.0, 0.0, 1.0],:f76=>[-1.0, 0.0, 1.0],:f77=>[-1.0, 0.0, 1.0],:f78=>[-1.0, 0.0, 1.0],:f79=>[-1.0, 0.0, 1.0],:f80=>[-1.0, 0.0, 1.0],:f81=>[-1.0, 0.0, 1.0],:f82=>[-1.0, 0.0, 1.0],:f83=>[-1.0, 0.0, 1.0],:f84=>[-1.0, 0.0, 1.0],:f85=>[-1.0, 0.0, 1.0],:f86=>[-1.0, 0.0, 1.0],:f87=>[-1.0, 0.0, 1.0],:f88=>[-1.0, 0.0, 1.0],:f89=>[-1.0, 0.0, 1.0],:f90=>[-1.0, 0.0, 1.0],:f91=>[-1.0, 0.0, 1.0],:f92=>[-1.0, 0.0, 1.0])

 Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-3.0, -1.0, 1.0, 3.0],:f14=>[-3.0, -1.0, 1.0, 3.0],:f15=>[-3.0, -1.0, 1.0, 3.0],:f16=>[-3.0, -1.0, 1.0, 3.0],:f17=>[-3.0, -1.0, 1.0, 3.0],:f18=>[-3.0, -1.0, 1.0, 3.0],:f19=>[-3.0, -1.0, 1.0, 3.0],:f20=>[-3.0, -1.0, 1.0, 3.0],:f21=>[-3.0, -1.0, 1.0, 3.0],:f22=>[-3.0, -1.0, 1.0, 3.0],:f23=>[-3.0, -1.0, 1.0, 3.0],:f24=>[-3.0, -1.0, 1.0, 3.0],:f25=>[-3.0, -1.0, 1.0, 3.0],:f26=>[-3.0, -1.0, 1.0, 3.0],:f27=>[-3.0, -1.0, 1.0, 3.0],:f28=>[-3.0, -1.0, 1.0, 3.0],:f29=>[-3.0, -1.0, 1.0, 3.0],:f30=>[-3.0, -1.0, 1.0, 3.0],:f31=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f32=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f33=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f34=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f35=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f36=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f37=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f38=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f39=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f40=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f41=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f42=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f43=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f44=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f45=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f46=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f47=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f48=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f49=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f50=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f51=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f52=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f53=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f54=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f55=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f56=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f57=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f58=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f59=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f60=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f61=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f62=>[-1.0, 0.0, 1.0],:f63=>[-1.0, 0.0, 1.0],:f64=>[-1.0, 0.0, 1.0],:f65=>[-1.0, 0.0, 1.0],:f66=>[-1.0, 0.0, 1.0],:f67=>[-1.0, 0.0, 1.0],:f68=>[-1.0, 0.0, 1.0],:f69=>[-1.0, 0.0, 1.0],:f70=>[-1.0, 0.0, 1.0],:f71=>[-1.0, 0.0, 1.0],:f72=>[-1.0, 0.0, 1.0],:f73=>[-1.0, 0.0, 1.0],:f74=>[-1.0, 0.0, 1.0],:f75=>[-1.0, 0.0, 1.0],:f76=>[-1.0, 0.0, 1.0],:f77=>[-1.0, 0.0, 1.0],:f78=>[-1.0, 0.0, 1.0],:f79=>[-1.0, 0.0, 1.0],:f80=>[-1.0, 0.0, 1.0],:f81=>[-1.0, 0.0, 1.0],:f82=>[-1.0, 0.0, 1.0],:f83=>[-1.0, 0.0, 1.0],:f84=>[-1.0, 0.0, 1.0],:f85=>[-1.0, 0.0, 1.0],:f86=>[-1.0, 0.0, 1.0],:f87=>[-1.0, 0.0, 1.0],:f88=>[-1.0, 0.0, 1.0],:f89=>[-1.0, 0.0, 1.0],:f90=>[-1.0, 0.0, 1.0],:f91=>[-1.0, 0.0, 1.0],:f92=>[-1.0, 0.0, 1.0])
Full Factorial Size: 0
Total Subsets: 1.0
Range of Design Sizes: 93:93
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 199.894570161 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-3.0, -1.0, 1.0, 3.0],:f14=>[-3.0, -1.0, 1.0, 3.0],:f15=>[-3.0, -1.0, 1.0, 3.0],:f16=>[-3.0, -1.0, 1.0, 3.0],:f17=>[-3.0, -1.0, 1.0, 3.0],:f18=>[-3.0, -1.0, 1.0, 3.0],:f19=>[-3.0, -1.0, 1.0, 3.0],:f20=>[-3.0, -1.0, 1.0, 3.0],:f21=>[-3.0, -1.0, 1.0, 3.0],:f22=>[-3.0, -1.0, 1.0, 3.0],:f23=>[-3.0, -1.0, 1.0, 3.0],:f24=>[-3.0, -1.0, 1.0, 3.0],:f25=>[-3.0, -1.0, 1.0, 3.0],:f26=>[-3.0, -1.0, 1.0, 3.0],:f27=>[-3.0, -1.0, 1.0, 3.0],:f28=>[-3.0, -1.0, 1.0, 3.0],:f29=>[-3.0, -1.0, 1.0, 3.0],:f30=>[-3.0, -1.0, 1.0, 3.0],:f31=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f32=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f33=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f34=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f35=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f36=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f37=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f38=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f39=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f40=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f41=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f42=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f43=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f44=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f45=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f46=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f47=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f48=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f49=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f50=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f51=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f52=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f53=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f54=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f55=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f56=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f57=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f58=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f59=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f60=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f61=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f62=>[-1.0, 0.0, 1.0],:f63=>[-1.0, 0.0, 1.0],:f64=>[-1.0, 0.0, 1.0],:f65=>[-1.0, 0.0, 1.0],:f66=>[-1.0, 0.0, 1.0],:f67=>[-1.0, 0.0, 1.0],:f68=>[-1.0, 0.0, 1.0],:f69=>[-1.0, 0.0, 1.0],:f70=>[-1.0, 0.0, 1.0],:f71=>[-1.0, 0.0, 1.0],:f72=>[-1.0, 0.0, 1.0],:f73=>[-1.0, 0.0, 1.0],:f74=>[-1.0, 0.0, 1.0],:f75=>[-1.0, 0.0, 1.0],:f76=>[-1.0, 0.0, 1.0],:f77=>[-1.0, 0.0, 1.0],:f78=>[-1.0, 0.0, 1.0],:f79=>[-1.0, 0.0, 1.0],:f80=>[-1.0, 0.0, 1.0],:f81=>[-1.0, 0.0, 1.0],:f82=>[-1.0, 0.0, 1.0],:f83=>[-1.0, 0.0, 1.0],:f84=>[-1.0, 0.0, 1.0],:f85=>[-1.0, 0.0, 1.0],:f86=>[-1.0, 0.0, 1.0],:f87=>[-1.0, 0.0, 1.0],:f88=>[-1.0, 0.0, 1.0],:f89=>[-1.0, 0.0, 1.0],:f90=>[-1.0, 0.0, 1.0],:f91=>[-1.0, 0.0, 1.0],:f92=>[-1.0, 0.0, 1.0])
Full Factorial Size: 0
Total Subsets: 1.0
Range of Design Sizes: 94:94
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 217.675115762 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-3.0, -1.0, 1.0, 3.0],:f14=>[-3.0, -1.0, 1.0, 3.0],:f15=>[-3.0, -1.0, 1.0, 3.0],:f16=>[-3.0, -1.0, 1.0, 3.0],:f17=>[-3.0, -1.0, 1.0, 3.0],:f18=>[-3.0, -1.0, 1.0, 3.0],:f19=>[-3.0, -1.0, 1.0, 3.0],:f20=>[-3.0, -1.0, 1.0, 3.0],:f21=>[-3.0, -1.0, 1.0, 3.0],:f22=>[-3.0, -1.0, 1.0, 3.0],:f23=>[-3.0, -1.0, 1.0, 3.0],:f24=>[-3.0, -1.0, 1.0, 3.0],:f25=>[-3.0, -1.0, 1.0, 3.0],:f26=>[-3.0, -1.0, 1.0, 3.0],:f27=>[-3.0, -1.0, 1.0, 3.0],:f28=>[-3.0, -1.0, 1.0, 3.0],:f29=>[-3.0, -1.0, 1.0, 3.0],:f30=>[-3.0, -1.0, 1.0, 3.0],:f31=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f32=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f33=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f34=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f35=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f36=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f37=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f38=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f39=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f40=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f41=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f42=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f43=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f44=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f45=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f46=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f47=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f48=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f49=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f50=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f51=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f52=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f53=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f54=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f55=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f56=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f57=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f58=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f59=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f60=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f61=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f62=>[-1.0, 0.0, 1.0],:f63=>[-1.0, 0.0, 1.0],:f64=>[-1.0, 0.0, 1.0],:f65=>[-1.0, 0.0, 1.0],:f66=>[-1.0, 0.0, 1.0],:f67=>[-1.0, 0.0, 1.0],:f68=>[-1.0, 0.0, 1.0],:f69=>[-1.0, 0.0, 1.0],:f70=>[-1.0, 0.0, 1.0],:f71=>[-1.0, 0.0, 1.0],:f72=>[-1.0, 0.0, 1.0],:f73=>[-1.0, 0.0, 1.0],:f74=>[-1.0, 0.0, 1.0],:f75=>[-1.0, 0.0, 1.0],:f76=>[-1.0, 0.0, 1.0],:f77=>[-1.0, 0.0, 1.0],:f78=>[-1.0, 0.0, 1.0],:f79=>[-1.0, 0.0, 1.0],:f80=>[-1.0, 0.0, 1.0],:f81=>[-1.0, 0.0, 1.0],:f82=>[-1.0, 0.0, 1.0],:f83=>[-1.0, 0.0, 1.0],:f84=>[-1.0, 0.0, 1.0],:f85=>[-1.0, 0.0, 1.0],:f86=>[-1.0, 0.0, 1.0],:f87=>[-1.0, 0.0, 1.0],:f88=>[-1.0, 0.0, 1.0],:f89=>[-1.0, 0.0, 1.0],:f90=>[-1.0, 0.0, 1.0],:f91=>[-1.0, 0.0, 1.0],:f92=>[-1.0, 0.0, 1.0])
Full Factorial Size: 0
Total Subsets: 1.0
Range of Design Sizes: 95:95
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 273.297037336 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-3.0, -1.0, 1.0, 3.0],:f14=>[-3.0, -1.0, 1.0, 3.0],:f15=>[-3.0, -1.0, 1.0, 3.0],:f16=>[-3.0, -1.0, 1.0, 3.0],:f17=>[-3.0, -1.0, 1.0, 3.0],:f18=>[-3.0, -1.0, 1.0, 3.0],:f19=>[-3.0, -1.0, 1.0, 3.0],:f20=>[-3.0, -1.0, 1.0, 3.0],:f21=>[-3.0, -1.0, 1.0, 3.0],:f22=>[-3.0, -1.0, 1.0, 3.0],:f23=>[-3.0, -1.0, 1.0, 3.0],:f24=>[-3.0, -1.0, 1.0, 3.0],:f25=>[-3.0, -1.0, 1.0, 3.0],:f26=>[-3.0, -1.0, 1.0, 3.0],:f27=>[-3.0, -1.0, 1.0, 3.0],:f28=>[-3.0, -1.0, 1.0, 3.0],:f29=>[-3.0, -1.0, 1.0, 3.0],:f30=>[-3.0, -1.0, 1.0, 3.0],:f31=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f32=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f33=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f34=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f35=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f36=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f37=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f38=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f39=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f40=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f41=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f42=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f43=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f44=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f45=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f46=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f47=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f48=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f49=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f50=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f51=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f52=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f53=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f54=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f55=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f56=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f57=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f58=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f59=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f60=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f61=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f62=>[-1.0, 0.0, 1.0],:f63=>[-1.0, 0.0, 1.0],:f64=>[-1.0, 0.0, 1.0],:f65=>[-1.0, 0.0, 1.0],:f66=>[-1.0, 0.0, 1.0],:f67=>[-1.0, 0.0, 1.0],:f68=>[-1.0, 0.0, 1.0],:f69=>[-1.0, 0.0, 1.0],:f70=>[-1.0, 0.0, 1.0],:f71=>[-1.0, 0.0, 1.0],:f72=>[-1.0, 0.0, 1.0],:f73=>[-1.0, 0.0, 1.0],:f74=>[-1.0, 0.0, 1.0],:f75=>[-1.0, 0.0, 1.0],:f76=>[-1.0, 0.0, 1.0],:f77=>[-1.0, 0.0, 1.0],:f78=>[-1.0, 0.0, 1.0],:f79=>[-1.0, 0.0, 1.0],:f80=>[-1.0, 0.0, 1.0],:f81=>[-1.0, 0.0, 1.0],:f82=>[-1.0, 0.0, 1.0],:f83=>[-1.0, 0.0, 1.0],:f84=>[-1.0, 0.0, 1.0],:f85=>[-1.0, 0.0, 1.0],:f86=>[-1.0, 0.0, 1.0],:f87=>[-1.0, 0.0, 1.0],:f88=>[-1.0, 0.0, 1.0],:f89=>[-1.0, 0.0, 1.0],:f90=>[-1.0, 0.0, 1.0],:f91=>[-1.0, 0.0, 1.0],:f92=>[-1.0, 0.0, 1.0])
Full Factorial Size: 0
Total Subsets: 1.0
Range of Design Sizes: 96:96
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 236.204031963 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-3.0, -1.0, 1.0, 3.0],:f14=>[-3.0, -1.0, 1.0, 3.0],:f15=>[-3.0, -1.0, 1.0, 3.0],:f16=>[-3.0, -1.0, 1.0, 3.0],:f17=>[-3.0, -1.0, 1.0, 3.0],:f18=>[-3.0, -1.0, 1.0, 3.0],:f19=>[-3.0, -1.0, 1.0, 3.0],:f20=>[-3.0, -1.0, 1.0, 3.0],:f21=>[-3.0, -1.0, 1.0, 3.0],:f22=>[-3.0, -1.0, 1.0, 3.0],:f23=>[-3.0, -1.0, 1.0, 3.0],:f24=>[-3.0, -1.0, 1.0, 3.0],:f25=>[-3.0, -1.0, 1.0, 3.0],:f26=>[-3.0, -1.0, 1.0, 3.0],:f27=>[-3.0, -1.0, 1.0, 3.0],:f28=>[-3.0, -1.0, 1.0, 3.0],:f29=>[-3.0, -1.0, 1.0, 3.0],:f30=>[-3.0, -1.0, 1.0, 3.0],:f31=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f32=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f33=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f34=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f35=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f36=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f37=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f38=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f39=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f40=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f41=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f42=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f43=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f44=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f45=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f46=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f47=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f48=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f49=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f50=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f51=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f52=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f53=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f54=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f55=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f56=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f57=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f58=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f59=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f60=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f61=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f62=>[-1.0, 0.0, 1.0],:f63=>[-1.0, 0.0, 1.0],:f64=>[-1.0, 0.0, 1.0],:f65=>[-1.0, 0.0, 1.0],:f66=>[-1.0, 0.0, 1.0],:f67=>[-1.0, 0.0, 1.0],:f68=>[-1.0, 0.0, 1.0],:f69=>[-1.0, 0.0, 1.0],:f70=>[-1.0, 0.0, 1.0],:f71=>[-1.0, 0.0, 1.0],:f72=>[-1.0, 0.0, 1.0],:f73=>[-1.0, 0.0, 1.0],:f74=>[-1.0, 0.0, 1.0],:f75=>[-1.0, 0.0, 1.0],:f76=>[-1.0, 0.0, 1.0],:f77=>[-1.0, 0.0, 1.0],:f78=>[-1.0, 0.0, 1.0],:f79=>[-1.0, 0.0, 1.0],:f80=>[-1.0, 0.0, 1.0],:f81=>[-1.0, 0.0, 1.0],:f82=>[-1.0, 0.0, 1.0],:f83=>[-1.0, 0.0, 1.0],:f84=>[-1.0, 0.0, 1.0],:f85=>[-1.0, 0.0, 1.0],:f86=>[-1.0, 0.0, 1.0],:f87=>[-1.0, 0.0, 1.0],:f88=>[-1.0, 0.0, 1.0],:f89=>[-1.0, 0.0, 1.0],:f90=>[-1.0, 0.0, 1.0],:f91=>[-1.0, 0.0, 1.0],:f92=>[-1.0, 0.0, 1.0])
Full Factorial Size: 0
Total Subsets: 1.0
Range of Design Sizes: 97:97
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 206.879922424 seconds
Factors: DataStructures.OrderedDict(:f1=>[-3.0, -1.0, 1.0, 3.0],:f2=>[-3.0, -1.0, 1.0, 3.0],:f3=>[-3.0, -1.0, 1.0, 3.0],:f4=>[-3.0, -1.0, 1.0, 3.0],:f5=>[-3.0, -1.0, 1.0, 3.0],:f6=>[-3.0, -1.0, 1.0, 3.0],:f7=>[-3.0, -1.0, 1.0, 3.0],:f8=>[-3.0, -1.0, 1.0, 3.0],:f9=>[-3.0, -1.0, 1.0, 3.0],:f10=>[-3.0, -1.0, 1.0, 3.0],:f11=>[-3.0, -1.0, 1.0, 3.0],:f12=>[-3.0, -1.0, 1.0, 3.0],:f13=>[-3.0, -1.0, 1.0, 3.0],:f14=>[-3.0, -1.0, 1.0, 3.0],:f15=>[-3.0, -1.0, 1.0, 3.0],:f16=>[-3.0, -1.0, 1.0, 3.0],:f17=>[-3.0, -1.0, 1.0, 3.0],:f18=>[-3.0, -1.0, 1.0, 3.0],:f19=>[-3.0, -1.0, 1.0, 3.0],:f20=>[-3.0, -1.0, 1.0, 3.0],:f21=>[-3.0, -1.0, 1.0, 3.0],:f22=>[-3.0, -1.0, 1.0, 3.0],:f23=>[-3.0, -1.0, 1.0, 3.0],:f24=>[-3.0, -1.0, 1.0, 3.0],:f25=>[-3.0, -1.0, 1.0, 3.0],:f26=>[-3.0, -1.0, 1.0, 3.0],:f27=>[-3.0, -1.0, 1.0, 3.0],:f28=>[-3.0, -1.0, 1.0, 3.0],:f29=>[-3.0, -1.0, 1.0, 3.0],:f30=>[-3.0, -1.0, 1.0, 3.0],:f31=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f32=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f33=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f34=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f35=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f36=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f37=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f38=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f39=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f40=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f41=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f42=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f43=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f44=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f45=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f46=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f47=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f48=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f49=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f50=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f51=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f52=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f53=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f54=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f55=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f56=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f57=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f58=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f59=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f60=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f61=>[-7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0],:f62=>[-1.0, 0.0, 1.0],:f63=>[-1.0, 0.0, 1.0],:f64=>[-1.0, 0.0, 1.0],:f65=>[-1.0, 0.0, 1.0],:f66=>[-1.0, 0.0, 1.0],:f67=>[-1.0, 0.0, 1.0],:f68=>[-1.0, 0.0, 1.0],:f69=>[-1.0, 0.0, 1.0],:f70=>[-1.0, 0.0, 1.0],:f71=>[-1.0, 0.0, 1.0],:f72=>[-1.0, 0.0, 1.0],:f73=>[-1.0, 0.0, 1.0],:f74=>[-1.0, 0.0, 1.0],:f75=>[-1.0, 0.0, 1.0],:f76=>[-1.0, 0.0, 1.0],:f77=>[-1.0, 0.0, 1.0],:f78=>[-1.0, 0.0, 1.0],:f79=>[-1.0, 0.0, 1.0],:f80=>[-1.0, 0.0, 1.0],:f81=>[-1.0, 0.0, 1.0],:f82=>[-1.0, 0.0, 1.0],:f83=>[-1.0, 0.0, 1.0],:f84=>[-1.0, 0.0, 1.0],:f85=>[-1.0, 0.0, 1.0],:f86=>[-1.0, 0.0, 1.0],:f87=>[-1.0, 0.0, 1.0],:f88=>[-1.0, 0.0, 1.0],:f89=>[-1.0, 0.0, 1.0],:f90=>[-1.0, 0.0, 1.0],:f91=>[-1.0, 0.0, 1.0],:f92=>[-1.0, 0.0, 1.0])
Full Factorial Size: 0
Total Subsets: 1.0
Range of Design Sizes: 98:98
Number of Designs to Sample: 16000
WARNING: Skipping bounds check!
Elapsed Time: 217.453677873 seconds
SampleComparison(false, false, UnitRange{Int64}[93:93, 94:94, 95:95, 96:96, 97:97, 98:98], Any[0.405744, 0.424798, 0.435124, 0.447934, 0.454053, 0.464837], false, false)
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_max_samples(comparison, title = string("D-Efficiency and Experiments",
                                            " for 30 4-Level,",
                                            " 30 8-Level and",
                                            " 30 3-Level Factors"))
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.

*** [2018-03-29 Thu]
**** Implement Real Factors and Tweak Plots
I implemeted real factors in my design sampling code and I am now
able to generate plots for mixed and multi-level "true" factors.

I also fixed limits of my plotting script and normalized the
histograms.
*** [2018-03-30 Fri]
**** Using Smaller Candidate Sets for ~optFederov~
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using RCall, ExperimentalDesign, DataStructures, DataFrames

function opt_federov(design, experiments)
    r_output = R"""
    library(AlgDesign)
    federov <- optFederov(~., $design, criterion = "D", nTrials = $experiments)
    """
end

factors = OrderedDict{Symbol, Array{Float64, 1}}([(Symbol(:f, j), [1., 2.]) for j = 1:19])

design = full_factorial_subset(collect(values(factors)), 3200)

opt_federov(DataFrame(Array{Float64, 2}(design)))

#+END_SRC

#+RESULTS:
#+begin_example


opt_federov (generic function with 1 method)

DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 19 entries:
  :f1  => [1.0, 2.0]
  :f2  => [1.0, 2.0]
  :f3  => [1.0, 2.0]
  :f4  => [1.0, 2.0]
  :f5  => [1.0, 2.0]
  :f6  => [1.0, 2.0]
  :f7  => [1.0, 2.0]
  :f8  => [1.0, 2.0]
  :f9  => [1.0, 2.0]
  :f10 => [1.0, 2.0]
  :f11 => [1.0, 2.0]
  :f12 => [1.0, 2.0]
  :f13 => [1.0, 2.0]
  :f14 => [1.0, 2.0]
  :f15 => [1.0, 2.0]
  :f16 => [1.0, 2.0]
  :f17 => [1.0, 2.0]
  :f18 => [1.0, 2.0]
  :f19 => [1.0, 2.0]

3200×19 Array{Any,2}:
 1.0  2.0  2.0  2.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  1.0  1.0
 1.0  1.0  1.0  2.0  2.0  2.0  2.0  2.0  1.0  1.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0
 1.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  1.0  1.0
 2.0  2.0  2.0  1.0  1.0  2.0  2.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0
 2.0  1.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0  1.0  1.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0
 2.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0  2.0  2.0  2.0  2.0
 2.0  2.0  2.0  2.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  2.0  1.0  2.0  1.0  1.0  1.0  2.0
 2.0  1.0  1.0  2.0  1.0  1.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  2.0
 2.0  1.0  2.0  2.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0  1.0  2.0  1.0  1.0  2.0  2.0  1.0
 1.0  2.0  2.0  1.0  1.0  2.0  1.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0
 1.0  2.0  2.0  2.0  2.0  2.0  1.0  1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0
 1.0  2.0  1.0  1.0  2.0  2.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0  2.0  2.0  2.0
 2.0  1.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  1.0  2.0  2.0  2.0  2.0
 1.0  1.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  2.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0  1.0
 2.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  1.0  1.0  1.0
 1.0  1.0  1.0  1.0  2.0  2.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0  2.0  2.0  2.0  1.0  2.0
 1.0  2.0  1.0  1.0  1.0  1.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  2.0  2.0  1.0  2.0
 1.0  2.0  1.0  1.0  1.0  1.0  2.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  1.0  1.0  2.0  1.0  2.0
 2.0  1.0  1.0  1.0  1.0  2.0  2.0  1.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0
 1.0  2.0  2.0  2.0  2.0  1.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0  2.0
 1.0  2.0  2.0  1.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  2.0  1.0  1.0  1.0  2.0  2.0
 2.0  2.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  1.0  2.0  2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0
 2.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0  1.0  1.0  1.0  1.0
 2.0  2.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  1.0  1.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0  1.0
 1.0  2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0  1.0  2.0
 1.0  2.0  2.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0  1.0  2.0  1.0
 1.0  2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0  1.0  1.0  1.0  2.0  2.0
 1.0  1.0  2.0  2.0  1.0  1.0  1.0  2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0  1.0  2.0  2.0  1.0
 2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0
 ⋮                        ⋮                        ⋮                        ⋮                 
 2.0  1.0  1.0  2.0  1.0  2.0  1.0  2.0  2.0  2.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0
 1.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0  2.0  1.0  2.0  2.0
 1.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  1.0  1.0  1.0  1.0  1.0
 2.0  2.0  2.0  2.0  2.0  1.0  1.0  2.0  2.0  1.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  1.0  1.0
 2.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0  2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0
 1.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0
 2.0  2.0  1.0  1.0  1.0  2.0  1.0  1.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0
 2.0  1.0  1.0  1.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0  1.0  1.0  1.0
 1.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  2.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0
 1.0  2.0  1.0  1.0  1.0  1.0  1.0  2.0  2.0  2.0  2.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0
 2.0  1.0  1.0  1.0  2.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0
 2.0  2.0  1.0  1.0  1.0  2.0  2.0  1.0  1.0  2.0  2.0  1.0  2.0  1.0  1.0  1.0  2.0  1.0  2.0
 1.0  1.0  2.0  1.0  2.0  1.0  2.0  1.0  1.0  1.0  2.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0  2.0
 1.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  2.0  2.0
 2.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0  2.0
 1.0  2.0  1.0  2.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0  1.0  1.0  2.0
 2.0  2.0  1.0  2.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0  2.0  1.0  1.0  1.0  1.0  1.0  2.0  2.0
 1.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  1.0  1.0  2.0  2.0  1.0  1.0
 1.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0
 2.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  1.0  1.0  2.0  2.0  1.0  2.0  2.0
 1.0  2.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  1.0
 1.0  2.0  1.0  1.0  1.0  2.0  1.0  2.0  2.0  1.0  1.0  1.0  1.0  2.0  2.0  2.0  2.0  2.0  1.0
 1.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0  2.0  2.0
 1.0  2.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  2.0  1.0  2.0  1.0
 1.0  1.0  2.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  1.0  1.0  2.0  2.0  1.0  2.0  2.0  2.0  1.0
 2.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  2.0  1.0  2.0  1.0  1.0  2.0  1.0
 1.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  1.0  1.0  1.0  2.0  2.0  2.0  2.0  1.0  2.0  1.0  1.0
 2.0  2.0  2.0  1.0  1.0  2.0  1.0  1.0  2.0  2.0  2.0  2.0  1.0  1.0  2.0  2.0  2.0  2.0  2.0
 1.0  1.0  2.0  1.0  2.0  2.0  2.0  1.0  2.0  1.0  2.0  1.0  1.0  2.0  1.0  1.0  1.0  2.0  1.0

RCall.RObject{RCall.VecSxp}
$D
[1] 0.2275095

$A
[1] 15.51855

$Ge
[1] 0.333

$Dea
[1] 0.135

$design
     x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19
221   1  2  1  1  2  1  1  1  2   1   2   1   1   1   1   1   1   1   1
230   2  1  2  2  1  1  1  2  2   1   1   1   1   1   1   1   2   1   1
293   1  2  2  2  1  2  2  1  2   1   2   1   1   2   2   1   1   2   1
624   1  1  2  1  2  2  1  2  1   1   1   2   1   1   2   2   1   1   1
658   2  2  2  2  2  2  2  1  1   1   1   1   2   1   1   1   1   2   1
668   2  2  1  2  1  2  1  2  1   2   1   2   1   2   1   1   2   2   1
716   1  2  1  2  1  2  1  1  2   2   1   1   2   2   2   2   1   1   1
802   2  1  1  2  1  1  1  1  1   2   2   1   1   1   2   1   1   2   1
1033  2  1  1  1  2  1  2  2  1   1   1   1   2   2   2   1   2   2   1
1149  2  2  1  2  2  2  2  2  2   1   2   2   1   1   2   2   2   1   1
1392  2  2  2  1  1  2  1  1  2   1   1   2   2   1   2   2   2   2   2
1572  1  1  2  2  2  1  2  1  1   2   1   2   1   1   2   1   2   1   2
1803  1  2  1  2  1  1  2  2  1   1   1   1   1   1   1   2   1   2   2
1944  1  1  1  1  1  2  2  1  1   1   2   2   1   1   1   1   2   1   1
2188  1  1  2  1  1  1  2  2  2   2   1   2   2   1   1   2   1   2   1
2413  1  1  2  2  2  1  1  1  1   2   2   1   2   2   1   2   2   2   1
2421  2  1  1  2  1  1  1  1  1   1   2   2   2   2   1   1   1   1   2
2457  2  2  2  1  1  2  2  2  1   2   2   1   2   2   1   1   2   1   2
2764  2  1  1  1  2  2  2  1  2   2   1   1   1   2   1   2   1   2   2
2929  1  1  1  2  2  2  1  2  2   1   2   1   2   1   1   1   2   2   2

$rows
 [1]  221  230  293  624  658  668  716  802 1033 1149 1392 1572 1803 1944 2188
[16] 2413 2421 2457 2764 2929
#+end_example
** April
*** [2018-04-03 Tue]
**** Using ~StatsModels~ Contrast Coding
Let's create a placeholder dataframe with mixed-level true factors. We have two
numerical factors and two true factors, one with two levels and one with five
levels. Note that we add a dummy response ~y~ so we can build the model matrix
later.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using StatsModels, DataFrames

data = DataFrame(x1 = [1, 4, 2, 4, 5], x3 = [true, false, false, true, true],
                 x2 = ["A", "A", "B", "A", "B"], x4 = [1.2, 1.4, 1.3, 1.1, 1.0],
                 y = [1.0, 1.0, 1.0, 1.0, 1.0])

factors = Dict(:x1 => [1, 5], :x3 => [true, false],
               :x2 => ["A", "C", "B", "E", "F"], :x4 => [1.0, 1.4])
#+END_SRC

#+RESULTS:
#+begin_example


5×5 DataFrames.DataFrame
│ Row │ x1 │ x3    │ x2 │ x4  │ y   │
├─────┼────┼───────┼────┼─────┼─────┤
│ 1   │ 1  │ true  │ A  │ 1.2 │ 1.0 │
│ 2   │ 4  │ false │ A  │ 1.4 │ 1.0 │
│ 3   │ 2  │ false │ B  │ 1.3 │ 1.0 │
│ 4   │ 4  │ true  │ A  │ 1.1 │ 1.0 │
│ 5   │ 5  │ true  │ B  │ 1.0 │ 1.0 │

Dict{Symbol,Any} with 4 entries:
  :x2 => String["A", "C", "B", "E", "F"]
  :x3 => Bool[true, false]
  :x4 => [1.0, 1.4]
  :x1 => [1, 5]
#+end_example

Now let's compute the contrast matrices for these factors. This will enable us
to generate the model matrix using a general formula. We create a dictionary
containing the levels of each factor. We pass this dictionary to ~ModelFrame~ as
the ~contrasts~ keyword parameter. We also give a formula that uses all
variables in the model. There seems to be no way currently of specifying all
terms at once, using something like R's dot syntax. I will use the function I
already implemented for this.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
contrasts = Dict([(f, StatsModels.ContrastsMatrix(DummyCoding(), factors[f])) for f in keys(factors)])

model = ModelFrame(@formula(y ~ 1 + x1 + x2 + x3 + x4), data, contrasts = contrasts)
#+END_SRC

#+RESULTS:
#+begin_example
Dict{Symbol,StatsModels.ContrastsMatrix{StatsModels.DummyCoding,_} where _} with 4 entries:
  :x2 => StatsModels.ContrastsMatrix{StatsModels.DummyCoding,String}([0.0 0.0 0.0 0.0; 1.0 0.0 0.0 0.0;…
  :x3 => StatsModels.ContrastsMatrix{StatsModels.DummyCoding,Bool}([0.0; 1.0], Bool[false], Bool[true, …
  :x4 => StatsModels.ContrastsMatrix{StatsModels.DummyCoding,Float64}([0.0; 1.0], [1.4], [1.0, 1.4], St…
  :x1 => StatsModels.ContrastsMatrix{StatsModels.DummyCoding,Int64}([0.0; 1.0], [5], [1, 5], StatsModel…

StatsModels.ModelFrame(5×5 DataFrames.DataFrame
│ Row │ y   │ x1 │ x2 │ x3    │ x4  │
├─────┼─────┼────┼────┼───────┼─────┤
│ 1   │ 1.0 │ 1  │ A  │ true  │ 1.2 │
│ 2   │ 1.0 │ 4  │ A  │ false │ 1.4 │
│ 3   │ 1.0 │ 2  │ B  │ false │ 1.3 │
│ 4   │ 1.0 │ 4  │ A  │ true  │ 1.1 │
│ 5   │ 1.0 │ 5  │ B  │ true  │ 1.0 │, StatsModels.Terms(Any[:x1, :x2, :x3, :x4], Symbol[:y, :x1, :x2, :x3, :x4], Bool[true false … false false; false true … false false; … ; false false … true false; false false … false true], Bool[false false … false false; false false … false false; … ; false false … false false; false false … false false], [1, 1, 1, 1, 1], true, true), Bool[true, true, true, true, true], Dict{Symbol,StatsModels.ContrastsMatrix}(Pair{Symbol,StatsModels.ContrastsMatrix}(:x2, StatsModels.ContrastsMatrix{StatsModels.DummyCoding,String}([0.0 0.0 0.0 0.0; 1.0 0.0 0.0 0.0; … ; 0.0 0.0 1.0 0.0; 0.0 0.0 0.0 1.0], String["C", "B", "E", "F"], String["A", "C", "B", "E", "F"], StatsModels.DummyCoding(#NULL, #NULL)))))
#+end_example

Currently we can access the original dataframe, the formula terms and the
contrasts like so:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model.df

model.terms.terms

model.contrasts

keys(model.contrasts)
#+END_SRC

#+RESULTS:
#+begin_example
5×5 DataFrames.DataFrame
│ Row │ y   │ x1 │ x2 │ x3    │ x4  │
├─────┼─────┼────┼────┼───────┼─────┤
│ 1   │ 1.0 │ 1  │ A  │ true  │ 1.2 │
│ 2   │ 1.0 │ 4  │ A  │ false │ 1.4 │
│ 3   │ 1.0 │ 2  │ B  │ false │ 1.3 │
│ 4   │ 1.0 │ 4  │ A  │ true  │ 1.1 │
│ 5   │ 1.0 │ 5  │ B  │ true  │ 1.0 │

4-element Array{Any,1}:
 :x1
 :x2
 :x3
 :x4

Dict{Symbol,StatsModels.ContrastsMatrix} with 1 entry:
  :x2 => StatsModels.ContrastsMatrix{StatsModels.DummyCoding,String}([0.0 0.0 0.0 0.0; 1.0 0.0 0.0 0.0;…

Base.KeyIterator for a Dict{Symbol,StatsModels.ContrastsMatrix} with 1 entry. Keys:
  :x2
#+end_example

Now let's create the model matrix. This will use the contrasts and the original
data to create the coded matrix mixing true and numerical factors. Note that the
intercept is automatically added even if we do not pass it in the generating
formula.

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model_matrix = ModelMatrix(model)
#+END_SRC

#+RESULTS:
: StatsModels.ModelMatrix{Array{Float64,2}}([1.0 1.0 … 1.0 1.2; 1.0 4.0 … 0.0 1.4; … ; 1.0 4.0 … 1.0 1.1; 1.0 5.0 … 1.0 1.0], [0, 1, 2, 2, 2, 2, 3, 4])

We can get the matrix and the column-factor correspondance like so:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model_matrix.m
model_matrix.assign
#+END_SRC

#+RESULTS:
#+begin_example
5×8 Array{Float64,2}:
 1.0  1.0  0.0  0.0  0.0  0.0  1.0  1.2
 1.0  4.0  0.0  0.0  0.0  0.0  0.0  1.4
 1.0  2.0  0.0  1.0  0.0  0.0  0.0  1.3
 1.0  4.0  0.0  0.0  0.0  0.0  1.0  1.1
 1.0  5.0  0.0  1.0  0.0  0.0  1.0  1.0
8-element Array{Int64,1}:
 0
 1
 2
 2
 2
 2
 3
 4
#+end_example
**** Comparing Mixed-Level Factor Designs (True Factors)
***** Setup
#+CALL: setup_design_comparison()

#+RESULTS:
#+begin_example




get_max_samples (generic function with 3 methods)

compare_sample_pb (generic function with 3 methods)

compare_sample_pb_federov (generic function with 3 methods)

compare_sample_federov (generic function with 6 methods)

compare_sample_federov (generic function with 6 methods)

plot_pb_comparison (generic function with 1 method)

plot_federov_comparison (generic function with 1 method)

plot_max_samples (generic function with 1 method)
#+end_example
***** Comparing to ~optFederov~ Designs (3 2-Level, 3 3-Level) :ATTACH:
:PROPERTIES:
:Attachments: julialDtv7m.html
:ID:       3575db65-e0fc-4c5d-a9bc-715ff4626de7
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Any, 1}}()

for i = 1:3
    factors[Symbol(:f, i)] = ["1", "2", "3"]
end

for i = 4:6
    factors[Symbol(:f, i)] = ["1", "2"]
end

comparison = compare_sample_federov(factors, 8000, false, true_factors = [1, 2, 3, 4, 5, 6])
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Any,1}} with 0 entries





Computed optFederov for nTrials 7
DELB = 0.0
optFederov_D = 0.23723646746276492
optFederov_DELB = 0.624
Computed optFederov for nTrials 8
DELB = 0.0
optFederov_D = 0.23723646746276492
optFederov_DELB = 0.624
Computed optFederov for nTrials 9
DELB = 0.0
optFederov_D = 0.23723646746276492
optFederov_DELB = 0.624
Computed optFederov for nTrials 10
DELB = 0.22901720489235822
optFederov_D = 0.22901720489235827
optFederov_DELB = 0.46
Computed optFederov for nTrials 11
DELB = 0.2318953637501438
optFederov_D = 0.23189536375014383
optFederov_DELB = 0.301
Computed optFederov for nTrials 12
DELB = 0.23267943616212597
optFederov_D = 0.23267943616212605
optFederov_DELB = 0.607
Computed optFederov for nTrials 13
DELB = 0.23479581885220582
optFederov_D = 0.23479581885220593
optFederov_DELB = 0.638
Computed optFederov for nTrials 14
DELB = 0.23607532110640508
optFederov_D = 0.23607532110640503
optFederov_DELB = 0.738
Computed optFederov for nTrials 15
DELB = 0.2368134492829403
optFederov_D = 0.23681344928294015
optFederov_DELB = 0.676
Computed optFederov for nTrials 16
DELB = 0.23810859782230617
optFederov_D = 0.23810859782230615
optFederov_DELB = 0.594
Computed optFederov for nTrials 17
DELB = 0.23963946575998457
optFederov_D = 0.2396394657599845
optFederov_DELB = 0.471
Computed optFederov for nTrials 18
DELB = 0.24294504188964602
optFederov_D = 0.242945041889646
optFederov_DELB = 0.763
Computed optFederov for nTrials 19
DELB = 0.24242969241095985
optFederov_D = 0.24242969241095977
optFederov_DELB = 0.919
Computed optFederov for nTrials 20
DELB = 0.24179512164465308
optFederov_D = 0.24179512164465303
optFederov_DELB = 0.851
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 7:7
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 11.338962151 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 8:8
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 8.604799569 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 9:9
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 8.64387446 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 10:10
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 9.587851213 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 11:11
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 10.113090545 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 12:12
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 12.758572239 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 13:13
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 10.387569449 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 14:14
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 10.392320108 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 15:15
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 10.620770984 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 16:16
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 11.378222758 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 17:17
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 11.475897927 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"])
Full Factorial Size: 216
Total Subsets: 1.0531229166855719e65
Range of Design Sizes: 18:18
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 11.64705653 seconds
SampleComparison(false, false, UnitRange{Int64}[7:7, 8:8, 9:9, 10:10, 11:11, 12:12, 13:13, 14:14, 15:15, 16:16, 17:17, 18:18], Any[6.33544e-6, 0.000174679, 0.00592693, 0.17826, 0.187648, 0.192961, 0.208744, 0.206533, 0.211023, 0.212717, 0.214602, 0.219529], Any[0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 10×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 1  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 3  │ 3  │ 3  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 2  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 4   │ 1  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 5   │ 3  │ 1  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 6   │ 2  │ 2  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 7   │ 3  │ 2  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 8   │ 2  │ 3  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 9   │ 1  │ 1  │ 3  │ 2  │ 1  │ 2  │ 1.0 │
│ 10  │ 2  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1.0 │, 11×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 1  │ 3  │ 3  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 2  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 4   │ 1  │ 2  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 5   │ 3  │ 1  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 6   │ 1  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 7   │ 3  │ 3  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 8   │ 2  │ 2  │ 3  │ 2  │ 1  │ 2  │ 1.0 │
│ 9   │ 3  │ 2  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 10  │ 2  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 11  │ 1  │ 3  │ 3  │ 1  │ 2  │ 2  │ 1.0 │, 12×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 3  │ 3  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 3   │ 3  │ 1  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 4   │ 1  │ 3  │ 2  │ 1  │ 2  │ 1  │ 1.0 │
│ 5   │ 2  │ 1  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 6   │ 1  │ 2  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 7   │ 3  │ 2  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 8   │ 1  │ 1  │ 3  │ 1  │ 1  │ 2  │ 1.0 │
│ 9   │ 1  │ 3  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 10  │ 2  │ 1  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 11  │ 2  │ 3  │ 3  │ 1  │ 2  │ 2  │ 1.0 │
│ 12  │ 3  │ 2  │ 2  │ 2  │ 2  │ 2  │ 1.0 │, 13×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 3  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 3  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 3   │ 1  │ 2  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 4   │ 1  │ 3  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 5   │ 2  │ 1  │ 3  │ 1  │ 2  │ 1  │ 1.0 │
│ 6   │ 2  │ 2  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 7   │ 1  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 8   │ 2  │ 2  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 9   │ 1  │ 3  │ 2  │ 1  │ 1  │ 2  │ 1.0 │
│ 10  │ 2  │ 3  │ 3  │ 2  │ 1  │ 2  │ 1.0 │
│ 11  │ 3  │ 2  │ 3  │ 1  │ 2  │ 2  │ 1.0 │
│ 12  │ 3  │ 3  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 13  │ 1  │ 1  │ 2  │ 2  │ 2  │ 2  │ 1.0 │, 14×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 3  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 1  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 3  │ 1  │ 3  │ 1  │ 1  │ 1  │ 1.0 │
│ 4   │ 2  │ 2  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 5   │ 1  │ 2  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 6   │ 3  │ 3  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 7   │ 2  │ 1  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 8   │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 9   │ 3  │ 2  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 10  │ 1  │ 3  │ 3  │ 2  │ 1  │ 2  │ 1.0 │
│ 11  │ 2  │ 3  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 12  │ 3  │ 2  │ 3  │ 1  │ 2  │ 2  │ 1.0 │
│ 13  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 14  │ 3  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1.0 │, 15×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 3  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 2  │ 1  │ 3  │ 1  │ 1  │ 1  │ 1.0 │
│ 4   │ 1  │ 2  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 5   │ 3  │ 1  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 6   │ 1  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1.0 │
│ 7   │ 2  │ 2  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 8   │ 1  │ 1  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 9   │ 1  │ 2  │ 3  │ 1  │ 1  │ 2  │ 1.0 │
│ 10  │ 1  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 11  │ 2  │ 3  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 12  │ 2  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 13  │ 3  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 14  │ 3  │ 2  │ 3  │ 2  │ 2  │ 2  │ 1.0 │
│ 15  │ 2  │ 3  │ 3  │ 2  │ 2  │ 2  │ 1.0 │, 16×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 3  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 1  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 4   │ 2  │ 1  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 5   │ 1  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1.0 │
│ 6   │ 3  │ 1  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 7   │ 2  │ 3  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 8   │ 3  │ 2  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 9   │ 3  │ 1  │ 3  │ 1  │ 1  │ 2  │ 1.0 │
│ 10  │ 1  │ 2  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 11  │ 3  │ 3  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 12  │ 1  │ 3  │ 3  │ 2  │ 1  │ 2  │ 1.0 │
│ 13  │ 2  │ 3  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 14  │ 3  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 15  │ 2  │ 1  │ 3  │ 1  │ 2  │ 2  │ 1.0 │
│ 16  │ 1  │ 1  │ 2  │ 2  │ 2  │ 2  │ 1.0 │, 17×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 1  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 2  │ 3  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 2  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 4   │ 3  │ 3  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 5   │ 1  │ 3  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 6   │ 3  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1.0 │
│ 7   │ 2  │ 2  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 8   │ 3  │ 1  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 9   │ 3  │ 1  │ 2  │ 1  │ 1  │ 2  │ 1.0 │
│ 10  │ 2  │ 3  │ 3  │ 1  │ 1  │ 2  │ 1.0 │
│ 11  │ 3  │ 2  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 12  │ 1  │ 3  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 13  │ 1  │ 2  │ 3  │ 2  │ 1  │ 2  │ 1.0 │
│ 14  │ 2  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 15  │ 3  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 16  │ 2  │ 3  │ 2  │ 2  │ 2  │ 2  │ 1.0 │
│ 17  │ 1  │ 1  │ 3  │ 2  │ 2  │ 2  │ 1.0 │, 18×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 2  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 3  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 1  │ 1  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 4   │ 3  │ 3  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 5   │ 1  │ 2  │ 2  │ 1  │ 2  │ 1  │ 1.0 │
│ 6   │ 2  │ 2  │ 3  │ 1  │ 2  │ 1  │ 1.0 │
│ 7   │ 3  │ 1  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 8   │ 2  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 9   │ 1  │ 1  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 10  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 11  │ 1  │ 3  │ 3  │ 1  │ 1  │ 2  │ 1.0 │
│ 12  │ 1  │ 2  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 13  │ 2  │ 1  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 14  │ 3  │ 2  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 15  │ 1  │ 3  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 16  │ 3  │ 1  │ 3  │ 1  │ 2  │ 2  │ 1.0 │
│ 17  │ 3  │ 3  │ 2  │ 2  │ 2  │ 2  │ 1.0 │
│ 18  │ 2  │ 2  │ 3  │ 2  │ 2  │ 2  │ 1.0 │, 19×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 3  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 3  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 2  │ 3  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 4   │ 1  │ 3  │ 2  │ 2  │ 1  │ 1  │ 1.0 │
│ 5   │ 3  │ 1  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 6   │ 2  │ 2  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 7   │ 1  │ 2  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 8   │ 2  │ 1  │ 2  │ 1  │ 2  │ 1  │ 1.0 │
│ 9   │ 2  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1.0 │
│ 10  │ 1  │ 1  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 11  │ 1  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 12  │ 2  │ 1  │ 2  │ 1  │ 1  │ 2  │ 1.0 │
│ 13  │ 1  │ 2  │ 3  │ 1  │ 1  │ 2  │ 1.0 │
│ 14  │ 2  │ 3  │ 3  │ 2  │ 1  │ 2  │ 1.0 │
│ 15  │ 3  │ 3  │ 3  │ 1  │ 2  │ 2  │ 1.0 │
│ 16  │ 3  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 17  │ 2  │ 2  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 18  │ 3  │ 2  │ 2  │ 2  │ 2  │ 2  │ 1.0 │
│ 19  │ 1  │ 3  │ 2  │ 2  │ 2  │ 2  │ 1.0 │, 20×7 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 3  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 3  │ 3  │ 1  │ 1  │ 1  │ 1.0 │
│ 3   │ 1  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 4   │ 3  │ 2  │ 2  │ 2  │ 1  │ 1  │ 1.0 │
│ 5   │ 1  │ 2  │ 3  │ 2  │ 1  │ 1  │ 1.0 │
│ 6   │ 3  │ 1  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 7   │ 2  │ 2  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 8   │ 1  │ 1  │ 2  │ 1  │ 2  │ 1  │ 1.0 │
│ 9   │ 1  │ 3  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 10  │ 2  │ 1  │ 3  │ 2  │ 2  │ 1  │ 1.0 │
│ 11  │ 1  │ 3  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 12  │ 2  │ 2  │ 2  │ 1  │ 1  │ 2  │ 1.0 │
│ 13  │ 1  │ 1  │ 3  │ 1  │ 1  │ 2  │ 1.0 │
│ 14  │ 2  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 15  │ 3  │ 1  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 16  │ 1  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 17  │ 3  │ 2  │ 3  │ 1  │ 2  │ 2  │ 1.0 │
│ 18  │ 1  │ 2  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 19  │ 2  │ 3  │ 2  │ 2  │ 2  │ 2  │ 1.0 │
│ 20  │ 3  │ 3  │ 3  │ 2  │ 2  │ 2  │ 1.0 │], Any[0.0, 0.0, 0.0, 0.229017, 0.231895, 0.232679, 0.234796, 0.236075, 0.236813, 0.238109, 0.239639, 0.242945, 0.24243, 0.241795])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison, pb = false, title = string("D-Efficiency and Experiments",
                                                               " for 3 2-Level Factors and",
                                                               " 3 3-Level Factors (True Factors)"))
#+END_SRC

#+RESULTS:
#+begin_example
Fontconfig warning: "/etc/fonts/fonts.conf", line 5: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/fonts.conf", line 6: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/fonts.conf", line 9: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 34: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'version'
Fontconfig error: Cannot load config file from /etc/fonts/fonts.conf
Created new window in existing browser session.
#+end_example

***** Comparing to ~optFederov~ Designs (3 2-Level, 3 3-Level, 3 4-Level) :ATTACH:
:PROPERTIES:
:Attachments: julia0b2Mig.html
:ID:       f16fbb99-29f1-4613-9b9d-d5c4a03fd17e
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Any, 1}}()

for i = 1:3
    factors[Symbol(:f, i)] = ["1", "2", "3"]
end

for i = 4:6
    factors[Symbol(:f, i)] = ["1", "2"]
end

for i = 7:9
    factors[Symbol(:f, i)] = ["1", "2", "3", "4"]
end

println(factors)

comparison = compare_sample_federov(factors, 8000, false, true_factors = [1, 2, 3, 4, 5, 6, 7, 8, 9])
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Any,1}} with 0 entries







DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])

Computed optFederov for nTrials 10
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 11
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 12
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 13
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 14
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 15
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 16
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 17
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 18
DELB = 0.0
optFederov_D = 0.18793158785592656
optFederov_DELB = 0.459
Computed optFederov for nTrials 19
DELB = 0.17598725148591854
optFederov_D = 0.17598725148591857
optFederov_DELB = 0.296
Computed optFederov for nTrials 20
DELB = 0.18211431028304276
optFederov_D = 0.18211431028304265
optFederov_DELB = 0.367
Computed optFederov for nTrials 21
DELB = 0.18213408582358184
optFederov_D = 0.1821340858235818
optFederov_DELB = 0.393
Computed optFederov for nTrials 22
DELB = 0.18413157130072735
optFederov_D = 0.18413157130072738
optFederov_DELB = 0.449
Computed optFederov for nTrials 23
DELB = 0.18683814230689233
optFederov_D = 0.18683814230689227
optFederov_DELB = 0.509
Computed optFederov for nTrials 24
DELB = 0.18910913679917454
optFederov_D = 0.1891091367991746
optFederov_DELB = 0.537
Computed optFederov for nTrials 25
DELB = 0.18804472798622007
optFederov_D = 0.18804472798622002
optFederov_DELB = 0.542
Computed optFederov for nTrials 26
DELB = 0.18913798411662602
optFederov_D = 0.18913798411662613
optFederov_DELB = 0.526
Computed optFederov for nTrials 27
DELB = 0.19195797704900738
optFederov_D = 0.19195797704900738
optFederov_DELB = 0.643
Computed optFederov for nTrials 28
DELB = 0.19059541461414134
optFederov_D = 0.1905954146141413
optFederov_DELB = 0.573
Computed optFederov for nTrials 29
DELB = 0.19114541447095917
optFederov_D = 0.19114541447095917
optFederov_DELB = 0.591
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 10:10
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 26.499692199 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 11:11
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 25.685516214 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 12:12
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 28.64351739 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 24.700048544 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 31.034810182 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 25.57167109 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 16:16
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 31.299454359 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 36.678146032 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 18:18
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 29.52319765 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 19:19
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 29.791917383 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 20:20
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 33.572003462 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 21:21
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 37.738322058 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 22:22
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 45.364699444 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 23:23
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 40.658124603 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 24:24
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 39.139642337 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 25:25
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 45.963595603 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 26:26
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 47.01871487 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3"],:f2=>Any["1", "2", "3"],:f3=>Any["1", "2", "3"],:f4=>Any["1", "2"],:f5=>Any["1", "2"],:f6=>Any["1", "2"],:f7=>Any["1", "2", "3", "4"],:f8=>Any["1", "2", "3", "4"],:f9=>Any["1", "2", "3", "4"])
Full Factorial Size: 13824
Total Subsets: Inf
Range of Design Sizes: 27:27
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 53.913342129 seconds
SampleComparison(false, false, UnitRange{Int64}[10:10, 11:11, 12:12, 13:13, 14:14, 15:15, 16:16, 17:17, 18:18, 19:19, 20:20, 21:21, 22:22, 23:23, 24:24, 25:25, 26:26, 27:27], Any[9.67127e-9, 5.59943e-8, 3.55047e-7, 2.17859e-6, 1.42706e-5, 8.38537e-5, 0.000494352, 0.00306989, 0.0185558, 0.107851, 0.120501, 0.125344, 0.136593, 0.136029, 0.137623, 0.140933, 0.143034, 0.145096], Any[0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 19×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 2  │ 1  │ 2  │ 2  │ 1  │ 3  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 3  │ 3  │ 2  │ 2  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 3   │ 1  │ 1  │ 3  │ 1  │ 1  │ 1  │ 1  │ 3  │ 1  │ 1.0 │
│ 4   │ 1  │ 1  │ 2  │ 1  │ 2  │ 2  │ 4  │ 4  │ 1  │ 1.0 │
│ 5   │ 3  │ 3  │ 2  │ 2  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 6   │ 2  │ 1  │ 3  │ 1  │ 2  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 7   │ 1  │ 3  │ 1  │ 1  │ 2  │ 2  │ 3  │ 3  │ 2  │ 1.0 │
│ 8   │ 3  │ 2  │ 3  │ 2  │ 1  │ 2  │ 4  │ 4  │ 2  │ 1.0 │
│ 9   │ 1  │ 3  │ 3  │ 2  │ 2  │ 1  │ 4  │ 1  │ 3  │ 1.0 │
│ 10  │ 3  │ 1  │ 2  │ 2  │ 1  │ 2  │ 3  │ 2  │ 3  │ 1.0 │
│ 11  │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 4  │ 3  │ 3  │ 1.0 │
│ 12  │ 3  │ 3  │ 2  │ 1  │ 2  │ 2  │ 1  │ 4  │ 3  │ 1.0 │
│ 13  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 4  │ 3  │ 1.0 │
│ 14  │ 2  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1  │ 1  │ 4  │ 1.0 │
│ 15  │ 3  │ 2  │ 3  │ 1  │ 2  │ 2  │ 2  │ 1  │ 4  │ 1.0 │
│ 16  │ 1  │ 2  │ 2  │ 2  │ 2  │ 1  │ 1  │ 2  │ 4  │ 1.0 │
│ 17  │ 3  │ 3  │ 1  │ 1  │ 1  │ 1  │ 4  │ 2  │ 4  │ 1.0 │
│ 18  │ 3  │ 1  │ 1  │ 2  │ 2  │ 1  │ 2  │ 3  │ 4  │ 1.0 │
│ 19  │ 2  │ 3  │ 3  │ 1  │ 1  │ 1  │ 3  │ 4  │ 4  │ 1.0 │, 20×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 1  │ 2  │ 2  │ 1  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1.0 │
│ 2   │ 3  │ 1  │ 3  │ 2  │ 1  │ 2  │ 3  │ 2  │ 1  │ 1.0 │
│ 3   │ 2  │ 3  │ 1  │ 1  │ 2  │ 1  │ 3  │ 3  │ 1  │ 1.0 │
│ 4   │ 2  │ 3  │ 3  │ 2  │ 1  │ 2  │ 1  │ 4  │ 1  │ 1.0 │
│ 5   │ 1  │ 1  │ 1  │ 1  │ 2  │ 2  │ 4  │ 4  │ 1  │ 1.0 │
│ 6   │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 3  │ 1  │ 2  │ 1.0 │
│ 7   │ 1  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 8   │ 1  │ 2  │ 1  │ 2  │ 1  │ 1  │ 4  │ 3  │ 2  │ 1.0 │
│ 9   │ 3  │ 3  │ 3  │ 1  │ 2  │ 1  │ 2  │ 4  │ 2  │ 1.0 │
│ 10  │ 1  │ 3  │ 3  │ 1  │ 2  │ 2  │ 3  │ 1  │ 3  │ 1.0 │
│ 11  │ 2  │ 3  │ 2  │ 2  │ 1  │ 1  │ 4  │ 1  │ 3  │ 1.0 │
│ 12  │ 3  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 2  │ 3  │ 1.0 │
│ 13  │ 2  │ 1  │ 2  │ 2  │ 2  │ 2  │ 2  │ 3  │ 3  │ 1.0 │
│ 14  │ 2  │ 2  │ 1  │ 1  │ 1  │ 2  │ 3  │ 4  │ 3  │ 1.0 │
│ 15  │ 3  │ 2  │ 1  │ 2  │ 2  │ 2  │ 1  │ 1  │ 4  │ 1.0 │
│ 16  │ 1  │ 3  │ 1  │ 2  │ 1  │ 2  │ 2  │ 2  │ 4  │ 1.0 │
│ 17  │ 2  │ 2  │ 3  │ 1  │ 2  │ 1  │ 4  │ 2  │ 4  │ 1.0 │
│ 18  │ 1  │ 1  │ 3  │ 1  │ 1  │ 1  │ 1  │ 3  │ 4  │ 1.0 │
│ 19  │ 3  │ 3  │ 2  │ 1  │ 1  │ 2  │ 4  │ 3  │ 4  │ 1.0 │
│ 20  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1  │ 3  │ 4  │ 4  │ 1.0 │, 21×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 2  │ 3  │ 2  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 3  │ 1  │ 2  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 3   │ 1  │ 2  │ 3  │ 1  │ 1  │ 1  │ 4  │ 2  │ 1  │ 1.0 │
│ 4   │ 2  │ 1  │ 1  │ 1  │ 2  │ 1  │ 4  │ 3  │ 1  │ 1.0 │
│ 5   │ 1  │ 1  │ 3  │ 2  │ 2  │ 2  │ 3  │ 4  │ 1  │ 1.0 │
│ 6   │ 3  │ 3  │ 1  │ 1  │ 1  │ 1  │ 3  │ 1  │ 2  │ 1.0 │
│ 7   │ 2  │ 2  │ 3  │ 1  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1.0 │
│ 8   │ 1  │ 1  │ 2  │ 2  │ 1  │ 2  │ 4  │ 3  │ 2  │ 1.0 │
│ 9   │ 2  │ 2  │ 1  │ 2  │ 1  │ 1  │ 2  │ 4  │ 2  │ 1.0 │
│ 10  │ 1  │ 2  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1  │ 3  │ 1.0 │
│ 11  │ 2  │ 3  │ 3  │ 2  │ 1  │ 1  │ 4  │ 1  │ 3  │ 1.0 │
│ 12  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 3  │ 2  │ 3  │ 1.0 │
│ 13  │ 3  │ 2  │ 3  │ 2  │ 1  │ 1  │ 1  │ 3  │ 3  │ 1.0 │
│ 14  │ 1  │ 2  │ 2  │ 1  │ 2  │ 1  │ 3  │ 3  │ 3  │ 1.0 │
│ 15  │ 3  │ 3  │ 2  │ 1  │ 2  │ 2  │ 4  │ 4  │ 3  │ 1.0 │
│ 16  │ 2  │ 1  │ 3  │ 1  │ 2  │ 1  │ 2  │ 1  │ 4  │ 1.0 │
│ 17  │ 3  │ 2  │ 1  │ 2  │ 2  │ 2  │ 4  │ 1  │ 4  │ 1.0 │
│ 18  │ 1  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1  │ 2  │ 4  │ 1.0 │
│ 19  │ 2  │ 2  │ 2  │ 2  │ 1  │ 2  │ 3  │ 2  │ 4  │ 1.0 │
│ 20  │ 3  │ 3  │ 3  │ 1  │ 1  │ 2  │ 2  │ 3  │ 4  │ 1.0 │
│ 21  │ 3  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1  │ 4  │ 4  │ 1.0 │, 22×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 1  │ 2  │ 1  │ 2  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 3  │ 1  │ 2  │ 1  │ 2  │ 2  │ 4  │ 1  │ 1  │ 1.0 │
│ 3   │ 1  │ 1  │ 3  │ 2  │ 2  │ 2  │ 2  │ 2  │ 1  │ 1.0 │
│ 4   │ 3  │ 3  │ 2  │ 1  │ 1  │ 1  │ 4  │ 2  │ 1  │ 1.0 │
│ 5   │ 2  │ 2  │ 3  │ 1  │ 1  │ 2  │ 3  │ 3  │ 1  │ 1.0 │
│ 6   │ 3  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1  │ 4  │ 1  │ 1.0 │
│ 7   │ 3  │ 1  │ 3  │ 2  │ 1  │ 1  │ 3  │ 1  │ 2  │ 1.0 │
│ 8   │ 2  │ 2  │ 1  │ 1  │ 2  │ 1  │ 4  │ 2  │ 2  │ 1.0 │
│ 9   │ 2  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1  │ 3  │ 2  │ 1.0 │
│ 10  │ 1  │ 3  │ 2  │ 2  │ 1  │ 2  │ 2  │ 4  │ 2  │ 1.0 │
│ 11  │ 1  │ 2  │ 2  │ 1  │ 2  │ 1  │ 3  │ 1  │ 3  │ 1.0 │
│ 12  │ 2  │ 3  │ 3  │ 2  │ 2  │ 2  │ 4  │ 1  │ 3  │ 1.0 │
│ 13  │ 3  │ 3  │ 1  │ 1  │ 2  │ 2  │ 3  │ 2  │ 3  │ 1.0 │
│ 14  │ 3  │ 2  │ 3  │ 2  │ 2  │ 1  │ 2  │ 3  │ 3  │ 1.0 │
│ 15  │ 1  │ 1  │ 1  │ 2  │ 1  │ 1  │ 4  │ 3  │ 3  │ 1.0 │
│ 16  │ 2  │ 1  │ 3  │ 1  │ 1  │ 1  │ 1  │ 4  │ 3  │ 1.0 │
│ 17  │ 2  │ 3  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1  │ 4  │ 1.0 │
│ 18  │ 3  │ 2  │ 2  │ 2  │ 1  │ 2  │ 1  │ 2  │ 4  │ 1.0 │
│ 19  │ 1  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1  │ 3  │ 4  │ 1.0 │
│ 20  │ 3  │ 1  │ 1  │ 1  │ 1  │ 2  │ 2  │ 4  │ 4  │ 1.0 │
│ 21  │ 2  │ 1  │ 2  │ 2  │ 2  │ 1  │ 3  │ 4  │ 4  │ 1.0 │
│ 22  │ 1  │ 2  │ 3  │ 1  │ 2  │ 2  │ 4  │ 4  │ 4  │ 1.0 │, 23×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 1  │ 2  │ 3  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 3  │ 3  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 3   │ 3  │ 1  │ 2  │ 1  │ 1  │ 2  │ 3  │ 2  │ 1  │ 1.0 │
│ 4   │ 3  │ 1  │ 1  │ 2  │ 2  │ 1  │ 4  │ 3  │ 1  │ 1.0 │
│ 5   │ 2  │ 2  │ 2  │ 2  │ 2  │ 2  │ 2  │ 4  │ 1  │ 1.0 │
│ 6   │ 2  │ 1  │ 2  │ 1  │ 2  │ 1  │ 3  │ 1  │ 2  │ 1.0 │
│ 7   │ 3  │ 3  │ 2  │ 1  │ 2  │ 2  │ 4  │ 1  │ 2  │ 1.0 │
│ 8   │ 3  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 9   │ 3  │ 2  │ 3  │ 2  │ 2  │ 2  │ 1  │ 3  │ 2  │ 1.0 │
│ 10  │ 1  │ 3  │ 1  │ 2  │ 1  │ 2  │ 3  │ 3  │ 2  │ 1.0 │
│ 11  │ 1  │ 1  │ 3  │ 1  │ 1  │ 1  │ 4  │ 4  │ 2  │ 1.0 │
│ 12  │ 3  │ 1  │ 3  │ 2  │ 1  │ 2  │ 2  │ 1  │ 3  │ 1.0 │
│ 13  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1  │ 1  │ 2  │ 3  │ 1.0 │
│ 14  │ 1  │ 2  │ 1  │ 1  │ 2  │ 2  │ 4  │ 2  │ 3  │ 1.0 │
│ 15  │ 3  │ 3  │ 3  │ 1  │ 2  │ 1  │ 3  │ 3  │ 3  │ 1.0 │
│ 16  │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 4  │ 3  │ 3  │ 1.0 │
│ 17  │ 2  │ 3  │ 1  │ 1  │ 2  │ 2  │ 1  │ 4  │ 3  │ 1.0 │
│ 18  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1  │ 3  │ 1  │ 4  │ 1.0 │
│ 19  │ 2  │ 3  │ 3  │ 2  │ 1  │ 2  │ 4  │ 2  │ 4  │ 1.0 │
│ 20  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 4  │ 1.0 │
│ 21  │ 1  │ 3  │ 2  │ 1  │ 2  │ 2  │ 2  │ 3  │ 4  │ 1.0 │
│ 22  │ 3  │ 3  │ 2  │ 2  │ 1  │ 1  │ 1  │ 4  │ 4  │ 1.0 │
│ 23  │ 3  │ 2  │ 3  │ 1  │ 2  │ 2  │ 3  │ 4  │ 4  │ 1.0 │, 24×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 3  │ 2  │ 3  │ 1  │ 2  │ 2  │ 2  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1  │ 2  │ 1  │ 1.0 │
│ 3   │ 2  │ 1  │ 1  │ 2  │ 1  │ 2  │ 4  │ 2  │ 1  │ 1.0 │
│ 4   │ 1  │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 3  │ 1  │ 1.0 │
│ 5   │ 3  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 3  │ 1  │ 1.0 │
│ 6   │ 1  │ 3  │ 2  │ 1  │ 1  │ 2  │ 2  │ 4  │ 1  │ 1.0 │
│ 7   │ 3  │ 3  │ 1  │ 2  │ 2  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 8   │ 1  │ 1  │ 2  │ 1  │ 1  │ 1  │ 3  │ 1  │ 2  │ 1.0 │
│ 9   │ 3  │ 2  │ 2  │ 2  │ 1  │ 1  │ 4  │ 2  │ 2  │ 1.0 │
│ 10  │ 1  │ 2  │ 3  │ 1  │ 2  │ 2  │ 4  │ 3  │ 2  │ 1.0 │
│ 11  │ 2  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1  │ 4  │ 2  │ 1.0 │
│ 12  │ 2  │ 3  │ 3  │ 2  │ 1  │ 1  │ 3  │ 4  │ 2  │ 1.0 │
│ 13  │ 2  │ 2  │ 1  │ 1  │ 1  │ 2  │ 3  │ 1  │ 3  │ 1.0 │
│ 14  │ 3  │ 3  │ 2  │ 1  │ 1  │ 2  │ 1  │ 2  │ 3  │ 1.0 │
│ 15  │ 1  │ 3  │ 3  │ 2  │ 2  │ 2  │ 3  │ 2  │ 3  │ 1.0 │
│ 16  │ 2  │ 1  │ 2  │ 2  │ 2  │ 2  │ 2  │ 3  │ 3  │ 1.0 │
│ 17  │ 3  │ 1  │ 3  │ 1  │ 1  │ 1  │ 4  │ 4  │ 3  │ 1.0 │
│ 18  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1  │ 4  │ 4  │ 3  │ 1.0 │
│ 19  │ 1  │ 1  │ 3  │ 2  │ 1  │ 2  │ 1  │ 1  │ 4  │ 1.0 │
│ 20  │ 2  │ 3  │ 2  │ 1  │ 2  │ 1  │ 4  │ 1  │ 4  │ 1.0 │
│ 21  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1  │ 2  │ 2  │ 4  │ 1.0 │
│ 22  │ 2  │ 2  │ 3  │ 1  │ 1  │ 1  │ 2  │ 3  │ 4  │ 1.0 │
│ 23  │ 3  │ 3  │ 1  │ 1  │ 1  │ 2  │ 4  │ 3  │ 4  │ 1.0 │
│ 24  │ 3  │ 2  │ 2  │ 2  │ 2  │ 2  │ 3  │ 4  │ 4  │ 1.0 │, 25×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 2  │ 2  │ 3  │ 2  │ 2  │ 1  │ 3  │ 1  │ 1  │ 1.0 │
│ 2   │ 1  │ 2  │ 1  │ 1  │ 2  │ 2  │ 4  │ 2  │ 1  │ 1.0 │
│ 3   │ 3  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1  │ 3  │ 1  │ 1.0 │
│ 4   │ 3  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1  │ 4  │ 1  │ 1.0 │
│ 5   │ 2  │ 3  │ 1  │ 2  │ 1  │ 2  │ 2  │ 4  │ 1  │ 1.0 │
│ 6   │ 1  │ 3  │ 2  │ 1  │ 1  │ 1  │ 3  │ 4  │ 1  │ 1.0 │
│ 7   │ 3  │ 3  │ 3  │ 1  │ 2  │ 2  │ 4  │ 1  │ 2  │ 1.0 │
│ 8   │ 1  │ 3  │ 1  │ 2  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 9   │ 2  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 2  │ 2  │ 1.0 │
│ 10  │ 1  │ 2  │ 2  │ 2  │ 1  │ 2  │ 2  │ 3  │ 2  │ 1.0 │
│ 11  │ 2  │ 1  │ 3  │ 1  │ 2  │ 2  │ 2  │ 3  │ 2  │ 1.0 │
│ 12  │ 1  │ 2  │ 3  │ 2  │ 1  │ 1  │ 1  │ 4  │ 2  │ 1.0 │
│ 13  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1  │ 4  │ 4  │ 2  │ 1.0 │
│ 14  │ 3  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 1.0 │
│ 15  │ 1  │ 1  │ 1  │ 1  │ 1  │ 2  │ 3  │ 1  │ 3  │ 1.0 │
│ 16  │ 3  │ 3  │ 2  │ 2  │ 2  │ 1  │ 2  │ 2  │ 3  │ 1.0 │
│ 17  │ 2  │ 1  │ 3  │ 2  │ 1  │ 2  │ 4  │ 2  │ 3  │ 1.0 │
│ 18  │ 1  │ 3  │ 3  │ 1  │ 2  │ 1  │ 4  │ 3  │ 3  │ 1.0 │
│ 19  │ 2  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1  │ 4  │ 3  │ 1.0 │
│ 20  │ 2  │ 3  │ 2  │ 1  │ 1  │ 2  │ 1  │ 1  │ 4  │ 1.0 │
│ 21  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1  │ 4  │ 1  │ 4  │ 1.0 │
│ 22  │ 3  │ 2  │ 3  │ 1  │ 1  │ 2  │ 3  │ 2  │ 4  │ 1.0 │
│ 23  │ 3  │ 3  │ 1  │ 2  │ 2  │ 2  │ 3  │ 3  │ 4  │ 1.0 │
│ 24  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1  │ 4  │ 3  │ 4  │ 1.0 │
│ 25  │ 1  │ 1  │ 3  │ 1  │ 2  │ 1  │ 2  │ 4  │ 4  │ 1.0 │, 26×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 1  │ 3  │ 1  │ 2  │ 2  │ 1  │ 3  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 2  │ 3  │ 1  │ 2  │ 2  │ 3  │ 1  │ 1  │ 1.0 │
│ 3   │ 3  │ 1  │ 1  │ 1  │ 1  │ 1  │ 4  │ 2  │ 1  │ 1.0 │
│ 4   │ 2  │ 2  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 1  │ 1.0 │
│ 5   │ 1  │ 1  │ 3  │ 2  │ 1  │ 1  │ 2  │ 3  │ 1  │ 1.0 │
│ 6   │ 3  │ 3  │ 2  │ 2  │ 2  │ 2  │ 1  │ 4  │ 1  │ 1.0 │
│ 7   │ 1  │ 2  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 1.0 │
│ 8   │ 3  │ 3  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 9   │ 2  │ 3  │ 2  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 10  │ 1  │ 1  │ 3  │ 2  │ 1  │ 2  │ 3  │ 2  │ 2  │ 1.0 │
│ 11  │ 3  │ 1  │ 3  │ 1  │ 2  │ 1  │ 1  │ 3  │ 2  │ 1.0 │
│ 12  │ 2  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 4  │ 2  │ 1.0 │
│ 13  │ 1  │ 2  │ 3  │ 2  │ 2  │ 2  │ 4  │ 4  │ 2  │ 1.0 │
│ 14  │ 1  │ 1  │ 2  │ 1  │ 1  │ 2  │ 4  │ 1  │ 3  │ 1.0 │
│ 15  │ 1  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1  │ 2  │ 3  │ 1.0 │
│ 16  │ 1  │ 2  │ 1  │ 2  │ 2  │ 2  │ 2  │ 2  │ 3  │ 1.0 │
│ 17  │ 3  │ 2  │ 1  │ 2  │ 1  │ 1  │ 3  │ 3  │ 3  │ 1.0 │
│ 18  │ 2  │ 1  │ 2  │ 2  │ 2  │ 2  │ 3  │ 3  │ 3  │ 1.0 │
│ 19  │ 3  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 4  │ 3  │ 1.0 │
│ 20  │ 2  │ 3  │ 3  │ 2  │ 1  │ 1  │ 4  │ 4  │ 3  │ 1.0 │
│ 21  │ 2  │ 1  │ 3  │ 2  │ 2  │ 1  │ 2  │ 1  │ 4  │ 1.0 │
│ 22  │ 2  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1  │ 2  │ 4  │ 1.0 │
│ 23  │ 3  │ 2  │ 2  │ 2  │ 2  │ 1  │ 4  │ 2  │ 4  │ 1.0 │
│ 24  │ 1  │ 3  │ 1  │ 1  │ 2  │ 2  │ 4  │ 3  │ 4  │ 1.0 │
│ 25  │ 1  │ 2  │ 2  │ 1  │ 1  │ 1  │ 2  │ 4  │ 4  │ 1.0 │
│ 26  │ 3  │ 3  │ 3  │ 1  │ 1  │ 2  │ 3  │ 4  │ 4  │ 1.0 │, 27×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 2  │ 1  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 2  │ 2  │ 2  │ 2  │ 1  │ 2  │ 3  │ 1  │ 1  │ 1.0 │
│ 3   │ 3  │ 1  │ 3  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1  │ 1.0 │
│ 4   │ 3  │ 3  │ 2  │ 2  │ 2  │ 1  │ 4  │ 2  │ 1  │ 1.0 │
│ 5   │ 1  │ 3  │ 1  │ 1  │ 1  │ 2  │ 3  │ 3  │ 1  │ 1.0 │
│ 6   │ 1  │ 2  │ 3  │ 2  │ 2  │ 1  │ 2  │ 4  │ 1  │ 1.0 │
│ 7   │ 1  │ 3  │ 1  │ 2  │ 2  │ 2  │ 1  │ 1  │ 2  │ 1.0 │
│ 8   │ 3  │ 3  │ 2  │ 1  │ 1  │ 1  │ 2  │ 1  │ 2  │ 1.0 │
│ 9   │ 2  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1.0 │
│ 10  │ 2  │ 1  │ 1  │ 2  │ 2  │ 2  │ 4  │ 2  │ 2  │ 1.0 │
│ 11  │ 3  │ 2  │ 2  │ 2  │ 2  │ 2  │ 1  │ 3  │ 2  │ 1.0 │
│ 12  │ 3  │ 1  │ 3  │ 1  │ 2  │ 1  │ 3  │ 3  │ 2  │ 1.0 │
│ 13  │ 2  │ 3  │ 3  │ 2  │ 1  │ 1  │ 3  │ 4  │ 2  │ 1.0 │
│ 14  │ 1  │ 1  │ 2  │ 1  │ 1  │ 2  │ 4  │ 4  │ 2  │ 1.0 │
│ 15  │ 1  │ 2  │ 3  │ 1  │ 2  │ 1  │ 4  │ 1  │ 3  │ 1.0 │
│ 16  │ 1  │ 3  │ 3  │ 2  │ 1  │ 2  │ 1  │ 2  │ 3  │ 1.0 │
│ 17  │ 3  │ 2  │ 1  │ 1  │ 2  │ 2  │ 3  │ 2  │ 3  │ 1.0 │
│ 18  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 2  │ 3  │ 3  │ 1.0 │
│ 19  │ 3  │ 3  │ 1  │ 2  │ 1  │ 1  │ 4  │ 3  │ 3  │ 1.0 │
│ 20  │ 2  │ 1  │ 2  │ 2  │ 1  │ 1  │ 1  │ 4  │ 3  │ 1.0 │
│ 21  │ 2  │ 3  │ 2  │ 1  │ 2  │ 2  │ 2  │ 4  │ 3  │ 1.0 │
│ 22  │ 3  │ 1  │ 3  │ 2  │ 1  │ 2  │ 2  │ 1  │ 4  │ 1.0 │
│ 23  │ 1  │ 1  │ 2  │ 2  │ 2  │ 1  │ 3  │ 2  │ 4  │ 1.0 │
│ 24  │ 1  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1  │ 3  │ 4  │ 1.0 │
│ 25  │ 2  │ 3  │ 3  │ 1  │ 2  │ 2  │ 4  │ 3  │ 4  │ 1.0 │
│ 26  │ 3  │ 3  │ 1  │ 1  │ 2  │ 1  │ 1  │ 4  │ 4  │ 1.0 │
│ 27  │ 3  │ 2  │ 1  │ 2  │ 1  │ 2  │ 4  │ 4  │ 4  │ 1.0 │, 28×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 2  │ 3  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 1  │ 2  │ 3  │ 1  │ 2  │ 1  │ 4  │ 1  │ 1  │ 1.0 │
│ 3   │ 3  │ 2  │ 1  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 4   │ 3  │ 3  │ 3  │ 1  │ 1  │ 2  │ 3  │ 2  │ 1  │ 1.0 │
│ 5   │ 1  │ 3  │ 2  │ 1  │ 2  │ 2  │ 1  │ 3  │ 1  │ 1.0 │
│ 6   │ 2  │ 2  │ 2  │ 2  │ 2  │ 2  │ 3  │ 3  │ 1  │ 1.0 │
│ 7   │ 1  │ 1  │ 1  │ 2  │ 1  │ 1  │ 1  │ 4  │ 1  │ 1.0 │
│ 8   │ 2  │ 1  │ 3  │ 1  │ 1  │ 2  │ 2  │ 4  │ 1  │ 1.0 │
│ 9   │ 3  │ 3  │ 2  │ 2  │ 2  │ 2  │ 2  │ 1  │ 2  │ 1.0 │
│ 10  │ 3  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 1  │ 2  │ 1.0 │
│ 11  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1.0 │
│ 12  │ 2  │ 1  │ 3  │ 2  │ 2  │ 1  │ 4  │ 2  │ 2  │ 1.0 │
│ 13  │ 1  │ 2  │ 3  │ 2  │ 1  │ 2  │ 2  │ 3  │ 2  │ 1.0 │
│ 14  │ 3  │ 2  │ 2  │ 1  │ 1  │ 1  │ 4  │ 4  │ 2  │ 1.0 │
│ 15  │ 2  │ 3  │ 1  │ 2  │ 1  │ 2  │ 4  │ 4  │ 2  │ 1.0 │
│ 16  │ 2  │ 3  │ 3  │ 1  │ 1  │ 1  │ 2  │ 1  │ 3  │ 1.0 │
│ 17  │ 1  │ 1  │ 2  │ 2  │ 1  │ 2  │ 3  │ 1  │ 3  │ 1.0 │
│ 18  │ 1  │ 3  │ 1  │ 2  │ 2  │ 2  │ 4  │ 2  │ 3  │ 1.0 │
│ 19  │ 2  │ 2  │ 1  │ 1  │ 2  │ 1  │ 3  │ 3  │ 3  │ 1.0 │
│ 20  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1  │ 4  │ 3  │ 3  │ 1.0 │
│ 21  │ 3  │ 2  │ 3  │ 2  │ 2  │ 2  │ 1  │ 4  │ 3  │ 1.0 │
│ 22  │ 1  │ 3  │ 2  │ 1  │ 2  │ 1  │ 2  │ 4  │ 3  │ 1.0 │
│ 23  │ 3  │ 2  │ 1  │ 1  │ 1  │ 2  │ 4  │ 1  │ 4  │ 1.0 │
│ 24  │ 2  │ 1  │ 2  │ 1  │ 2  │ 2  │ 1  │ 2  │ 4  │ 1.0 │
│ 25  │ 2  │ 2  │ 2  │ 2  │ 1  │ 1  │ 2  │ 2  │ 4  │ 1.0 │
│ 26  │ 3  │ 3  │ 3  │ 2  │ 1  │ 1  │ 1  │ 3  │ 4  │ 1.0 │
│ 27  │ 1  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 3  │ 4  │ 1.0 │
│ 28  │ 1  │ 3  │ 3  │ 2  │ 2  │ 1  │ 3  │ 4  │ 4  │ 1.0 │, 29×10 DataFrames.DataFrame
│ Row │ f1 │ f2 │ f3 │ f4 │ f5 │ f6 │ f7 │ f8 │ f9 │ y   │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┤
│ 1   │ 2  │ 1  │ 2  │ 2  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1.0 │
│ 2   │ 1  │ 1  │ 1  │ 2  │ 1  │ 2  │ 4  │ 1  │ 1  │ 1.0 │
│ 3   │ 1  │ 3  │ 2  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1  │ 1.0 │
│ 4   │ 2  │ 2  │ 1  │ 1  │ 2  │ 2  │ 3  │ 2  │ 1  │ 1.0 │
│ 5   │ 3  │ 1  │ 3  │ 1  │ 1  │ 1  │ 3  │ 3  │ 1  │ 1.0 │
│ 6   │ 1  │ 2  │ 3  │ 1  │ 2  │ 2  │ 1  │ 4  │ 1  │ 1.0 │
│ 7   │ 3  │ 3  │ 3  │ 2  │ 1  │ 1  │ 2  │ 4  │ 1  │ 1.0 │
│ 8   │ 3  │ 1  │ 1  │ 1  │ 2  │ 2  │ 1  │ 1  │ 2  │ 1.0 │
│ 9   │ 1  │ 2  │ 3  │ 2  │ 1  │ 1  │ 3  │ 1  │ 2  │ 1.0 │
│ 10  │ 3  │ 3  │ 1  │ 2  │ 1  │ 2  │ 3  │ 2  │ 2  │ 1.0 │
│ 11  │ 3  │ 1  │ 2  │ 1  │ 2  │ 1  │ 4  │ 2  │ 2  │ 1.0 │
│ 12  │ 2  │ 1  │ 3  │ 2  │ 2  │ 2  │ 2  │ 3  │ 2  │ 1.0 │
│ 13  │ 2  │ 3  │ 3  │ 2  │ 1  │ 2  │ 4  │ 3  │ 2  │ 1.0 │
│ 14  │ 1  │ 2  │ 1  │ 1  │ 1  │ 1  │ 2  │ 4  │ 2  │ 1.0 │
│ 15  │ 2  │ 2  │ 2  │ 2  │ 1  │ 2  │ 2  │ 1  │ 3  │ 1.0 │
│ 16  │ 1  │ 3  │ 3  │ 1  │ 2  │ 1  │ 4  │ 1  │ 3  │ 1.0 │
│ 17  │ 3  │ 2  │ 3  │ 2  │ 2  │ 2  │ 1  │ 2  │ 3  │ 1.0 │
│ 18  │ 2  │ 1  │ 1  │ 1  │ 1  │ 1  │ 2  │ 2  │ 3  │ 1.0 │
│ 19  │ 1  │ 3  │ 2  │ 1  │ 1  │ 2  │ 1  │ 3  │ 3  │ 1.0 │
│ 20  │ 3  │ 2  │ 1  │ 2  │ 2  │ 1  │ 4  │ 3  │ 3  │ 1.0 │
│ 21  │ 2  │ 1  │ 3  │ 1  │ 1  │ 2  │ 3  │ 4  │ 3  │ 1.0 │
│ 22  │ 1  │ 1  │ 2  │ 2  │ 2  │ 2  │ 3  │ 4  │ 3  │ 1.0 │
│ 23  │ 3  │ 3  │ 3  │ 1  │ 2  │ 2  │ 2  │ 1  │ 4  │ 1.0 │
│ 24  │ 1  │ 1  │ 3  │ 2  │ 1  │ 1  │ 1  │ 2  │ 4  │ 1.0 │
│ 25  │ 2  │ 2  │ 3  │ 1  │ 1  │ 2  │ 4  │ 2  │ 4  │ 1.0 │
│ 26  │ 1  │ 1  │ 1  │ 2  │ 2  │ 2  │ 2  │ 3  │ 4  │ 1.0 │
│ 27  │ 2  │ 2  │ 2  │ 1  │ 2  │ 1  │ 3  │ 3  │ 4  │ 1.0 │
│ 28  │ 2  │ 3  │ 1  │ 2  │ 2  │ 1  │ 1  │ 4  │ 4  │ 1.0 │
│ 29  │ 3  │ 2  │ 2  │ 2  │ 1  │ 2  │ 4  │ 4  │ 4  │ 1.0 │], Any[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.175987, 0.182114, 0.182134, 0.184132, 0.186838, 0.189109, 0.188045, 0.189138, 0.191958, 0.190595, 0.191145])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison, pb = false, title = string("D-Efficiency and Experiments",
                                                               " for 3 2-Level,",
                                                               " 3 3-Level and",
                                                               " 3 4-Level True Factors"))
#+END_SRC

#+RESULTS:
#+begin_example
Fontconfig warning: "/etc/fonts/fonts.conf", line 5: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/fonts.conf", line 6: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/fonts.conf", line 9: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 34: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'version'
Fontconfig error: Cannot load config file from /etc/fonts/fonts.conf
Created new window in existing browser session.
#+end_example

**** Comparing Model Matrices
Generating a model matrix with ~AlgDesign~:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

fac <- gen.factorial(c(2,3), factors = c(1,2))
m <- model.matrix(~., fac)

fac
m

eval.design(~., fac)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2
1  1  1
2  2  1
3  1  2
4  2  2
5  1  3
6  2  3
  (Intercept) X12 X22 X23
1           1   0   0   0
2           1   1   0   0
3           1   0   1   0
4           1   1   1   0
5           1   0   0   1
6           1   1   0   1
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$X1
[1] "contr.treatment"

attr(,"contrasts")$X2
[1] "contr.treatment"
$determinant
[1] 0.3102016

$A
[1] 5

$diagonality
[1] 0.874

$gmean.variances
[1] 5.241483
#+end_example

Note that the factors are not centered, limits 0 and 1, and that
the determinant, or "D-efficiency" in this case, is really small.

When we run an equivalent example in my julia implementation,
we get this:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

fac = OrderedDict(:x1 => [:a, :b], :x2 => [:a, :b, :c])

design = [:a :a; :b :a; :a :b; :b :b; :a :c; :b :c]

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


DataStructures.OrderedDict{Symbol,Array{Symbol,1}} with 2 entries:
  :x1 => Symbol[:a, :b]
  :x2 => Symbol[:a, :b, :c]

6×2 Array{Symbol,2}:
 :a  :a
 :b  :a
 :a  :b
 :b  :b
 :a  :c
 :b  :c

6×4 Array{Float64,2}:
 1.0  -1.0  -1.0  -1.0
 1.0   1.0  -1.0  -1.0
 1.0  -1.0   1.0  -1.0
 1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0

0.8773826753016616
#+end_example

Note that the factors are centered with limits -1 and 1. This is due to the scaling
function I implemented. This scaling is a requirement for performing the D-Efficiency
computation using the k-th root, according to Castillo's book, page 141.
(See [[From DETMAX, SAS, and Castillo's Book]])

If we run the same example but use an "identity scale" we get identical results to
the ~AlgDesign~ implementation. The D-Efficiency is also the same:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function identity_scaling(design, factors)
    return design
end

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = identity_scaling)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example
identity_scaling (generic function with 1 method)

6×4 Array{Float64,2}:
 1.0  0.0  0.0  0.0
 1.0  1.0  0.0  0.0
 1.0  0.0  1.0  0.0
 1.0  1.0  1.0  0.0
 1.0  0.0  0.0  1.0
 1.0  1.0  0.0  1.0

0.31020161970069987
#+end_example
*** [2018-04-04 Wed]
**** Comparing Mixed-Level Factor Designs (True Factors)
***** Setup
#+CALL: setup_design_comparison()

#+RESULTS:
#+begin_example




get_max_samples (generic function with 3 methods)

compare_sample_pb (generic function with 3 methods)

compare_sample_pb_federov (generic function with 3 methods)

compare_sample_federov (generic function with 3 methods)

compare_sample_federov (generic function with 6 methods)

plot_pb_comparison (generic function with 1 method)

plot_federov_comparison (generic function with 1 method)

plot_max_samples (generic function with 1 method)
#+end_example
***** Comparing to ~optFederov~ Designs (3 4-Level, 3 8-Level) :ATTACH:
:PROPERTIES:
:Attachments: juliawlZKuB.html
:ID:       e0b238a0-9d41-4a84-a71e-42abdbf358e9
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
factors = OrderedDict{Symbol, Array{Any, 1}}()

for i = 1:3
    factors[Symbol(:f, i)] = ["1", "2", "3", "4"]
end

for i = 4:6
    factors[Symbol(:f, i)] = ["1", "2", "3", "4", "5", "6", "7", "8"]
end

println(factors)

comparison = compare_sample_federov(factors, 800, false, true_factors = collect(1:6))
#+END_SRC

#+RESULTS:
#+begin_example
DataStructures.OrderedDict{Symbol,Array{Any,1}} with 0 entries





DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])

Computed optFederov for nTrials 7
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 8
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 9
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 10
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 11
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 12
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 13
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 14
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 15
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 16
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 17
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 18
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 19
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 20
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 21
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 22
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 23
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 24
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 25
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 26
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 27
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 28
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 29
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 30
0×0 DataFrames.DataFrame

DELB = 0.0
optFederov_D = 0.10242764554102646
optFederov_DELB = 0.302
Computed optFederov for nTrials 31
31×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 4  │ 4  │ 2  │ 5  │ 4  │ 1  │
│ 2   │ 1  │ 1  │ 1  │ 4  │ 6  │ 1  │
│ 3   │ 3  │ 3  │ 3  │ 1  │ 7  │ 1  │
│ 4   │ 2  │ 4  │ 4  │ 2  │ 2  │ 2  │
│ 5   │ 4  │ 3  │ 2  │ 3  │ 3  │ 2  │
│ 6   │ 3  │ 2  │ 3  │ 4  │ 4  │ 2  │
│ 7   │ 1  │ 2  │ 1  │ 1  │ 5  │ 2  │
│ 8   │ 1  │ 1  │ 2  │ 7  │ 1  │ 3  │
│ 9   │ 2  │ 2  │ 4  │ 6  │ 3  │ 3  │
│ 10  │ 4  │ 4  │ 3  │ 8  │ 7  │ 3  │
│ 11  │ 3  │ 3  │ 1  │ 5  │ 8  │ 3  │
│ 12  │ 2  │ 4  │ 2  │ 4  │ 1  │ 4  │
│ 13  │ 2  │ 1  │ 1  │ 8  │ 4  │ 4  │
│ 14  │ 3  │ 4  │ 3  │ 6  │ 6  │ 4  │
│ 15  │ 1  │ 2  │ 4  │ 5  │ 7  │ 4  │
│ 16  │ 2  │ 1  │ 3  │ 5  │ 1  │ 5  │
│ 17  │ 3  │ 2  │ 2  │ 8  │ 2  │ 5  │
│ 18  │ 1  │ 4  │ 1  │ 3  │ 4  │ 5  │
│ 19  │ 4  │ 3  │ 4  │ 7  │ 8  │ 5  │
│ 20  │ 4  │ 3  │ 1  │ 6  │ 2  │ 6  │
│ 21  │ 3  │ 1  │ 4  │ 1  │ 3  │ 6  │
│ 22  │ 2  │ 2  │ 3  │ 3  │ 8  │ 6  │
│ 23  │ 4  │ 2  │ 1  │ 2  │ 1  │ 7  │
│ 24  │ 1  │ 4  │ 3  │ 7  │ 3  │ 7  │
│ 25  │ 3  │ 1  │ 4  │ 3  │ 5  │ 7  │
│ 26  │ 2  │ 3  │ 2  │ 1  │ 6  │ 7  │
│ 27  │ 1  │ 1  │ 2  │ 6  │ 8  │ 7  │
│ 28  │ 1  │ 3  │ 4  │ 8  │ 1  │ 8  │
│ 29  │ 4  │ 1  │ 3  │ 1  │ 2  │ 8  │
│ 30  │ 1  │ 3  │ 2  │ 2  │ 5  │ 8  │
│ 31  │ 2  │ 4  │ 1  │ 7  │ 7  │ 8  │
DELB = 0.3654570604185045
optFederov_D = 0.09554273194715981
optFederov_DELB = 0.166
Computed optFederov for nTrials 32
32×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 2  │ 4  │ 4  │ 2  │ 1  │ 1  │
│ 2   │ 1  │ 1  │ 3  │ 4  │ 4  │ 1  │
│ 3   │ 4  │ 2  │ 2  │ 6  │ 5  │ 1  │
│ 4   │ 3  │ 3  │ 1  │ 3  │ 7  │ 1  │
│ 5   │ 4  │ 2  │ 3  │ 5  │ 1  │ 2  │
│ 6   │ 1  │ 2  │ 2  │ 2  │ 2  │ 2  │
│ 7   │ 4  │ 3  │ 2  │ 8  │ 3  │ 2  │
│ 8   │ 2  │ 4  │ 1  │ 1  │ 5  │ 2  │
│ 9   │ 3  │ 1  │ 4  │ 6  │ 6  │ 2  │
│ 10  │ 1  │ 2  │ 1  │ 3  │ 1  │ 3  │
│ 11  │ 2  │ 3  │ 4  │ 7  │ 2  │ 3  │
│ 12  │ 4  │ 2  │ 3  │ 1  │ 6  │ 3  │
│ 13  │ 3  │ 4  │ 2  │ 5  │ 8  │ 3  │
│ 14  │ 4  │ 1  │ 1  │ 8  │ 2  │ 4  │
│ 15  │ 3  │ 3  │ 3  │ 2  │ 5  │ 4  │
│ 16  │ 2  │ 4  │ 2  │ 7  │ 6  │ 4  │
│ 17  │ 1  │ 2  │ 4  │ 1  │ 8  │ 4  │
│ 18  │ 3  │ 1  │ 2  │ 1  │ 1  │ 5  │
│ 19  │ 1  │ 4  │ 3  │ 6  │ 3  │ 5  │
│ 20  │ 4  │ 4  │ 4  │ 3  │ 4  │ 5  │
│ 21  │ 2  │ 2  │ 1  │ 8  │ 8  │ 5  │
│ 22  │ 2  │ 2  │ 4  │ 5  │ 3  │ 6  │
│ 23  │ 1  │ 4  │ 3  │ 8  │ 7  │ 6  │
│ 24  │ 4  │ 3  │ 1  │ 4  │ 8  │ 6  │
│ 25  │ 3  │ 2  │ 1  │ 7  │ 4  │ 7  │
│ 26  │ 1  │ 3  │ 1  │ 5  │ 6  │ 7  │
│ 27  │ 2  │ 2  │ 4  │ 4  │ 7  │ 7  │
│ 28  │ 2  │ 1  │ 3  │ 3  │ 8  │ 7  │
│ 29  │ 3  │ 4  │ 3  │ 4  │ 2  │ 8  │
│ 30  │ 2  │ 3  │ 2  │ 6  │ 4  │ 8  │
│ 31  │ 1  │ 1  │ 4  │ 7  │ 5  │ 8  │
│ 32  │ 4  │ 1  │ 1  │ 2  │ 7  │ 8  │
DELB = 0.3769707972332839
optFederov_D = 0.09855280888737498
optFederov_DELB = 0.185
Computed optFederov for nTrials 33
33×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 4  │ 4  │ 3  │ 3  │ 1  │ 1  │
│ 2   │ 2  │ 1  │ 2  │ 2  │ 2  │ 1  │
│ 3   │ 3  │ 3  │ 1  │ 7  │ 4  │ 1  │
│ 4   │ 4  │ 2  │ 4  │ 8  │ 8  │ 1  │
│ 5   │ 2  │ 3  │ 4  │ 6  │ 1  │ 2  │
│ 6   │ 4  │ 1  │ 3  │ 5  │ 3  │ 2  │
│ 7   │ 2  │ 2  │ 2  │ 4  │ 5  │ 2  │
│ 8   │ 1  │ 4  │ 2  │ 7  │ 6  │ 2  │
│ 9   │ 1  │ 2  │ 4  │ 1  │ 3  │ 3  │
│ 10  │ 3  │ 1  │ 3  │ 8  │ 5  │ 3  │
│ 11  │ 4  │ 3  │ 3  │ 4  │ 6  │ 3  │
│ 12  │ 2  │ 4  │ 4  │ 5  │ 7  │ 3  │
│ 13  │ 3  │ 4  │ 1  │ 2  │ 8  │ 3  │
│ 14  │ 3  │ 2  │ 1  │ 3  │ 2  │ 4  │
│ 15  │ 3  │ 4  │ 4  │ 4  │ 3  │ 4  │
│ 16  │ 4  │ 3  │ 4  │ 2  │ 5  │ 4  │
│ 17  │ 2  │ 1  │ 3  │ 7  │ 8  │ 4  │
│ 18  │ 4  │ 2  │ 2  │ 6  │ 3  │ 5  │
│ 19  │ 1  │ 1  │ 4  │ 3  │ 4  │ 5  │
│ 20  │ 2  │ 4  │ 1  │ 8  │ 6  │ 5  │
│ 21  │ 3  │ 3  │ 3  │ 1  │ 8  │ 5  │
│ 22  │ 4  │ 4  │ 4  │ 7  │ 2  │ 6  │
│ 23  │ 2  │ 2  │ 3  │ 2  │ 4  │ 6  │
│ 24  │ 3  │ 1  │ 4  │ 6  │ 6  │ 6  │
│ 25  │ 1  │ 3  │ 2  │ 8  │ 7  │ 6  │
│ 26  │ 3  │ 2  │ 2  │ 5  │ 1  │ 7  │
│ 27  │ 1  │ 4  │ 3  │ 6  │ 2  │ 7  │
│ 28  │ 2  │ 3  │ 4  │ 3  │ 3  │ 7  │
│ 29  │ 4  │ 1  │ 1  │ 1  │ 7  │ 7  │
│ 30  │ 1  │ 1  │ 1  │ 4  │ 1  │ 8  │
│ 31  │ 4  │ 4  │ 2  │ 1  │ 4  │ 8  │
│ 32  │ 1  │ 3  │ 1  │ 5  │ 5  │ 8  │
│ 33  │ 3  │ 2  │ 3  │ 2  │ 7  │ 8  │
DELB = 0.3792350632818349
optFederov_D = 0.09914476396928264
optFederov_DELB = 0.202
Computed optFederov for nTrials 34
34×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 2  │ 1  │ 7  │ 4  │ 1  │
│ 2   │ 1  │ 4  │ 4  │ 4  │ 5  │ 1  │
│ 3   │ 1  │ 1  │ 3  │ 2  │ 7  │ 1  │
│ 4   │ 4  │ 3  │ 3  │ 6  │ 8  │ 1  │
│ 5   │ 4  │ 4  │ 2  │ 5  │ 1  │ 2  │
│ 6   │ 3  │ 3  │ 2  │ 3  │ 2  │ 2  │
│ 7   │ 2  │ 1  │ 1  │ 1  │ 3  │ 2  │
│ 8   │ 3  │ 3  │ 3  │ 2  │ 5  │ 2  │
│ 9   │ 1  │ 2  │ 4  │ 8  │ 6  │ 2  │
│ 10  │ 3  │ 4  │ 3  │ 8  │ 3  │ 3  │
│ 11  │ 1  │ 2  │ 3  │ 5  │ 5  │ 3  │
│ 12  │ 2  │ 1  │ 2  │ 4  │ 6  │ 3  │
│ 13  │ 4  │ 4  │ 4  │ 2  │ 8  │ 3  │
│ 14  │ 1  │ 3  │ 3  │ 7  │ 1  │ 4  │
│ 15  │ 1  │ 2  │ 2  │ 2  │ 3  │ 4  │
│ 16  │ 4  │ 1  │ 1  │ 8  │ 5  │ 4  │
│ 17  │ 3  │ 4  │ 4  │ 1  │ 7  │ 4  │
│ 18  │ 3  │ 2  │ 1  │ 3  │ 1  │ 5  │
│ 19  │ 2  │ 1  │ 4  │ 5  │ 2  │ 5  │
│ 20  │ 1  │ 3  │ 2  │ 1  │ 4  │ 5  │
│ 21  │ 4  │ 4  │ 3  │ 7  │ 6  │ 5  │
│ 22  │ 2  │ 2  │ 2  │ 6  │ 7  │ 5  │
│ 23  │ 2  │ 3  │ 2  │ 8  │ 1  │ 6  │
│ 24  │ 1  │ 4  │ 1  │ 6  │ 2  │ 6  │
│ 25  │ 4  │ 1  │ 4  │ 3  │ 3  │ 6  │
│ 26  │ 3  │ 2  │ 3  │ 4  │ 8  │ 6  │
│ 27  │ 4  │ 2  │ 3  │ 1  │ 2  │ 7  │
│ 28  │ 3  │ 1  │ 4  │ 6  │ 4  │ 7  │
│ 29  │ 2  │ 3  │ 1  │ 5  │ 6  │ 7  │
│ 30  │ 1  │ 1  │ 2  │ 7  │ 8  │ 7  │
│ 31  │ 2  │ 4  │ 3  │ 3  │ 4  │ 8  │
│ 32  │ 2  │ 2  │ 4  │ 7  │ 5  │ 8  │
│ 33  │ 3  │ 1  │ 2  │ 1  │ 6  │ 8  │
│ 34  │ 4  │ 3  │ 1  │ 4  │ 7  │ 8  │
DELB = 0.3833591919045099
optFederov_D = 0.10022294950238088
optFederov_DELB = 0.274
Computed optFederov for nTrials 35
35×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 1  │ 1  │ 4  │ 2  │ 1  │
│ 2   │ 1  │ 2  │ 4  │ 6  │ 4  │ 1  │
│ 3   │ 2  │ 3  │ 2  │ 7  │ 5  │ 1  │
│ 4   │ 4  │ 4  │ 3  │ 1  │ 8  │ 1  │
│ 5   │ 1  │ 3  │ 1  │ 2  │ 1  │ 2  │
│ 6   │ 3  │ 4  │ 2  │ 6  │ 2  │ 2  │
│ 7   │ 3  │ 2  │ 4  │ 5  │ 3  │ 2  │
│ 8   │ 4  │ 1  │ 4  │ 8  │ 5  │ 2  │
│ 9   │ 2  │ 2  │ 3  │ 4  │ 6  │ 2  │
│ 10  │ 3  │ 4  │ 3  │ 8  │ 1  │ 3  │
│ 11  │ 4  │ 1  │ 2  │ 4  │ 4  │ 3  │
│ 12  │ 4  │ 3  │ 1  │ 6  │ 6  │ 3  │
│ 13  │ 2  │ 3  │ 4  │ 1  │ 7  │ 3  │
│ 14  │ 1  │ 1  │ 1  │ 7  │ 8  │ 3  │
│ 15  │ 1  │ 3  │ 3  │ 3  │ 1  │ 4  │
│ 16  │ 3  │ 2  │ 1  │ 1  │ 5  │ 4  │
│ 17  │ 4  │ 4  │ 4  │ 7  │ 7  │ 4  │
│ 18  │ 2  │ 2  │ 2  │ 8  │ 8  │ 4  │
│ 19  │ 2  │ 1  │ 1  │ 5  │ 1  │ 5  │
│ 20  │ 1  │ 2  │ 4  │ 3  │ 2  │ 5  │
│ 21  │ 4  │ 4  │ 2  │ 2  │ 3  │ 5  │
│ 22  │ 3  │ 3  │ 3  │ 7  │ 4  │ 5  │
│ 23  │ 4  │ 2  │ 4  │ 7  │ 1  │ 6  │
│ 24  │ 2  │ 1  │ 4  │ 2  │ 2  │ 6  │
│ 25  │ 1  │ 3  │ 1  │ 8  │ 3  │ 6  │
│ 26  │ 1  │ 4  │ 3  │ 5  │ 5  │ 6  │
│ 27  │ 3  │ 1  │ 2  │ 3  │ 7  │ 6  │
│ 28  │ 2  │ 4  │ 1  │ 3  │ 4  │ 7  │
│ 29  │ 1  │ 1  │ 2  │ 1  │ 6  │ 7  │
│ 30  │ 4  │ 2  │ 3  │ 2  │ 7  │ 7  │
│ 31  │ 3  │ 3  │ 4  │ 4  │ 8  │ 7  │
│ 32  │ 4  │ 3  │ 2  │ 5  │ 2  │ 8  │
│ 33  │ 2  │ 1  │ 3  │ 6  │ 3  │ 8  │
│ 34  │ 3  │ 4  │ 4  │ 2  │ 6  │ 8  │
│ 35  │ 1  │ 4  │ 1  │ 4  │ 7  │ 8  │
DELB = 0.3921260454814134
optFederov_D = 0.10251489904183955
optFederov_DELB = 0.293
Computed optFederov for nTrials 36
36×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 2  │ 2  │ 2  │ 3  │ 1  │
│ 2   │ 1  │ 3  │ 3  │ 8  │ 5  │ 1  │
│ 3   │ 2  │ 4  │ 1  │ 4  │ 6  │ 1  │
│ 4   │ 4  │ 1  │ 4  │ 5  │ 8  │ 1  │
│ 5   │ 1  │ 1  │ 1  │ 3  │ 3  │ 2  │
│ 6   │ 2  │ 2  │ 3  │ 7  │ 4  │ 2  │
│ 7   │ 3  │ 4  │ 2  │ 5  │ 5  │ 2  │
│ 8   │ 2  │ 3  │ 4  │ 2  │ 6  │ 2  │
│ 9   │ 4  │ 2  │ 1  │ 7  │ 1  │ 3  │
│ 10  │ 2  │ 1  │ 2  │ 3  │ 2  │ 3  │
│ 11  │ 4  │ 4  │ 4  │ 8  │ 3  │ 3  │
│ 12  │ 1  │ 3  │ 2  │ 6  │ 4  │ 3  │
│ 13  │ 3  │ 1  │ 3  │ 4  │ 7  │ 3  │
│ 14  │ 3  │ 3  │ 3  │ 1  │ 1  │ 4  │
│ 15  │ 2  │ 2  │ 4  │ 4  │ 5  │ 4  │
│ 16  │ 3  │ 1  │ 2  │ 7  │ 6  │ 4  │
│ 17  │ 4  │ 4  │ 1  │ 2  │ 7  │ 4  │
│ 18  │ 1  │ 4  │ 2  │ 4  │ 1  │ 5  │
│ 19  │ 2  │ 3  │ 1  │ 5  │ 2  │ 5  │
│ 20  │ 4  │ 1  │ 3  │ 1  │ 5  │ 5  │
│ 21  │ 1  │ 4  │ 4  │ 7  │ 7  │ 5  │
│ 22  │ 3  │ 2  │ 1  │ 6  │ 8  │ 5  │
│ 23  │ 4  │ 4  │ 3  │ 6  │ 2  │ 6  │
│ 24  │ 3  │ 4  │ 4  │ 3  │ 4  │ 6  │
│ 25  │ 3  │ 3  │ 1  │ 7  │ 5  │ 6  │
│ 26  │ 2  │ 2  │ 2  │ 8  │ 7  │ 6  │
│ 27  │ 1  │ 1  │ 3  │ 2  │ 8  │ 6  │
│ 28  │ 2  │ 1  │ 4  │ 6  │ 1  │ 7  │
│ 29  │ 3  │ 4  │ 3  │ 8  │ 2  │ 7  │
│ 30  │ 4  │ 3  │ 2  │ 4  │ 3  │ 7  │
│ 31  │ 1  │ 2  │ 3  │ 5  │ 6  │ 7  │
│ 32  │ 2  │ 4  │ 1  │ 1  │ 8  │ 7  │
│ 33  │ 1  │ 2  │ 4  │ 1  │ 2  │ 8  │
│ 34  │ 2  │ 4  │ 3  │ 5  │ 3  │ 8  │
│ 35  │ 4  │ 1  │ 1  │ 8  │ 4  │ 8  │
│ 36  │ 4  │ 3  │ 3  │ 3  │ 8  │ 8  │
DELB = 0.39382168395653616
optFederov_D = 0.10295819580595851
optFederov_DELB = 0.317
Computed optFederov for nTrials 37
37×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 1  │ 3  │ 1  │ 6  │ 1  │ 1  │
│ 2   │ 2  │ 4  │ 4  │ 8  │ 3  │ 1  │
│ 3   │ 4  │ 2  │ 3  │ 5  │ 4  │ 1  │
│ 4   │ 1  │ 2  │ 4  │ 7  │ 5  │ 1  │
│ 5   │ 3  │ 1  │ 2  │ 1  │ 6  │ 1  │
│ 6   │ 3  │ 2  │ 4  │ 2  │ 2  │ 2  │
│ 7   │ 1  │ 3  │ 2  │ 5  │ 3  │ 2  │
│ 8   │ 4  │ 4  │ 1  │ 7  │ 4  │ 2  │
│ 9   │ 2  │ 1  │ 3  │ 6  │ 7  │ 2  │
│ 10  │ 4  │ 4  │ 2  │ 2  │ 1  │ 3  │
│ 11  │ 2  │ 2  │ 1  │ 1  │ 2  │ 3  │
│ 12  │ 3  │ 1  │ 3  │ 7  │ 3  │ 3  │
│ 13  │ 1  │ 4  │ 4  │ 4  │ 7  │ 3  │
│ 14  │ 4  │ 3  │ 1  │ 8  │ 8  │ 3  │
│ 15  │ 2  │ 1  │ 2  │ 4  │ 4  │ 4  │
│ 16  │ 4  │ 1  │ 1  │ 3  │ 5  │ 4  │
│ 17  │ 1  │ 2  │ 3  │ 8  │ 6  │ 4  │
│ 18  │ 3  │ 3  │ 1  │ 2  │ 7  │ 4  │
│ 19  │ 3  │ 4  │ 4  │ 6  │ 8  │ 4  │
│ 20  │ 3  │ 3  │ 3  │ 4  │ 1  │ 5  │
│ 21  │ 4  │ 1  │ 2  │ 6  │ 2  │ 5  │
│ 22  │ 1  │ 3  │ 4  │ 1  │ 4  │ 5  │
│ 23  │ 2  │ 4  │ 1  │ 5  │ 6  │ 5  │
│ 24  │ 2  │ 2  │ 2  │ 3  │ 8  │ 5  │
│ 25  │ 3  │ 1  │ 4  │ 5  │ 1  │ 6  │
│ 26  │ 1  │ 4  │ 3  │ 3  │ 2  │ 6  │
│ 27  │ 4  │ 2  │ 1  │ 4  │ 3  │ 6  │
│ 28  │ 2  │ 3  │ 3  │ 2  │ 5  │ 6  │
│ 29  │ 4  │ 2  │ 2  │ 7  │ 7  │ 6  │
│ 30  │ 2  │ 2  │ 3  │ 1  │ 1  │ 7  │
│ 31  │ 3  │ 4  │ 2  │ 8  │ 5  │ 7  │
│ 32  │ 4  │ 3  │ 4  │ 3  │ 6  │ 7  │
│ 33  │ 1  │ 1  │ 1  │ 2  │ 8  │ 7  │
│ 34  │ 1  │ 1  │ 4  │ 8  │ 1  │ 8  │
│ 35  │ 2  │ 3  │ 2  │ 7  │ 2  │ 8  │
│ 36  │ 3  │ 2  │ 1  │ 6  │ 4  │ 8  │
│ 37  │ 4  │ 4  │ 3  │ 1  │ 8  │ 8  │
DELB = 0.3973172644353388
optFederov_D = 0.10387205777459456
optFederov_DELB = 0.37
Computed optFederov for nTrials 38
38×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 2  │ 2  │ 1  │ 3  │ 1  │ 1  │
│ 2   │ 3  │ 3  │ 3  │ 2  │ 4  │ 1  │
│ 3   │ 1  │ 2  │ 2  │ 8  │ 6  │ 1  │
│ 4   │ 2  │ 1  │ 2  │ 5  │ 7  │ 1  │
│ 5   │ 4  │ 4  │ 4  │ 7  │ 8  │ 1  │
│ 6   │ 4  │ 3  │ 3  │ 1  │ 3  │ 2  │
│ 7   │ 2  │ 4  │ 2  │ 6  │ 5  │ 2  │
│ 8   │ 4  │ 1  │ 4  │ 3  │ 6  │ 2  │
│ 9   │ 3  │ 2  │ 1  │ 4  │ 7  │ 2  │
│ 10  │ 1  │ 2  │ 3  │ 5  │ 8  │ 2  │
│ 11  │ 3  │ 4  │ 3  │ 7  │ 1  │ 3  │
│ 12  │ 1  │ 2  │ 4  │ 2  │ 2  │ 3  │
│ 13  │ 2  │ 1  │ 2  │ 1  │ 4  │ 3  │
│ 14  │ 4  │ 3  │ 1  │ 5  │ 5  │ 3  │
│ 15  │ 2  │ 3  │ 3  │ 6  │ 2  │ 4  │
│ 16  │ 3  │ 2  │ 2  │ 7  │ 3  │ 4  │
│ 17  │ 4  │ 4  │ 1  │ 8  │ 4  │ 4  │
│ 18  │ 1  │ 1  │ 4  │ 4  │ 5  │ 4  │
│ 19  │ 3  │ 4  │ 1  │ 1  │ 8  │ 4  │
│ 20  │ 1  │ 1  │ 1  │ 6  │ 3  │ 5  │
│ 21  │ 4  │ 2  │ 3  │ 1  │ 5  │ 5  │
│ 22  │ 2  │ 4  │ 3  │ 4  │ 6  │ 5  │
│ 23  │ 2  │ 3  │ 4  │ 2  │ 7  │ 5  │
│ 24  │ 3  │ 3  │ 2  │ 3  │ 8  │ 5  │
│ 25  │ 1  │ 3  │ 4  │ 1  │ 1  │ 6  │
│ 26  │ 4  │ 3  │ 2  │ 4  │ 2  │ 6  │
│ 27  │ 2  │ 4  │ 1  │ 2  │ 3  │ 6  │
│ 28  │ 4  │ 2  │ 4  │ 7  │ 4  │ 6  │
│ 29  │ 3  │ 1  │ 3  │ 8  │ 5  │ 6  │
│ 30  │ 3  │ 4  │ 4  │ 5  │ 2  │ 7  │
│ 31  │ 2  │ 2  │ 4  │ 4  │ 3  │ 7  │
│ 32  │ 1  │ 3  │ 1  │ 7  │ 6  │ 7  │
│ 33  │ 4  │ 1  │ 3  │ 6  │ 8  │ 7  │
│ 34  │ 4  │ 1  │ 2  │ 2  │ 1  │ 8  │
│ 35  │ 2  │ 1  │ 1  │ 7  │ 2  │ 8  │
│ 36  │ 3  │ 2  │ 4  │ 6  │ 6  │ 8  │
│ 37  │ 1  │ 4  │ 3  │ 3  │ 7  │ 8  │
│ 38  │ 2  │ 3  │ 4  │ 8  │ 8  │ 8  │
DELB = 0.3982346526239169
optFederov_D = 0.10411189381358743
optFederov_DELB = 0.339
Computed optFederov for nTrials 39
39×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 4  │ 2  │ 7  │ 1  │ 1  │
│ 2   │ 2  │ 1  │ 3  │ 2  │ 4  │ 1  │
│ 3   │ 2  │ 3  │ 4  │ 5  │ 6  │ 1  │
│ 4   │ 1  │ 2  │ 3  │ 1  │ 7  │ 1  │
│ 5   │ 4  │ 1  │ 1  │ 3  │ 8  │ 1  │
│ 6   │ 1  │ 1  │ 4  │ 3  │ 1  │ 2  │
│ 7   │ 4  │ 3  │ 3  │ 5  │ 2  │ 2  │
│ 8   │ 3  │ 3  │ 1  │ 6  │ 3  │ 2  │
│ 9   │ 1  │ 2  │ 1  │ 2  │ 6  │ 2  │
│ 10  │ 2  │ 4  │ 2  │ 4  │ 8  │ 2  │
│ 11  │ 3  │ 3  │ 2  │ 2  │ 1  │ 3  │
│ 12  │ 1  │ 1  │ 3  │ 4  │ 3  │ 3  │
│ 13  │ 4  │ 2  │ 4  │ 7  │ 5  │ 3  │
│ 14  │ 4  │ 1  │ 2  │ 6  │ 6  │ 3  │
│ 15  │ 2  │ 4  │ 1  │ 3  │ 7  │ 3  │
│ 16  │ 3  │ 2  │ 4  │ 1  │ 8  │ 3  │
│ 17  │ 4  │ 2  │ 1  │ 4  │ 1  │ 4  │
│ 18  │ 1  │ 4  │ 2  │ 8  │ 3  │ 4  │
│ 19  │ 4  │ 3  │ 2  │ 1  │ 4  │ 4  │
│ 20  │ 3  │ 1  │ 3  │ 5  │ 5  │ 4  │
│ 21  │ 2  │ 1  │ 4  │ 7  │ 7  │ 4  │
│ 22  │ 2  │ 1  │ 1  │ 1  │ 3  │ 5  │
│ 23  │ 4  │ 2  │ 4  │ 8  │ 4  │ 5  │
│ 24  │ 3  │ 4  │ 2  │ 4  │ 5  │ 5  │
│ 25  │ 1  │ 3  │ 3  │ 7  │ 8  │ 5  │
│ 26  │ 1  │ 4  │ 4  │ 6  │ 2  │ 6  │
│ 27  │ 2  │ 3  │ 1  │ 8  │ 5  │ 6  │
│ 28  │ 3  │ 2  │ 3  │ 3  │ 6  │ 6  │
│ 29  │ 4  │ 1  │ 2  │ 5  │ 7  │ 6  │
│ 30  │ 2  │ 2  │ 2  │ 3  │ 2  │ 7  │
│ 31  │ 1  │ 4  │ 1  │ 5  │ 4  │ 7  │
│ 32  │ 4  │ 4  │ 3  │ 1  │ 6  │ 7  │
│ 33  │ 3  │ 3  │ 4  │ 4  │ 7  │ 7  │
│ 34  │ 2  │ 2  │ 2  │ 6  │ 8  │ 7  │
│ 35  │ 2  │ 4  │ 3  │ 6  │ 1  │ 8  │
│ 36  │ 3  │ 1  │ 1  │ 8  │ 2  │ 8  │
│ 37  │ 4  │ 4  │ 4  │ 2  │ 3  │ 8  │
│ 38  │ 3  │ 2  │ 2  │ 7  │ 4  │ 8  │
│ 39  │ 1  │ 3  │ 2  │ 3  │ 5  │ 8  │
DELB = 0.40008410280484735
optFederov_D = 0.10459540211599629
optFederov_DELB = 0.372
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 7:7
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.315255542 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 8:8
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 1.855271826 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 9:9
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 1.935292796 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 10:10
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.164196474 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 11:11
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.043290325 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 12:12
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.081022054 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 13:13
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.156871463 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 14:14
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.415378688 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 15:15
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.285965832 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 16:16
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.294689362 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 17:17
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.386129296 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 18:18
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.894257473 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 19:19
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.443413238 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 20:20
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.484601837 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 21:21
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.544456664 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 22:22
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.599882392 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 23:23
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.671368958 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 24:24
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.73097693 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 25:25
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.84751435 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 26:26
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.055920235 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 27:27
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 2.983819445 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 28:28
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.152874239 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 29:29
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.180133638 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 30:30
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 5.149950302 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 31:31
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 5.680529892 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 32:32
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.450950148 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 33:33
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.54099149 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 34:34
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.630532118 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 35:35
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.713720037 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 36:36
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.89186616 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 37:37
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 3.934893886 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 38:38
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 4.02683367 seconds
Factors: DataStructures.OrderedDict(:f1=>Any["1", "2", "3", "4"],:f2=>Any["1", "2", "3", "4"],:f3=>Any["1", "2", "3", "4"],:f4=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f5=>Any["1", "2", "3", "4", "5", "6", "7", "8"],:f6=>Any["1", "2", "3", "4", "5", "6", "7", "8"])
Full Factorial Size: 32768
Total Subsets: Inf
Range of Design Sizes: 39:39
Number of Designs to Sample: 800
WARNING: Skipping bounds check!
Elapsed Time: 4.25551756 seconds
SampleComparison(false, false, UnitRange{Int64}[7:7, 8:8, 9:9, 10:10, 11:11, 12:12, 13:13, 14:14, 15:15, 16:16  …  30:30, 31:31, 32:32, 33:33, 34:34, 35:35, 36:36, 37:37, 38:38, 39:39], Any[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.12206e-12, 1.56621e-9, 6.49139e-9, 1.7444e-8  …  0.0742939, 0.206274, 0.228914, 0.235322, 0.250883, 0.256811, 0.258918, 0.268537, 0.281627, 0.280657], Any[0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
, 0×0 DataFrames.DataFrame
  …  0×0 DataFrames.DataFrame
, 31×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 4  │ 4  │ 2  │ 5  │ 4  │ 1  │
│ 2   │ 1  │ 1  │ 1  │ 4  │ 6  │ 1  │
│ 3   │ 3  │ 3  │ 3  │ 1  │ 7  │ 1  │
│ 4   │ 2  │ 4  │ 4  │ 2  │ 2  │ 2  │
│ 5   │ 4  │ 3  │ 2  │ 3  │ 3  │ 2  │
│ 6   │ 3  │ 2  │ 3  │ 4  │ 4  │ 2  │
│ 7   │ 1  │ 2  │ 1  │ 1  │ 5  │ 2  │
│ 8   │ 1  │ 1  │ 2  │ 7  │ 1  │ 3  │
│ 9   │ 2  │ 2  │ 4  │ 6  │ 3  │ 3  │
│ 10  │ 4  │ 4  │ 3  │ 8  │ 7  │ 3  │
│ 11  │ 3  │ 3  │ 1  │ 5  │ 8  │ 3  │
│ 12  │ 2  │ 4  │ 2  │ 4  │ 1  │ 4  │
│ 13  │ 2  │ 1  │ 1  │ 8  │ 4  │ 4  │
│ 14  │ 3  │ 4  │ 3  │ 6  │ 6  │ 4  │
│ 15  │ 1  │ 2  │ 4  │ 5  │ 7  │ 4  │
│ 16  │ 2  │ 1  │ 3  │ 5  │ 1  │ 5  │
│ 17  │ 3  │ 2  │ 2  │ 8  │ 2  │ 5  │
│ 18  │ 1  │ 4  │ 1  │ 3  │ 4  │ 5  │
│ 19  │ 4  │ 3  │ 4  │ 7  │ 8  │ 5  │
│ 20  │ 4  │ 3  │ 1  │ 6  │ 2  │ 6  │
│ 21  │ 3  │ 1  │ 4  │ 1  │ 3  │ 6  │
│ 22  │ 2  │ 2  │ 3  │ 3  │ 8  │ 6  │
│ 23  │ 4  │ 2  │ 1  │ 2  │ 1  │ 7  │
│ 24  │ 1  │ 4  │ 3  │ 7  │ 3  │ 7  │
│ 25  │ 3  │ 1  │ 4  │ 3  │ 5  │ 7  │
│ 26  │ 2  │ 3  │ 2  │ 1  │ 6  │ 7  │
│ 27  │ 1  │ 1  │ 2  │ 6  │ 8  │ 7  │
│ 28  │ 1  │ 3  │ 4  │ 8  │ 1  │ 8  │
│ 29  │ 4  │ 1  │ 3  │ 1  │ 2  │ 8  │
│ 30  │ 1  │ 3  │ 2  │ 2  │ 5  │ 8  │
│ 31  │ 2  │ 4  │ 1  │ 7  │ 7  │ 8  │, 32×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 2  │ 4  │ 4  │ 2  │ 1  │ 1  │
│ 2   │ 1  │ 1  │ 3  │ 4  │ 4  │ 1  │
│ 3   │ 4  │ 2  │ 2  │ 6  │ 5  │ 1  │
│ 4   │ 3  │ 3  │ 1  │ 3  │ 7  │ 1  │
│ 5   │ 4  │ 2  │ 3  │ 5  │ 1  │ 2  │
│ 6   │ 1  │ 2  │ 2  │ 2  │ 2  │ 2  │
│ 7   │ 4  │ 3  │ 2  │ 8  │ 3  │ 2  │
│ 8   │ 2  │ 4  │ 1  │ 1  │ 5  │ 2  │
│ 9   │ 3  │ 1  │ 4  │ 6  │ 6  │ 2  │
│ 10  │ 1  │ 2  │ 1  │ 3  │ 1  │ 3  │
│ 11  │ 2  │ 3  │ 4  │ 7  │ 2  │ 3  │
│ 12  │ 4  │ 2  │ 3  │ 1  │ 6  │ 3  │
│ 13  │ 3  │ 4  │ 2  │ 5  │ 8  │ 3  │
│ 14  │ 4  │ 1  │ 1  │ 8  │ 2  │ 4  │
│ 15  │ 3  │ 3  │ 3  │ 2  │ 5  │ 4  │
│ 16  │ 2  │ 4  │ 2  │ 7  │ 6  │ 4  │
│ 17  │ 1  │ 2  │ 4  │ 1  │ 8  │ 4  │
│ 18  │ 3  │ 1  │ 2  │ 1  │ 1  │ 5  │
│ 19  │ 1  │ 4  │ 3  │ 6  │ 3  │ 5  │
│ 20  │ 4  │ 4  │ 4  │ 3  │ 4  │ 5  │
│ 21  │ 2  │ 2  │ 1  │ 8  │ 8  │ 5  │
│ 22  │ 2  │ 2  │ 4  │ 5  │ 3  │ 6  │
│ 23  │ 1  │ 4  │ 3  │ 8  │ 7  │ 6  │
│ 24  │ 4  │ 3  │ 1  │ 4  │ 8  │ 6  │
│ 25  │ 3  │ 2  │ 1  │ 7  │ 4  │ 7  │
│ 26  │ 1  │ 3  │ 1  │ 5  │ 6  │ 7  │
│ 27  │ 2  │ 2  │ 4  │ 4  │ 7  │ 7  │
│ 28  │ 2  │ 1  │ 3  │ 3  │ 8  │ 7  │
│ 29  │ 3  │ 4  │ 3  │ 4  │ 2  │ 8  │
│ 30  │ 2  │ 3  │ 2  │ 6  │ 4  │ 8  │
│ 31  │ 1  │ 1  │ 4  │ 7  │ 5  │ 8  │
│ 32  │ 4  │ 1  │ 1  │ 2  │ 7  │ 8  │, 33×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 4  │ 4  │ 3  │ 3  │ 1  │ 1  │
│ 2   │ 2  │ 1  │ 2  │ 2  │ 2  │ 1  │
│ 3   │ 3  │ 3  │ 1  │ 7  │ 4  │ 1  │
│ 4   │ 4  │ 2  │ 4  │ 8  │ 8  │ 1  │
│ 5   │ 2  │ 3  │ 4  │ 6  │ 1  │ 2  │
│ 6   │ 4  │ 1  │ 3  │ 5  │ 3  │ 2  │
│ 7   │ 2  │ 2  │ 2  │ 4  │ 5  │ 2  │
│ 8   │ 1  │ 4  │ 2  │ 7  │ 6  │ 2  │
│ 9   │ 1  │ 2  │ 4  │ 1  │ 3  │ 3  │
│ 10  │ 3  │ 1  │ 3  │ 8  │ 5  │ 3  │
│ 11  │ 4  │ 3  │ 3  │ 4  │ 6  │ 3  │
│ 12  │ 2  │ 4  │ 4  │ 5  │ 7  │ 3  │
│ 13  │ 3  │ 4  │ 1  │ 2  │ 8  │ 3  │
│ 14  │ 3  │ 2  │ 1  │ 3  │ 2  │ 4  │
│ 15  │ 3  │ 4  │ 4  │ 4  │ 3  │ 4  │
│ 16  │ 4  │ 3  │ 4  │ 2  │ 5  │ 4  │
│ 17  │ 2  │ 1  │ 3  │ 7  │ 8  │ 4  │
│ 18  │ 4  │ 2  │ 2  │ 6  │ 3  │ 5  │
│ 19  │ 1  │ 1  │ 4  │ 3  │ 4  │ 5  │
│ 20  │ 2  │ 4  │ 1  │ 8  │ 6  │ 5  │
│ 21  │ 3  │ 3  │ 3  │ 1  │ 8  │ 5  │
│ 22  │ 4  │ 4  │ 4  │ 7  │ 2  │ 6  │
│ 23  │ 2  │ 2  │ 3  │ 2  │ 4  │ 6  │
│ 24  │ 3  │ 1  │ 4  │ 6  │ 6  │ 6  │
│ 25  │ 1  │ 3  │ 2  │ 8  │ 7  │ 6  │
│ 26  │ 3  │ 2  │ 2  │ 5  │ 1  │ 7  │
│ 27  │ 1  │ 4  │ 3  │ 6  │ 2  │ 7  │
│ 28  │ 2  │ 3  │ 4  │ 3  │ 3  │ 7  │
│ 29  │ 4  │ 1  │ 1  │ 1  │ 7  │ 7  │
│ 30  │ 1  │ 1  │ 1  │ 4  │ 1  │ 8  │
│ 31  │ 4  │ 4  │ 2  │ 1  │ 4  │ 8  │
│ 32  │ 1  │ 3  │ 1  │ 5  │ 5  │ 8  │
│ 33  │ 3  │ 2  │ 3  │ 2  │ 7  │ 8  │, 34×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 2  │ 1  │ 7  │ 4  │ 1  │
│ 2   │ 1  │ 4  │ 4  │ 4  │ 5  │ 1  │
│ 3   │ 1  │ 1  │ 3  │ 2  │ 7  │ 1  │
│ 4   │ 4  │ 3  │ 3  │ 6  │ 8  │ 1  │
│ 5   │ 4  │ 4  │ 2  │ 5  │ 1  │ 2  │
│ 6   │ 3  │ 3  │ 2  │ 3  │ 2  │ 2  │
│ 7   │ 2  │ 1  │ 1  │ 1  │ 3  │ 2  │
│ 8   │ 3  │ 3  │ 3  │ 2  │ 5  │ 2  │
│ 9   │ 1  │ 2  │ 4  │ 8  │ 6  │ 2  │
│ 10  │ 3  │ 4  │ 3  │ 8  │ 3  │ 3  │
│ 11  │ 1  │ 2  │ 3  │ 5  │ 5  │ 3  │
│ 12  │ 2  │ 1  │ 2  │ 4  │ 6  │ 3  │
│ 13  │ 4  │ 4  │ 4  │ 2  │ 8  │ 3  │
│ 14  │ 1  │ 3  │ 3  │ 7  │ 1  │ 4  │
│ 15  │ 1  │ 2  │ 2  │ 2  │ 3  │ 4  │
│ 16  │ 4  │ 1  │ 1  │ 8  │ 5  │ 4  │
│ 17  │ 3  │ 4  │ 4  │ 1  │ 7  │ 4  │
│ 18  │ 3  │ 2  │ 1  │ 3  │ 1  │ 5  │
│ 19  │ 2  │ 1  │ 4  │ 5  │ 2  │ 5  │
│ 20  │ 1  │ 3  │ 2  │ 1  │ 4  │ 5  │
│ 21  │ 4  │ 4  │ 3  │ 7  │ 6  │ 5  │
│ 22  │ 2  │ 2  │ 2  │ 6  │ 7  │ 5  │
│ 23  │ 2  │ 3  │ 2  │ 8  │ 1  │ 6  │
│ 24  │ 1  │ 4  │ 1  │ 6  │ 2  │ 6  │
│ 25  │ 4  │ 1  │ 4  │ 3  │ 3  │ 6  │
│ 26  │ 3  │ 2  │ 3  │ 4  │ 8  │ 6  │
│ 27  │ 4  │ 2  │ 3  │ 1  │ 2  │ 7  │
│ 28  │ 3  │ 1  │ 4  │ 6  │ 4  │ 7  │
│ 29  │ 2  │ 3  │ 1  │ 5  │ 6  │ 7  │
│ 30  │ 1  │ 1  │ 2  │ 7  │ 8  │ 7  │
│ 31  │ 2  │ 4  │ 3  │ 3  │ 4  │ 8  │
│ 32  │ 2  │ 2  │ 4  │ 7  │ 5  │ 8  │
│ 33  │ 3  │ 1  │ 2  │ 1  │ 6  │ 8  │
│ 34  │ 4  │ 3  │ 1  │ 4  │ 7  │ 8  │, 35×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 1  │ 1  │ 4  │ 2  │ 1  │
│ 2   │ 1  │ 2  │ 4  │ 6  │ 4  │ 1  │
│ 3   │ 2  │ 3  │ 2  │ 7  │ 5  │ 1  │
│ 4   │ 4  │ 4  │ 3  │ 1  │ 8  │ 1  │
│ 5   │ 1  │ 3  │ 1  │ 2  │ 1  │ 2  │
│ 6   │ 3  │ 4  │ 2  │ 6  │ 2  │ 2  │
│ 7   │ 3  │ 2  │ 4  │ 5  │ 3  │ 2  │
│ 8   │ 4  │ 1  │ 4  │ 8  │ 5  │ 2  │
│ 9   │ 2  │ 2  │ 3  │ 4  │ 6  │ 2  │
│ 10  │ 3  │ 4  │ 3  │ 8  │ 1  │ 3  │
│ 11  │ 4  │ 1  │ 2  │ 4  │ 4  │ 3  │
│ 12  │ 4  │ 3  │ 1  │ 6  │ 6  │ 3  │
│ 13  │ 2  │ 3  │ 4  │ 1  │ 7  │ 3  │
│ 14  │ 1  │ 1  │ 1  │ 7  │ 8  │ 3  │
│ 15  │ 1  │ 3  │ 3  │ 3  │ 1  │ 4  │
│ 16  │ 3  │ 2  │ 1  │ 1  │ 5  │ 4  │
│ 17  │ 4  │ 4  │ 4  │ 7  │ 7  │ 4  │
│ 18  │ 2  │ 2  │ 2  │ 8  │ 8  │ 4  │
│ 19  │ 2  │ 1  │ 1  │ 5  │ 1  │ 5  │
│ 20  │ 1  │ 2  │ 4  │ 3  │ 2  │ 5  │
│ 21  │ 4  │ 4  │ 2  │ 2  │ 3  │ 5  │
│ 22  │ 3  │ 3  │ 3  │ 7  │ 4  │ 5  │
│ 23  │ 4  │ 2  │ 4  │ 7  │ 1  │ 6  │
│ 24  │ 2  │ 1  │ 4  │ 2  │ 2  │ 6  │
│ 25  │ 1  │ 3  │ 1  │ 8  │ 3  │ 6  │
│ 26  │ 1  │ 4  │ 3  │ 5  │ 5  │ 6  │
│ 27  │ 3  │ 1  │ 2  │ 3  │ 7  │ 6  │
│ 28  │ 2  │ 4  │ 1  │ 3  │ 4  │ 7  │
│ 29  │ 1  │ 1  │ 2  │ 1  │ 6  │ 7  │
│ 30  │ 4  │ 2  │ 3  │ 2  │ 7  │ 7  │
│ 31  │ 3  │ 3  │ 4  │ 4  │ 8  │ 7  │
│ 32  │ 4  │ 3  │ 2  │ 5  │ 2  │ 8  │
│ 33  │ 2  │ 1  │ 3  │ 6  │ 3  │ 8  │
│ 34  │ 3  │ 4  │ 4  │ 2  │ 6  │ 8  │
│ 35  │ 1  │ 4  │ 1  │ 4  │ 7  │ 8  │, 36×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 2  │ 2  │ 2  │ 3  │ 1  │
│ 2   │ 1  │ 3  │ 3  │ 8  │ 5  │ 1  │
│ 3   │ 2  │ 4  │ 1  │ 4  │ 6  │ 1  │
│ 4   │ 4  │ 1  │ 4  │ 5  │ 8  │ 1  │
│ 5   │ 1  │ 1  │ 1  │ 3  │ 3  │ 2  │
│ 6   │ 2  │ 2  │ 3  │ 7  │ 4  │ 2  │
│ 7   │ 3  │ 4  │ 2  │ 5  │ 5  │ 2  │
│ 8   │ 2  │ 3  │ 4  │ 2  │ 6  │ 2  │
│ 9   │ 4  │ 2  │ 1  │ 7  │ 1  │ 3  │
│ 10  │ 2  │ 1  │ 2  │ 3  │ 2  │ 3  │
│ 11  │ 4  │ 4  │ 4  │ 8  │ 3  │ 3  │
│ 12  │ 1  │ 3  │ 2  │ 6  │ 4  │ 3  │
│ 13  │ 3  │ 1  │ 3  │ 4  │ 7  │ 3  │
│ 14  │ 3  │ 3  │ 3  │ 1  │ 1  │ 4  │
│ 15  │ 2  │ 2  │ 4  │ 4  │ 5  │ 4  │
│ 16  │ 3  │ 1  │ 2  │ 7  │ 6  │ 4  │
│ 17  │ 4  │ 4  │ 1  │ 2  │ 7  │ 4  │
│ 18  │ 1  │ 4  │ 2  │ 4  │ 1  │ 5  │
│ 19  │ 2  │ 3  │ 1  │ 5  │ 2  │ 5  │
│ 20  │ 4  │ 1  │ 3  │ 1  │ 5  │ 5  │
│ 21  │ 1  │ 4  │ 4  │ 7  │ 7  │ 5  │
│ 22  │ 3  │ 2  │ 1  │ 6  │ 8  │ 5  │
│ 23  │ 4  │ 4  │ 3  │ 6  │ 2  │ 6  │
│ 24  │ 3  │ 4  │ 4  │ 3  │ 4  │ 6  │
│ 25  │ 3  │ 3  │ 1  │ 7  │ 5  │ 6  │
│ 26  │ 2  │ 2  │ 2  │ 8  │ 7  │ 6  │
│ 27  │ 1  │ 1  │ 3  │ 2  │ 8  │ 6  │
│ 28  │ 2  │ 1  │ 4  │ 6  │ 1  │ 7  │
│ 29  │ 3  │ 4  │ 3  │ 8  │ 2  │ 7  │
│ 30  │ 4  │ 3  │ 2  │ 4  │ 3  │ 7  │
│ 31  │ 1  │ 2  │ 3  │ 5  │ 6  │ 7  │
│ 32  │ 2  │ 4  │ 1  │ 1  │ 8  │ 7  │
│ 33  │ 1  │ 2  │ 4  │ 1  │ 2  │ 8  │
│ 34  │ 2  │ 4  │ 3  │ 5  │ 3  │ 8  │
│ 35  │ 4  │ 1  │ 1  │ 8  │ 4  │ 8  │
│ 36  │ 4  │ 3  │ 3  │ 3  │ 8  │ 8  │, 37×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 1  │ 3  │ 1  │ 6  │ 1  │ 1  │
│ 2   │ 2  │ 4  │ 4  │ 8  │ 3  │ 1  │
│ 3   │ 4  │ 2  │ 3  │ 5  │ 4  │ 1  │
│ 4   │ 1  │ 2  │ 4  │ 7  │ 5  │ 1  │
│ 5   │ 3  │ 1  │ 2  │ 1  │ 6  │ 1  │
│ 6   │ 3  │ 2  │ 4  │ 2  │ 2  │ 2  │
│ 7   │ 1  │ 3  │ 2  │ 5  │ 3  │ 2  │
│ 8   │ 4  │ 4  │ 1  │ 7  │ 4  │ 2  │
│ 9   │ 2  │ 1  │ 3  │ 6  │ 7  │ 2  │
│ 10  │ 4  │ 4  │ 2  │ 2  │ 1  │ 3  │
│ 11  │ 2  │ 2  │ 1  │ 1  │ 2  │ 3  │
│ 12  │ 3  │ 1  │ 3  │ 7  │ 3  │ 3  │
│ 13  │ 1  │ 4  │ 4  │ 4  │ 7  │ 3  │
│ 14  │ 4  │ 3  │ 1  │ 8  │ 8  │ 3  │
│ 15  │ 2  │ 1  │ 2  │ 4  │ 4  │ 4  │
│ 16  │ 4  │ 1  │ 1  │ 3  │ 5  │ 4  │
│ 17  │ 1  │ 2  │ 3  │ 8  │ 6  │ 4  │
│ 18  │ 3  │ 3  │ 1  │ 2  │ 7  │ 4  │
│ 19  │ 3  │ 4  │ 4  │ 6  │ 8  │ 4  │
│ 20  │ 3  │ 3  │ 3  │ 4  │ 1  │ 5  │
│ 21  │ 4  │ 1  │ 2  │ 6  │ 2  │ 5  │
│ 22  │ 1  │ 3  │ 4  │ 1  │ 4  │ 5  │
│ 23  │ 2  │ 4  │ 1  │ 5  │ 6  │ 5  │
│ 24  │ 2  │ 2  │ 2  │ 3  │ 8  │ 5  │
│ 25  │ 3  │ 1  │ 4  │ 5  │ 1  │ 6  │
│ 26  │ 1  │ 4  │ 3  │ 3  │ 2  │ 6  │
│ 27  │ 4  │ 2  │ 1  │ 4  │ 3  │ 6  │
│ 28  │ 2  │ 3  │ 3  │ 2  │ 5  │ 6  │
│ 29  │ 4  │ 2  │ 2  │ 7  │ 7  │ 6  │
│ 30  │ 2  │ 2  │ 3  │ 1  │ 1  │ 7  │
│ 31  │ 3  │ 4  │ 2  │ 8  │ 5  │ 7  │
│ 32  │ 4  │ 3  │ 4  │ 3  │ 6  │ 7  │
│ 33  │ 1  │ 1  │ 1  │ 2  │ 8  │ 7  │
│ 34  │ 1  │ 1  │ 4  │ 8  │ 1  │ 8  │
│ 35  │ 2  │ 3  │ 2  │ 7  │ 2  │ 8  │
│ 36  │ 3  │ 2  │ 1  │ 6  │ 4  │ 8  │
│ 37  │ 4  │ 4  │ 3  │ 1  │ 8  │ 8  │, 38×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 2  │ 2  │ 1  │ 3  │ 1  │ 1  │
│ 2   │ 3  │ 3  │ 3  │ 2  │ 4  │ 1  │
│ 3   │ 1  │ 2  │ 2  │ 8  │ 6  │ 1  │
│ 4   │ 2  │ 1  │ 2  │ 5  │ 7  │ 1  │
│ 5   │ 4  │ 4  │ 4  │ 7  │ 8  │ 1  │
│ 6   │ 4  │ 3  │ 3  │ 1  │ 3  │ 2  │
│ 7   │ 2  │ 4  │ 2  │ 6  │ 5  │ 2  │
│ 8   │ 4  │ 1  │ 4  │ 3  │ 6  │ 2  │
│ 9   │ 3  │ 2  │ 1  │ 4  │ 7  │ 2  │
│ 10  │ 1  │ 2  │ 3  │ 5  │ 8  │ 2  │
│ 11  │ 3  │ 4  │ 3  │ 7  │ 1  │ 3  │
│ 12  │ 1  │ 2  │ 4  │ 2  │ 2  │ 3  │
│ 13  │ 2  │ 1  │ 2  │ 1  │ 4  │ 3  │
│ 14  │ 4  │ 3  │ 1  │ 5  │ 5  │ 3  │
│ 15  │ 2  │ 3  │ 3  │ 6  │ 2  │ 4  │
│ 16  │ 3  │ 2  │ 2  │ 7  │ 3  │ 4  │
│ 17  │ 4  │ 4  │ 1  │ 8  │ 4  │ 4  │
│ 18  │ 1  │ 1  │ 4  │ 4  │ 5  │ 4  │
│ 19  │ 3  │ 4  │ 1  │ 1  │ 8  │ 4  │
│ 20  │ 1  │ 1  │ 1  │ 6  │ 3  │ 5  │
│ 21  │ 4  │ 2  │ 3  │ 1  │ 5  │ 5  │
│ 22  │ 2  │ 4  │ 3  │ 4  │ 6  │ 5  │
│ 23  │ 2  │ 3  │ 4  │ 2  │ 7  │ 5  │
│ 24  │ 3  │ 3  │ 2  │ 3  │ 8  │ 5  │
│ 25  │ 1  │ 3  │ 4  │ 1  │ 1  │ 6  │
│ 26  │ 4  │ 3  │ 2  │ 4  │ 2  │ 6  │
│ 27  │ 2  │ 4  │ 1  │ 2  │ 3  │ 6  │
│ 28  │ 4  │ 2  │ 4  │ 7  │ 4  │ 6  │
│ 29  │ 3  │ 1  │ 3  │ 8  │ 5  │ 6  │
│ 30  │ 3  │ 4  │ 4  │ 5  │ 2  │ 7  │
│ 31  │ 2  │ 2  │ 4  │ 4  │ 3  │ 7  │
│ 32  │ 1  │ 3  │ 1  │ 7  │ 6  │ 7  │
│ 33  │ 4  │ 1  │ 3  │ 6  │ 8  │ 7  │
│ 34  │ 4  │ 1  │ 2  │ 2  │ 1  │ 8  │
│ 35  │ 2  │ 1  │ 1  │ 7  │ 2  │ 8  │
│ 36  │ 3  │ 2  │ 4  │ 6  │ 6  │ 8  │
│ 37  │ 1  │ 4  │ 3  │ 3  │ 7  │ 8  │
│ 38  │ 2  │ 3  │ 4  │ 8  │ 8  │ 8  │, 39×6 DataFrames.DataFrame
│ Row │ X1 │ X2 │ X3 │ X4 │ X5 │ X6 │
├─────┼────┼────┼────┼────┼────┼────┤
│ 1   │ 3  │ 4  │ 2  │ 7  │ 1  │ 1  │
│ 2   │ 2  │ 1  │ 3  │ 2  │ 4  │ 1  │
│ 3   │ 2  │ 3  │ 4  │ 5  │ 6  │ 1  │
│ 4   │ 1  │ 2  │ 3  │ 1  │ 7  │ 1  │
│ 5   │ 4  │ 1  │ 1  │ 3  │ 8  │ 1  │
│ 6   │ 1  │ 1  │ 4  │ 3  │ 1  │ 2  │
│ 7   │ 4  │ 3  │ 3  │ 5  │ 2  │ 2  │
│ 8   │ 3  │ 3  │ 1  │ 6  │ 3  │ 2  │
│ 9   │ 1  │ 2  │ 1  │ 2  │ 6  │ 2  │
│ 10  │ 2  │ 4  │ 2  │ 4  │ 8  │ 2  │
│ 11  │ 3  │ 3  │ 2  │ 2  │ 1  │ 3  │
│ 12  │ 1  │ 1  │ 3  │ 4  │ 3  │ 3  │
│ 13  │ 4  │ 2  │ 4  │ 7  │ 5  │ 3  │
│ 14  │ 4  │ 1  │ 2  │ 6  │ 6  │ 3  │
│ 15  │ 2  │ 4  │ 1  │ 3  │ 7  │ 3  │
│ 16  │ 3  │ 2  │ 4  │ 1  │ 8  │ 3  │
│ 17  │ 4  │ 2  │ 1  │ 4  │ 1  │ 4  │
│ 18  │ 1  │ 4  │ 2  │ 8  │ 3  │ 4  │
│ 19  │ 4  │ 3  │ 2  │ 1  │ 4  │ 4  │
│ 20  │ 3  │ 1  │ 3  │ 5  │ 5  │ 4  │
│ 21  │ 2  │ 1  │ 4  │ 7  │ 7  │ 4  │
│ 22  │ 2  │ 1  │ 1  │ 1  │ 3  │ 5  │
│ 23  │ 4  │ 2  │ 4  │ 8  │ 4  │ 5  │
│ 24  │ 3  │ 4  │ 2  │ 4  │ 5  │ 5  │
│ 25  │ 1  │ 3  │ 3  │ 7  │ 8  │ 5  │
│ 26  │ 1  │ 4  │ 4  │ 6  │ 2  │ 6  │
│ 27  │ 2  │ 3  │ 1  │ 8  │ 5  │ 6  │
│ 28  │ 3  │ 2  │ 3  │ 3  │ 6  │ 6  │
│ 29  │ 4  │ 1  │ 2  │ 5  │ 7  │ 6  │
│ 30  │ 2  │ 2  │ 2  │ 3  │ 2  │ 7  │
│ 31  │ 1  │ 4  │ 1  │ 5  │ 4  │ 7  │
│ 32  │ 4  │ 4  │ 3  │ 1  │ 6  │ 7  │
│ 33  │ 3  │ 3  │ 4  │ 4  │ 7  │ 7  │
│ 34  │ 2  │ 2  │ 2  │ 6  │ 8  │ 7  │
│ 35  │ 2  │ 4  │ 3  │ 6  │ 1  │ 8  │
│ 36  │ 3  │ 1  │ 1  │ 8  │ 2  │ 8  │
│ 37  │ 4  │ 4  │ 4  │ 2  │ 3  │ 8  │
│ 38  │ 3  │ 2  │ 2  │ 7  │ 4  │ 8  │
│ 39  │ 1  │ 3  │ 2  │ 3  │ 5  │ 8  │], Any[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.365457, 0.376971, 0.379235, 0.383359, 0.392126, 0.393822, 0.397317, 0.398235, 0.400084])
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_federov_comparison(comparison, pb = false, title = string("D-Efficiency and Experiments",
                                                               " for 3 4-Level and",
                                                               " 3 8-Level True Factors"))
#+END_SRC

#+RESULTS:
: Created new window in existing browser session.
**** Sampling Numerical and True Factors
***** Sampling 10 3-Level True Factors                           :ATTACH:
:PROPERTIES:
:Attachments: juliaFXZkId.html
:ID:       001d2d29-df3c-4aad-ab17-bf2b2f1e4b15
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures

ranges = [k:k for k = 21:1:25]

factors = OrderedDict{Symbol, Any}()

for i = 1:10
    factors[Symbol(:f, i)] = [:a, :b, :c]
end

factor_list = [factors for i in ranges]

designs = 8000

sampled_subsets = sample_subsets(factor_list, ranges, designs, check_bounds = true)
#+END_SRC

#+RESULTS:
#+begin_example


5-element Array{UnitRange{Int64},1}:
 21:21
 22:22
 23:23
 24:24
 25:25

DataStructures.OrderedDict{Symbol,Any} with 0 entries



5-element Array{DataStructures.OrderedDict{Symbol,Any},1}:
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c]…)

8000

 Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 21:21
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 21: NaN
Elapsed Time: 43.747861244 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 22:22
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 22: NaN
Elapsed Time: 34.537225237 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 23:23
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 23: NaN
Elapsed Time: 38.381738975 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 24:24
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 24: NaN
Elapsed Time: 38.0144606 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>Symbol[:a, :b, :c],:f7=>Symbol[:a, :b, :c],:f8=>Symbol[:a, :b, :c],:f9=>Symbol[:a, :b, :c],:f10=>Symbol[:a, :b, :c])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 25:25
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 25: NaN
Elapsed Time: 46.48692502 seconds
5-element Array{Any,1}:
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D         │ DELB     │
├──────┼────────┼───────────┼──────────┤
│ 1    │ 21.0   │ 3.23306e7 │ 0.108488 │
│ 2    │ 21.0   │ 3.15844e7 │ 0.108367 │
│ 3    │ 21.0   │ 2.99428e7 │ 0.108092 │
│ 4    │ 21.0   │ 2.52808e7 │ 0.107225 │
│ 5    │ 21.0   │ 1.82073e7 │ 0.105562 │
│ 6    │ 21.0   │ 1.72142e7 │ 0.10528  │
│ 7    │ 21.0   │ 1.71644e7 │ 0.105266 │
│ 8    │ 21.0   │ 1.63458e7 │ 0.105021 │
⋮
│ 7992 │ 21.0   │ 0.0       │ 0.0      │
│ 7993 │ 21.0   │ 0.0       │ 0.0      │
│ 7994 │ 21.0   │ 0.0       │ 0.0      │
│ 7995 │ 21.0   │ 0.0       │ 0.0      │
│ 7996 │ 21.0   │ 0.0       │ 0.0      │
│ 7997 │ 21.0   │ 0.0       │ 0.0      │
│ 7998 │ 21.0   │ 0.0       │ 0.0      │
│ 7999 │ 21.0   │ 0.0       │ 0.0      │
│ 8000 │ 21.0   │ 0.0       │ 0.0      │                                                                            
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D         │ DELB     │
├──────┼────────┼───────────┼──────────┤
│ 1    │ 22.0   │ 5.91821e8 │ 0.118933 │
│ 2    │ 22.0   │ 5.62431e8 │ 0.118644 │
│ 3    │ 22.0   │ 5.29893e8 │ 0.118308 │
│ 4    │ 22.0   │ 4.87065e8 │ 0.117834 │
│ 5    │ 22.0   │ 4.00417e8 │ 0.11674  │
│ 6    │ 22.0   │ 3.25213e8 │ 0.11559  │
│ 7    │ 22.0   │ 3.09658e8 │ 0.11532  │
│ 8    │ 22.0   │ 2.61561e8 │ 0.114397 │
⋮
│ 7992 │ 22.0   │ 0.0       │ 0.0      │
│ 7993 │ 22.0   │ 0.0       │ 0.0      │
│ 7994 │ 22.0   │ 0.0       │ 0.0      │
│ 7995 │ 22.0   │ 0.0       │ 0.0      │
│ 7996 │ 22.0   │ 0.0       │ 0.0      │
│ 7997 │ 22.0   │ 0.0       │ 0.0      │
│ 7998 │ 22.0   │ 0.0       │ 0.0      │
│ 7999 │ 22.0   │ 0.0       │ 0.0      │
│ 8000 │ 22.0   │ 0.0       │ 0.0      │                                                                            
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D         │ DELB     │
├──────┼────────┼───────────┼──────────┤
│ 1    │ 23.0   │ 6.03263e9 │ 0.127061 │
│ 2    │ 23.0   │ 4.4244e9  │ 0.125198 │
│ 3    │ 23.0   │ 3.82322e9 │ 0.124331 │
│ 4    │ 23.0   │ 3.40578e9 │ 0.123648 │
│ 5    │ 23.0   │ 2.70147e9 │ 0.122291 │
│ 6    │ 23.0   │ 2.63253e9 │ 0.122141 │
│ 7    │ 23.0   │ 2.29197e9 │ 0.121338 │
│ 8    │ 23.0   │ 2.22237e9 │ 0.12116  │
⋮
│ 7992 │ 23.0   │ 0.0       │ 0.0      │
│ 7993 │ 23.0   │ 0.0       │ 0.0      │
│ 7994 │ 23.0   │ 0.0       │ 0.0      │
│ 7995 │ 23.0   │ 0.0       │ 0.0      │
│ 7996 │ 23.0   │ 0.0       │ 0.0      │
│ 7997 │ 23.0   │ 0.0       │ 0.0      │
│ 7998 │ 23.0   │ 0.0       │ 0.0      │
│ 7999 │ 23.0   │ 0.0       │ 0.0      │
│ 8000 │ 23.0   │ 0.0       │ 0.0      │                                                                            
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D           │ DELB       │
├──────┼────────┼─────────────┼────────────┤
│ 1    │ 24.0   │ 4.00551e10  │ 0.133253   │
│ 2    │ 24.0   │ 2.55032e10  │ 0.130419   │
│ 3    │ 24.0   │ 2.0041e10   │ 0.128931   │
│ 4    │ 24.0   │ 1.8612e10   │ 0.128477   │
│ 5    │ 24.0   │ 1.81832e10  │ 0.128335   │
│ 6    │ 24.0   │ 1.63884e10  │ 0.127701   │
│ 7    │ 24.0   │ 1.58939e10  │ 0.127515   │
│ 8    │ 24.0   │ 1.57742e10  │ 0.127469   │
⋮
│ 7992 │ 24.0   │ 5.25906e-23 │ 0.00362143 │
│ 7993 │ 24.0   │ 1.72953e-24 │ 0.00307795 │
│ 7994 │ 24.0   │ 0.0         │ 0.0        │
│ 7995 │ 24.0   │ 0.0         │ 0.0        │
│ 7996 │ 24.0   │ 0.0         │ 0.0        │
│ 7997 │ 24.0   │ 0.0         │ 0.0        │
│ 7998 │ 24.0   │ 0.0         │ 0.0        │
│ 7999 │ 24.0   │ 0.0         │ 0.0        │
│ 8000 │ 24.0   │ 0.0         │ 0.0        │
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB     │
├──────┼────────┼────────────┼──────────┤
│ 1    │ 25.0   │ 2.01042e11 │ 0.138138 │
│ 2    │ 25.0   │ 1.25129e11 │ 0.135053 │
│ 3    │ 25.0   │ 1.21454e11 │ 0.134862 │
│ 4    │ 25.0   │ 1.17154e11 │ 0.134631 │
│ 5    │ 25.0   │ 1.06419e11 │ 0.134016 │
│ 6    │ 25.0   │ 1.01087e11 │ 0.133688 │
│ 7    │ 25.0   │ 9.68327e10 │ 0.133415 │
│ 8    │ 25.0   │ 8.91668e10 │ 0.132892 │
⋮
│ 7992 │ 25.0   │ 0.0        │ 0.0      │
│ 7993 │ 25.0   │ 0.0        │ 0.0      │
│ 7994 │ 25.0   │ 0.0        │ 0.0      │
│ 7995 │ 25.0   │ 0.0        │ 0.0      │
│ 7996 │ 25.0   │ 0.0        │ 0.0      │
│ 7997 │ 25.0   │ 0.0        │ 0.0      │
│ 7998 │ 25.0   │ 0.0        │ 0.0      │
│ 7999 │ 25.0   │ 0.0        │ 0.0      │
│ 8000 │ 25.0   │ 0.0        │ 0.0      │
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets, "10C-3L")
#+END_SRC

#+RESULTS:
#+begin_example
Fontconfig warning: "/etc/fonts/fonts.conf", line 5: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/fonts.conf", line 6: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/fonts.conf", line 9: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 34: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'version'
Fontconfig error: Cannot load config file from /etc/fonts/fonts.conf
Created new window in existing browser session.
#+end_example
***** Sampling 20 2-Level Numerical Factors                      :ATTACH:
:PROPERTIES:
:Attachments: juliay3SIkZ.html
:ID:       60e79a0f-aa32-405d-90ad-a891db02862b
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures

ranges = [k:k for k = 21:1:25]

factors = OrderedDict{Symbol, Any}()

for i = 1:20
    factors[Symbol(:f, i)] = [-1, 1]
end

factor_list = [factors for i in ranges]

designs = 8000

sampled_subsets = sample_subsets(factor_list, ranges, designs, check_bounds = true)
#+END_SRC

#+RESULTS:
#+begin_example


5-element Array{UnitRange{Int64},1}:
 21:21
 22:22
 23:23
 24:24
 25:25

DataStructures.OrderedDict{Symbol,Any} with 0 entries



5-element Array{DataStructures.OrderedDict{Symbol,Any},1}:
 DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)

8000

 Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1],:f16=>[-1, 1],:f17=>[-1, 1],:f18=>[-1, 1],:f19=>[-1, 1],:f20=>[-1, 1])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 21:21
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 21: NaN
Elapsed Time: 57.247901292 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1],:f16=>[-1, 1],:f17=>[-1, 1],:f18=>[-1, 1],:f19=>[-1, 1],:f20=>[-1, 1])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 22:22
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 22: NaN
Elapsed Time: 71.856687245 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1],:f16=>[-1, 1],:f17=>[-1, 1],:f18=>[-1, 1],:f19=>[-1, 1],:f20=>[-1, 1])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 23:23
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 23: NaN
Elapsed Time: 70.262444262 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1],:f16=>[-1, 1],:f17=>[-1, 1],:f18=>[-1, 1],:f19=>[-1, 1],:f20=>[-1, 1])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 24:24
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 24: NaN
Elapsed Time: 70.286366935 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[-1, 1],:f2=>[-1, 1],:f3=>[-1, 1],:f4=>[-1, 1],:f5=>[-1, 1],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1],:f16=>[-1, 1],:f17=>[-1, 1],:f18=>[-1, 1],:f19=>[-1, 1],:f20=>[-1, 1])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 25:25
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 25: NaN
Elapsed Time: 76.317783851 seconds
5-element Array{Any,1}:
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB     │
├──────┼────────┼────────────┼──────────┤
│ 1    │ 21.0   │ 1.89894e10 │ 0.146972 │
│ 2    │ 21.0   │ 1.02155e10 │ 0.142696 │
│ 3    │ 21.0   │ 6.1143e9   │ 0.139251 │
│ 4    │ 21.0   │ 5.10953e9  │ 0.138065 │
│ 5    │ 21.0   │ 4.4724e9   │ 0.137192 │
│ 6    │ 21.0   │ 4.22175e9  │ 0.136816 │
│ 7    │ 21.0   │ 3.85691e9  │ 0.136229 │
│ 8    │ 21.0   │ 3.85231e9  │ 0.136221 │
⋮
│ 7992 │ 21.0   │ 0.0        │ 0.0      │
│ 7993 │ 21.0   │ 0.0        │ 0.0      │
│ 7994 │ 21.0   │ 0.0        │ 0.0      │
│ 7995 │ 21.0   │ 0.0        │ 0.0      │
│ 7996 │ 21.0   │ 0.0        │ 0.0      │
│ 7997 │ 21.0   │ 0.0        │ 0.0      │
│ 7998 │ 21.0   │ 0.0        │ 0.0      │
│ 7999 │ 21.0   │ 0.0        │ 0.0      │
│ 8000 │ 21.0   │ 0.0        │ 0.0      │                   
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB      │
├──────┼────────┼────────────┼───────────┤
│ 1    │ 22.0   │ 8.57048e10 │ 0.150729  │
│ 2    │ 22.0   │ 7.41468e10 │ 0.149693  │
│ 3    │ 22.0   │ 7.24472e10 │ 0.149528  │
│ 4    │ 22.0   │ 5.41684e10 │ 0.147471  │
│ 5    │ 22.0   │ 5.38556e10 │ 0.147431  │
│ 6    │ 22.0   │ 5.01174e10 │ 0.146927  │
│ 7    │ 22.0   │ 4.5954e10  │ 0.146321  │
│ 8    │ 22.0   │ 4.18812e10 │ 0.145676  │
⋮
│ 7992 │ 22.0   │ 48504.0    │ 0.0759818 │
│ 7993 │ 22.0   │ 45608.0    │ 0.0757594 │
│ 7994 │ 22.0   │ 34920.0    │ 0.0748022 │
│ 7995 │ 22.0   │ 34446.0    │ 0.0747535 │
│ 7996 │ 22.0   │ 31932.0    │ 0.0744842 │
│ 7997 │ 22.0   │ 23884.0    │ 0.0734613 │
│ 7998 │ 22.0   │ 204.0      │ 0.0585544 │
│ 7999 │ 22.0   │ 0.0        │ 0.0       │
│ 8000 │ 22.0   │ 0.0        │ 0.0       │
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB      │
├──────┼────────┼────────────┼───────────┤
│ 1    │ 23.0   │ 7.05515e11 │ 0.159399  │
│ 2    │ 23.0   │ 5.66027e11 │ 0.157736  │
│ 3    │ 23.0   │ 4.60525e11 │ 0.156194  │
│ 4    │ 23.0   │ 4.59093e11 │ 0.156171  │
│ 5    │ 23.0   │ 4.37031e11 │ 0.155805  │
│ 6    │ 23.0   │ 4.21542e11 │ 0.155538  │
│ 7    │ 23.0   │ 3.78652e11 │ 0.154745  │
│ 8    │ 23.0   │ 3.74238e11 │ 0.154659  │
⋮
│ 7992 │ 23.0   │ 2.58251e6  │ 0.0878228 │
│ 7993 │ 23.0   │ 2.45136e6  │ 0.0876052 │
│ 7994 │ 23.0   │ 2.11968e6  │ 0.0870008 │
│ 7995 │ 23.0   │ 2.05944e6  │ 0.0868814 │
│ 7996 │ 23.0   │ 2.02057e6  │ 0.0868026 │
│ 7997 │ 23.0   │ 1.59076e6  │ 0.0858196 │
│ 7998 │ 23.0   │ 1.49286e6  │ 0.0855605 │
│ 7999 │ 23.0   │ 1.14064e6  │ 0.084471  │
│ 8000 │ 23.0   │ 1.12228e6  │ 0.0844058 │
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB      │
├──────┼────────┼────────────┼───────────┤
│ 1    │ 24.0   │ 6.49722e12 │ 0.169793  │
│ 2    │ 24.0   │ 5.55145e12 │ 0.168525  │
│ 3    │ 24.0   │ 4.18952e12 │ 0.166282  │
│ 4    │ 24.0   │ 4.09585e12 │ 0.166103  │
│ 5    │ 24.0   │ 3.18413e12 │ 0.164123  │
│ 6    │ 24.0   │ 3.17606e12 │ 0.164103  │
│ 7    │ 24.0   │ 2.90977e12 │ 0.16342   │
│ 8    │ 24.0   │ 2.84497e12 │ 0.163245  │
⋮
│ 7992 │ 24.0   │ 1.16042e8  │ 0.100883  │
│ 7993 │ 24.0   │ 1.03047e8  │ 0.100314  │
│ 7994 │ 24.0   │ 8.95941e7  │ 0.099648  │
│ 7995 │ 24.0   │ 8.93073e7  │ 0.0996328 │
│ 7996 │ 24.0   │ 6.7445e7   │ 0.0983096 │
│ 7997 │ 24.0   │ 2.72858e7  │ 0.0941632 │
│ 7998 │ 24.0   │ 2.39791e7  │ 0.0935857 │
│ 7999 │ 24.0   │ 1.0437e7   │ 0.0899511 │
│ 8000 │ 24.0   │ 0.0        │ 0.0       │
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB     │
├──────┼────────┼────────────┼──────────┤
│ 1    │ 25.0   │ 2.02013e13 │ 0.172048 │
│ 2    │ 25.0   │ 1.60939e13 │ 0.170196 │
│ 3    │ 25.0   │ 1.55509e13 │ 0.169918 │
│ 4    │ 25.0   │ 1.38369e13 │ 0.168976 │
│ 5    │ 25.0   │ 1.37833e13 │ 0.168944 │
│ 6    │ 25.0   │ 1.34527e13 │ 0.168749 │
│ 7    │ 25.0   │ 1.22512e13 │ 0.167999 │
│ 8    │ 25.0   │ 1.20469e13 │ 0.167864 │
⋮
│ 7992 │ 25.0   │ 1.10571e9  │ 0.107823 │
│ 7993 │ 25.0   │ 1.09633e9  │ 0.107779 │
│ 7994 │ 25.0   │ 1.06915e9  │ 0.10765  │
│ 7995 │ 25.0   │ 1.05988e9  │ 0.107605 │
│ 7996 │ 25.0   │ 1.01807e9  │ 0.107399 │
│ 7997 │ 25.0   │ 1.01491e9  │ 0.107383 │
│ 7998 │ 25.0   │ 9.78764e8  │ 0.107198 │
│ 7999 │ 25.0   │ 8.88828e8  │ 0.106707 │
│ 8000 │ 25.0   │ 3.76398e8  │ 0.102429 │
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets, "20N2L")
#+END_SRC

#+RESULTS:
#+begin_example
Fontconfig warning: "/etc/fonts/fonts.conf", line 5: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/fonts.conf", line 6: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/fonts.conf", line 9: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 34: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'version'
Fontconfig error: Cannot load config file from /etc/fonts/fonts.conf
Created new window in existing browser session.
#+end_example
***** Sampling 5 3-Level True and 10 2-Level Numerical Factors   :ATTACH:
:PROPERTIES:
:Attachments: juliaWMCPVf.html
:ID:       e5279d28-714e-4925-8941-a77979ffc351
:END:
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures

ranges = [k:k for k = 21:1:25]

factors = OrderedDict{Symbol, Any}()

for i = 1:5
    factors[Symbol(:f, i)] = [:a, :b, :c]
end

for i = 6:15
    factors[Symbol(:f, i)] = [-1, 1]
end

factor_list = [factors for i in ranges]

designs = 8000

sampled_subsets = sample_subsets(factor_list, ranges, designs, check_bounds = true)
#+END_SRC

#+RESULTS:
#+begin_example


5-element Array{UnitRange{Int64},1}:
 21:21
 22:22
 23:23
 24:24
 25:25

DataStructures.OrderedDict{Symbol,Any} with 0 entries





5-element Array{DataStructures.OrderedDict{Symbol,Any},1}:
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)
 DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1]…)

8000

 Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1])
Full Factorial Size: 248832
Total Subsets: Inf
Range of Design Sizes: 21:21
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 21: NaN
Elapsed Time: 50.808215199 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1])
Full Factorial Size: 248832
Total Subsets: Inf
Range of Design Sizes: 22:22
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 22: NaN
Elapsed Time: 50.754634709 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1])
Full Factorial Size: 248832
Total Subsets: Inf
Range of Design Sizes: 23:23
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 23: NaN
Elapsed Time: 54.004811129 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1])
Full Factorial Size: 248832
Total Subsets: Inf
Range of Design Sizes: 24:24
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 24: NaN
Elapsed Time: 68.651549527 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>Symbol[:a, :b, :c],:f2=>Symbol[:a, :b, :c],:f3=>Symbol[:a, :b, :c],:f4=>Symbol[:a, :b, :c],:f5=>Symbol[:a, :b, :c],:f6=>[-1, 1],:f7=>[-1, 1],:f8=>[-1, 1],:f9=>[-1, 1],:f10=>[-1, 1],:f11=>[-1, 1],:f12=>[-1, 1],:f13=>[-1, 1],:f14=>[-1, 1],:f15=>[-1, 1])
Full Factorial Size: 248832
Total Subsets: Inf
Range of Design Sizes: 25:25
Number of Designs to Sample: 8000
Total Subsets for Fixed Size 25: NaN
Elapsed Time: 55.440003942 seconds
5-element Array{Any,1}:
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D         │ DELB     │
├──────┼────────┼───────────┼──────────┤
│ 1    │ 21.0   │ 6.77509e8 │ 0.125401 │
│ 2    │ 21.0   │ 5.42378e8 │ 0.124079 │
│ 3    │ 21.0   │ 4.88587e8 │ 0.123464 │
│ 4    │ 21.0   │ 4.27828e8 │ 0.122686 │
│ 5    │ 21.0   │ 2.85475e8 │ 0.120345 │
│ 6    │ 21.0   │ 2.79893e8 │ 0.120232 │
│ 7    │ 21.0   │ 2.6765e8  │ 0.119976 │
│ 8    │ 21.0   │ 2.66636e8 │ 0.119954 │
⋮
│ 7992 │ 21.0   │ 0.0       │ 0.0      │
│ 7993 │ 21.0   │ 0.0       │ 0.0      │
│ 7994 │ 21.0   │ 0.0       │ 0.0      │
│ 7995 │ 21.0   │ 0.0       │ 0.0      │
│ 7996 │ 21.0   │ 0.0       │ 0.0      │
│ 7997 │ 21.0   │ 0.0       │ 0.0      │
│ 7998 │ 21.0   │ 0.0       │ 0.0      │
│ 7999 │ 21.0   │ 0.0       │ 0.0      │
│ 8000 │ 21.0   │ 0.0       │ 0.0      │                                                                            
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D         │ DELB     │
├──────┼────────┼───────────┼──────────┤
│ 1    │ 22.0   │ 7.92792e9 │ 0.134575 │
│ 2    │ 22.0   │ 6.78373e9 │ 0.13358  │
│ 3    │ 22.0   │ 6.58633e9 │ 0.133393 │
│ 4    │ 22.0   │ 6.43639e9 │ 0.133246 │
│ 5    │ 22.0   │ 4.58656e9 │ 0.131114 │
│ 6    │ 22.0   │ 4.24328e9 │ 0.130629 │
│ 7    │ 22.0   │ 4.11065e9 │ 0.130432 │
│ 8    │ 22.0   │ 4.11e9    │ 0.130431 │
⋮
│ 7992 │ 22.0   │ 0.0       │ 0.0      │
│ 7993 │ 22.0   │ 0.0       │ 0.0      │
│ 7994 │ 22.0   │ 0.0       │ 0.0      │
│ 7995 │ 22.0   │ 0.0       │ 0.0      │
│ 7996 │ 22.0   │ 0.0       │ 0.0      │
│ 7997 │ 22.0   │ 0.0       │ 0.0      │
│ 7998 │ 22.0   │ 0.0       │ 0.0      │
│ 7999 │ 22.0   │ 0.0       │ 0.0      │
│ 8000 │ 22.0   │ 0.0       │ 0.0      │                                                                            
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D           │ DELB       │
├──────┼────────┼─────────────┼────────────┤
│ 1    │ 23.0   │ 1.10393e11  │ 0.145924   │
│ 2    │ 23.0   │ 8.70768e10  │ 0.144285   │
│ 3    │ 23.0   │ 6.29066e10  │ 0.142068   │
│ 4    │ 23.0   │ 3.53507e10  │ 0.138222   │
│ 5    │ 23.0   │ 3.40737e10  │ 0.13798    │
│ 6    │ 23.0   │ 3.38564e10  │ 0.137938   │
│ 7    │ 23.0   │ 3.07743e10  │ 0.137312   │
│ 8    │ 23.0   │ 3.0756e10   │ 0.137308   │
⋮
│ 7992 │ 23.0   │ 9.82123e-22 │ 0.00434409 │
│ 7993 │ 23.0   │ 0.0         │ 0.0        │
│ 7994 │ 23.0   │ 0.0         │ 0.0        │
│ 7995 │ 23.0   │ 0.0         │ 0.0        │
│ 7996 │ 23.0   │ 0.0         │ 0.0        │
│ 7997 │ 23.0   │ 0.0         │ 0.0        │
│ 7998 │ 23.0   │ 0.0         │ 0.0        │
│ 7999 │ 23.0   │ 0.0         │ 0.0        │
│ 8000 │ 23.0   │ 0.0         │ 0.0        │
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D           │ DELB       │
├──────┼────────┼─────────────┼────────────┤
│ 1    │ 24.0   │ 2.6682e11   │ 0.145846   │
│ 2    │ 24.0   │ 2.45104e11  │ 0.145258   │
│ 3    │ 24.0   │ 2.16593e11  │ 0.144405   │
│ 4    │ 24.0   │ 2.15796e11  │ 0.144379   │
│ 5    │ 24.0   │ 2.03645e11  │ 0.143981   │
│ 6    │ 24.0   │ 1.91401e11  │ 0.143557   │
│ 7    │ 24.0   │ 1.88919e11  │ 0.143468   │
│ 8    │ 24.0   │ 1.73139e11  │ 0.142873   │
⋮
│ 7992 │ 24.0   │ 1.53104e6   │ 0.0820941  │
│ 7993 │ 24.0   │ 4.53169e-6  │ 0.0231913  │
│ 7994 │ 24.0   │ 8.99092e-7  │ 0.0214721  │
│ 7995 │ 24.0   │ 1.13112e-22 │ 0.00375593 │
│ 7996 │ 24.0   │ 0.0         │ 0.0        │
│ 7997 │ 24.0   │ 0.0         │ 0.0        │
│ 7998 │ 24.0   │ 0.0         │ 0.0        │
│ 7999 │ 24.0   │ 0.0         │ 0.0        │
│ 8000 │ 24.0   │ 0.0         │ 0.0        │
 8000×3 DataFrames.DataFrame
│ Row  │ Length │ D          │ DELB      │
├──────┼────────┼────────────┼───────────┤
│ 1    │ 25.0   │ 3.22659e12 │ 0.157657  │
│ 2    │ 25.0   │ 2.31233e12 │ 0.155176  │
│ 3    │ 25.0   │ 2.26279e12 │ 0.155016  │
│ 4    │ 25.0   │ 1.88962e12 │ 0.153691  │
│ 5    │ 25.0   │ 1.29706e12 │ 0.150962  │
│ 6    │ 25.0   │ 1.2772e12  │ 0.150851  │
│ 7    │ 25.0   │ 1.09385e12 │ 0.149742  │
│ 8    │ 25.0   │ 1.02355e12 │ 0.149269  │
⋮
│ 7992 │ 25.0   │ 4.61316e7  │ 0.0926856 │
│ 7993 │ 25.0   │ 2.41431e7  │ 0.0898714 │
│ 7994 │ 25.0   │ 5.41536e-5 │ 0.0250553 │
│ 7995 │ 25.0   │ 0.0        │ 0.0       │
│ 7996 │ 25.0   │ 0.0        │ 0.0       │
│ 7997 │ 25.0   │ 0.0        │ 0.0       │
│ 7998 │ 25.0   │ 0.0        │ 0.0       │
│ 7999 │ 25.0   │ 0.0        │ 0.0       │
│ 8000 │ 25.0   │ 0.0        │ 0.0       │
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot_subsets(sampled_subsets, "5T3L, 10N2L")
#+END_SRC

#+RESULTS:
#+begin_example
Fontconfig warning: "/etc/fonts/fonts.conf", line 5: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/fonts.conf", line 6: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/fonts.conf", line 6: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/fonts.conf", line 7: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/fonts.conf", line 9: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-hinting-slight.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-hinting-slight.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-scale-bitmap-fonts.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/10-sub-pixel-rgb.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/11-lcdfilter-default.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/20-unhint-small-vera.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/30-metric-aliases.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/30-metric-aliases.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/40-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/40-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/45-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/45-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/49-sansserif.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/49-sansserif.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/50-user.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/51-local.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-generic.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-generic.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/60-latin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/60-latin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 34: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 35: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-fonts-persian.conf", line 36: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/65-nonlatin.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/65-nonlatin.conf", line 8: unknown element "description"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/69-unifont.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/69-unifont.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/80-delicious.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/80-delicious.conf", line 6: invalid attribute 'version'
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 4: unknown element "its:rules"
Fontconfig warning: "/etc/fonts/conf.d/90-synthetic.conf", line 5: unknown element "its:translateRule"
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'translate'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 5: invalid attribute 'selector'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'xmlns:its'
Fontconfig error: "/etc/fonts/conf.d/90-synthetic.conf", line 6: invalid attribute 'version'
Fontconfig error: Cannot load config file from /etc/fonts/fonts.conf
Created new window in existing browser session.
#+end_example
**** Comparing Candidate Sets for ~optFederov~
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using RCall, ExperimentalDesign, DataStructures, DataFrames

function identity_scaling(design, factors)
    return design
end

function opt_federov(design, is_factor, experiments)
    r_output = R"""
    library(AlgDesign)
    design <- $design
    if(length($is_factor) != 0) {
        design[$is_factor] <- lapply(design[$is_factor], as.factor)
    }
    federov_output <- optFederov(~., design, criterion = "D", nTrials = $experiments)
    """
    return @rget federov_output
end

function sampled_opt_federov(factors, is_factor, experiments, candidate_set_size)
    design = full_factorial_subset(collect(values(factors)), candidate_set_size)
    design = DataFrame(Array{Float64, 2}(design))
    rename!(design, OrderedDict(zip(names(design), keys(factors))))
    return opt_federov(design, is_factor, experiments)
end

function sampling_max(factors, designs, ranges, check_bounds = false)
    best_sampled = []

    for range in ranges
        design_subset = sample_subset(factors, range, designs, check_bounds = check_bounds)
        push!(best_sampled, max(design_subset[:DELB]...))
    end

    return best_sampled
end

function sampled_opt_federov_max(factors, is_factor, julia_factors, candidate_set_size,
                                 set_repeats, ranges, scale = identity_scaling)
    best_sampled         = []
    best_sampled_federov = []

    for range in ranges
        best_range         = []
        best_range_federov = []

        for i = 1:set_repeats
            federov_output = sampled_opt_federov(factors, is_factor, range.start,
                                                 candidate_set_size)
            design_array   = Array{Any, 2}(federov_output[:design])

            model_matrix   = generate_model_matrix(build_linear_formula(collect(keys(julia_factors))),
                                                   design_array,
                                                   julia_factors,
                                                   scale = scale)

            push!(best_range_federov, federov_output[:D])
            push!(best_range, d_efficiency_lower_bound(model_matrix))
        end

        push!(best_sampled_federov, max(best_range_federov...))
        push!(best_sampled, max(best_range...))
    end

    return best_sampled, best_sampled_federov
end
#+END_SRC

#+RESULTS:
#+begin_example


identity_scaling (generic function with 1 method)

opt_federov (generic function with 2 methods)

sampled_opt_federov (generic function with 2 methods)

sampling_max (generic function with 2 methods)

sampled_opt_federov_max (generic function with 3 methods)
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
function get_samples()
    factors = OrderedDict{Symbol, Any}()

    for i = 1:10
        factors[Symbol(:f, i)] = [1., 2., 3.]
    end

    is_factor = [String(f) for f in keys(factors)]

    println("Factors:")
    println(factors)
    println("True factors:")
    println(is_factor)

    julia_factors = OrderedDict{Symbol, Any}()

    for i = 1:10
        julia_factors[Symbol(:f, i)] = ["1", "2", "3"]
    end

    ranges = [k:k for k = 21:1:24]

    candidate_set_size = 400
    repeats = 1

    best_federov = sampled_opt_federov_max(factors, is_factor, julia_factors, 
                                           candidate_set_size,
                                           repeats, ranges)
    println("Output with identity scaling:")
    println(best_federov)

    best_federov = sampled_opt_federov_max(factors, is_factor, julia_factors, 
                                           candidate_set_size,
                                           repeats, ranges,
                                           scale_boxdraper_encoding!)
    println("Output with Box-Draper scaling:")
    println(best_federov)

    best_federov = sampled_opt_federov_max(factors, is_factor, julia_factors, 
                                           candidate_set_size,
                                           repeats, ranges,
                                           scale_orthogonal!)
    println("Output with orthogonal scaling:")
    println(best_federov)

    factors = OrderedDict{Symbol, Any}()

    for i = 1:20
        factors[Symbol(:f, i)] = [1., 2.]
    end

    is_factor = []

    println("Factors:")
    println(factors)
    println("True factors:")
    println(is_factor)

    julia_factors = factors

    ranges = [k:k for k = 21:1:24]

    candidate_set_size = 400
    repeats = 1

    best_federov = sampled_opt_federov_max(factors, is_factor, julia_factors, 
                                           candidate_set_size,
                                           repeats, ranges)
    println("Output with identity scaling:")
    println(best_federov)

    best_federov = sampled_opt_federov_max(factors, is_factor, julia_factors, 
                                           candidate_set_size,
                                           repeats, ranges,
                                           scale_boxdraper_encoding!)
    println("Output with Box-Draper scaling:")
    println(best_federov)

    best_federov = sampled_opt_federov_max(factors, is_factor, julia_factors, 
                                           candidate_set_size,
                                           repeats, ranges,
                                           scale_orthogonal!)
    println("Output with orthogonal scaling:")
    println(best_federov)
end

get_samples()
#+END_SRC

#+RESULTS:
#+begin_example
get_samples (generic function with 1 method)

Factors:
DataStructures.OrderedDict{Symbol,Any}(:f1=>[1.0, 2.0, 3.0],:f2=>[1.0, 2.0, 3.0],:f3=>[1.0, 2.0, 3.0],:f4=>[1.0, 2.0, 3.0],:f5=>[1.0, 2.0, 3.0],:f6=>[1.0, 2.0, 3.0],:f7=>[1.0, 2.0, 3.0],:f8=>[1.0, 2.0, 3.0],:f9=>[1.0, 2.0, 3.0],:f10=>[1.0, 2.0, 3.0])
True factors:
String["f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10"]
Output with identity scaling:
(Any[0.164348, 0.167937, 0.174036, 0.176942], Any[0.164348, 0.167937, 0.174036, 0.176942])
Output with Box-Draper scaling:
(Any[0.615584, 0.624695, 0.654439, 0.652266], Any[0.164398, 0.166831, 0.174775, 0.174194])
Output with orthogonal scaling:
(Any[0.619785, 0.631156, 0.642248, 0.645951], Any[0.16552, 0.168557, 0.171519, 0.172508])
Factors:
DataStructures.OrderedDict{Symbol,Any}(:f1=>[1.0, 2.0],:f2=>[1.0, 2.0],:f3=>[1.0, 2.0],:f4=>[1.0, 2.0],:f5=>[1.0, 2.0],:f6=>[1.0, 2.0],:f7=>[1.0, 2.0],:f8=>[1.0, 2.0],:f9=>[1.0, 2.0],:f10=>[1.0, 2.0],:f11=>[1.0, 2.0],:f12=>[1.0, 2.0],:f13=>[1.0, 2.0],:f14=>[1.0, 2.0],:f15=>[1.0, 2.0],:f16=>[1.0, 2.0],:f17=>[1.0, 2.0],:f18=>[1.0, 2.0],:f19=>[1.0, 2.0],:f20=>[1.0, 2.0])
True factors:
Any[]
Output with identity scaling:
(Any[0.207151, 0.213685, 0.219506, 0.226019], Any[0.207151, 0.213685, 0.219506, 0.226019])
Output with Box-Draper scaling:
(Any[0.765185, 0.796408, 0.820742, 0.844003], Any[0.204351, 0.212689, 0.219188, 0.2254])
Output with orthogonal scaling:
(Any[0.774935, 0.806954, 0.823208, 0.846287], Any[0.206955, 0.215506, 0.219846, 0.22601])
#+end_example
*** [2018-04-05 Thu]
**** Comparing More Model Matrices
***** Comparing Factor Model Matrices
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

fac <- gen.factorial(c(2, 3), factors = c(1, 2))
m <- model.matrix(~., fac)

fac
m

eval.design(~., fac, X = fac)

optimized <- optFederov(~., fac, nTrials = 6)

optimized

eval.design(~., optimized$design, X = fac)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2
1  1  1
2  2  1
3  1  2
4  2  2
5  1  3
6  2  3
  (Intercept) X12 X22 X23
1           1   0   0   0
2           1   1   0   0
3           1   0   1   0
4           1   1   1   0
5           1   0   0   1
6           1   1   0   1
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$X1
[1] "contr.treatment"

attr(,"contrasts")$X2
[1] "contr.treatment"
$determinant
[1] 0.3102016

$A
[1] 5

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 0.874

$gmean.variances
[1] 5.241483
$D
[1] 0.3102016

$A
[1] 5

$Ge
[1] 1

$Dea
[1] 1

$design
  X1 X2
1  1  1
2  2  1
3  1  2
4  2  2
5  1  3
6  2  3

$rows
[1] 1 2 3 4 5 6
$determinant
[1] 0.3102016

$A
[1] 5

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 0.874

$gmean.variances
[1] 5.241483
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

function identity_scaling(design, factors)
    return design
end

fac = OrderedDict(:x1 => [:a, :b], :x2 => [:a, :b, :c])

design = [:a :a; :b :a; :a :b; :b :b; :a :c; :b :c]

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = identity_scaling)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_orthogonal!)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_boxdraper_encoding!)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


identity_scaling (generic function with 1 method)

DataStructures.OrderedDict{Symbol,Array{Symbol,1}} with 2 entries:
  :x1 => Symbol[:a, :b]
  :x2 => Symbol[:a, :b, :c]

6×2 Array{Symbol,2}:
 :a  :a
 :b  :a
 :a  :b
 :b  :b
 :a  :c
 :b  :c

6×4 Array{Float64,2}:
 1.0  0.0  0.0  0.0
 1.0  1.0  0.0  0.0
 1.0  0.0  1.0  0.0
 1.0  1.0  1.0  0.0
 1.0  0.0  0.0  1.0
 1.0  1.0  0.0  1.0

0.31020161970069987

6×4 Array{Float64,2}:
 1.0  -1.0  -1.0  -1.0
 1.0   1.0  -1.0  -1.0
 1.0  -1.0   1.0  -1.0
 1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0

0.8773826753016616

6×4 Array{Float64,2}:
 1.0  -1.0  -1.0  -1.0
 1.0   1.0  -1.0  -1.0
 1.0  -1.0   1.0  -1.0
 1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0

0.8773826753016616
#+end_example
***** Comparing Numerical Model Matrices
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

fac <- gen.factorial(c(2,3))
m <- model.matrix(~., fac)

fac
m

eval.design(~., fac, X = fac)

optimized <- optFederov(~., fac, nTrials = 6)

optimized

eval.design(~., optimized$design, X = fac)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2
1 -1 -1
2  1 -1
3 -1  0
4  1  0
5 -1  1
6  1  1
  (Intercept) X1 X2
1           1 -1 -1
2           1  1 -1
3           1 -1  0
4           1  1  0
5           1 -1  1
6           1  1  1
attr(,"assign")
[1] 0 1 2
$determinant
[1] 0.8735805

$A
[1] 1.166667

$I
[1] 3

$Geff
[1] 0.857

$Deffbound
[1] 0.846

$diagonality
[1] 1

$gmean.variances
[1] 1.224745
$D
[1] 0.8735805

$A
[1] 1.166667

$Ge
[1] 0.857

$Dea
[1] 0.846

$design
  X1 X2
1 -1 -1
2  1 -1
3 -1  0
4  1  0
5 -1  1
6  1  1

$rows
[1] 1 2 3 4 5 6
$determinant
[1] 0.8735805

$A
[1] 1.166667

$I
[1] 3

$Geff
[1] 0.857

$Deffbound
[1] 0.846

$diagonality
[1] 1

$gmean.variances
[1] 1.224745
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

function identity_scaling(design, factors)
    return design
end

fac = OrderedDict(:x1 => [1, 2], :x2 => [1, 2, 3])

design = [1 1; 2 1; 1 2; 2 2; 1 3; 2 3]

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = identity_scaling)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_orthogonal!)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_boxdraper_encoding!)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


identity_scaling (generic function with 1 method)

DataStructures.OrderedDict{Symbol,Array{Int64,1}} with 2 entries:
  :x1 => [1, 2]
  :x2 => [1, 2, 3]

6×2 Array{Int64,2}:
 1  1
 2  1
 1  2
 2  2
 1  3
 2  3

6×3 Array{Float64,2}:
 1.0  1.0  1.0
 1.0  2.0  1.0
 1.0  1.0  2.0
 1.0  2.0  2.0
 1.0  1.0  3.0
 1.0  2.0  3.0

0.5503212081491043

6×3 Array{Float64,2}:
 1.0  -1.0  -1.0
 1.0   1.0  -1.0
 1.0  -1.0   0.0
 1.0   1.0   0.0
 1.0  -1.0   1.0
 1.0   1.0   1.0

0.8735804647362988

6×3 Array{Float64,2}:
 1.0  -1.0  -1.22474
 1.0   1.0  -1.22474
 1.0  -1.0   0.0    
 1.0   1.0   0.0    
 1.0  -1.0   1.22474
 1.0   1.0   1.22474

0.9999999999999999
#+end_example
***** Comparing Model Matrices for the Plackett-Burman Design
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
library(FrF2)

design <- pb(16)
design[] <- lapply(design, as.factor)

design

m <- model.matrix(~., design)
m

eval.design(~., design, X = design)
#+END_SRC

#+RESULTS:
#+begin_example
Screening 15 factors in 16 runs involves perfect aliasing of 
 pairwise interactions of the first six factors with the last factor.
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
1  -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
2   1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
3   1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
4   1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
5  -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
6   1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
7  -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
8  -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
9   1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
10 -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
11 -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
12 -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
13  1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
14  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
15 -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
16  1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
class=design, type= pb
   (Intercept) A1 B1 C1 D1 E1 F1 G1 H1 J1 K1 L1 M1 N1 O1 P1
1            1 -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
2            1  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
3            1  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
4            1  1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
5            1 -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
6            1  1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
7            1 -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
8            1 -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
9            1  1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
10           1 -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
11           1 -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
12           1 -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
13           1  1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
14           1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
15           1 -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
16           1  1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
attr(,"assign")
 [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
attr(,"contrasts")
attr(,"contrasts")$A
   [,1]
-1   -1
1     1

attr(,"contrasts")$B
   [,1]
-1   -1
1     1

attr(,"contrasts")$C
   [,1]
-1   -1
1     1

attr(,"contrasts")$D
   [,1]
-1   -1
1     1

attr(,"contrasts")$E
   [,1]
-1   -1
1     1

attr(,"contrasts")$F
   [,1]
-1   -1
1     1

attr(,"contrasts")$G
   [,1]
-1   -1
1     1

attr(,"contrasts")$H
   [,1]
-1   -1
1     1

attr(,"contrasts")$J
   [,1]
-1   -1
1     1

attr(,"contrasts")$K
   [,1]
-1   -1
1     1

attr(,"contrasts")$L
   [,1]
-1   -1
1     1

attr(,"contrasts")$M
   [,1]
-1   -1
1     1

attr(,"contrasts")$N
   [,1]
-1   -1
1     1

attr(,"contrasts")$O
   [,1]
-1   -1
1     1

attr(,"contrasts")$P
   [,1]
-1   -1
1     1
$determinant
[1] 1

$A
[1] 1

$I
[1] 16

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 1
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

function identity_scaling(design, factors)
    return design
end

design = plackett_burman(16)

fac = OrderedDict([(Symbol(:x, i), [-1., 1.]) for i = 1:size(design, 2)])

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = identity_scaling)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_orthogonal!)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_boxdraper_encoding!)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


identity_scaling (generic function with 1 method)

12×11 Array{Int64,2}:
  1   1   1   1   1   1   1   1   1   1   1
  1  -1  -1  -1   1   1   1  -1   1  -1  -1
 -1  -1  -1   1   1   1  -1   1  -1  -1   1
 -1  -1   1   1   1  -1   1  -1  -1   1  -1
 -1   1   1   1  -1   1  -1  -1   1  -1  -1
  1   1   1  -1   1  -1  -1   1  -1  -1  -1
  1   1  -1   1  -1  -1   1  -1  -1  -1   1
  1  -1   1  -1  -1   1  -1  -1  -1   1   1
 -1   1  -1  -1   1  -1  -1  -1   1   1   1
  1  -1  -1   1  -1  -1  -1   1   1   1  -1
 -1  -1   1  -1  -1  -1   1   1   1  -1   1
 -1   1  -1  -1  -1   1   1   1  -1   1  -1

DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 11 entries:
  :x1  => [-1.0, 1.0]
  :x2  => [-1.0, 1.0]
  :x3  => [-1.0, 1.0]
  :x4  => [-1.0, 1.0]
  :x5  => [-1.0, 1.0]
  :x6  => [-1.0, 1.0]
  :x7  => [-1.0, 1.0]
  :x8  => [-1.0, 1.0]
  :x9  => [-1.0, 1.0]
  :x10 => [-1.0, 1.0]
  :x11 => [-1.0, 1.0]

12×12 Array{Float64,2}:
 1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0
 1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0
 1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0
 1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0
 1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0
 1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0
 1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0
 1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0
 1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0
 1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0

0.9999999999999999

12×12 Array{Float64,2}:
 1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0
 1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0
 1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0
 1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0
 1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0
 1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0
 1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0
 1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0
 1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0
 1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0

0.9999999999999999

12×12 Array{Float64,2}:
 1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0
 1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0
 1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0
 1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0
 1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0
 1.0   1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0
 1.0   1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0
 1.0  -1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0
 1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0
 1.0  -1.0   1.0  -1.0  -1.0  -1.0   1.0   1.0   1.0  -1.0   1.0  -1.0

0.9999999999999999
#+end_example

***** Comparing Mixed Model Matrices
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

fac <- gen.factorial(c(2, 3), factors = c(2))
m <- model.matrix(~., fac)

fac
m

eval.design(~., fac, X = fac)

optimized <- optFederov(~., fac, nTrials = 6)

optimized

eval.design(~., optimized$design, X = fac)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2
1 -1  1
2  1  1
3 -1  2
4  1  2
5 -1  3
6  1  3
  (Intercept) X1 X22 X23
1           1 -1   0   0
2           1  1   0   0
3           1 -1   1   0
4           1  1   1   0
5           1 -1   0   1
6           1  1   0   1
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$X2
[1] "contr.treatment"
$determinant
[1] 0.4386913

$A
[1] 4

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 3.301927
$D
[1] 0.4386913

$A
[1] 4

$Ge
[1] 1

$Dea
[1] 1

$design
  X1 X2
1 -1  1
2  1  1
3 -1  2
4  1  2
5 -1  3
6  1  3

$rows
[1] 1 2 3 4 5 6
$determinant
[1] 0.4386913

$A
[1] 4

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 3.301927
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

function identity_scaling(design, factors)
    return design
end

fac = OrderedDict(:x1 => [1., 2.], :x2 => [:a, :b, :c])

design = [1. :a; 2. :a; 1. :b; 2. :b; 1. :c; 2. :c]

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = identity_scaling)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_orthogonal!)

d_efficiency_lower_bound(m)

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac, scale = scale_boxdraper_encoding!)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


identity_scaling (generic function with 1 method)

DataStructures.OrderedDict{Symbol,Any} with 2 entries:
  :x1 => [1.0, 2.0]
  :x2 => Symbol[:a, :b, :c]

6×2 Array{Any,2}:
 1.0  :a
 2.0  :a
 1.0  :b
 2.0  :b
 1.0  :c
 2.0  :c

6×4 Array{Float64,2}:
 1.0  1.0  0.0  0.0
 1.0  2.0  0.0  0.0
 1.0  1.0  1.0  0.0
 1.0  2.0  1.0  0.0
 1.0  1.0  0.0  1.0
 1.0  2.0  0.0  1.0

0.31020161970069987

6×4 Array{Float64,2}:
 1.0  -1.0  -1.0  -1.0
 1.0   1.0  -1.0  -1.0
 1.0  -1.0   1.0  -1.0
 1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0

0.8773826753016616

6×4 Array{Float64,2}:
 1.0  -1.0  -1.0  -1.0
 1.0   1.0  -1.0  -1.0
 1.0  -1.0   1.0  -1.0
 1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0

0.8773826753016616
#+end_example
***** Discussion
There are things that are still not understood. My implementation matches R's
model matrix for designs with only true factors and only numerical factors, but
I need to use different scaling functions. After that getting an identical model
matrix, the D-Efficiency metric I compute matches the determinant computed by
~AlgDesign~'s ~eval.design~.

For the case with mixed factors, for example one 2-level numerical factor and
one 3-level true factor, I can't yet generate the same model matrix as R. It
seems that the R model matrix scales, or centers, numerical and true factors
differently. Since I can't get the same model matrix, the D-Efficiency does not
match ~AlgDesign~'s.

I do not understand yet if the D-Efficiency computation and scalings that I am
using are applicable to "mixed factor" designs. My understanding at the moment
is that those scalings are akin to the contrasts used by R model matrix
function. The problem is that I am not sure whether the formula for D-Efficiency
I am using works in those mixed designs, where each factor uses a different
contrast.

****** The Computation of the Determinant in ~AlgDesign~
The ~eval.design~ function first generates the model matrix for a design and
then scales the information matrix by the number of rows of the design before
computing its determinant. The k-th root of the determinant is then taken, where
k is the number of columns of the expanded model matrix.

Note that this differs from the computation on Castillo's book, where the
determinant of the information matrix is computed without this scaling, and the
normalization by the number of rows is only performed after the k-th root is
taken. 

Below is the source code of ~eval.design~, where those implementation details
can be seen:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
eval.design
#+END_SRC

#+RESULTS:
#+begin_example
function (frml, design, confounding = FALSE, variances = TRUE, 
    center = FALSE, X = NULL) 
{
    rownames(design) <- 1:nrow(design)
    proportions <- NULL
    if (colnames(design)[1] == "Rep..") {
        ND <- nrow(design)
        reps <- design[, 1]
        design <- design[, -1, drop = FALSE]
        design <- design[rep(1:ND, reps), ]
        rownames(design) <- 1:nrow(design)
    }
    else if (colnames(design)[1] == "Proportion") {
        proportions <- design[, 1]
        design <- design[, -1, drop = FALSE]
    }
    frml <- expand.formula(frml, colnames(design))
    design <- data.frame(design)
    numericColumns <- sapply(design, is.numeric)
    if (center) {
        means <- apply(design[, numericColumns, drop = FALSE], 
            2, mean)
        design[, numericColumns] <- sweep(design[, numericColumns, 
            drop = FALSE], 2, means)
    }
    des <- model.matrix(frml, design)
    if (!missing(X)) {
        X <- data.frame(X)
        if (center) {
            means <- apply(X[, numericColumns, drop = FALSE], 
                2, mean)
            X[, numericColumns] <- sweep(X[, numericColumns, 
                drop = FALSE], 2, means)
        }
        Xd <- model.matrix(frml, X)
    }
    output <- NULL
    if (is.vector(proportions)) {
        M <- t(des) %*% diag(proportions) %*% des
    }
    else {
        M <- (t(des) %*% des)/nrow(des)
    }
    k <- ncol(M)
    determinant <- det(M)
    if (determinant <= 0) 
        stop("Singular design")
    determinant <- (determinant)^(1/k)
    trac <- 0
    Ival <- 0
    Geff <- 0
    Deff <- 0
    orthog <- 0
    if (determinant > 0) {
        MI <- solve(M)
        if (confounding == TRUE) {
            dg <- diag(-1/diag(MI))
            output <- list(confounding = round(MI %*% dg, 4))
        }
        trac <- sum(diag(MI))/k
        if (!missing(X)) {
            CC <- t(Xd) %*% Xd/nrow(Xd)
            Ival <- sum(diag(qr.solve(M, CC)))
            Z <- t(qr.solve(M, t(Xd)))
            Geff <- ncol(Xd)/max(apply(Z * Xd, 1, sum))
            Deff <- exp(1 - 1/Geff)
        }
        cp <- match("(Intercept)", dimnames(M)[[2]], nomatch = 0)
        if (cp > 0) {
            orthog <- exp((log(det(M[-cp, -cp])) - sum(log(diag(M)[-cp])))/(k - 
                1))
        }
        else {
            orthog <- exp(log(determinant) - sum(log(diag(M)))/k)
        }
    }
    output <- c(output, list(determinant = determinant, A = trac))
    if (!missing(X)) {
        output <- c(output, list(I = Ival, Geff = round(Geff, 
            3), Deffbound = round(Deff, 3)))
    }
    output <- c(output, list(diagonality = round(orthog, 3)))
    if (variances) {
        if (determinant > 0) {
            t <- diag(solve(M))
            if (cp > 0) 
                t <- t[-cp]
            t <- exp(mean(log(t)))
            output <- c(output, list(gmean.variances = t))
        }
    }
    output
}
<bytecode: 0x55bdaeeba4b0>
<environment: namespace:AlgDesign>
#+end_example
*** [2018-04-06 Fri]
**** Exploring Contrasts
***** Model Matrices in R
Let's create a model matrix from a full factorial design for 3 parameters: 1
2-Level Numerical Factor, 1 3-Level Numerical Factor and 1 5-Level Categorical
Factor.

If we give ~model.matrix~ the full factorial, it is able to generate the correct
contrast for every parameter, because all values are represented at least once.

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
design <- gen.factorial(c(2, 3, 5), factors = c(3))
str(design)

model.matrix(~., design)

eval.design(~., design)
#+END_SRC

#+RESULTS:
#+begin_example
'data.frame':	30 obs. of  3 variables:
 $ X1: num  -1 1 -1 1 -1 1 -1 1 -1 1 ...
 $ X2: num  -1 -1 0 0 1 1 -1 -1 0 0 ...
 $ X3: Factor w/ 5 levels "1","2","3","4",..: 1 1 1 1 1 1 2 2 2 2 ...
   (Intercept) X1 X2 X32 X33 X34 X35
1            1 -1 -1   0   0   0   0
2            1  1 -1   0   0   0   0
3            1 -1  0   0   0   0   0
4            1  1  0   0   0   0   0
5            1 -1  1   0   0   0   0
6            1  1  1   0   0   0   0
7            1 -1 -1   1   0   0   0
8            1  1 -1   1   0   0   0
9            1 -1  0   1   0   0   0
10           1  1  0   1   0   0   0
11           1 -1  1   1   0   0   0
12           1  1  1   1   0   0   0
13           1 -1 -1   0   1   0   0
14           1  1 -1   0   1   0   0
15           1 -1  0   0   1   0   0
16           1  1  0   0   1   0   0
17           1 -1  1   0   1   0   0
18           1  1  1   0   1   0   0
19           1 -1 -1   0   0   1   0
20           1  1 -1   0   0   1   0
21           1 -1  0   0   0   1   0
22           1  1  0   0   0   1   0
23           1 -1  1   0   0   1   0
24           1  1  1   0   0   1   0
25           1 -1 -1   0   0   0   1
26           1  1 -1   0   0   0   1
27           1 -1  0   0   0   0   1
28           1  1  0   0   0   0   1
29           1 -1  1   0   0   0   1
30           1  1  1   0   0   0   1
attr(,"assign")
[1] 0 1 2 3 3 3 3
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"
$determinant
[1] 0.2989371

$A
[1] 6.785714

$diagonality
[1] 1

$gmean.variances
[1] 4.966097
#+end_example

If we give it an incomplete design where not all values appear we get the wrong
contrasts unless we specify them. Note that our 5-Level Categorical Factor
becomes a 4-Level Factor because one value is missing in the design.

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
X1 <- c(-1, 1, -1, 1, 1, -1, 1)
X2 <- c(-1, 0, -1, 1, 1, 0, 1)
X3 <- as.factor(c(1, 1, 3, 4, 5, 3, 1))

design <- data.frame(X1, X2, X3)

design
str(design)

model.matrix(~., design)

eval.design(~., design)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2 X3
1 -1 -1  1
2  1  0  1
3 -1 -1  3
4  1  1  4
5  1  1  5
6 -1  0  3
7  1  1  1
'data.frame':	7 obs. of  3 variables:
 $ X1: num  -1 1 -1 1 1 -1 1
 $ X2: num  -1 0 -1 1 1 0 1
 $ X3: Factor w/ 4 levels "1","3","4","5": 1 1 2 3 4 2 1
  (Intercept) X1 X2 X33 X34 X35
1           1 -1 -1   0   0   0
2           1  1  0   0   0   0
3           1 -1 -1   1   0   0
4           1  1  1   0   1   0
5           1  1  1   0   0   1
6           1 -1  0   1   0   0
7           1  1  1   0   0   0
attr(,"assign")
[1] 0 1 2 3 3 3
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"
$determinant
[1] 0.2267716

$A
[1] 8.895833

$diagonality
[1] 0.631

$gmean.variances
[1] 9.667521
#+end_example

To fix this we must specify the levels of the factor. This means that for this
new model matrix we get a singular design, since one factor is missing. This will be
necessary for evaluating samples of the full factorial design with ~optFederov~. We
must define all levels of all factors before measuring anything.

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
X1 <- c(-1, 1, -1, 1, 1, -1, 1)
X2 <- c(-1, 0, -1, 1, 1, 0, 1)
X3 <- as.factor(c(1, 1, 3, 4, 5, 3, 1))
levels(X3) <- c(1, 2, 3, 4, 5)

design <- data.frame(X1, X2, X3)

design
str(design)

model.matrix(~., design)

eval.design(~., design)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2 X3
1 -1 -1  1
2  1  0  1
3 -1 -1  2
4  1  1  3
5  1  1  4
6 -1  0  2
7  1  1  1
'data.frame':	7 obs. of  3 variables:
 $ X1: num  -1 1 -1 1 1 -1 1
 $ X2: num  -1 0 -1 1 1 0 1
 $ X3: Factor w/ 5 levels "1","2","3","4",..: 1 1 2 3 4 2 1
  (Intercept) X1 X2 X32 X33 X34 X35
1           1 -1 -1   0   0   0   0
2           1  1  0   0   0   0   0
3           1 -1 -1   1   0   0   0
4           1  1  1   0   1   0   0
5           1  1  1   0   0   1   0
6           1 -1  0   1   0   0   0
7           1  1  1   0   0   0   0
attr(,"assign")
[1] 0 1 2 3 3 3 3
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"
Error in eval.design(~., design) : Singular design
#+end_example

Now adding the missing value, we get:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
X1 <- c(-1, 1, -1, 1, 1, -1, 1)
X2 <- c(-1, 0, -1, 1, 1, 0, 1)
X3 <- as.factor(c(1, 1, 3, 4, 5, 3, 2))
levels(X3) <- c(1, 2, 3, 4, 5)

design <- data.frame(X1, X2, X3)

design
str(design)

model.matrix(~., design)

eval.design(~., design)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2 X3
1 -1 -1  1
2  1  0  1
3 -1 -1  3
4  1  1  4
5  1  1  5
6 -1  0  3
7  1  1  2
'data.frame':	7 obs. of  3 variables:
 $ X1: num  -1 1 -1 1 1 -1 1
 $ X2: num  -1 0 -1 1 1 0 1
 $ X3: Factor w/ 5 levels "1","2","3","4",..: 1 1 3 4 5 3 2
  (Intercept) X1 X2 X32 X33 X34 X35
1           1 -1 -1   0   0   0   0
2           1  1  0   0   0   0   0
3           1 -1 -1   0   1   0   0
4           1  1  1   0   0   1   0
5           1  1  1   0   0   0   1
6           1 -1  0   0   1   0   0
7           1  1  1   1   0   0   0
attr(,"assign")
[1] 0 1 2 3 3 3 3
attr(,"contrasts")
attr(,"contrasts")$X3
[1] "contr.treatment"
$determinant
[1] 0.1741448

$A
[1] 18

$diagonality
[1] 0.621

$gmean.variances
[1] 17.63889
#+end_example

***** Model Matrices in Julia
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using StatsModels, DataFrames

data = DataFrame(y  = [1, 1, 1, 1, 1, 1, 1],
                 x1 = [-1, 1, -1, 1, 1, -1, 1],
                 x2 = [-1, 0, -1, 1, 1, 0, 1],
                 x3 = [Symbol(1), Symbol(1), Symbol(3), Symbol(4),
                       Symbol(5), Symbol(3), Symbol(2)])

factors = Dict(:x1 => [-1, 1],
               :x2 => [-1, 0, 1],
               :x3 => [Symbol(1), Symbol(2), Symbol(3), Symbol(4), Symbol(5)])
#+END_SRC

#+RESULTS:
#+begin_example


7×4 DataFrames.DataFrame
│ Row │ y │ x1 │ x2 │ x3 │
├─────┼───┼────┼────┼────┤
│ 1   │ 1 │ -1 │ -1 │ 1  │
│ 2   │ 1 │ 1  │ 0  │ 1  │
│ 3   │ 1 │ -1 │ -1 │ 3  │
│ 4   │ 1 │ 1  │ 1  │ 4  │
│ 5   │ 1 │ 1  │ 1  │ 5  │
│ 6   │ 1 │ -1 │ 0  │ 3  │
│ 7   │ 1 │ 1  │ 1  │ 2  │

Dict{Symbol,Any} with 3 entries:
  :x2 => [-1, 0, 1]
  :x3 => Symbol[Symbol("1"), Symbol("2"), Symbol("3"), Symbol("4"), Symbol("5")]
  :x1 => [-1, 1]
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
contrasts = Dict(:x3 => StatsModels.ContrastsMatrix(DummyCoding(), factors[:x3]))

model = ModelFrame(@formula(y ~ x1 + x2 + x3), data, contrasts = contrasts)
#+END_SRC

#+RESULTS:
#+begin_example
Dict{Symbol,StatsModels.ContrastsMatrix{StatsModels.DummyCoding,Symbol}} with 1 entry:
  :x3 => StatsModels.ContrastsMatrix{StatsModels.DummyCoding,Symbol}([0.0 0.0 0.0 0.0; 1.0 0.0 0.0 0.0;…

StatsModels.ModelFrame(7×4 DataFrames.DataFrame
│ Row │ y │ x1 │ x2 │ x3 │
├─────┼───┼────┼────┼────┤
│ 1   │ 1 │ -1 │ -1 │ 1  │
│ 2   │ 1 │ 1  │ 0  │ 1  │
│ 3   │ 1 │ -1 │ -1 │ 3  │
│ 4   │ 1 │ 1  │ 1  │ 4  │
│ 5   │ 1 │ 1  │ 1  │ 5  │
│ 6   │ 1 │ -1 │ 0  │ 3  │
│ 7   │ 1 │ 1  │ 1  │ 2  │, StatsModels.Terms(Symbol[:x1, :x2, :x3], Symbol[:y, :x1, :x2, :x3], Bool[true false false false; false true false false; false false true false; false false false true], Bool[false false false false; false false false false; false false false false; false false false false], [1, 1, 1, 1], true, true), Bool[true, true, true, true, true, true, true], Dict{Symbol,StatsModels.ContrastsMatrix}(Pair{Symbol,StatsModels.ContrastsMatrix}(:x3, StatsModels.ContrastsMatrix{StatsModels.DummyCoding,Symbol}([0.0 0.0 0.0 0.0; 1.0 0.0 0.0 0.0; … ; 0.0 0.0 1.0 0.0; 0.0 0.0 0.0 1.0], Symbol[Symbol("2"), Symbol("3"), Symbol("4"), Symbol("5")], Symbol[Symbol("1"), Symbol("2"), Symbol("3"), Symbol("4"), Symbol("5")], StatsModels.DummyCoding(#NULL, #NULL)))))
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model.df

model.terms.terms

model.contrasts

keys(model.contrasts)
#+END_SRC

#+RESULTS:
#+begin_example
7×4 DataFrames.DataFrame
│ Row │ y │ x1 │ x2 │ x3 │
├─────┼───┼────┼────┼────┤
│ 1   │ 1 │ -1 │ -1 │ 1  │
│ 2   │ 1 │ 1  │ 0  │ 1  │
│ 3   │ 1 │ -1 │ -1 │ 3  │
│ 4   │ 1 │ 1  │ 1  │ 4  │
│ 5   │ 1 │ 1  │ 1  │ 5  │
│ 6   │ 1 │ -1 │ 0  │ 3  │
│ 7   │ 1 │ 1  │ 1  │ 2  │

3-element Array{Symbol,1}:
 :x1
 :x2
 :x3

Dict{Symbol,StatsModels.ContrastsMatrix} with 1 entry:
  :x3 => StatsModels.ContrastsMatrix{StatsModels.DummyCoding,Symbol}([0.0 0.0 0.0 0.0; 1.0 0.0 0.0 0.0;…

Base.KeyIterator for a Dict{Symbol,StatsModels.ContrastsMatrix} with 1 entry. Keys:
  :x3
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model_matrix = ModelMatrix(model);
#+END_SRC

#+RESULTS:

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
model_matrix.m

model_matrix.assign
#+END_SRC

#+RESULTS:
#+begin_example
7×7 Array{Float64,2}:
 1.0  -1.0  -1.0  0.0  0.0  0.0  0.0
 1.0   1.0   0.0  0.0  0.0  0.0  0.0
 1.0  -1.0  -1.0  0.0  1.0  0.0  0.0
 1.0   1.0   1.0  0.0  0.0  1.0  0.0
 1.0   1.0   1.0  0.0  0.0  0.0  1.0
 1.0  -1.0   0.0  0.0  1.0  0.0  0.0
 1.0   1.0   1.0  1.0  0.0  0.0  0.0

7-element Array{Int64,1}:
 0
 1
 2
 3
 3
 3
 3
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
A = model_matrix.m

D = det((A' * A) / size(A, 1)) ^ (1 / size(A, 2))
D = (det((A' * A)) ^ (1 / size(A, 2))) / size(A, 1)
#+END_SRC

#+RESULTS:
#+begin_example
7×7 Array{Float64,2}:
 1.0  -1.0  -1.0  0.0  0.0  0.0  0.0
 1.0   1.0   0.0  0.0  0.0  0.0  0.0
 1.0  -1.0  -1.0  0.0  1.0  0.0  0.0
 1.0   1.0   1.0  0.0  0.0  1.0  0.0
 1.0   1.0   1.0  0.0  0.0  0.0  1.0
 1.0  -1.0   0.0  0.0  1.0  0.0  0.0
 1.0   1.0   1.0  1.0  0.0  0.0  0.0

0.1741448077434965
0.17414480774349653
#+end_example
*** [2018-04-09 Mon]
**** Comparing Candidate Sets for ~optFederov~ using Correct Levels
***** Setup
#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using RCall, ExperimentalDesign, DataStructures, DataFrames

function opt_federov(design, factors, is_factor, experiments)
    r_output = R"""
    library(AlgDesign)
    design <- $design
    factors <- $factors

    if(length($is_factor) != 0) {
        design[$is_factor] <- lapply(design[$is_factor], as.factor)
    }

    for(factor in $is_factor) {
        levels(design[factor]) <- factors[factor]
    }

    federov_output <- optFederov(~., design, criterion = "D", nTrials = $experiments)
    """
    return @rget federov_output
end

function sampled_opt_federov(factors, is_factor, experiments, candidate_set_size)
    design = full_factorial_subset(factors, candidate_set_size)
    design = DataFrame(Array{Float64, 2}(design))
    rename!(design, OrderedDict(zip(names(design), keys(factors))))

    return opt_federov(design, factors, is_factor, experiments)
end

function sampling_max(factors, designs, ranges, check_bounds = false)
    best_sampled = []

    for range in ranges
        design_subset = sample_subset(factors, range, designs, check_bounds = check_bounds)
        push!(best_sampled, max(design_subset[:DELB]...))
    end

    return best_sampled
end

function sampled_opt_federov_max(factors, is_factor, julia_factors,
                                 candidate_set_size, set_repeats, ranges)
    best_sampled         = []
    best_sampled_federov = []

    for range in ranges
        best_range         = []
        best_range_federov = []

        for i = 1:set_repeats
            federov_output = sampled_opt_federov(factors, is_factor, range.start, candidate_set_size)
            design_array   = federov_output[:design]

            model_matrix   = generate_model_matrix(build_linear_formula(collect(keys(julia_factors))),
                                                   design_array,
                                                   julia_factors)

            push!(best_range_federov, federov_output[:D])
            push!(best_range, d_efficiency_lower_bound(model_matrix))
        end

        push!(best_sampled_federov, max(best_range_federov...))
        push!(best_sampled, max(best_range...))
    end

    return best_sampled, best_sampled_federov
end
#+END_SRC

#+RESULTS:
#+begin_example
ESS


opt_federov (generic function with 1 method)

sampled_opt_federov (generic function with 1 method)

sampling_max (generic function with 2 methods)

sampled_opt_federov_max (generic function with 1 method)
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using Plots

function get_samples(nfactors::Int, nlevels::Int,
                     set_sizes::Array{Int, 1}, starting_design_size::Int,
                     categorical::Bool = true)
    factors = OrderedDict{Symbol, Any}()

    for i = 1:nfactors
        factors[Symbol(:f, i)] = [float(i) for i = 1:nlevels]
    end

    if categorical
        is_factor = [String(f) for f in keys(factors)]
    else
        #is_factor = [String(f) for f in collect(keys(factors))[floor(Int, end / 2):end]]
        is_factor = []
    end

    println("Factors:")
    println(factors)
    println("True factors:")
    println(is_factor)

    julia_factors = OrderedDict{Symbol, Any}()

    if categorical
        for i = 1:nfactors
            julia_factors[Symbol(:f, i)] = Array{String, 1}([string(i) for i = 1:nlevels])
        end
    else
        for i = 1:nfactors
            julia_factors[Symbol(:f, i)] = Array{Int, 1}([i for i = 1:nlevels])
        end
    end

    ranges = [k:k for k = starting_design_size:1:(starting_design_size + 20)]

    best_values = []

    for candidate_set_size in set_sizes
        repeats = 1

        best_computed, best_federov = sampled_opt_federov_max(factors, is_factor, julia_factors, 
                                                              candidate_set_size,
                                                              repeats, ranges)
                                                              
        println("Size: ", candidate_set_size)
        println("From ", set_sizes[1], " to ", set_sizes[end])
        println("Results match:", isapprox(best_federov, best_computed))

        push!(best_values, best_computed)
    end

    #sampling_max(factors, designs, ranges, check_bounds = false)
    best_sampled = sampling_max(julia_factors, 8000, ranges)

    return ranges, best_values, best_sampled
end
#+END_SRC

#+RESULTS:
: 
: 
: get_samples (generic function with 2 methods)

***** 10 3-Level Categorical Factors :ATTACH:
:PROPERTIES:
:Attachments: 10_3LC.png
:ID:       859ddc0c-9276-43e4-bb86-7de0465c395a
:END:
#+HEADER: :session *Julia* :results output
#+BEGIN_SRC julia
sample_sets = [100, 200, 400, 800, 1600]
nfactors = 10
nlevels = 3
starting_size = 21

#get_samples(nfactors::Int, nlevels::Int, set_sizes::Array{Int, 1}, starting_design_size::Int)
ranges, samples, uniform_sampled = get_samples(nfactors, nlevels, sample_sets, starting_size)
println(samples, uniform_sampled, ranges)
#+END_SRC

#+RESULTS:
#+begin_example
5-element Array{Int64,1}:
  100
  200
  400
  800
 1600
10
3
21


Factors:
DataStructures.OrderedDict{Symbol,Any}(:f1=>[1.0, 2.0, 3.0],:f2=>[1.0, 2.0, 3.0],:f3=>[1.0, 2.0, 3.0],:f4=>[1.0, 2.0, 3.0],:f5=>[1.0, 2.0, 3.0],:f6=>[1.0, 2.0, 3.0],:f7=>[1.0, 2.0, 3.0],:f8=>[1.0, 2.0, 3.0],:f9=>[1.0, 2.0, 3.0],:f10=>[1.0, 2.0, 3.0])
True factors:
String["f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10"]
Size: 100
From 100 to 1600
Results match:true
Size: 200
From 100 to 1600
Results match:true
Size: 400
From 100 to 1600
Results match:true
Size: 800
From 100 to 1600
Results match:true
Size: 1600
From 100 to 1600
Results match:true
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 21:21
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 38.46967472 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 22:22
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 43.060343979 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 23:23
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 39.469884496 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 24:24
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 36.964529434 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 25:25
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 50.944079256 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 26:26
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 42.542063212 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 27:27
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 40.680577837 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 28:28
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 40.61384728 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 29:29
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 41.705591224 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 30:30
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 63.19379945 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 31:31
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 44.403596084 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 32:32
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 46.235147389 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 33:33
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 49.936070184 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 34:34
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 47.469713816 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 35:35
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 49.387587609 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 36:36
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 52.75876527 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 37:37
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 53.602984176 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 38:38
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 50.528359574 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 39:39
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 56.942404658 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 40:40
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 57.33019499 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>String["1", "2", "3"],:f2=>String["1", "2", "3"],:f3=>String["1", "2", "3"],:f4=>String["1", "2", "3"],:f5=>String["1", "2", "3"],:f6=>String["1", "2", "3"],:f7=>String["1", "2", "3"],:f8=>String["1", "2", "3"],:f9=>String["1", "2", "3"],:f10=>String["1", "2", "3"])
Full Factorial Size: 59049
Total Subsets: Inf
Range of Design Sizes: 41:41
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 53.073066728 seconds
(UnitRange{Int64}[21:21, 22:22, 23:23, 24:24, 25:25, 26:26, 27:27, 28:28, 29:29, 30:30  …  32:32, 33:33, 34:34, 35:35, 36:36, 37:37, 38:38, 39:39, 40:40, 41:41], Any[Any[0.150713, 0.151241, 0.157589, 0.15962, 0.163039, 0.168982, 0.172209, 0.174151, 0.171668, 0.175791  …  0.180792, 0.185178, 0.180124, 0.182914, 0.187103, 0.183389, 0.185505, 0.183975, 0.186906, 0.187791], Any[0.152279, 0.163814, 0.168094, 0.170045, 0.174488, 0.177206, 0.17838, 0.183931, 0.180429, 0.185004  …  0.187171, 0.188809, 0.188509, 0.189516, 0.18941, 0.191876, 0.194329, 0.191984, 0.192388, 0.19356], Any[0.159256, 0.168029, 0.173637, 0.171885, 0.180836, 0.180916, 0.186476, 0.184813, 0.188339, 0.18885  …  0.192063, 0.192545, 0.193542, 0.192951, 0.194457, 0.195736, 0.195866, 0.196433, 0.196422, 0.196296], Any[0.163147, 0.171001, 0.17319, 0.179808, 0.183919, 0.184405, 0.184241, 0.18922, 0.191425, 0.19112  …  0.193889, 0.19348, 0.195232, 0.196391, 0.195895, 0.196215, 0.197524, 0.197893, 0.199233, 0.19963], Any[0.168071, 0.177826, 0.177522, 0.181078, 0.18428, 0.186986, 0.189113, 0.188151, 0.190961, 0.193271  …  0.195272, 0.195369, 0.196974, 0.197185, 0.198107, 0.19819, 0.199047, 0.199977, 0.199683, 0.199983]], Any[0.110579, 0.116928, 0.123967, 0.134883, 0.144085, 0.137173, 0.143486, 0.144832, 0.148439, 0.155144  …  0.155515, 0.160509, 0.16178, 0.160642, 0.162324, 0.167769, 0.167367, 0.166148, 0.168215, 0.168676])
Any[Any[0.150713, 0.151241, 0.157589, 0.15962, 0.163039, 0.168982, 0.172209, 0.174151, 0.171668, 0.175791, 0.178767, 0.180792, 0.185178, 0.180124, 0.182914, 0.187103, 0.183389, 0.185505, 0.183975, 0.186906, 0.187791], Any[0.152279, 0.163814, 0.168094, 0.170045, 0.174488, 0.177206, 0.17838, 0.183931, 0.180429, 0.185004, 0.186528, 0.187171, 0.188809, 0.188509, 0.189516, 0.18941, 0.191876, 0.194329, 0.191984, 0.192388, 0.19356], Any[0.159256, 0.168029, 0.173637, 0.171885, 0.180836, 0.180916, 0.186476, 0.184813, 0.188339, 0.18885, 0.189994, 0.192063, 0.192545, 0.193542, 0.192951, 0.194457, 0.195736, 0.195866, 0.196433, 0.196422, 0.196296], Any[0.163147, 0.171001, 0.17319, 0.179808, 0.183919, 0.184405, 0.184241, 0.18922, 0.191425, 0.19112, 0.191482, 0.193889, 0.19348, 0.195232, 0.196391, 0.195895, 0.196215, 0.197524, 0.197893, 0.199233, 0.19963], Any[0.168071, 0.177826, 0.177522, 0.181078, 0.18428, 0.186986, 0.189113, 0.188151, 0.190961, 0.193271, 0.193698, 0.195272, 0.195369, 0.196974, 0.197185, 0.198107, 0.19819, 0.199047, 0.199977, 0.199683, 0.199983]]Any[0.110579, 0.116928, 0.123967, 0.134883, 0.144085, 0.137173, 0.143486, 0.144832, 0.148439, 0.155144, 0.152275, 0.155515, 0.160509, 0.16178, 0.160642, 0.162324, 0.167769, 0.167367, 0.166148, 0.168215, 0.168676]UnitRange{Int64}[21:21, 22:22, 23:23, 24:24, 25:25, 26:26, 27:27, 28:28, 29:29, 30:30, 31:31, 32:32, 33:33, 34:34, 35:35, 36:36, 37:37, 38:38, 39:39, 40:40, 41:41]
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot([r.start for r in ranges], samples[1],
     label = "optFederov with $(sample_sets[1]) samples")

for sample = 2:length(samples)
    plot!([r.start for r in ranges], samples[sample],
          label = "optFederov with $(sample_sets[sample]) samples",
          yticks = round(min(uniform_sampled..., vcat(samples...)...) - 0.002, 2):0.01:round(max(uniform_sampled..., vcat(samples...)...) + 0.002, 2),
          xticks = ranges[1].start:4:ranges[end].stop,
          ylim = ((min(uniform_sampled..., vcat(samples...)...) - 0.002), (max(uniform_sampled..., vcat(samples...)...) + 0.002)))
end

plot!([r.start for r in ranges], uniform_sampled,
      label = "8000 uniformly sampled designs", color = :black,
      ylabel = "D-Efficiency", xlabel = "Design Size",
      legend = :bottomright,
      legendfont = Plots.Font("sans-serif", 6, :hcenter, :vcenter, 0.0, RGB(0.0,0.0,0.0)),
      title = "$nfactors $(nlevels)-Level Categorical Factors")

#+END_SRC

#+RESULTS:
: 
: 
: 
: 

#+HEADER: :session *Julia* :eval no-export :results graphics output :file /tmp/10_3LC.png
#+BEGIN_SRC julia
savefig("/tmp/10_3LC.png")
#+END_SRC

#+ATTR_ORG: :width 900 :height 900
#+RESULTS:
[[file:/tmp/10_3LC.png]]
***** 20 2-Level Numerical Factors                               :ATTACH:
:PROPERTIES:
:Attachments: 20_2LC.png
:ID:       6dd27848-9d2a-4413-860e-8280b7590142
:END:
#+HEADER: :session *Julia* :results output
#+BEGIN_SRC julia
sample_sets = [100, 200, 400, 800, 1600]
nfactors = 20
nlevels = 2
starting_size = 21

#get_samples(nfactors::Int, nlevels::Int, set_sizes::Array{Int, 1}, starting_design_size::Int)
ranges, samples, uniform_sampled = get_samples(nfactors, nlevels,
                                               sample_sets, starting_size,
                                               false)
println(samples, uniform_sampled, ranges)
#+END_SRC

#+RESULTS:
#+begin_example
5-element Array{Int64,1}:
  100
  200
  400
  800
 1600
20
2
21


Factors:
DataStructures.OrderedDict{Symbol,Any}(:f1=>[1.0, 2.0],:f2=>[1.0, 2.0],:f3=>[1.0, 2.0],:f4=>[1.0, 2.0],:f5=>[1.0, 2.0],:f6=>[1.0, 2.0],:f7=>[1.0, 2.0],:f8=>[1.0, 2.0],:f9=>[1.0, 2.0],:f10=>[1.0, 2.0],:f11=>[1.0, 2.0],:f12=>[1.0, 2.0],:f13=>[1.0, 2.0],:f14=>[1.0, 2.0],:f15=>[1.0, 2.0],:f16=>[1.0, 2.0],:f17=>[1.0, 2.0],:f18=>[1.0, 2.0],:f19=>[1.0, 2.0],:f20=>[1.0, 2.0])
True factors:
Any[]
Size: 100
From 100 to 1600
Results match:true
Size: 200
From 100 to 1600
Results match:true
Size: 400
From 100 to 1600
Results match:true
Size: 800
From 100 to 1600
Results match:true
Size: 1600
From 100 to 1600
Results match:true
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 21:21
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 59.989242219 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 22:22
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 58.978959158 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 23:23
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 73.537290795 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 24:24
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 78.004043737 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 25:25
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 69.153505739 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 26:26
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 65.419978337 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 27:27
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 84.989853913 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 28:28
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 114.022485107 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 29:29
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 69.791981466 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 30:30
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 99.020288299 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 31:31
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 96.143686787 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 32:32
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 79.643746249 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 33:33
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 86.902731841 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 34:34
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 80.367178499 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 35:35
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 82.323880395 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 36:36
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 89.398056713 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 37:37
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 91.598603015 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 38:38
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 109.413751414 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 39:39
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 90.973558701 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 40:40
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 90.717675039 seconds
Factors: DataStructures.OrderedDict{Symbol,Any}(:f1=>[1, 2],:f2=>[1, 2],:f3=>[1, 2],:f4=>[1, 2],:f5=>[1, 2],:f6=>[1, 2],:f7=>[1, 2],:f8=>[1, 2],:f9=>[1, 2],:f10=>[1, 2],:f11=>[1, 2],:f12=>[1, 2],:f13=>[1, 2],:f14=>[1, 2],:f15=>[1, 2],:f16=>[1, 2],:f17=>[1, 2],:f18=>[1, 2],:f19=>[1, 2],:f20=>[1, 2])
Full Factorial Size: 1048576
Total Subsets: Inf
Range of Design Sizes: 41:41
Number of Designs to Sample: 8000
WARNING: Skipping bounds check!
Elapsed Time: 133.311433836 seconds
(UnitRange{Int64}[21:21, 22:22, 23:23, 24:24, 25:25, 26:26, 27:27, 28:28, 29:29, 30:30  …  32:32, 33:33, 34:34, 35:35, 36:36, 37:37, 38:38, 39:39, 40:40, 41:41], Any[Any[0.190255, 0.1955, 0.208928, 0.211276, 0.21304, 0.211705, 0.223835, 0.225348, 0.219511, 0.226675  …  0.229251, 0.230164, 0.230502, 0.231665, 0.233511, 0.234775, 0.236488, 0.237854, 0.239949, 0.236759], Any[0.197888, 0.204832, 0.212174, 0.217962, 0.222445, 0.225126, 0.229079, 0.231789, 0.232373, 0.235872  …  0.240469, 0.241009, 0.242003, 0.243314, 0.24593, 0.24615, 0.247289, 0.246474, 0.245447, 0.249938], Any[0.206626, 0.220253, 0.218343, 0.223695, 0.226976, 0.230744, 0.235044, 0.237306, 0.237356, 0.236358  …  0.243861, 0.2478, 0.248676, 0.246713, 0.247422, 0.249827, 0.251047, 0.252142, 0.251562, 0.253044], Any[0.212506, 0.220323, 0.227934, 0.227707, 0.228545, 0.235939, 0.23805, 0.238392, 0.24136, 0.242603  …  0.246986, 0.247973, 0.249957, 0.249964, 0.251137, 0.252224, 0.25259, 0.254033, 0.252297, 0.25573], Any[0.224757, 0.221687, 0.232259, 0.234116, 0.233012, 0.240041, 0.239541, 0.243519, 0.242697, 0.244596  …  0.248296, 0.250551, 0.250604, 0.251973, 0.253224, 0.254085, 0.255064, 0.254796, 0.254396, 0.256106]], Any[0.142431, 0.153168, 0.160653, 0.169753, 0.173275, 0.1769, 0.180109, 0.186807, 0.188723, 0.192852  …  0.20155, 0.2019, 0.205327, 0.208188, 0.207994, 0.210522, 0.213128, 0.213387, 0.21376, 0.217651])
Any[Any[0.190255, 0.1955, 0.208928, 0.211276, 0.21304, 0.211705, 0.223835, 0.225348, 0.219511, 0.226675, 0.231014, 0.229251, 0.230164, 0.230502, 0.231665, 0.233511, 0.234775, 0.236488, 0.237854, 0.239949, 0.236759], Any[0.197888, 0.204832, 0.212174, 0.217962, 0.222445, 0.225126, 0.229079, 0.231789, 0.232373, 0.235872, 0.237199, 0.240469, 0.241009, 0.242003, 0.243314, 0.24593, 0.24615, 0.247289, 0.246474, 0.245447, 0.249938], Any[0.206626, 0.220253, 0.218343, 0.223695, 0.226976, 0.230744, 0.235044, 0.237306, 0.237356, 0.236358, 0.24181, 0.243861, 0.2478, 0.248676, 0.246713, 0.247422, 0.249827, 0.251047, 0.252142, 0.251562, 0.253044], Any[0.212506, 0.220323, 0.227934, 0.227707, 0.228545, 0.235939, 0.23805, 0.238392, 0.24136, 0.242603, 0.24423, 0.246986, 0.247973, 0.249957, 0.249964, 0.251137, 0.252224, 0.25259, 0.254033, 0.252297, 0.25573], Any[0.224757, 0.221687, 0.232259, 0.234116, 0.233012, 0.240041, 0.239541, 0.243519, 0.242697, 0.244596, 0.246843, 0.248296, 0.250551, 0.250604, 0.251973, 0.253224, 0.254085, 0.255064, 0.254796, 0.254396, 0.256106]]Any[0.142431, 0.153168, 0.160653, 0.169753, 0.173275, 0.1769, 0.180109, 0.186807, 0.188723, 0.192852, 0.19942, 0.20155, 0.2019, 0.205327, 0.208188, 0.207994, 0.210522, 0.213128, 0.213387, 0.21376, 0.217651]UnitRange{Int64}[21:21, 22:22, 23:23, 24:24, 25:25, 26:26, 27:27, 28:28, 29:29, 30:30, 31:31, 32:32, 33:33, 34:34, 35:35, 36:36, 37:37, 38:38, 39:39, 40:40, 41:41]
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
plot([r.start for r in ranges], samples[1],
     label = "optFederov with $(sample_sets[1]) samples")

for sample = 2:length(samples)
    plot!([r.start for r in ranges], samples[sample],
          label = "optFederov with $(sample_sets[sample]) samples",
          yticks = round(min(uniform_sampled..., vcat(samples...)...) - 0.002, 2):0.01:round(max(uniform_sampled..., vcat(samples...)...) + 0.002, 2),
          xticks = ranges[1].start:4:ranges[end].stop,
          ylim = ((min(uniform_sampled..., vcat(samples...)...) - 0.002), (max(uniform_sampled..., vcat(samples...)...) + 0.002)))
end

plot!([r.start for r in ranges], uniform_sampled,
      label = "8000 uniformly sampled designs", color = :black,
      ylabel = "D-Efficiency", xlabel = "Design Size",
      legend = :bottomright,
      legendfont = Plots.Font("sans-serif", 6, :hcenter, :vcenter, 0.0, RGB(0.0,0.0,0.0)),
      title = "$nfactors $(nlevels)-Level Numerical Factors")

#+END_SRC

#+RESULTS:
: 
: 
: 
: 

#+HEADER: :session *Julia* :eval no-export :results graphics output :file /tmp/20_2LC.png
#+BEGIN_SRC julia
savefig("/tmp/20_2LC.png")
#+END_SRC

#+ATTR_ORG: :width  900 :height 900
#+RESULTS:
[[file:/tmp/20_2LC.png]]
*** [2018-04-10 Tue]
**** Comparing Model Matrices Using the New Implementation
***** Comparing Factor Model Matrices
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

fac <- gen.factorial(c(2, 3), factors = c(1, 2))
m <- model.matrix(~., fac)

fac
m

eval.design(~., fac, X = fac)

optimized <- optFederov(~., fac, nTrials = 6)

optimized

eval.design(~., optimized$design, X = fac)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2
1  1  1
2  2  1
3  1  2
4  2  2
5  1  3
6  2  3
  (Intercept) X12 X22 X23
1           1   0   0   0
2           1   1   0   0
3           1   0   1   0
4           1   1   1   0
5           1   0   0   1
6           1   1   0   1
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$X1
[1] "contr.treatment"

attr(,"contrasts")$X2
[1] "contr.treatment"
$determinant
[1] 0.3102016

$A
[1] 5

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 0.874

$gmean.variances
[1] 5.241483
$D
[1] 0.3102016

$A
[1] 5

$Ge
[1] 1

$Dea
[1] 1

$design
  X1 X2
1  1  1
2  2  1
3  1  2
4  2  2
5  1  3
6  2  3

$rows
[1] 1 2 3 4 5 6
$determinant
[1] 0.3102016

$A
[1] 5

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 0.874

$gmean.variances
[1] 5.241483
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools, DataFrames

function identity_scaling(design, factors)
    return design
end

fac = OrderedDict(:x1 => [:a, :b], :x2 => [:a, :b, :c])

design = DataFrame(x1 = [:a, :b, :a, :b, :a, :b],
                   x2 = [:a, :a, :b, :b, :c, :c])

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


identity_scaling (generic function with 1 method)

DataStructures.OrderedDict{Symbol,Array{Symbol,1}} with 2 entries:
  :x1 => Symbol[:a, :b]
  :x2 => Symbol[:a, :b, :c]

6×2 DataFrames.DataFrame
│ Row │ x1 │ x2 │
├─────┼────┼────┤
│ 1   │ a  │ a  │
│ 2   │ b  │ a  │
│ 3   │ a  │ b  │
│ 4   │ b  │ b  │
│ 5   │ a  │ c  │
│ 6   │ b  │ c  │

6×4 Array{Float64,2}:
 1.0  0.0  0.0  0.0
 1.0  1.0  0.0  0.0
 1.0  0.0  1.0  0.0
 1.0  1.0  1.0  0.0
 1.0  0.0  0.0  1.0
 1.0  1.0  0.0  1.0

0.31020161970069987
#+end_example
***** Comparing Numerical Model Matrices
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

fac <- gen.factorial(c(2,3))
m <- model.matrix(~., fac)

fac
m

eval.design(~., fac, X = fac)

optimized <- optFederov(~., fac, nTrials = 6)

optimized

eval.design(~., optimized$design, X = fac)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2
1 -1 -1
2  1 -1
3 -1  0
4  1  0
5 -1  1
6  1  1
  (Intercept) X1 X2
1           1 -1 -1
2           1  1 -1
3           1 -1  0
4           1  1  0
5           1 -1  1
6           1  1  1
attr(,"assign")
[1] 0 1 2
$determinant
[1] 0.8735805

$A
[1] 1.166667

$I
[1] 3

$Geff
[1] 0.857

$Deffbound
[1] 0.846

$diagonality
[1] 1

$gmean.variances
[1] 1.224745
$D
[1] 0.8735805

$A
[1] 1.166667

$Ge
[1] 0.857

$Dea
[1] 0.846

$design
  X1 X2
1 -1 -1
2  1 -1
3 -1  0
4  1  0
5 -1  1
6  1  1

$rows
[1] 1 2 3 4 5 6
$determinant
[1] 0.8735805

$A
[1] 1.166667

$I
[1] 3

$Geff
[1] 0.857

$Deffbound
[1] 0.846

$diagonality
[1] 1

$gmean.variances
[1] 1.224745
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

function identity_scaling(design, factors)
    return design
end

fac = OrderedDict(:x1 => [-1, 1], :x2 => [-1, 0, 1])

design = DataFrame(x1 = [-1, 1, -1, 1, -1, 1],
                   x2 = [-1, -1, 0, 0, 1, 1])

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


identity_scaling (generic function with 1 method)

DataStructures.OrderedDict{Symbol,Array{Int64,1}} with 2 entries:
  :x1 => [-1, 1]
  :x2 => [-1, 0, 1]

6×2 DataFrames.DataFrame
│ Row │ x1 │ x2 │
├─────┼────┼────┤
│ 1   │ -1 │ -1 │
│ 2   │ 1  │ -1 │
│ 3   │ -1 │ 0  │
│ 4   │ 1  │ 0  │
│ 5   │ -1 │ 1  │
│ 6   │ 1  │ 1  │

6×3 Array{Float64,2}:
 1.0  -1.0  -1.0
 1.0   1.0  -1.0
 1.0  -1.0   0.0
 1.0   1.0   0.0
 1.0  -1.0   1.0
 1.0   1.0   1.0

0.8735804647362988
#+end_example
***** Comparing Model Matrices for the Plackett-Burman Design
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
library(FrF2)

design <- pb(20)
design[] <- lapply(design, as.factor)

design

m <- model.matrix(~., design)
m

eval.design(~., design, X = design)
#+END_SRC

#+RESULTS:
#+begin_example
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T
1   1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1
2  -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1
3   1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1
4  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
5  -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1
6   1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1
7   1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1
8   1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1
9  -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1
10 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1
11 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1
12 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1
13 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1
14 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1
15 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1
16  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1
17  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1
18  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1
19  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1
20  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1
class=design, type= pb
   (Intercept) A1 B1 C1 D1 E1 F1 G1 H1 J1 K1 L1 M1 N1 O1 P1 Q1 R1 S1 T1
1            1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1
2            1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1
3            1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1
4            1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
5            1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1
6            1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1
7            1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1
8            1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1
9            1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1
10           1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1
11           1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1
12           1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1
13           1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1
14           1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1
15           1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1  1 -1
16           1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1
17           1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1
18           1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1
19           1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1  1 -1
20           1  1 -1  1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1  1  1  1  1 -1
attr(,"assign")
 [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19
attr(,"contrasts")
attr(,"contrasts")$A
   [,1]
-1   -1
1     1

attr(,"contrasts")$B
   [,1]
-1   -1
1     1

attr(,"contrasts")$C
   [,1]
-1   -1
1     1

attr(,"contrasts")$D
   [,1]
-1   -1
1     1

attr(,"contrasts")$E
   [,1]
-1   -1
1     1

attr(,"contrasts")$F
   [,1]
-1   -1
1     1

attr(,"contrasts")$G
   [,1]
-1   -1
1     1

attr(,"contrasts")$H
   [,1]
-1   -1
1     1

attr(,"contrasts")$J
   [,1]
-1   -1
1     1

attr(,"contrasts")$K
   [,1]
-1   -1
1     1

attr(,"contrasts")$L
   [,1]
-1   -1
1     1

attr(,"contrasts")$M
   [,1]
-1   -1
1     1

attr(,"contrasts")$N
   [,1]
-1   -1
1     1

attr(,"contrasts")$O
   [,1]
-1   -1
1     1

attr(,"contrasts")$P
   [,1]
-1   -1
1     1

attr(,"contrasts")$Q
   [,1]
-1   -1
1     1

attr(,"contrasts")$R
   [,1]
-1   -1
1     1

attr(,"contrasts")$S
   [,1]
-1   -1
1     1

attr(,"contrasts")$T
   [,1]
-1   -1
1     1
$determinant
[1] 1

$A
[1] 1

$I
[1] 20

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 1
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

design = DataFrame(plackett_burman(20))

fac = OrderedDict([(Symbol(:x, i), [-1., 1.]) for i = 1:size(design, 2)])

rename!(design, zip(names(design), collect(keys(fac))))

m = generate_model_matrix(build_linear_formula(collect(keys(fac))), design, fac)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


20×19 DataFrames.DataFrame. Omitted printing of 2 columns
│ Row │ x1 │ x2 │ x3 │ x4 │ x5 │ x6 │ x7 │ x8 │ x9 │ x10 │ x11 │ x12 │ x13 │ x14 │ x15 │ x16 │ x17 │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
│ 1   │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1   │ 1   │ 1   │ 1   │ 1   │ 1   │ 1   │ 1   │
│ 2   │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1  │ 1   │ 1   │ 1   │ 1   │ -1  │ -1  │ 1   │
│ 3   │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1   │ 1   │ 1   │ 1   │ -1  │ -1  │ 1   │ -1  │
│ 4   │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1   │ 1   │ 1   │ -1  │ -1  │ 1   │ -1  │ -1  │
│ 5   │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1   │ 1   │ -1  │ -1  │ 1   │ -1  │ -1  │ 1   │
│ 6   │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1   │ -1  │ -1  │ 1   │ -1  │ -1  │ 1   │ 1   │
│ 7   │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1  │ -1  │ 1   │ -1  │ -1  │ 1   │ 1   │ -1  │
│ 8   │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1  │ 1   │ -1  │ -1  │ 1   │ 1   │ -1  │ -1  │
│ 9   │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1   │ -1  │ -1  │ 1   │ 1   │ -1  │ -1  │ -1  │
│ 10  │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1  │ -1  │ 1   │ 1   │ -1  │ -1  │ -1  │ -1  │
│ 11  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1  │ 1   │ 1   │ -1  │ -1  │ -1  │ -1  │ 1   │
│ 12  │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1   │ 1   │ -1  │ -1  │ -1  │ -1  │ 1   │ -1  │
│ 13  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1   │ -1  │ -1  │ -1  │ -1  │ 1   │ -1  │ 1   │
│ 14  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1  │ -1  │ -1  │ -1  │ 1   │ -1  │ 1   │ -1  │
│ 15  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1  │ -1  │ -1  │ 1   │ -1  │ 1   │ -1  │ 1   │
│ 16  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1  │ -1  │ 1   │ -1  │ 1   │ -1  │ 1   │ 1   │
│ 17  │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1  │ 1   │ -1  │ 1   │ -1  │ 1   │ 1   │ 1   │
│ 18  │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1   │ -1  │ 1   │ -1  │ 1   │ 1   │ 1   │ 1   │
│ 19  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1  │ 1   │ -1  │ 1   │ 1   │ 1   │ 1   │ -1  │
│ 20  │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1   │ -1  │ 1   │ 1   │ 1   │ 1   │ -1  │ -1  │

DataStructures.OrderedDict{Symbol,Array{Float64,1}} with 19 entries:
  :x1  => [-1.0, 1.0]
  :x2  => [-1.0, 1.0]
  :x3  => [-1.0, 1.0]
  :x4  => [-1.0, 1.0]
  :x5  => [-1.0, 1.0]
  :x6  => [-1.0, 1.0]
  :x7  => [-1.0, 1.0]
  :x8  => [-1.0, 1.0]
  :x9  => [-1.0, 1.0]
  :x10 => [-1.0, 1.0]
  :x11 => [-1.0, 1.0]
  :x12 => [-1.0, 1.0]
  :x13 => [-1.0, 1.0]
  :x14 => [-1.0, 1.0]
  :x15 => [-1.0, 1.0]
  :x16 => [-1.0, 1.0]
  :x17 => [-1.0, 1.0]
  :x18 => [-1.0, 1.0]
  :x19 => [-1.0, 1.0]

20×19 DataFrames.DataFrame. Omitted printing of 2 columns
│ Row │ x1 │ x2 │ x3 │ x4 │ x5 │ x6 │ x7 │ x8 │ x9 │ x10 │ x11 │ x12 │ x13 │ x14 │ x15 │ x16 │ x17 │
├─────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
│ 1   │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1  │ 1   │ 1   │ 1   │ 1   │ 1   │ 1   │ 1   │ 1   │
│ 2   │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1  │ 1   │ 1   │ 1   │ 1   │ -1  │ -1  │ 1   │
│ 3   │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1   │ 1   │ 1   │ 1   │ -1  │ -1  │ 1   │ -1  │
│ 4   │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1   │ 1   │ 1   │ -1  │ -1  │ 1   │ -1  │ -1  │
│ 5   │ -1 │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1   │ 1   │ -1  │ -1  │ 1   │ -1  │ -1  │ 1   │
│ 6   │ -1 │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1   │ -1  │ -1  │ 1   │ -1  │ -1  │ 1   │ 1   │
│ 7   │ -1 │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1  │ -1  │ 1   │ -1  │ -1  │ 1   │ 1   │ -1  │
│ 8   │ 1  │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1  │ 1   │ -1  │ -1  │ 1   │ 1   │ -1  │ -1  │
│ 9   │ -1 │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1   │ -1  │ -1  │ 1   │ 1   │ -1  │ -1  │ -1  │
│ 10  │ 1  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1  │ -1  │ 1   │ 1   │ -1  │ -1  │ -1  │ -1  │
│ 11  │ -1 │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1  │ 1   │ 1   │ -1  │ -1  │ -1  │ -1  │ 1   │
│ 12  │ 1  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1   │ 1   │ -1  │ -1  │ -1  │ -1  │ 1   │ -1  │
│ 13  │ 1  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1   │ -1  │ -1  │ -1  │ -1  │ 1   │ -1  │ 1   │
│ 14  │ 1  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1  │ -1  │ -1  │ -1  │ 1   │ -1  │ 1   │ -1  │
│ 15  │ 1  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1  │ -1  │ -1  │ 1   │ -1  │ 1   │ -1  │ 1   │
│ 16  │ -1 │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1  │ -1  │ 1   │ -1  │ 1   │ -1  │ 1   │ 1   │
│ 17  │ -1 │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1  │ 1   │ -1  │ 1   │ -1  │ 1   │ 1   │ 1   │
│ 18  │ 1  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1   │ -1  │ 1   │ -1  │ 1   │ 1   │ 1   │ 1   │
│ 19  │ -1 │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1  │ 1   │ -1  │ 1   │ 1   │ 1   │ 1   │ -1  │
│ 20  │ -1 │ 1  │ 1  │ -1 │ -1 │ -1 │ -1 │ 1  │ -1 │ 1   │ -1  │ 1   │ 1   │ 1   │ 1   │ -1  │ -1  │

20×20 Array{Float64,2}:
 1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0  …   1.0   1.0   1.0   1.0   1.0   1.0   1.0   1.0
 1.0   1.0   1.0  -1.0  -1.0  -1.0  -1.0   1.0      1.0   1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0
 1.0   1.0  -1.0  -1.0  -1.0  -1.0   1.0  -1.0      1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0   1.0
 1.0  -1.0  -1.0  -1.0  -1.0   1.0  -1.0   1.0      1.0  -1.0  -1.0   1.0  -1.0  -1.0   1.0   1.0
 1.0  -1.0  -1.0  -1.0   1.0  -1.0   1.0  -1.0     -1.0  -1.0   1.0  -1.0  -1.0   1.0   1.0  -1.0
 1.0  -1.0  -1.0   1.0  -1.0   1.0  -1.0   1.0  …  -1.0   1.0  -1.0  -1.0   1.0   1.0  -1.0  -1.0
 1.0  -1.0   1.0  -1.0   1.0  -1.0   1.0   1.0      1.0  -1.0  -1.0   1.0   1.0  -1.0  -1.0  -1.0
 1.0   1.0  -1.0   1.0  -1.0   1.0   1.0   1.0     -1.0  -1.0   1.0   1.0  -1.0  -1.0  -1.0  -1.0
 1.0  -1.0   1.0  -1.0   1.0   1.0   1.0   1.0     -1.0   1.0   1.0  -1.0  -1.0  -1.0  -1.0   1.0
 1.0   1.0  -1.0   1.0   1.0   1.0   1.0  -1.0      1.0   1.0  -1.0  -1.0  -1.0  -1.0   1.0  -1.0
 1.0  -1.0   1.0   1.0   1.0   1.0  -1.0  -1.0  …   1.0  -1.0  -1.0  -1.0  -1.0   1.0  -1.0   1.0
 1.0   1.0   1.0   1.0   1.0  -1.0  -1.0   1.0     -1.0  -1.0  -1.0  -1.0   1.0  -1.0   1.0  -1.0
 1.0   1.0   1.0   1.0  -1.0  -1.0   1.0  -1.0     -1.0  -1.0  -1.0   1.0  -1.0   1.0  -1.0   1.0
 1.0   1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0     -1.0  -1.0   1.0  -1.0   1.0  -1.0   1.0   1.0
 1.0   1.0  -1.0  -1.0   1.0  -1.0  -1.0   1.0     -1.0   1.0  -1.0   1.0  -1.0   1.0   1.0   1.0
 1.0  -1.0  -1.0   1.0  -1.0  -1.0   1.0   1.0  …   1.0  -1.0   1.0  -1.0   1.0   1.0   1.0   1.0
 1.0  -1.0   1.0  -1.0  -1.0   1.0   1.0  -1.0     -1.0   1.0  -1.0   1.0   1.0   1.0   1.0  -1.0
 1.0   1.0  -1.0  -1.0   1.0   1.0  -1.0  -1.0      1.0  -1.0   1.0   1.0   1.0   1.0  -1.0  -1.0
 1.0  -1.0  -1.0   1.0   1.0  -1.0  -1.0  -1.0     -1.0   1.0   1.0   1.0   1.0  -1.0  -1.0   1.0
 1.0  -1.0   1.0   1.0  -1.0  -1.0  -1.0  -1.0      1.0   1.0   1.0   1.0  -1.0  -1.0   1.0  -1.0

1.0000000000000002
#+end_example

***** Comparing Mixed Model Matrices
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)

fac <- gen.factorial(c(2, 3), factors = c(2))
m <- model.matrix(~., fac)

fac
m

eval.design(~., fac, X = fac)

optimized <- optFederov(~., fac, nTrials = 6)

optimized

eval.design(~., optimized$design, X = fac)
#+END_SRC

#+RESULTS:
#+begin_example
  X1 X2
1 -1  1
2  1  1
3 -1  2
4  1  2
5 -1  3
6  1  3
  (Intercept) X1 X22 X23
1           1 -1   0   0
2           1  1   0   0
3           1 -1   1   0
4           1  1   1   0
5           1 -1   0   1
6           1  1   0   1
attr(,"assign")
[1] 0 1 2 2
attr(,"contrasts")
attr(,"contrasts")$X2
[1] "contr.treatment"
$determinant
[1] 0.4386913

$A
[1] 4

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 3.301927
$D
[1] 0.4386913

$A
[1] 4

$Ge
[1] 1

$Dea
[1] 1

$design
  X1 X2
1 -1  1
2  1  1
3 -1  2
4  1  2
5 -1  3
6  1  3

$rows
[1] 1 2 3 4 5 6
$determinant
[1] 0.4386913

$A
[1] 4

$I
[1] 4

$Geff
[1] 1

$Deffbound
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 3.301927
#+end_example

#+HEADER: :results output :session *Julia*
#+BEGIN_SRC julia
using ExperimentalDesign, DataStructures, StatsModels, IterTools

fac = OrderedDict(:x1 => [-1, 1], :x2 => [:a, :b, :c])

design = DataFrame(x1 = [-1, 1, -1, 1, -1, 1],
                   x2 = [:a, :a, :b, :b, :c, :c])

m = generate_model_matrix(@formula(y ~ x1 + x2), design, fac)

d_efficiency_lower_bound(m)
#+END_SRC

#+RESULTS:
#+begin_example


DataStructures.OrderedDict{Symbol,Any} with 2 entries:
  :x1 => [-1, 1]
  :x2 => Symbol[:a, :b, :c]

6×2 DataFrames.DataFrame
│ Row │ x1 │ x2 │
├─────┼────┼────┤
│ 1   │ -1 │ a  │
│ 2   │ 1  │ a  │
│ 3   │ -1 │ b  │
│ 4   │ 1  │ b  │
│ 5   │ -1 │ c  │
│ 6   │ 1  │ c  │

6×4 Array{Float64,2}:
 1.0  -1.0  0.0  0.0
 1.0   1.0  0.0  0.0
 1.0  -1.0  1.0  0.0
 1.0   1.0  1.0  0.0
 1.0  -1.0  0.0  1.0
 1.0   1.0  0.0  1.0

0.43869133765083085
#+end_example
*** [2018-04-11 Wed]
**** Exploring Design Efficiencies
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
library(FrF2)

fac <- gen.factorial(c(2, 2, 2, 2))
fac

output <- optFederov(~., fac)
output

X = data.matrix(data.frame(model.matrix(~., output$design)))
X

"inf.matrix" <- function (X) {
    return (solve(t(X) %*% X))
}

"d_eff" <- function (X) {
    return (1 / (dim(X)[1] * (det(inf.matrix(X)) ^ (1 / dim(X)[2]))))
}

"d_eff_eigen" <- function(X) {
    return (1 / (dim(X)[1] * (prod(eigen(inf.matrix(X))$values) ^ (1 / dim(X)[2]))))
}

"a_eff" <- function (X) {
    return (1 / (dim(X)[1] * (sum(diag(inf.matrix(X))) / dim(X)[2])))
}

"a_eff_eigen" <- function(X) {
    return (1 / (dim(X)[1] * mean(eigen(inf.matrix(X))$values)))
}

d_eff(X)
d_eff_eigen(X)

a_eff(X)
a_eff_eigen(X)

pb_design <- pb(24)
pb_design[] <- lapply(pb_design, as.character)
pb_design[] <- lapply(pb_design, as.numeric)
pb_design <- data.matrix(pb_design)
pb_design

det_inf_matrix = 1 / (det(inf.matrix(pb_design)) ^ (1 / dim(pb_design)[2]))
det_inf_matrix

trace_inf_matrix = 1 / (sum(diag(inf.matrix(pb_design))) / dim(pb_design)[2])
trace_inf_matrix

d_eff(pb_design)
d_eff_eigen(pb_design)

a_eff(pb_design)
a_eff_eigen(pb_design)

eval.design(~., pb_design)

#+END_SRC

#+RESULTS:
#+begin_example
   X1 X2 X3 X4
1  -1 -1 -1 -1
2   1 -1 -1 -1
3  -1  1 -1 -1
4   1  1 -1 -1
5  -1 -1  1 -1
6   1 -1  1 -1
7  -1  1  1 -1
8   1  1  1 -1
9  -1 -1 -1  1
10  1 -1 -1  1
11 -1  1 -1  1
12  1  1 -1  1
13 -1 -1  1  1
14  1 -1  1  1
15 -1  1  1  1
16  1  1  1  1
$D
[1] 0.9703219

$A
[1] 1.059524

$Ge
[1] 0.824

$Dea
[1] 0.807

$design
   X1 X2 X3 X4
1  -1 -1 -1 -1
2   1 -1 -1 -1
3  -1  1 -1 -1
5  -1 -1  1 -1
6   1 -1  1 -1
8   1  1  1 -1
10  1 -1 -1  1
11 -1  1 -1  1
13 -1 -1  1  1
16  1  1  1  1

$rows
 [1]  1  2  3  5  6  8 10 11 13 16
   X.Intercept. X1 X2 X3 X4
1             1 -1 -1 -1 -1
2             1  1 -1 -1 -1
3             1 -1  1 -1 -1
5             1 -1 -1  1 -1
6             1  1 -1  1 -1
8             1  1  1  1 -1
10            1  1 -1 -1  1
11            1 -1  1 -1  1
13            1 -1 -1  1  1
16            1  1  1  1  1
[1] 0.9703219
[1] 0.9703219
[1] 0.9438202
[1] 0.9438202
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X
1  -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1
2   1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1
3  -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1
4   1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1
5  -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1
6   1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1
7  -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1
8  -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1
9   1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1
10  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
11 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1
12 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1
13 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1
14  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1
15  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1
16  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1
17  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1
18  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1
19 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1
20 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1
21 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1
22  1 -1  1 -1 -1 -1 -1  1  1  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1
23 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
24  1  1  1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1
[1] 24
[1] 24
[1] 1
[1] 1
[1] 1
[1] 1
$determinant
[1] 1

$A
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 1
#+end_example
*** [2018-04-12 Thu]
**** Simple Terminology for Design of Experiments
***** Basic Concepts
- An *experimental design* is a plan for running a set of *experiments*,
  can be displayed as a matrix
- *Factors* are the columns of an experimental design matrix, and
  represent experimental variables with at least two possible values, or *levels*
- *Categorical factors* have unordered levels, that is, there is no sense of progression
  from one level to another
- *Numerical factors* can be *continuous*, such as floating-point values, or *discrete*,
  such as integer values
- The rows of an experimental design matrix are individual
  *treatments*, *experiments*, or *runs*
- Each *run* provides a measurement of a *dependent variable*, or
  *response*, subject to a specific assignment of *factor levels*
- Running all *experiments* in a design gives some information that allows
  studying the *effects* of *factor levels* in the *response variable*
- Two *effects* are *aliased* or *confounded* when it is not possible to
  distinguish them from the data obtained from running a given design
- The *resolution* of a design indicates which *effects* are independently
  *estimated* in a design. There is less *aliasing* or *confounding* between
  *effects* as the *resolution* increases
- A *full-factorial design* is an experimental design containing all
  possible combinations of *factor levels*
- A *fractional-factorial design* is a subset of the rows of a *full-factorial
  design*
- An experimental design is *balanced* when each *level* occurs equally often
  within every *factor*
- An experimental design is *orthogonal* when every *pair of levels* occurs
  equally often in all *pairs of factors*. A design can also be *orthogonal*
  when the occurence frequencies of *pairs of levels* are proportional
***** Modelling and Analysing
- A *model* specifies which *factors* and *factor relationships* will be considered in
  a posterior *linear regression* or *analysis of variance*, using the measured
  *responses*
- A *model matrix* or *design matrix* is constructed with an original
  *experimental design* and according to a *model*. Each column, or set of
  columns for categorical factors, in a *model matrix* represents one *effect*
- *Contrasts* can be used to encode *categorical factors* in a *model matrix*
  using extra columns. *Contrast matrices* specify the encoding for each level
  of a *categorical factor*
- An *information matrix* is defined as the multiplication of the transpose of
  a *model matrix* and the *model matrix* itself. The inverse of the *information matrix*
  is the *dispersion matrix*, or *covariance matrix*
***** Design Efficiency
- In a *least-squares linear regression*, considering a *linear relationship* between
  variables, *parameter estimates* are proportional to a design's *covariance matrix*
- The *eigenvalues* of the *covariance matrix* of a design represent its "size" in a certain sense
- The *A-Efficiency* of a design is inversely proportional to the *arithmetic mean* of the *eigenvalues*
  of the design's *covariance matrix*
- The *D-Efficiency* of a design is inversely proportional to the *geometric mean* of the *eigenvalues*
  of the design's *covariance matrix*
- For a given set of *factors*, a hypothetical *balanced* an *orthogonal* design has optimal *A-Efficiency* and
  *D-Efficiency*
- A design with $N$ rows is *balanced and orthogonal* when the *dispersion matrix* is diagonal
  and equals to $\dfrac{1}{N}\mathbf{I}$
  - The following designs are all *balanced and orthogonal*:
    #+HEADER: :results output :session *R*
    #+BEGIN_SRC R
    library(AlgDesign)
    library(FrF2)

    design <- gen.factorial(c(2, 2, 2, 2))
    design <- data.frame(design)
    design[] <- lapply(design, as.character)
    design[] <- lapply(design, as.numeric)
    design

    eval.design(~., design)

    model_matrix <- model.matrix(~., design)
    model_matrix

    solve(t(model_matrix) %*% model_matrix) * nrow(design)

    eval.design(~., design)

    design <- pb(16)
    design <- data.frame(design)
    design[] <- lapply(design, as.character)
    design[] <- lapply(design, as.numeric)
    design

    eval.design(~., design)

    model_matrix <- model.matrix(~., design)
    model_matrix

    solve(t(model_matrix) %*% model_matrix) * nrow(design)

    design <- FrF2(nruns = 8, nfactors = 4)
    design <- data.frame(design)
    design[] <- lapply(design, as.character)
    design[] <- lapply(design, as.numeric)
    design

    eval.design(~., design)

    model_matrix <- model.matrix(~., design)
    model_matrix

    solve(t(model_matrix) %*% model_matrix) * nrow(design)
    #+END_SRC
    
    #+RESULTS:
    #+begin_example
       X1 X2 X3 X4
    1  -1 -1 -1 -1
    2   1 -1 -1 -1
    3  -1  1 -1 -1
    4   1  1 -1 -1
    5  -1 -1  1 -1
    6   1 -1  1 -1
    7  -1  1  1 -1
    8   1  1  1 -1
    9  -1 -1 -1  1
    10  1 -1 -1  1
    11 -1  1 -1  1
    12  1  1 -1  1
    13 -1 -1  1  1
    14  1 -1  1  1
    15 -1  1  1  1
    16  1  1  1  1
    $determinant
    [1] 1

    $A
    [1] 1

    $diagonality
    [1] 1

    $gmean.variances
    [1] 1
       (Intercept) X1 X2 X3 X4
    1            1 -1 -1 -1 -1
    2            1  1 -1 -1 -1
    3            1 -1  1 -1 -1
    4            1  1  1 -1 -1
    5            1 -1 -1  1 -1
    6            1  1 -1  1 -1
    7            1 -1  1  1 -1
    8            1  1  1  1 -1
    9            1 -1 -1 -1  1
    10           1  1 -1 -1  1
    11           1 -1  1 -1  1
    12           1  1  1 -1  1
    13           1 -1 -1  1  1
    14           1  1 -1  1  1
    15           1 -1  1  1  1
    16           1  1  1  1  1
    attr(,"assign")
    [1] 0 1 2 3 4
                (Intercept) X1 X2 X3 X4
    (Intercept)           1  0  0  0  0
    X1                    0  1  0  0  0
    X2                    0  0  1  0  0
    X3                    0  0  0  1  0
    X4                    0  0  0  0  1
    $determinant
    [1] 1

    $A
    [1] 1

    $diagonality
    [1] 1

    $gmean.variances
    [1] 1
    Screening 15 factors in 16 runs involves perfect aliasing of 
     pairwise interactions of the first six factors with the last factor.
        A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
    1  -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
    2   1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
    3   1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
    4  -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
    5   1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
    6  -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
    7  -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
    8   1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
    9  -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
    10  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
    11 -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
    12 -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
    13  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
    14 -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
    15  1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
    16  1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
    $determinant
    [1] 1

    $A
    [1] 1

    $diagonality
    [1] 1

    $gmean.variances
    [1] 1
       (Intercept)  A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
    1            1 -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
    2            1  1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
    3            1  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
    4            1 -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
    5            1  1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
    6            1 -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
    7            1 -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
    8            1  1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
    9            1 -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
    10           1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
    11           1 -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
    12           1 -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
    13           1  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
    14           1 -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
    15           1  1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
    16           1  1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
    attr(,"assign")
     [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
                (Intercept) A B C D E F G H J K L M N O P
    (Intercept)           1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    A                     0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    B                     0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
    C                     0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
    D                     0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
    E                     0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
    F                     0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0
    G                     0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
    H                     0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0
    J                     0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0
    K                     0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0
    L                     0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0
    M                     0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0
    N                     0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
    O                     0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
    P                     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
       A  B  C  D
    1  1 -1 -1  1
    2 -1  1  1 -1
    3  1 -1  1 -1
    4 -1 -1  1  1
    5  1  1 -1 -1
    6  1  1  1  1
    7 -1 -1 -1 -1
    8 -1  1 -1  1
    $determinant
    [1] 1

    $A
    [1] 1

    $diagonality
    [1] 1

    $gmean.variances
    [1] 1
      (Intercept)  A  B  C  D
    1           1  1 -1 -1  1
    2           1 -1  1  1 -1
    3           1  1 -1  1 -1
    4           1 -1 -1  1  1
    5           1  1  1 -1 -1
    6           1  1  1  1  1
    7           1 -1 -1 -1 -1
    8           1 -1  1 -1  1
    attr(,"assign")
    [1] 0 1 2 3 4
                (Intercept) A B C D
    (Intercept)           1 0 0 0 0
    A                     0 1 0 0 0
    B                     0 0 1 0 0
    C                     0 0 0 1 0
    D                     0 0 0 0 1
    #+end_example
- A design is *orthogonal* when the *dispersion matrix* is diagonal, excluding the row and column
  correspondent to the *intercept*, that is, there can be non-zero elements in the *intercept* row
  and column
  - The following designs are all *orthogonal*, but not *balanced*:
    #+HEADER: :results output :session *R*
    #+BEGIN_SRC R
    library(AlgDesign)
    library(FrF2)

    design <- oa.design(nfactors = 6, nlevels = 3)
    design <- data.frame(design)
    design[] <- lapply(design, as.character)
    design[] <- lapply(design, as.numeric)
    design

    eval.design(~., design)

    model_matrix <- model.matrix(~., design)
    model_matrix

    solve(t(model_matrix) %*% model_matrix) * nrow(design)
    
    t(model_matrix) %*% model_matrix

    design <- oa.design(nlevels=c(4,3,3,2))
    design <- data.frame(design)
    design[] <- lapply(design, as.character)
    design[] <- lapply(design, as.numeric)
    design

    eval.design(~., design)

    model_matrix <- model.matrix(~., design)
    model_matrix

    solve(t(model_matrix) %*% model_matrix) * nrow(design)
    #+END_SRC
    
    #+RESULTS:
    #+begin_example
    The columns of the array have been used in order of appearance. 
    For designs with relatively few columns, 
    the properties can sometimes be substantially improved 
    using option columns with min3 or even min34.
       A B C D E F
    1  1 3 2 3 2 1
    2  3 3 1 1 2 2
    3  2 2 2 2 2 2
    4  3 2 1 2 1 3
    5  3 2 2 1 3 1
    6  2 3 1 2 3 1
    7  2 1 1 3 2 3
    8  3 1 2 3 1 2
    9  2 2 3 3 1 1
    10 3 3 3 3 3 3
    11 1 2 3 1 2 3
    12 2 1 3 1 3 2
    13 2 3 2 1 1 3
    14 1 2 1 3 3 2
    15 1 1 2 2 3 3
    16 3 1 3 2 2 1
    17 1 3 3 2 1 2
    18 1 1 1 1 1 1
    $determinant
    [1] 0.7064227

    $A
    [1] 6.571429

    $diagonality
    [1] 0.261

    $gmean.variances
    [1] 1.5
       (Intercept) A B C D E F
    1            1 1 3 2 3 2 1
    2            1 3 3 1 1 2 2
    3            1 2 2 2 2 2 2
    4            1 3 2 1 2 1 3
    5            1 3 2 2 1 3 1
    6            1 2 3 1 2 3 1
    7            1 2 1 1 3 2 3
    8            1 3 1 2 3 1 2
    9            1 2 2 3 3 1 1
    10           1 3 3 3 3 3 3
    11           1 1 2 3 1 2 3
    12           1 2 1 3 1 3 2
    13           1 2 3 2 1 1 3
    14           1 1 2 1 3 3 2
    15           1 1 1 2 2 3 3
    16           1 3 1 3 2 2 1
    17           1 1 3 3 2 1 2
    18           1 1 1 1 1 1 1
    attr(,"assign")
    [1] 0 1 2 3 4 5 6
                (Intercept)    A    B    C    D    E    F
    (Intercept)          37 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0
    A                    -3  1.5  0.0  0.0  0.0  0.0  0.0
    B                    -3  0.0  1.5  0.0  0.0  0.0  0.0
    C                    -3  0.0  0.0  1.5  0.0  0.0  0.0
    D                    -3  0.0  0.0  0.0  1.5  0.0  0.0
    E                    -3  0.0  0.0  0.0  0.0  1.5  0.0
    F                    -3  0.0  0.0  0.0  0.0  0.0  1.5
                (Intercept)  A  B  C  D  E  F
    (Intercept)          18 36 36 36 36 36 36
    A                    36 84 72 72 72 72 72
    B                    36 72 84 72 72 72 72
    C                    36 72 72 84 72 72 72
    D                    36 72 72 72 84 72 72
    E                    36 72 72 72 72 84 72
    F                    36 72 72 72 72 72 84
    creating full factorial with 72 runs ...
       A B C D
    1  1 3 2 1
    2  2 1 1 2
    3  2 3 1 1
    4  3 3 3 1
    5  2 1 3 1
    6  2 1 3 2
    7  1 1 2 2
    8  2 2 1 1
    9  3 1 3 1
    10 1 3 3 1
    11 4 1 2 1
    12 4 2 2 2
    13 2 2 2 1
    14 4 1 2 2
    15 4 3 1 2
    16 2 2 2 2
    17 3 2 3 1
    18 3 2 2 2
    19 4 1 1 1
    20 1 3 1 1
    21 3 2 1 1
    22 2 3 2 1
    23 3 3 1 1
    24 3 2 1 2
    25 4 1 3 1
    26 2 1 2 2
    27 1 1 3 1
    28 4 1 1 2
    29 1 1 1 1
    30 1 2 2 2
    31 2 1 1 1
    32 1 3 3 2
    33 4 2 1 1
    34 3 3 2 1
    35 4 3 2 2
    36 1 3 2 2
    37 1 1 1 2
    38 2 2 1 2
    39 3 1 2 2
    40 3 2 2 1
    41 1 3 1 2
    42 2 2 3 1
    43 4 2 3 1
    44 3 1 3 2
    45 4 2 3 2
    46 1 2 3 1
    47 2 2 3 2
    48 2 3 1 2
    49 3 1 2 1
    50 1 1 2 1
    51 3 1 1 1
    52 3 3 2 2
    53 4 2 2 1
    54 4 3 3 2
    55 4 2 1 2
    56 4 3 2 1
    57 2 3 3 2
    58 4 1 3 2
    59 3 3 1 2
    60 2 1 2 1
    61 1 2 1 1
    62 3 3 3 2
    63 3 2 3 2
    64 1 2 3 2
    65 1 2 1 2
    66 2 3 3 1
    67 3 1 1 2
    68 4 3 1 1
    69 1 2 2 1
    70 1 1 3 2
    71 4 3 3 1
    72 2 3 2 2
    $determinant
    [1] 0.6738039

    $A
    [1] 6.96

    $diagonality
    [1] 0.31

    $gmean.variances
    [1] 1.638073
       (Intercept) A B C D
    1            1 1 3 2 1
    2            1 2 1 1 2
    3            1 2 3 1 1
    4            1 3 3 3 1
    5            1 2 1 3 1
    6            1 2 1 3 2
    7            1 1 1 2 2
    8            1 2 2 1 1
    9            1 3 1 3 1
    10           1 1 3 3 1
    11           1 4 1 2 1
    12           1 4 2 2 2
    13           1 2 2 2 1
    14           1 4 1 2 2
    15           1 4 3 1 2
    16           1 2 2 2 2
    17           1 3 2 3 1
    18           1 3 2 2 2
    19           1 4 1 1 1
    20           1 1 3 1 1
    21           1 3 2 1 1
    22           1 2 3 2 1
    23           1 3 3 1 1
    24           1 3 2 1 2
    25           1 4 1 3 1
    26           1 2 1 2 2
    27           1 1 1 3 1
    28           1 4 1 1 2
    29           1 1 1 1 1
    30           1 1 2 2 2
    31           1 2 1 1 1
    32           1 1 3 3 2
    33           1 4 2 1 1
    34           1 3 3 2 1
    35           1 4 3 2 2
    36           1 1 3 2 2
    37           1 1 1 1 2
    38           1 2 2 1 2
    39           1 3 1 2 2
    40           1 3 2 2 1
    41           1 1 3 1 2
    42           1 2 2 3 1
    43           1 4 2 3 1
    44           1 3 1 3 2
    45           1 4 2 3 2
    46           1 1 2 3 1
    47           1 2 2 3 2
    48           1 2 3 1 2
    49           1 3 1 2 1
    50           1 1 1 2 1
    51           1 3 1 1 1
    52           1 3 3 2 2
    53           1 4 2 2 1
    54           1 4 3 3 2
    55           1 4 2 1 2
    56           1 4 3 2 1
    57           1 2 3 3 2
    58           1 4 1 3 2
    59           1 3 3 1 2
    60           1 2 1 2 1
    61           1 1 2 1 1
    62           1 3 3 3 2
    63           1 3 2 3 2
    64           1 1 2 3 2
    65           1 1 2 1 2
    66           1 2 3 3 1
    67           1 3 1 1 2
    68           1 4 3 1 1
    69           1 1 2 2 1
    70           1 1 1 3 2
    71           1 4 3 3 1
    72           1 2 3 2 2
    attr(,"assign")
    [1] 0 1 2 3 4
                (Intercept)             A    B    C  D
    (Intercept)          27 -2.000000e+00 -3.0 -3.0 -6
    A                    -2  8.000000e-01  0.0  0.0  0
    B                    -3  0.000000e+00  1.5  0.0  0
    C                    -3  0.000000e+00  0.0  1.5  0
    D                    -6  4.440892e-16  0.0  0.0  4
    #+end_example
- A design is *balanced* when the elements of the *intercept* row and column are all zero, except
  for the element in the diagonal, that is, there can be non-zero elements in every other row and
  column
  - The following designs are all *balanced* but not *orthogonal*:
    #+HEADER: :results output :session *R*
    #+BEGIN_SRC R
    library(AlgDesign)
    library(FrF2)

    design <- data.frame(x1 = c(1, -1, 1, -1, 1, -1),
                         x2 = c(1, 1, 1, -1, -1, -1),
                         x3 = c(-1, 1, 1, 1, -1, -1))
    design[] <- lapply(design, as.character)
    design[] <- lapply(design, as.numeric)
    design

    eval.design(~., design)

    model_matrix <- model.matrix(~., design)
    model_matrix

    solve(t(model_matrix) %*% model_matrix) * nrow(design)

    eval.design(~., design)
    #+END_SRC

    #+RESULTS:
    #+begin_example
      x1 x2 x3
    1  1  1 -1
    2 -1  1  1
    3  1  1  1
    4 -1 -1  1
    5  1 -1 -1
    6 -1 -1 -1
    $determinant
    [1] 0.8773827

    $A
    [1] 1.375

    $diagonality
    [1] 0.84

    $gmean.variances
    [1] 1.5
      (Intercept) x1 x2 x3
    1           1  1  1 -1
    2           1 -1  1  1
    3           1  1  1  1
    4           1 -1 -1  1
    5           1  1 -1 -1
    6           1 -1 -1 -1
    attr(,"assign")
    [1] 0 1 2 3
                (Intercept)    x1    x2    x3
    (Intercept)           1  0.00  0.00  0.00
    x1                    0  1.50 -0.75  0.75
    x2                    0 -0.75  1.50 -0.75
    x3                    0  0.75 -0.75  1.50
    $determinant
    [1] 0.8773827

    $A
    [1] 1.375

    $diagonality
    [1] 0.84

    $gmean.variances
    [1] 1.5
    #+end_example
    
*** [2018-04-13 Fri]
- Learning about making presentations with orgmode
- Translating DoE presentation to an org file
*** [2018-04-16 Mon]
- Finish porting DoE presentation to org file
**** Reading Montgomery's book
- Chapter 10 presents an interesting discussion and derivation of the dependency
  of the regression coefficients on the information matrix
*** [2018-04-17 Tue]
**** Running Steven's Experiments
***** Setup
First get Steven's data:

#+NAME: update_steven_report
#+BEGIN_SRC sh :results output
git clone https://github.com/swhatelse/M2_internship.git || (cd M2_internship && git pull)
#+END_SRC

#+RESULTS: update_steven_report
: Already up to date.

I attempted to run the ~scripts/format_data.rb~ script but got errors
which I was not able to fix. I wrote this Python script to generate the
~csv~ file in the same way.

#+NAME: generate_steven_csv_search_space
#+BEGIN_SRC python :results output
import csv

yaml_path = ("M2_internship/data/2016_04_08/pilipili2/18_08_24/"
             "test_space_2016_04_02_end_cleaned.yaml")
yaml_file = open(yaml_path, "r")

# Drop first line
yaml_file.readline()

csv_line = []
headers = [ "elements_number",
            "y_component_number",
            "vector_length",
            "temporary_size",
            "vector_recompute",
            "load_overlap",
            "threads_number",
            "lws_y",
            "time_per_pixel"]

with open('/tmp/test.csv', 'w', newline='') as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(headers)

    for line in yaml_file:
        line = line.split()

        if line[0] == "?":
            csv_line = [line[2]]
        elif line[0] == ":":
            csv_line.append(line[1])
            writer.writerow(csv_line)
        else:
            csv_line.append(line[1])
        
#+END_SRC

#+RESULTS: generate_steven_csv_search_space

***** Looking at the Search Space
It seems that the ~vector_recompute~ parameter is always set to ~true~:

#+NAME: read_steven_csv_data
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
complete_data = read.csv("/tmp/test.csv", header = TRUE)
str(complete_data)
#+END_SRC

#+RESULTS: read_steven_csv_data
#+begin_example
'data.frame':	23120 obs. of  9 variables:
 $ elements_number   : int  3 2 4 2 2 2 2 4 4 3 ...
 $ y_component_number: int  3 2 1 1 1 2 2 2 4 1 ...
 $ vector_length     : int  4 1 4 1 8 2 1 8 16 4 ...
 $ temporary_size    : int  4 2 2 2 2 2 4 4 2 4 ...
 $ vector_recompute  : Factor w/ 1 level "true": 1 1 1 1 1 1 1 1 1 1 ...
 $ load_overlap      : Factor w/ 2 levels "false","true": 2 1 2 1 2 2 1 2 2 2 ...
 $ threads_number    : int  64 128 64 256 128 128 128 64 128 32 ...
 $ lws_y             : int  64 1 32 64 32 8 2 2 128 32 ...
 $ time_per_pixel    : num  1.11e-08 1.58e-10 2.34e-09 1.39e-09 3.40e-09 ...
#+end_example

Filtering the fixed parameter and the response, we can access each point as
such:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
factors = c("elements_number", "y_component_number",
            "vector_length", "temporary_size",
            "load_overlap", "threads_number",
            "lws_y")

data <- complete_data[, c(factors, "time_per_pixel")]

data[data$elements_number == 3 &
     data$y_component_number == 1 &
     data$vector_length == 16 &
     data$temporary_size == 2 &
     data$load_overlap == "false" &
     data$threads_number == 64 &
     data$lws_y == 32, ]$time_per_pixel
#+END_SRC

#+RESULTS:
: [1] 7.207293e-09

It should be possible to generate D-Optimal designs with ~optFederov~ by giving
it a small subset of the full factorial. The number of lines used in this step
should not count for the budget since we don't need the response to compute the
D-Optimality of a design. We would have to check for validity of each sampled
line, since not all parameter combinations are valid in this search space.

As Jean-Marc mentioned, Federov's algorithm is similar to a simulated annealing
or other local search method, so it might be worth implementing our own Federov
version that samples the search space directly.
*** [2018-04-18 Wed]
**** How to Identify Badly Estimated Factors?
#+NAME: define_factor_efficiency
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
library(FrF2)

"factor_efficiency" <- function(fac) {
    X = model.matrix(~., fac)
    Y = (t(X) %*% X) / nrow(fac)
    #print(Y)
    Z = (Y[, rep(2:ncol(X))])^2
    Z = Z %*% rep(1, ncol(X) - 1)
    #print(Z)
    return((1 / Z) * (1 - (Y[, 1])^2)^2)
}
#+END_SRC

#+RESULTS: define_factor_efficiency

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
fac = gen.factorial(c(2, 2, 2, 2, 2, 2, 2))

fac <- fac[sample(nrow(fac), 9), ]
fac

factor_efficiency(fac)

fac = FrF2(nfactors = 7, nruns = 8)
factor_efficiency(fac)

pb(16)
eval.design(~., pb(16))

factor_efficiency(pb(16))


factors = 20
fac = gen.factorial(rep(2, factors))
fac = fac[sample(nrow(fac), 300), ]
output = optFederov(~., fac, nTrials = factors + 1)
output

factor_efficiency(output$design)
#+END_SRC

#+RESULTS:
#+begin_example
    X1 X2 X3 X4 X5 X6 X7
108  1  1 -1  1 -1  1  1
34   1 -1 -1 -1 -1  1 -1
33  -1 -1 -1 -1 -1  1 -1
53  -1 -1  1 -1  1  1 -1
23  -1  1  1 -1  1 -1 -1
82   1 -1 -1 -1  1 -1  1
45  -1 -1  1  1 -1  1 -1
75  -1  1 -1  1 -1 -1  1
115 -1  1 -1 -1  1  1  1
                 [,1]
(Intercept) 0.0000000
X1          0.6990291
X2          0.6299213
X3          0.5669291
X4          0.5669291
X5          0.6299213
X6          0.6486486
X7          0.5031447
            [,1]
(Intercept)  NaN
A1             1
B1             1
C1             1
D1             1
E1             1
F1             1
G1             1
Screening 15 factors in 16 runs involves perfect aliasing of 
 pairwise interactions of the first six factors with the last factor.
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
1   1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
2  -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
3   1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
4   1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
5  -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
6  -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
7  -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
8  -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
9  -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
10  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
11 -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
12  1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
13 -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
14  1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
15  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
16  1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
class=design, type= pb
Screening 15 factors in 16 runs involves perfect aliasing of 
 pairwise interactions of the first six factors with the last factor.
$determinant
[1] 1

$A
[1] 1

$diagonality
[1] 1

$gmean.variances
[1] 1
Screening 15 factors in 16 runs involves perfect aliasing of 
 pairwise interactions of the first six factors with the last factor.
            [,1]
(Intercept)  NaN
A1             1
B1             1
C1             1
D1             1
E1             1
F1             1
G1             1
H1             1
J1             1
K1             1
L1             1
M1             1
N1             1
O1             1
P1             1
$D
[1] 0.7467966

$A
[1] 1.958745

$Ge
[1] 0.253

$Dea
[1] 0.052

$design
    X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 X11 X12 X13 X14 X15 X16 X17 X18 X19 X20
22  -1 -1 -1 -1 -1  1  1 -1 -1   1   1  -1   1   1   1  -1  -1  -1   1  -1
36  -1 -1  1 -1 -1  1 -1  1 -1   1   1   1   1  -1   1  -1   1   1  -1   1
51   1 -1  1 -1  1 -1  1 -1 -1   1   1  -1   1   1  -1   1   1   1   1   1
53  -1  1 -1  1  1 -1  1 -1  1   1  -1   1   1   1   1   1   1  -1  -1   1
57  -1  1  1 -1  1  1 -1  1  1   1  -1   1   1   1  -1  -1  -1  -1   1  -1
65   1 -1 -1 -1 -1 -1 -1  1 -1  -1  -1   1   1   1   1   1  -1  -1  -1   1
76  -1  1 -1  1 -1  1 -1  1  1   1   1  -1  -1  -1  -1   1  -1  -1   1   1
91   1  1  1  1  1  1 -1 -1 -1  -1   1   1  -1   1   1   1   1   1   1   1
93  -1 -1  1  1 -1 -1 -1  1 -1   1   1  -1   1   1   1   1   1   1  -1   1
116  1 -1  1 -1 -1 -1  1  1  1  -1   1   1  -1  -1   1   1   1  -1   1  -1
121  1  1 -1  1  1 -1 -1  1 -1   1   1   1   1   1  -1  -1   1   1   1  -1
128  1 -1  1  1 -1  1 -1 -1 -1  -1  -1   1  -1  -1  -1  -1   1  -1  -1  -1
131  1 -1  1 -1  1 -1  1  1 -1   1   1   1  -1   1  -1  -1  -1   1  -1   1
132  1  1 -1 -1 -1  1  1  1 -1   1  -1  -1  -1  -1  -1   1   1   1  -1  -1
171  1 -1 -1  1  1  1 -1  1  1   1  -1  -1   1   1   1  -1   1   1   1   1
180  1  1  1 -1 -1 -1  1  1 -1  -1  -1  -1   1  -1  -1  -1  -1  -1   1   1
184  1  1  1 -1  1  1 -1 -1 -1   1  -1  -1  -1  -1   1   1  -1  -1  -1  -1
201 -1  1  1  1 -1 -1 -1 -1  1   1  -1   1   1  -1  -1   1  -1   1   1  -1
245 -1 -1  1  1  1  1  1  1 -1  -1   1  -1   1  -1  -1   1  -1   1  -1   1
257  1  1  1  1 -1  1 -1  1  1   1   1   1   1   1  -1  -1  -1   1  -1   1
277 -1  1 -1 -1  1 -1 -1 -1  1  -1   1  -1  -1  -1  -1  -1   1   1  -1   1

$rows
 [1]  22  36  51  53  57  65  76  91  93 116 121 128 131 132 171 180 184 201 245
[20] 257 277
                 [,1]
(Intercept) 0.0000000
X1          0.7248322
X2          0.6432749
X3          0.7375887
X4          0.7006369
X5          0.7586207
X6          0.8029197
X7          0.6797386
X8          0.6979866
X9          0.6303030
X10         0.6322581
X11         0.6545455
X12         0.7586207
X13         0.5810056
X14         0.5641026
X15         0.6967742
X16         0.8148148
X17         0.7284768
X18         0.5482234
X19         0.8148148
X20         0.6011561
#+end_example
*** [2018-04-19 Thu]
**** Statistics Team @ LLJK
- Clementine Prieur
*** [2018-04-20 Fri]
**** Finding D-Optimal Designs with Steven's Data
***** Setup
#+CALL: update_steven_report()

#+RESULTS:
: Already up to date.

#+CALL: generate_steven_csv_search_space()

#+RESULTS:

#+CALL: read_steven_csv_data()

#+RESULTS:
#+begin_example
'data.frame':	23120 obs. of  9 variables:
 $ elements_number   : int  3 2 4 2 2 2 2 4 4 3 ...
 $ y_component_number: int  3 2 1 1 1 2 2 2 4 1 ...
 $ vector_length     : int  4 1 4 1 8 2 1 8 16 4 ...
 $ temporary_size    : int  4 2 2 2 2 2 4 4 2 4 ...
 $ vector_recompute  : Factor w/ 1 level "true": 1 1 1 1 1 1 1 1 1 1 ...
 $ load_overlap      : Factor w/ 2 levels "false","true": 2 1 2 1 2 2 1 2 2 2 ...
 $ threads_number    : int  64 128 64 256 128 128 128 64 128 32 ...
 $ lws_y             : int  64 1 32 64 32 8 2 2 128 32 ...
 $ time_per_pixel    : num  1.11e-08 1.58e-10 2.34e-09 1.39e-09 3.40e-09 ...
#+end_example

#+CALL: define_factor_efficiency()

#+RESULTS:

***** Finding D-Optimal Designs with ~optFederov~
Loading, scaling data, and running ~optFederov~. Turns out we can give the
entire dataset to ~optFederov~:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
library(dplyr)

factors = c("elements_number", "y_component_number",
            "vector_length", "temporary_size",
            "load_overlap", "threads_number",
            "lws_y")

data <- complete_data[, factors]

scaled_data <- data[, factors]

# Trying without scaling anything
# for (name in names(select_if(scaled_data, is.numeric))) {
#     scaled_data[, name] <- scale(scaled_data[, name], center = TRUE)
# }

sampled_data <- scaled_data[sample(nrow(data), 500), ]
output <- optFederov(~., scaled_data, nTrials = 120)
#+END_SRC

#+RESULTS:

I tried centering and not centering, but the D values for centered
results were larger than 1. I believe I should not center numerical
parameters in this case since the factors are not centered.

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
output$D
output$Dea
str(output$design)
#+END_SRC

#+RESULTS:
#+begin_example
[1] 51.18152
[1] 0.788
'data.frame':	120 obs. of  7 variables:
 $ elements_number   : int  2 1 2 1 4 3 4 1 4 3 ...
 $ y_component_number: int  2 1 1 1 2 1 1 1 1 3 ...
 $ vector_length     : int  2 1 4 1 16 2 8 1 16 4 ...
 $ temporary_size    : int  2 4 4 4 2 2 2 2 4 2 ...
 $ load_overlap      : Factor w/ 2 levels "false","true": 2 2 2 2 1 1 1 1 1 2 ...
 $ threads_number    : int  64 512 128 256 64 64 128 128 128 32 ...
 $ lws_y             : int  4 32 1 1 64 32 4 16 16 4 ...
#+end_example

Using our preliminar factor efficiency metric gives strange results:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
federov_design <- output$design
str(federov_design)

# for (name in names(select_if(federov_design, is.numeric))) {
#     federov_design[, name] <- federov_design[, name] * attr(scaled_data[, name], 'scaled:scale') # + attr(scaled_data[, name], 'scaled:center')
# }
# str(federov_design)

factor_efficiency(federov_design)
#+END_SRC

#+RESULTS:
#+begin_example
'data.frame':	120 obs. of  7 variables:
 $ elements_number   : num [1:120, 1] 0.0951 0.2853 0.0951 0.3804 0.0951 ...
 $ y_component_number: num [1:120, 1] 0.26 0.26 0.26 0.26 0.26 ...
 $ vector_length     : num [1:120, 1] 0.129 0.518 0.129 0.129 0.129 ...
 $ temporary_size    : num [1:120, 1] 0.637 0.637 1.274 0.637 0.637 ...
 $ load_overlap      : Factor w/ 2 levels "false","true": 1 1 1 1 2 2 2 2 2 2 ...
 $ threads_number    : num [1:120, 1] 0.0632 0.1263 0.0632 0.5052 0.0632 ...
 $ lws_y             : num [1:120, 1] 0.178 0.356 0.178 1.425 0.178 ...
                           [,1]
(Intercept)        0.000000e+00
elements_number    1.175825e-03
y_component_number 4.773761e-04
vector_length      1.603351e-05
temporary_size     1.184678e-03
load_overlaptrue   2.268024e-01
threads_number     1.208268e-02
lws_y              3.047610e-02
#+end_example

***** Exploring the Factor Efficiency Metric
#+HEADER: :results output :session *R*
#+BEGIN_SRC R
"test_factor_efficiency" <- function(fac) {
    X = model.matrix(~., fac)
    Y = ((t(X) %*% X) / nrow(fac)) ^ 2
    Z = colSums(Y)
    return(((1 / Z) * (1 - Y[, 1]) ^ 2))
}

design <- pb(16)
design

test_factor_efficiency(design)

factors = 20
fac = gen.factorial(rep(2, factors))
fac = fac[sample(nrow(fac), 300), ]
small_output = optFederov(~., fac, nTrials = factors + 1)

test_factor_efficiency(small_output$design)
small_output$D

test_factor_efficiency(federov_design)
output$D
#+END_SRC

#+RESULTS:
#+begin_example
Screening 15 factors in 16 runs involves perfect aliasing of 
 pairwise interactions of the first six factors with the last factor.
    A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
1   1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
2  -1  1 -1 -1  1  1 -1  1  1 -1 -1  1 -1  1 -1
3   1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1
4   1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1  1 -1
5  -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1  1  1  1
6  -1  1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1
7  -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1  1  1
8   1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1  1
9  -1 -1  1  1  1  1 -1 -1 -1 -1  1  1 -1 -1  1
10  1 -1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1 -1
11 -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1
12 -1 -1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1
13  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1 -1
14  1  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
15 -1  1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1
16  1  1 -1  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1
class=design, type= pb
(Intercept)          A1          B1          C1          D1          E1 
          0           1           1           1           1           1 
         F1          G1          H1          J1          K1          L1 
          1           1           1           1           1           1 
         M1          N1          O1          P1 
          1           1           1           1
(Intercept)          X1          X2          X3          X4          X5 
  0.0000000   0.8114645   0.6486235   0.6979368   0.7769952   0.7256236 
         X6          X7          X8          X9         X10         X11 
  0.6122765   0.7256236   0.7161538   0.6560987   0.7069280   0.7088504 
        X12         X13         X14         X15         X16         X17 
  0.6722852   0.6643386   0.6994771   0.7161538   0.7453349   0.6641487 
        X18         X19         X20 
  0.6573153   0.6177864   0.7555977
[1] 0.7782221
       (Intercept)    elements_number y_component_number      vector_length 
      0.0000000000       0.0008431110       0.0004329316       0.0002662246 
    temporary_size   load_overlaptrue     threads_number              lws_y 
      0.0013221435       0.2115787134       0.0140083031       0.0293836820
[1] 0.5945303
#+end_example
*** [2018-04-30 Mon]
**** Using D-Optimal Designs in Steven's Data
***** Setup
#+CALL: update_steven_report()

#+RESULTS:
: Already up to date.

#+CALL: generate_steven_csv_search_space()

#+RESULTS:

#+CALL: read_steven_csv_data()

#+RESULTS:
#+begin_example
'data.frame':	23120 obs. of  9 variables:
 $ elements_number   : int  3 2 4 2 2 2 2 4 4 3 ...
 $ y_component_number: int  3 2 1 1 1 2 2 2 4 1 ...
 $ vector_length     : int  4 1 4 1 8 2 1 8 16 4 ...
 $ temporary_size    : int  4 2 2 2 2 2 4 4 2 4 ...
 $ vector_recompute  : Factor w/ 1 level "true": 1 1 1 1 1 1 1 1 1 1 ...
 $ load_overlap      : Factor w/ 2 levels "false","true": 2 1 2 1 2 2 1 2 2 2 ...
 $ threads_number    : int  64 128 64 256 128 128 128 64 128 32 ...
 $ lws_y             : int  64 1 32 64 32 8 2 2 128 32 ...
 $ time_per_pixel    : num  1.11e-08 1.58e-10 2.34e-09 1.39e-09 3.40e-09 ...
#+end_example

#+CALL: define_factor_efficiency()

#+RESULTS:

***** Running the Design and Fitting a Model
Rescaling the design back to original values and getting back
the response from the original complete data:

#+HEADER: :results output :session *R*
#+BEGIN_SRC R
library(AlgDesign)
library(dplyr)

results <- read.csv("M2_internship/data/2016_04_08/pilipili2/18_08_24/dopt_all_search_1000.csv", strip.white=T, header=T)

budget <- 120

iterations <- 200

factors = c("elements_number", "y_component_number",
            "vector_length", "temporary_size",
            "load_overlap", "threads_number",
            "lws_y")

for (i in 1:iterations) {
    data <- complete_data[, factors]
    scaled_data <- data[, factors]

    # Comment/Uncomment to toggle scaling
    
    # scaled_data <- cbind(scale(select_if(data, is.numeric), center = FALSE, scale = TRUE),
    #                      select_if(data, Negate(is.numeric)))
    # scaled_data <- scaled_data[, names(data)]

    # We are able to use the full set in this case
    # sampled_data <- scaled_data[sample(nrow(data), 500), ]

    # Complete model:
    output_complete <- optFederov(~ y_component_number + I(1 / y_component_number) + 
                                    vector_length + lws_y + I(1 / lws_y) +
                                    load_overlap + temporary_size +
                                    elements_number + I(1 / elements_number) +
                                    threads_number + I(1 / threads_number),
                                  scaled_data,
                                  nTrials = 30)

    data <- complete_data[, c(factors, "time_per_pixel")]
    federov_design <- data[output_complete$rows, ]

    # Complete model:
    regression_aov <- aov(time_per_pixel ~ y_component_number + I(1 / y_component_number) + 
                                           vector_length + lws_y + I(1 / lws_y) +
                                           load_overlap + temporary_size +
                                           elements_number + I(1 / elements_number) +
                                           threads_number + I(1 / threads_number),
                          data = federov_design)

    # Checking the summary ANOVA we can identify at least two variables
    # that seem to have greater impact. Let's try a D-Opt design using
    # only those variables:

    data <- complete_data[, factors]
    scaled_data <- data[, factors]

    output <- optFederov(~ vector_length + lws_y + I(1 / lws_y),
                         scaled_data,
                         nTrials = 4)

    data <- complete_data[, c(factors, "time_per_pixel")]
    federov_design <- data[output$rows, ]

    regression <- lm(time_per_pixel ~ vector_length + lws_y + I(1 / lws_y),
                     data = federov_design)

    # regression <- rq(time_per_pixel ~ y_component_number + I(1 / y_component_number) + 
    #                                   vector_length + lws_y + I(1 / lws_y) +
    #                                   load_overlap + temporary_size +
    #                                   elements_number + I(1 / elements_number) +
    #                                   threads_number + I(1 / threads_number),
    #                  tau = 0.50,
    #                  method = "fn",
    #                  data = federov_design)

    predicted_best <- data[predict(regression, data) == min(predict(regression, data)), ]

    best <- data[data$time_per_pixel == min(data$time_per_pixel), ]
    best_row <- rownames(best)

    predicted_best$slowdown <- predicted_best$time_per_pixel / best$time_per_pixel
    predicted_best$method <- rep("DOPTaov", nrow(predicted_best))
    predicted_best$point_number <- rep(budget, nrow(predicted_best))
    predicted_best$vector_recompute <- rep("true", nrow(predicted_best))

    predicted_best <- predicted_best[predicted_best$slowdown == min(predicted_best$slowdown), ]

    predicted_best <- predicted_best[, c("elements_number", "y_component_number",
                                        "vector_length", "temporary_size", "vector_recompute",
                                        "load_overlap", "threads_number", "lws_y",
                                        "time_per_pixel", "point_number", "method",
                                        "slowdown")]

    results <- rbind(results, predicted_best)
}

write.csv(results, "M2_internship/data/2016_04_08/pilipili2/18_08_24/dopt_all_search_1000.csv", row.names = FALSE)
#+END_SRC

#+RESULTS:

****** Plotting from Steven's Report
#+HEADER: :file M2_internship/org/Report/Project-report-template/img/results_hist.pdf :exports none :width 7 :height 8
#+BEGIN_SRC R :results output graphics  :session *R*
df_all_methods <- read.csv("M2_internship/data/2016_04_08/pilipili2/18_08_24/dopt_all_search_1000.csv", strip.white=T, header=T)
library(ggplot2)
library(plyr)

df_all_methods$method <- factor(df_all_methods$method, levels = c("RS","LHS","GS","GSR","GA","LM","RQ","DOPT", "DOPTS", "DOPTQ", "DOPTaov"))

df_mean = ddply(df_all_methods,.(method), summarize,
                mean = mean(slowdown))

df_median = ddply(df_all_methods,.(method), summarize,
                  median = median(slowdown))
                  
df_err = ddply(df_all_methods,.(method), summarize,
              mean = mean(slowdown), err = 2*sd(slowdown)/sqrt(length(slowdown)))

df_max = ddply(df_all_methods,.(method), summarize, max = max(slowdown))

ggplot(df_all_methods ) +
    facet_grid(method~.) +
    theme_bw() +
    coord_cartesian(xlim=c(.9,4), ylim=c(0,1000)) +
    geom_histogram(aes(slowdown),binwidth=.05, fill="gray48") +
    geom_curve(data=df_max, aes(x=max+.1, y=500, xend=max, yend=5), arrow = arrow(length = unit(0.05, "npc")), curvature=0.3) +
    geom_text( aes(x=max+.2,y=550,label="max"),data=df_max ) +
    geom_rect(data = df_err, aes(xmin=mean-err, xmax=mean+err, ymin=0, ymax=1000, fill="red"), alpha=0.3) +
    geom_vline( aes(xintercept = median), df_median, color="darkgreen", linetype=3 ) +
    geom_vline( aes(xintercept = mean), df_mean, color="red", linetype=2 ) +
    labs(y="Frequency", x="Slowdown compared to the optimal solution") +
    scale_fill_discrete(name="",breaks=c("red"), labels=c("Mean error")) +
    ggtitle("") +
    theme(legend.position="top")
#+END_SRC

#+RESULTS:
[[file:M2_internship/org/Report/Project-report-template/img/results_hist.pdf]]
